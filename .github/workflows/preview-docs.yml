name: Preview Documentation (Azure)

on:
    pull_request:
        types: [opened, synchronize, reopened, closed]
        branches:
            - '**'

permissions:
    contents: read
    pull-requests: write

jobs:
    build_and_deploy_job:
        if: github.event_name == 'push' || (github.event_name == 'pull_request' && github.event.action != 'closed')
        runs-on: ubuntu-latest
        name: Build and Deploy Job
        outputs:
            doc_url: ${{ steps.builddeploy.outputs.static_web_app_url }}
        steps:
            ## --- SETUP --- ##
            - name: Check out code
              uses: actions/checkout@v4
              with:
                  fetch-depth: 0

            - name: Use Node LTS version
              uses: actions/setup-node@v4
              with:
                  node-version: 20
                  cache: yarn

            - name: Enable Corepack
              run: corepack enable

            - name: Clean up comments from previous Azure deploys
              if: github.event_name == 'pull_request'
              shell: bash
              env:
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
              run: |
                  pr=${{ github.event.pull_request.number }}
                  comments=$(gh api repos/${{ github.repository }}/issues/$pr/comments)
                  echo "$comments" | jq -c '.[]' | while read -r comment; do
                    body=$(echo "$comment" | jq -r '.body')
                    id=$(echo "$comment" | jq -r '.id')
                    if [[ "$body" == *"## Branch preview"* ]]; then
                      echo "Deleting comment $id"
                      gh api repos/${{ github.repository }}/issues/comments/$id -X DELETE
                    fi
                  done

            ## --- YARN CACHE --- ##
            - name: Check for cached dependencies
              continue-on-error: true
              id: cache-dependencies
              uses: actions/cache@v4
              with:
                  path: |
                      .cache/yarn
                      node_modules
                  key: ubuntu-latest-node20-${{ hashFiles('yarn.lock') }}

            ## --- INSTALL & BUILD --- ##
            - name: Install dependencies
              shell: bash
              run: yarn install --immutable

            - name: Build
              run: yarn build

            - name: Generate Custom Elements Manifest
              run: yarn docs:analyze

            - name: Move CEM to Storybook directory
              run: cp projects/documentation/custom-elements.json storybook/

            - name: Build documentation
              run: yarn docs:build

            - name: Build Storybook
              run: yarn storybook:build

            - name: Add redirects
              run: echo '/*    /index.html   200' > projects/documentation/dist/_redirects

            ## --- DEPLOY --- ##
            - name: Deploy to Azure Static Web Apps
              id: builddeploy
              uses: Azure/static-web-apps-deploy@v1
              with:
                  azure_static_web_apps_api_token: ${{ secrets.AZURE_STATIC_WEB_APPS_API_TOKEN_BRAVE_PLANT_02F0C200F }}
                  action: 'upload'
                  app_location: 'projects/documentation/dist'
                  api_location: ''
                  output_location: 'pr-${{ github.event.pull_request.number }}/docs'
              timeout-minutes: 10

            - name: Create custom deployment comment
              if: github.event_name == 'pull_request'
              uses: actions/github-script@v7
              with:
                  script: |
                      const prNumber = context.payload.pull_request.number;
                      const baseUrl = 'https://brave-plant-02f0c200f.eastus2.6.azurestaticapps.net';
                      const docsUrl = `${baseUrl}/pr-${prNumber}/docs/`;
                      const storybookUrl = `${baseUrl}/pr-${prNumber}/docs/storybook/index.html`;

                      const body = `## ðŸ“š Branch Preview

                      - [Documentation Site](${docsUrl})
                      - [Storybook](${storybookUrl})

                      *Deployed to shared environment: \`pr-${prNumber}/docs/\`*`;

                      // Get all comments on the PR
                      const comments = await github.rest.issues.listComments({
                        owner: context.repo.owner,
                        repo: context.repo.repo,
                        issue_number: context.issue.number
                      });

                      // Look for our existing comment
                      const existingComment = comments.data.find(comment => 
                        comment.body.includes('ðŸ“š Branch Preview')
                      );

                      if (existingComment) {
                        // Update existing comment
                        await github.rest.issues.updateComment({
                          owner: context.repo.owner,
                          repo: context.repo.repo,
                          comment_id: existingComment.id,
                          body: body
                        });
                        console.log('Updated existing docs preview comment');
                      } else {
                        // Create new comment if none exists
                        await github.rest.issues.createComment({
                          owner: context.repo.owner,
                          repo: context.repo.repo,
                          issue_number: context.issue.number,
                          body: body
                        });
                        console.log('Created new docs preview comment');
                      }

    close_pull_request_job:
        if: github.event_name == 'pull_request' && github.event.action == 'closed'
        runs-on: ubuntu-latest
        name: Clean up PR subdirectory
        steps:
            - name: Clean up PR subdirectory
              uses: actions/github-script@v7
              with:
                  script: |
                      const prNumber = context.payload.pull_request.number;
                      console.log(`PR #${prNumber} closed - subdirectory pr-${prNumber}/ will be cleaned up automatically by Azure Static Web Apps`);
                      // Note: Azure SWA automatically cleans up subdirectories over time
                      // No manual action needed since we're using a shared environment
