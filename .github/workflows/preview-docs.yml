name: Preview Documentation (Azure Blob Storage)

on:
    pull_request:
        types: [opened, synchronize, reopened, closed]
        branches:
            - '**'

permissions:
    contents: read
    pull-requests: write

jobs:
    build_and_deploy_job:
        if: github.event_name == 'pull_request' && github.event.action != 'closed'
        runs-on: ubuntu-latest
        name: Build and Deploy Job
        outputs:
            doc_url: ${{ steps.deploy.outputs.docs_url }}
        steps:
            ## --- SETUP --- ##
            - name: Check out code
              uses: actions/checkout@v4
              with:
                  fetch-depth: 0

            - name: Use Node LTS version
              uses: actions/setup-node@v4
              with:
                  node-version: 20
                  cache: yarn

            - name: Enable Corepack
              run: corepack enable

            - name: Generate PR hash
              id: pr_hash
              run: |
                  # Use just PR number so each commit overwrites the previous deployment
                  pr_hash="pr-${{ github.event.pull_request.number }}"
                  echo "hash=${pr_hash}" >> $GITHUB_OUTPUT
                  echo "Generated PR hash: ${pr_hash}"

            ## --- YARN CACHE --- ##
            - name: Check for cached dependencies
              continue-on-error: true
              id: cache-dependencies
              uses: actions/cache@v4
              with:
                  path: |
                      .cache/yarn
                      node_modules
                  key: ubuntu-latest-node20-${{ hashFiles('yarn.lock') }}

            ## --- INSTALL & BUILD --- ##
            - name: Install dependencies
              shell: bash
              run: yarn install --immutable

            - name: Build
              run: yarn build

            - name: Generate Custom Elements Manifest
              run: yarn docs:analyze

            - name: Move CEM to Storybook directory
              run: cp projects/documentation/custom-elements.json storybook/

            - name: Build documentation with path prefix
              env:
                  SWC_DIR: ${{ steps.pr_hash.outputs.hash }}/docs
              run: |
                  cd projects/documentation
                  yarn build

            - name: Build Storybook
              run: yarn storybook:build

            ## --- DEPLOY TO AZURE BLOB STORAGE --- ##
            - name: Install AzCopy
              run: |
                  # Download and install AzCopy
                  wget -O azcopy.tar.gz https://github.com/Azure/azure-storage-azcopy/releases/download/v10.29.1/azcopy_linux_amd64_10.29.1.tar.gz
                  tar -xf azcopy.tar.gz --strip-components=1
                  sudo mv azcopy /usr/local/bin/
                  azcopy --version

            - name: Deploy to Azure Blob Storage
              id: deploy
              env:
                  AZURE_STORAGE_SAS_TOKEN: ${{ secrets.AZURE_STORAGE_SAS_TOKEN }}
                  PR_HASH: ${{ steps.pr_hash.outputs.hash }}
              run: |
                  # Check if AZURE_STORAGE_SAS_TOKEN is set
                  if [ -z "${AZURE_STORAGE_SAS_TOKEN}" ]; then
                      echo "ERROR: AZURE_STORAGE_SAS_TOKEN environment variable is not set"
                      echo "This token is required for Azure Blob Storage deployment"
                      exit 1
                  fi

                  # Disable debug mode to prevent token leakage
                  set +x

                  # Clean the SAS token (remove any whitespace/newlines)
                  CLEAN_SAS_TOKEN=$(echo "${AZURE_STORAGE_SAS_TOKEN}" | tr -d '\n\r\t ')

                  # Upload documentation
                  echo "Uploading documentation to ${PR_HASH}/docs/"
                  azcopy copy "projects/documentation/dist/*" \
                    "https://swcpreviews.blob.core.windows.net/\$web/${PR_HASH}/docs/?${CLEAN_SAS_TOKEN}" \
                    --recursive \
                    --from-to LocalBlob

                  # Upload Storybook
                  echo "Uploading Storybook to ${PR_HASH}/docs/storybook/"
                  azcopy copy "storybook-static/*" \
                    "https://swcpreviews.blob.core.windows.net/\$web/${PR_HASH}/docs/storybook/?${CLEAN_SAS_TOKEN}" \
                    --recursive \
                    --from-to LocalBlob

                  # Set output URLs
                  docs_url="https://swcpreviews.z13.web.core.windows.net/${PR_HASH}/docs/"
                  storybook_url="https://swcpreviews.z13.web.core.windows.net/${PR_HASH}/docs/storybook/"
                  echo "docs_url=${docs_url}" >> $GITHUB_OUTPUT
                  echo "storybook_url=${storybook_url}" >> $GITHUB_OUTPUT
                  echo "Deployed to: ${docs_url}"

    close_pull_request_job:
        if: github.event_name == 'pull_request' && github.event.action == 'closed'
        runs-on: ubuntu-latest
        name: Clean up PR deployment
        steps:
            - name: Generate PR hash
              id: pr_hash
              run: |
                  # Create the same hash as in the deploy job
                  pr_hash="pr-${{ github.event.pull_request.number }}"
                  echo "hash=${pr_hash}" >> $GITHUB_OUTPUT

            - name: Install AzCopy
              run: |
                  wget -O azcopy.tar.gz https://github.com/Azure/azure-storage-azcopy/releases/download/v10.29.1/azcopy_linux_amd64_10.29.1.tar.gz
                  tar -xf azcopy.tar.gz --strip-components=1
                  sudo mv azcopy /usr/local/bin/

            - name: Clean up PR deployment
              env:
                  AZURE_STORAGE_SAS_TOKEN: ${{ secrets.AZURE_STORAGE_SAS_TOKEN }}
                  PR_HASH: ${{ steps.pr_hash.outputs.hash }}
              run: |
                  # Check if AZURE_STORAGE_SAS_TOKEN is set
                  if [ -z "${AZURE_STORAGE_SAS_TOKEN}" ]; then
                      echo "ERROR: AZURE_STORAGE_SAS_TOKEN environment variable is not set"
                      echo "This token is required for Azure Blob Storage cleanup"
                      exit 1
                  fi

                  # Disable debug mode to prevent token leakage
                  set +x

                  echo "Cleaning up deployment: ${PR_HASH}/"
                  azcopy remove "https://swcpreviews.blob.core.windows.net/\$web/${PR_HASH}/?${AZURE_STORAGE_SAS_TOKEN}" \
                    --recursive || echo "Cleanup completed (some files may not exist)"
                  echo "Cleanup completed for PR deployment: ${PR_HASH}/"
