name: Preview Documentation (Azure Blob Storage)

on:
    pull_request:
        types: [opened, synchronize, reopened, closed]
        branches:
            - '**'

permissions:
    contents: read
    pull-requests: write

jobs:
    build_and_deploy_job:
        if: github.event_name == 'pull_request' && github.event.action != 'closed'
        runs-on: ubuntu-latest
        name: Build and Deploy Job
        outputs:
            doc_url: ${{ steps.deploy.outputs.docs_url }}
        steps:
            ## --- SETUP --- ##
            - name: Check out code
              uses: actions/checkout@v4
              with:
                  fetch-depth: 0

            - name: Use Node LTS version
              uses: actions/setup-node@v4
              with:
                  node-version: 20
                  cache: yarn

            - name: Enable Corepack
              run: corepack enable

            - name: Generate PR hash
              id: pr_hash
              run: |
                  # Create a short hash from PR number and commit SHA for uniqueness
                  pr_hash="pr-${{ github.event.pull_request.number }}-$(echo ${{ github.event.pull_request.head.sha }} | cut -c1-7)"
                  echo "hash=${pr_hash}" >> $GITHUB_OUTPUT
                  echo "Generated PR hash: ${pr_hash}"

            - name: Clean up comments from previous Azure deploys
              if: github.event_name == 'pull_request'
              shell: bash
              env:
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
              run: |
                  pr=${{ github.event.pull_request.number }}
                  comments=$(gh api repos/${{ github.repository }}/issues/$pr/comments)
                  echo "$comments" | jq -c '.[]' | while read -r comment; do
                    body=$(echo "$comment" | jq -r '.body')
                    id=$(echo "$comment" | jq -r '.id')
                    if [[ "$body" == *"## Branch preview"* ]]; then
                      echo "Deleting comment $id"
                      gh api repos/${{ github.repository }}/issues/comments/$id -X DELETE
                    fi
                  done

            ## --- YARN CACHE --- ##
            - name: Check for cached dependencies
              continue-on-error: true
              id: cache-dependencies
              uses: actions/cache@v4
              with:
                  path: |
                      .cache/yarn
                      node_modules
                  key: ubuntu-latest-node20-${{ hashFiles('yarn.lock') }}

            ## --- INSTALL & BUILD --- ##
            - name: Install dependencies
              shell: bash
              run: yarn install --immutable

            - name: Build
              run: yarn build

            - name: Generate Custom Elements Manifest
              run: yarn docs:analyze

            - name: Move CEM to Storybook directory
              run: cp projects/documentation/custom-elements.json storybook/

            - name: Build documentation with path prefix
              env:
                  SWC_DIR: ${{ steps.pr_hash.outputs.hash }}/docs
              run: |
                  cd projects/documentation
                  yarn build

            - name: Build Storybook
              run: yarn storybook:build

            ## --- DEPLOY TO AZURE BLOB STORAGE --- ##
            - name: Install AzCopy
              run: |
                  # Download and install AzCopy
                  wget -O azcopy.tar.gz https://aka.ms/downloadazcopy-v10-linux
                  tar -xf azcopy.tar.gz --strip-components=1
                  sudo mv azcopy /usr/local/bin/
                  azcopy --version

            - name: Deploy to Azure Blob Storage
              id: deploy
              env:
                  AZURE_STORAGE_SAS_TOKEN: ${{ secrets.AZURE_STORAGE_SAS_TOKEN }}
                  PR_HASH: ${{ steps.pr_hash.outputs.hash }}
              run: |
                  # Upload documentation
                  echo "Uploading documentation to ${PR_HASH}/docs/"
                  azcopy copy "projects/documentation/dist/*" \
                    "https://swcpreviews.blob.core.windows.net/\$web/${PR_HASH}/docs/?${AZURE_STORAGE_SAS_TOKEN}" \
                    --recursive \
                    --from-to LocalBlob

                  # Upload Storybook
                  echo "Uploading Storybook to ${PR_HASH}/docs/storybook/"
                  azcopy copy "storybook-static/*" \
                    "https://swcpreviews.blob.core.windows.net/\$web/${PR_HASH}/docs/storybook/?${AZURE_STORAGE_SAS_TOKEN}" \
                    --recursive \
                    --from-to LocalBlob

                  # Set output URLs
                  docs_url="https://swcpreviews.z13.web.core.windows.net/${PR_HASH}/docs/"
                  storybook_url="https://swcpreviews.z13.web.core.windows.net/${PR_HASH}/docs/storybook/"
                  echo "docs_url=${docs_url}" >> $GITHUB_OUTPUT
                  echo "storybook_url=${storybook_url}" >> $GITHUB_OUTPUT
                  echo "Deployed to: ${docs_url}"

            - name: Create custom deployment comment
              if: github.event_name == 'pull_request'
              uses: actions/github-script@v7
              with:
                  script: |
                      const prHash = '${{ steps.pr_hash.outputs.hash }}';
                      const baseUrl = 'https://swcpreviews.z13.web.core.windows.net';
                      const docsUrl = `${baseUrl}/${prHash}/docs/`;
                      const storybookUrl = `${baseUrl}/${prHash}/docs/storybook/`;

                      const body = `## ðŸ“š Branch Preview

                      - [Documentation Site](${docsUrl})
                      - [Storybook](${storybookUrl})

                      *Deployed to Azure Blob Storage: \`${prHash}/docs/\`*`;

                      // Get all comments on the PR
                      const comments = await github.rest.issues.listComments({
                        owner: context.repo.owner,
                        repo: context.repo.repo,
                        issue_number: context.issue.number
                      });

                      // Look for our existing comment
                      const existingComment = comments.data.find(comment => 
                        comment.body.includes('ðŸ“š Branch Preview')
                      );

                      if (existingComment) {
                        // Update existing comment
                        await github.rest.issues.updateComment({
                          owner: context.repo.owner,
                          repo: context.repo.repo,
                          comment_id: existingComment.id,
                          body: body
                        });
                        console.log('Updated existing docs preview comment');
                      } else {
                        // Create new comment if none exists
                        await github.rest.issues.createComment({
                          owner: context.repo.owner,
                          repo: context.repo.repo,
                          issue_number: context.issue.number,
                          body: body
                        });
                        console.log('Created new docs preview comment');
                      }

    close_pull_request_job:
        if: github.event_name == 'pull_request' && github.event.action == 'closed'
        runs-on: ubuntu-latest
        name: Clean up PR deployment
        steps:
            - name: Generate PR hash
              id: pr_hash
              run: |
                  # Create the same hash as in the deploy job
                  pr_hash="pr-${{ github.event.pull_request.number }}-$(echo ${{ github.event.pull_request.head.sha }} | cut -c1-7)"
                  echo "hash=${pr_hash}" >> $GITHUB_OUTPUT

            - name: Install AzCopy
              run: |
                  wget -O azcopy.tar.gz https://aka.ms/downloadazcopy-v10-linux
                  tar -xf azcopy.tar.gz --strip-components=1
                  sudo mv azcopy /usr/local/bin/

            - name: Clean up PR deployment
              env:
                  AZURE_STORAGE_SAS_TOKEN: ${{ secrets.AZURE_STORAGE_SAS_TOKEN }}
                  PR_HASH: ${{ steps.pr_hash.outputs.hash }}
              run: |
                  echo "Cleaning up deployment: ${PR_HASH}/"
                  azcopy remove "https://swcpreviews.blob.core.windows.net/\$web/${PR_HASH}/?${AZURE_STORAGE_SAS_TOKEN}" \
                    --recursive || echo "Cleanup completed (some files may not exist)"
                  echo "Cleanup completed for PR deployment: ${PR_HASH}/"
