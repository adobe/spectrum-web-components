version: 2.1
executors:
    node:
        docker:
            - image: mcr.microsoft.com/playwright:bionic
        environment:
            NODE_ENV: development
            YARN_VERSION: 1.17.3
commands:
    setup:
        steps:
            - checkout
            - run:
                  name: Prepare Yarn Path
                  command: echo 'export PATH="$HOME/.yarn/bin:$HOME/.config/yarn/global/node_modules/.bin:$PATH"' >> $BASH_ENV
            - run:
                  command: npm version
            - run:
                  name: Install Yarn
                  command: |
                      curl --retry 10 --retry-max-time 30 -o- -L https://yarnpkg.com/install.sh | bash -s -- --version $YARN_VERSION
            - restore_cache:
                  keys:
                      - v2-dependencies-{{ arch }}-{{ checksum "yarn.lock" }}
            - run:
                  name: Installing Dependencies
                  command: yarn
            - save_cache:
                  paths:
                      - node_modules
                  key: v2-dependencies-{{ arch }}-{{ checksum "yarn.lock" }}
    downstream:
        steps:
            - checkout
            - run:
                  name: Prepare Yarn Path
                  command: echo 'export PATH="$HOME/.yarn/bin:$HOME/.config/yarn/global/node_modules/.bin:$PATH"' >> $BASH_ENV
            - run:
                  command: npm version
            - run:
                  name: Install Yarn
                  command: |
                      curl --retry 10 --retry-max-time 30 -o- -L https://yarnpkg.com/install.sh | bash -s -- --version $YARN_VERSION
            - attach_workspace:
                  at: ~/
    run-regressions:
        parameters:
            regression_color:
                type: string
            regression_scale:
                type: string
        steps:
            - restore_cache:
                  name: Restore Golden Images Cache
                  keys:
                      - v2-golden-images-<< parameters.regression_color >>-<< parameters.regression_scale >>-e3f040631ba658a7f0b64afa1fc64ac3530e16d7
                      - v2-golden-images-main-<< parameters.regression_color >>-<< parameters.regression_scale >>-
            - run: yarn test:visual:ci --color=<< parameters.regression_color >> --scale=<< parameters.regression_scale >>
            - run:
                  when: on_fail
                  command: cp -RT test/visual/screenshots-current/ci test/visual/screenshots-baseline/ci && exit 1
            - save_cache:
                  when: on_fail
                  name: Build Golden Images Revision Cache
                  paths:
                      - test/visual/screenshots-baseline/ci
                  key: v2-golden-images-<< parameters.regression_color >>-<< parameters.regression_scale >>-{{ .Revision }}
            - save_cache:
                  name: Build Golden Images Branch Cache
                  paths:
                      - test/visual/screenshots-baseline/ci
                  key: v2-golden-images-{{ .Branch }}-<< parameters.regression_color >>-<< parameters.regression_scale >>-{{ epoch }}
            - store_artifacts:
                  path: test/visual/screenshots-current

jobs:
    build:
        executor: node

        steps:
            - setup
            - run:
                  name: Lint
                  command: yarn lint
            - run: yarn analyze

            # test & get code coverage
            - run:
                  name: Run tests
                  command: yarn test:ci

            - store_artifacts:
                  path: coverage

            - run:
                  name: Generate Docs
                  command: yarn docs:ci

            - persist_to_workspace:
                  root: ~/
                  paths:
                      - project/node_modules
                      - project/packages/*/node_modules
                      - project/documentation/dist
                      - .cache/ms-playwright

    visual-lightest-medium:
        executor: node

        steps:
            - downstream
            - run-regressions:
                  regression_color: lightest
                  regression_scale: medium

    visual-lightest-large:
        executor: node

        steps:
            - downstream
            - run-regressions:
                  regression_color: lightest
                  regression_scale: large

    visual-light-medium:
        executor: node

        steps:
            - downstream
            - run-regressions:
                  regression_color: light
                  regression_scale: medium

    visual-light-large:
        executor: node

        steps:
            - downstream
            - run-regressions:
                  regression_color: light
                  regression_scale: large

    visual-dark-medium:
        executor: node

        steps:
            - downstream
            - run-regressions:
                  regression_color: dark
                  regression_scale: medium

    visual-dark-large:
        executor: node

        steps:
            - downstream
            - run-regressions:
                  regression_color: dark
                  regression_scale: large

    visual-darkest-medium:
        executor: node

        steps:
            - downstream
            - run-regressions:
                  regression_color: darkest
                  regression_scale: medium

    visual-darkest-large:
        executor: node

        steps:
            - downstream
            - run-regressions:
                  regression_color: darkest
                  regression_scale: large

    publish-docs:
        executor: node

        steps:
            - downstream
            - run: cp documentation/404.html documentation/dist/
            - run: touch documentation/dist/.nojekyll
            - run: git config --global user.email "circleci@adobe.com" && git config --global user.name "CircleCI"
            - run: yarn gh-pages -d documentation/dist -m "[skip ci] update demonstration site"

workflows:
    version: 2
    build:
        jobs:
            - build
            - visual-lightest-medium:
                  requires:
                      - build
            - visual-lightest-large:
                  requires:
                      - build
            - visual-light-medium:
                  requires:
                      - build
            - visual-light-large:
                  requires:
                      - build
            - visual-dark-medium:
                  requires:
                      - build
            - visual-dark-large:
                  requires:
                      - build
            - visual-darkest-medium:
                  requires:
                      - build
            - visual-darkest-large:
                  requires:
                      - build
            - publish-docs:
                  filters:
                      branches:
                          only:
                              - main
                  requires:
                      - build
