version: 2.1
executors:
    node:
        docker:
            - image: mcr.microsoft.com/playwright:bionic
        environment:
            NODE_ENV: development
parameters:
    current_golden_images_hash:
        type: string
        default: 242b511dd488518b5c3d901c5671478b02d12204
commands:
    downstream:
        steps:
            - checkout
            - restore_cache:
                  keys:
                      - v3a-dependencies-{{ arch }}-{{ checksum "yarn.lock" }}
            - run:
                  name: Installing Dependencies
                  command: yarn --frozen-lockfile --cache-folder ~/.cache/yarn
            - save_cache:
                  paths:
                      - ~/.cache/yarn
                  key: v3a-dependencies-{{ arch }}-{{ checksum "yarn.lock" }}
            - attach_workspace:
                  at: /
    run-regressions:
        parameters:
            regression_color:
                type: string
            regression_scale:
                type: string
            regression_dir:
                type: string
        steps:
            - restore_cache:
                  name: Restore Golden Images Cache
                  keys:
                      - v2-golden-images-<< pipeline.parameters.current_golden_images_hash >>-<< parameters.regression_color >>-<< parameters.regression_scale >>-<< parameters.regression_dir >>-
                      - v2-golden-images-main-<< parameters.regression_color >>-<< parameters.regression_scale >>-<< parameters.regression_dir >>-
            - run:
                  name: Count baseline images
                  command: find test/visual/screenshots-baseline -type f | wc -l > count_start.txt
            - run: |
                  yarn test:ci --config web-test-runner.config.ci.js --group vrt-<< parameters.regression_color >>-<< parameters.regression_scale >>-<< parameters.regression_dir >>
            # store results and artifacts before rearranging things for the new cache.
            - store_test_results:
                  path: /root/project/results/
            # build diff review site
            - run:
                  when: always
                  name: Create review site
                  command: |
                      node test/visual/review.js
                      yarn rollup -c test/visual/rollup.config.js
            - store_artifacts:
                  path: test/visual/review
            - store_artifacts:
                  path: test/visual/screenshots-actual
            - store_artifacts:
                  path: test/visual/screenshots-baseline
            # move "updated" screenshot into the baseline directory before making the new cache
            - run:
                  when: always
                  command: |
                      rm -rf test/visual/screenshots-baseline
                      cp -R test/visual/screenshots-actual/updates test/visual/screenshots-baseline
            - run:
                  when: on_success
                  name: Count current images
                  command: find test/visual/screenshots-baseline -type f | wc -l > count_end.txt
            # prevent removing regression tests without requiring a new golden cache
            - run:
                  when: on_success
                  name: Fail if there are a different number of images...
                  command: |
                      echo $(cat count_start.txt)
                      echo $(cat count_end.txt)
                      if [[ $(cat count_start.txt) -eq $(cat count_end.txt) ]]; then exit 0; else exit 1; fi
            - save_cache:
                  when: on_fail
                  name: Build Golden Images Revision Cache
                  paths:
                      - test/visual/screenshots-baseline
                  key: v2-golden-images-{{ .Revision }}-<< parameters.regression_color >>-<< parameters.regression_scale >>-<< parameters.regression_dir >>-{{ epoch }}
            - save_cache:
                  name: Build Golden Images Branch Cache
                  paths:
                      - test/visual/screenshots-baseline
                  key: v2-golden-images-{{ .Branch }}-<< parameters.regression_color >>-<< parameters.regression_scale >>-<< parameters.regression_dir >>-{{ epoch }}

jobs:
    commitlint:
        executor: node

        steps:
            - checkout
            - restore_cache:
                  keys:
                      - v3a-dependencies-{{ arch }}-{{ checksum "yarn.lock" }}
            - run:
                  name: Installing Dependencies
                  command: yarn --ignore-scripts --frozen-lockfile --cache-folder ~/.cache/yarn
            - save_cache:
                  paths:
                      - ~/.cache/yarn
                  key: v3a-dependencies-{{ arch }}-{{ checksum "yarn.lock" }}
            - run:
                  name: Define environment variable with lastest commit's message
                  command: |
                      echo 'export COMMIT_MESSAGE=$(git log -1 --pretty=format:"%s")' >> $BASH_ENV
                      source $BASH_ENV
            - run:
                  name: Lint commit message
                  command: echo "$COMMIT_MESSAGE" | npx commitlint

    test:
        executor: node

        steps:
            - downstream
            - run:
                  name: Lint
                  command: yarn lint
            - run: yarn analyze
            - run:
                  name: Run tests
                  command: yarn test:ci --config web-test-runner.config.ci.js --group unit --coverage
            - store_test_results:
                  path: /root/project/results/
            - store_artifacts:
                  path: coverage
            - run:
                  name: Are there changes?
                  command: git diff-files --quiet

    docs-preview:
        executor: node

        steps:
            - downstream
            - run:
                  name: Generate Docs
                  command: yarn docs:build
            - run: echo '/*    /index.html   200' > documentation/dist/_redirects
            - run: |
                  branch=$(git symbolic-ref --short HEAD)
                  branch=$(npx slugify-cli $branch)
                  yarn netlify deploy --alias=$branch

    visual-lightest-medium-ltr:
        executor: node

        steps:
            - downstream
            - run-regressions:
                  regression_color: lightest
                  regression_scale: medium
                  regression_dir: ltr

    visual-lightest-medium-rtl:
        executor: node

        steps:
            - downstream
            - run-regressions:
                  regression_color: lightest
                  regression_scale: medium
                  regression_dir: rtl

    visual-lightest-large-ltr:
        executor: node

        steps:
            - downstream
            - run-regressions:
                  regression_color: lightest
                  regression_scale: large
                  regression_dir: ltr

    visual-lightest-large-rtl:
        executor: node

        steps:
            - downstream
            - run-regressions:
                  regression_color: lightest
                  regression_scale: large
                  regression_dir: rtl

    visual-light-medium-ltr:
        executor: node

        steps:
            - downstream
            - run-regressions:
                  regression_color: light
                  regression_scale: medium
                  regression_dir: ltr

    visual-light-medium-rtl:
        executor: node

        steps:
            - downstream
            - run-regressions:
                  regression_color: light
                  regression_scale: medium
                  regression_dir: rtl

    visual-light-large-ltr:
        executor: node

        steps:
            - downstream
            - run-regressions:
                  regression_color: light
                  regression_scale: large
                  regression_dir: ltr

    visual-light-large-rtl:
        executor: node

        steps:
            - downstream
            - run-regressions:
                  regression_color: light
                  regression_scale: large
                  regression_dir: rtl

    visual-dark-medium-ltr:
        executor: node

        steps:
            - downstream
            - run-regressions:
                  regression_color: dark
                  regression_scale: medium
                  regression_dir: ltr

    visual-dark-medium-rtl:
        executor: node

        steps:
            - downstream
            - run-regressions:
                  regression_color: dark
                  regression_scale: medium
                  regression_dir: rtl

    visual-dark-large-ltr:
        executor: node

        steps:
            - downstream
            - run-regressions:
                  regression_color: dark
                  regression_scale: large
                  regression_dir: ltr

    visual-dark-large-rtl:
        executor: node

        steps:
            - downstream
            - run-regressions:
                  regression_color: dark
                  regression_scale: large
                  regression_dir: rtl

    visual-darkest-medium-ltr:
        executor: node

        steps:
            - downstream
            - run-regressions:
                  regression_color: darkest
                  regression_scale: medium
                  regression_dir: ltr

    visual-darkest-medium-rtl:
        executor: node

        steps:
            - downstream
            - run-regressions:
                  regression_color: darkest
                  regression_scale: medium
                  regression_dir: rtl

    visual-darkest-large-ltr:
        executor: node

        steps:
            - downstream
            - run-regressions:
                  regression_color: darkest
                  regression_scale: large
                  regression_dir: ltr

    visual-darkest-large-rtl:
        executor: node

        steps:
            - downstream
            - run-regressions:
                  regression_color: darkest
                  regression_scale: large
                  regression_dir: rtl

    docs-publish:
        executor: node

        steps:
            - downstream
            - run:
                  name: Generate Docs
                  command: yarn docs:ci
            - run: cp documentation/404.html documentation/dist/
            - run: touch documentation/dist/.nojekyll
            - run: git config --global user.email "circleci@adobe.com" && git config --global user.name "CircleCI"
            - run: yarn gh-pages -d documentation/dist -m "[skip ci] update demonstration site" -t

workflows:
    version: 2
    commitlint:
        jobs:
            - commitlint
    build:
        jobs:
            - test
            - docs-preview
            - visual-lightest-medium-ltr:
                  filters:
                      branches:
                          # Forked pull requests have CIRCLE_BRANCH set to pull/XXX
                          ignore: /pull\/[0-9]+/
            - visual-lightest-large-ltr:
                  filters:
                      branches:
                          # Forked pull requests have CIRCLE_BRANCH set to pull/XXX
                          ignore: /pull\/[0-9]+/
            - visual-light-medium-ltr:
                  filters:
                      branches:
                          # Forked pull requests have CIRCLE_BRANCH set to pull/XXX
                          ignore: /pull\/[0-9]+/
            - visual-light-large-ltr:
                  filters:
                      branches:
                          # Forked pull requests have CIRCLE_BRANCH set to pull/XXX
                          ignore: /pull\/[0-9]+/
            - visual-dark-medium-ltr:
                  filters:
                      branches:
                          # Forked pull requests have CIRCLE_BRANCH set to pull/XXX
                          ignore: /pull\/[0-9]+/
            - visual-dark-large-ltr:
                  filters:
                      branches:
                          # Forked pull requests have CIRCLE_BRANCH set to pull/XXX
                          ignore: /pull\/[0-9]+/
            - visual-darkest-medium-ltr:
                  filters:
                      branches:
                          # Forked pull requests have CIRCLE_BRANCH set to pull/XXX
                          ignore: /pull\/[0-9]+/
            - visual-darkest-large-ltr:
                  filters:
                      branches:
                          # Forked pull requests have CIRCLE_BRANCH set to pull/XXX
                          ignore: /pull\/[0-9]+/
            - visual-lightest-medium-rtl:
                  filters:
                      branches:
                          # Forked pull requests have CIRCLE_BRANCH set to pull/XXX
                          ignore: /pull\/[0-9]+/
            - visual-lightest-large-rtl:
                  filters:
                      branches:
                          # Forked pull requests have CIRCLE_BRANCH set to pull/XXX
                          ignore: /pull\/[0-9]+/
            - visual-light-medium-rtl:
                  filters:
                      branches:
                          # Forked pull requests have CIRCLE_BRANCH set to pull/XXX
                          ignore: /pull\/[0-9]+/
            - visual-light-large-rtl:
                  filters:
                      branches:
                          # Forked pull requests have CIRCLE_BRANCH set to pull/XXX
                          ignore: /pull\/[0-9]+/
            - visual-dark-medium-rtl:
                  filters:
                      branches:
                          # Forked pull requests have CIRCLE_BRANCH set to pull/XXX
                          ignore: /pull\/[0-9]+/
            - visual-dark-large-rtl:
                  filters:
                      branches:
                          # Forked pull requests have CIRCLE_BRANCH set to pull/XXX
                          ignore: /pull\/[0-9]+/
            - visual-darkest-medium-rtl:
                  filters:
                      branches:
                          # Forked pull requests have CIRCLE_BRANCH set to pull/XXX
                          ignore: /pull\/[0-9]+/
            - visual-darkest-large-rtl:
                  filters:
                      branches:
                          # Forked pull requests have CIRCLE_BRANCH set to pull/XXX
                          ignore: /pull\/[0-9]+/
            - docs-publish:
                  filters:
                      branches:
                          only:
                              - main
                  requires:
                      - test
