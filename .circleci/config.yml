version: 2.1
executors:
    node:
        docker:
            - image: mcr.microsoft.com/playwright:bionic
        environment:
            NODE_ENV: development
parameters:
    current_golden_images_hash:
        type: string
        default: bc2b4f3fe51f9edb858dc4c63248cdf0bb06a046
commands:
    setup:
        steps:
            - checkout
            - restore_cache:
                  keys:
                      - v2-dependencies-{{ arch }}-{{ checksum "yarn.lock" }}
            - run:
                  name: Installing Dependencies
                  command: yarn
            - save_cache:
                  paths:
                      - node_modules
                  key: v2-dependencies-{{ arch }}-{{ checksum "yarn.lock" }}
    downstream:
        steps:
            - checkout
            - attach_workspace:
                  at: /
    run-regressions:
        parameters:
            regression_color:
                type: string
            regression_scale:
                type: string
            regression_dir:
                type: string
        steps:
            - restore_cache:
                  name: Restore Golden Images Cache
                  keys:
                      - v2-golden-images-<< pipeline.parameters.current_golden_images_hash >>-<< parameters.regression_color >>-<< parameters.regression_scale >>-<< parameters.regression_dir >>-
                      - v2-golden-images-main-<< parameters.regression_color >>-<< parameters.regression_scale >>-<< parameters.regression_dir >>-
            - run: yarn test:visual:ci --color=<< parameters.regression_color >> --scale=<< parameters.regression_scale >> --dir=<< parameters.regression_dir >>
            - run:
                  when: on_fail
                  command: cp -RT test/visual/screenshots-current/ci test/visual/screenshots-baseline/ci
            - save_cache:
                  when: on_fail
                  name: Build Golden Images Revision Cache
                  paths:
                      - test/visual/screenshots-baseline/ci
                  key: v2-golden-images-{{ .Revision }}-<< parameters.regression_color >>-<< parameters.regression_scale >>-<< parameters.regression_dir >>-{{ epoch }}
            - save_cache:
                  name: Build Golden Images Branch Cache
                  paths:
                      - test/visual/screenshots-baseline/ci
                  key: v2-golden-images-{{ .Branch }}-<< parameters.regression_color >>-<< parameters.regression_scale >>-<< parameters.regression_dir >>-{{ epoch }}
            - store_artifacts:
                  path: test/visual/screenshots-current

jobs:
    commitlint:
        executor: node

        steps:
            - checkout
            - restore_cache:
                  keys:
                      - v2-dependencies-{{ arch }}-{{ checksum "yarn.lock" }}
            - run:
                  name: Installing Dependencies
                  command: yarn --ignore-scripts
            - save_cache:
                  paths:
                      - node_modules
                  key: v2-dependencies-{{ arch }}-{{ checksum "yarn.lock" }}
            - run:
                  name: Define environment variable with lastest commit's message
                  command: |
                      echo 'export COMMIT_MESSAGE=$(git log -1 --pretty=format:"%s")' >> $BASH_ENV
                      source $BASH_ENV
            - run:
                  name: Lint commit message
                  command: echo "$COMMIT_MESSAGE" | npx commitlint
    build:
        executor: node

        steps:
            - setup
            - run:
                  name: Lint
                  command: yarn lint
            - run: yarn analyze

            # test & get code coverage
            - run:
                  name: Run tests
                  command: yarn test:ci

            - store_artifacts:
                  path: coverage

            - run:
                  name: Generate Docs
                  command: yarn docs:ci

            - persist_to_workspace:
                  root: /
                  paths:
                      - root/project/node_modules
                      - root/project/packages/*/node_modules
                      - root/project/documentation/dist
                      - root/.cache/ms-playwright
                      - home/pwuser/.cache/ms-playwright

    visual-lightest-medium-ltr:
        executor: node

        steps:
            - downstream
            - run-regressions:
                  regression_color: lightest
                  regression_scale: medium
                  regression_dir: ltr

    visual-lightest-medium-rtl:
        executor: node

        steps:
            - downstream
            - run-regressions:
                  regression_color: lightest
                  regression_scale: medium
                  regression_dir: rtl

    visual-lightest-large-ltr:
        executor: node

        steps:
            - downstream
            - run-regressions:
                  regression_color: lightest
                  regression_scale: large
                  regression_dir: ltr

    visual-lightest-large-rtl:
        executor: node

        steps:
            - downstream
            - run-regressions:
                  regression_color: lightest
                  regression_scale: large
                  regression_dir: rtl

    visual-light-medium-ltr:
        executor: node

        steps:
            - downstream
            - run-regressions:
                  regression_color: light
                  regression_scale: medium
                  regression_dir: ltr

    visual-light-medium-rtl:
        executor: node

        steps:
            - downstream
            - run-regressions:
                  regression_color: light
                  regression_scale: medium
                  regression_dir: rtl

    visual-light-large-ltr:
        executor: node

        steps:
            - downstream
            - run-regressions:
                  regression_color: light
                  regression_scale: large
                  regression_dir: ltr

    visual-light-large-rtl:
        executor: node

        steps:
            - downstream
            - run-regressions:
                  regression_color: light
                  regression_scale: large
                  regression_dir: rtl

    visual-dark-medium-ltr:
        executor: node

        steps:
            - downstream
            - run-regressions:
                  regression_color: dark
                  regression_scale: medium
                  regression_dir: ltr

    visual-dark-medium-rtl:
        executor: node

        steps:
            - downstream
            - run-regressions:
                  regression_color: dark
                  regression_scale: medium
                  regression_dir: rtl

    visual-dark-large-ltr:
        executor: node

        steps:
            - downstream
            - run-regressions:
                  regression_color: dark
                  regression_scale: large
                  regression_dir: ltr

    visual-dark-large-rtl:
        executor: node

        steps:
            - downstream
            - run-regressions:
                  regression_color: dark
                  regression_scale: large
                  regression_dir: rtl

    visual-darkest-medium-ltr:
        executor: node

        steps:
            - downstream
            - run-regressions:
                  regression_color: darkest
                  regression_scale: medium
                  regression_dir: ltr

    visual-darkest-medium-rtl:
        executor: node

        steps:
            - downstream
            - run-regressions:
                  regression_color: darkest
                  regression_scale: medium
                  regression_dir: rtl

    visual-darkest-large-ltr:
        executor: node

        steps:
            - downstream
            - run-regressions:
                  regression_color: darkest
                  regression_scale: large
                  regression_dir: ltr

    visual-darkest-large-rtl:
        executor: node

        steps:
            - downstream
            - run-regressions:
                  regression_color: darkest
                  regression_scale: large
                  regression_dir: rtl

    publish-docs:
        executor: node

        steps:
            - downstream
            - run: cp documentation/404.html documentation/dist/
            - run: touch documentation/dist/.nojekyll
            - run: git config --global user.email "circleci@adobe.com" && git config --global user.name "CircleCI"
            - run: yarn gh-pages -d documentation/dist -m "[skip ci] update demonstration site" -t

    publish-preview:
        executor: node

        steps:
            - downstream
            - restore_cache:
                  keys:
                      - v2-dependencies-{{ arch }}-{{ checksum "yarn.lock" }}
            - run:
                  name: Installing Dependencies
                  command: yarn
            - run: yarn docs:build
            - run: yarn netlify deploy

workflows:
    version: 2
    commitlint:
        jobs:
            - commitlint
    build:
        jobs:
            - build
            - visual-lightest-medium-ltr:
                  requires:
                      - build
            - visual-lightest-large-ltr:
                  requires:
                      - build
            - visual-light-medium-ltr:
                  requires:
                      - build
            - visual-light-large-ltr:
                  requires:
                      - build
            - visual-dark-medium-ltr:
                  requires:
                      - build
            - visual-dark-large-ltr:
                  requires:
                      - build
            - visual-darkest-medium-ltr:
                  requires:
                      - build
            - visual-darkest-large-ltr:
                  requires:
                      - build
            - visual-lightest-medium-rtl:
                  requires:
                      - build
            - visual-lightest-large-rtl:
                  requires:
                      - build
            - visual-light-medium-rtl:
                  requires:
                      - build
            - visual-light-large-rtl:
                  requires:
                      - build
            - visual-dark-medium-rtl:
                  requires:
                      - build
            - visual-dark-large-rtl:
                  requires:
                      - build
            - visual-darkest-medium-rtl:
                  requires:
                      - build
            - visual-darkest-large-rtl:
                  requires:
                      - build
            - publish-docs:
                  filters:
                      branches:
                          only:
                              - main
                  requires:
                      - build
            - publish-preview:
                  requires:
                      - build
                  filters:
                      branches:
                          # Forked pull requests have CIRCLE_BRANCH set to pull/XXX
                          ignore: /pull\/[0-9]+/
