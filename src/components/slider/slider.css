/*
Copyright 2018 Adobe. All rights reserved.
This file is licensed to you under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License. You may obtain a copy
of the License at http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software distributed under
the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS
OF ANY KIND, either express or implied. See the License for the specific language
governing permissions and limitations under the License.
*/
@import './slider-skin.css';

:host {
    --spectrum-slider-controls-margin: calc(
        var(--spectrum-slider-handle-width) / 2
    );
    --spectrum-slider-track-margin-offset: calc(
        var(--spectrum-slider-controls-margin) * -1
    );
    --spectrum-slider-handle-margin-top: calc(
        var(--spectrum-slider-handle-width) / -2
    );
    --spectrum-slider-handle-margin-left: calc(
        var(--spectrum-slider-handle-width) / -2
    );
    --spectrum-dial-width: var(--spectrum-slider-height);
    --spectrum-dial-label-gap-y: var(--spectrum-global-dimension-size-65);
    --spectrum-dial-handle-position: var(--spectrum-global-dimension-size-100);
    --spectrum-slider-track-handleoffset: calc(
        var(--spectrum-slider-handle-gap)
    );
    --spectrum-slider-track-middle-handleoffset: calc(
        var(--spectrum-slider-handle-gap) +
            calc(var(--spectrum-slider-handle-width) / 2)
    );
    --spectrum-slider-input-top: calc(
        var(--spectrum-slider-handle-margin-top) / 4
    );
    --spectrum-slider-input-left: calc(
        var(--spectrum-slider-handle-margin-left) / 4
    );
    --spectrum-dial-handle-size: 100%;
    --spectrum-dial-min-height: 0;
    --spectrum-dial-controls-min-height: 0;
    --spectrum-dial-controls-margin: 0;
    --spectrum-slider-color-min-height: auto;
    --spectrum-slider-color-track-padding: 0;
    --spectrum-slider-color-track-top: 0;
    --spectrum-slider-color-track-margin-top: 0;
    --spectrum-slider-color-track-margin-left: 0;
    --spectrum-slider-color-track-margin-right: 0;
    --spectrum-slider-color-handle-top: 50%;
    --spectrum-slider-ramp-margin-top: 0;
    --spectrum-slider-range-track-reset: 0;

    /* Don't let z-index'd child elements float above other things on the page */
    z-index: 1;
    display: block;
    min-height: var(--spectrum-slider-height);
    min-width: var(--spectrum-slider-min-width);
    user-select: none;
}

#controls {
    display: inline-block;
    box-sizing: border-box;
    position: relative;
    z-index: auto;

    /* These calculations prevent the track from spilling outside of the control */
    width: calc(100% - calc(var(--spectrum-slider-controls-margin) * 2));
    margin-left: var(--spectrum-slider-controls-margin);
    min-height: var(--spectrum-slider-height);
    vertical-align: top;
}

.track,
#buffer,
#ramp {
    height: var(--spectrum-slider-track-height);
    box-sizing: border-box;
    position: absolute;
    z-index: 1;
    top: calc(var(--spectrum-slider-height) / 2);
    left: 0;
    right: auto;
    margin-top: calc(var(--spectrum-slider-fill-track-height) / -2);
    pointer-events: none;
}

.track,
#buffer {
    padding: 0 var(--spectrum-slider-track-handleoffset) 0 0;
    margin-left: var(--spectrum-slider-track-margin-offset);

    &::before {
        content: '';
        display: block;
        height: 100%;
        border-radius: var(--spectrum-slider-track-border-radius);
    }
}

#buffer {
    padding: 0 var(--spectrum-slider-track-handleoffset) 0 0;

    /* Appear above track */
    z-index: 2;
}

#ramp {
    margin-top: var(--spectrum-slider-ramp-margin-top);
    height: var(--spectrum-slider-ramp-track-height);
    position: absolute;
    left: var(--spectrum-slider-track-margin-offset);
    right: var(--spectrum-slider-track-margin-offset);
    top: calc(var(--spectrum-slider-ramp-track-height) / 2);

    svg {
        width: 100%;
        height: 100%;
    }
}

#handle {
    position: absolute;
    left: 0;
    top: calc(var(--spectrum-slider-height) / 2);
    z-index: 2;
    display: inline-block;
    box-sizing: border-box;
    width: var(--spectrum-slider-handle-width);
    height: var(--spectrum-slider-handle-height);
    margin: var(--spectrum-slider-handle-margin-top) 0 0
        calc(var(--spectrum-slider-handle-width) / -2);
    border-width: var(--spectrum-slider-handle-border-size);
    border-style: solid;
    border-radius: var(--spectrum-slider-handle-border-radius);
    transition: border-width var(--spectrum-slider-animation-duration)
        ease-in-out;
    outline: none;
    pointer-events: none;
    &:active,
    &.is-focused,
    &.is-dragged {
        border-width: var(--spectrum-slider-handle-border-size-down);
        cursor: ns-resize;
        cursor: grabbing;
    }

    &:active,
    &.is-focused,
    &.is-dragged,
    &.is-tophandle {
        z-index: 3;
    }
}

#input {
    /*  Remove the margin for input in Firefox and Safari. */
    margin: 0;

    /*  Input width is sum of track width and handle width  */
    width: calc(100% + var(--spectrum-slider-handle-width));
    height: var(--spectrum-slider-handle-height);
    padding: 0;
    position: absolute;

    /*  Aligns the input with the custom track  */
    top: calc(var(--spectrum-slider-handle-width) / 2);
    left: calc(var(--spectrum-slider-handle-width) / -2);
    overflow: hidden;
    opacity: 0.000001;
    cursor: default;
    -webkit-appearance: none;
    border: 0;

    &:focus {
        outline: none;
    }

    &:active {
        outline: none;
        cursor: ns-resize;
        cursor: grabbing;
    }
}

.track ~ .track,
#buffer ~ #buffer {
    left: auto;
    right: var(--spectrum-slider-range-track-reset);
    padding: 0 0 0 var(--spectrum-slider-track-handleoffset);
    margin-left: var(--spectrum-slider-range-track-reset);
    margin-right: var(--spectrum-slider-track-margin-offset);
}

#buffer ~ #buffer {
    margin-right: var(--spectrum-slider-range-track-reset);
    padding: 0 0 0 var(--spectrum-slider-track-middle-handleoffset);

    &::after {
        display: none;
    }
}

#labelContainer {
    display: flex;
    position: relative;
    width: auto;
    padding-top: var(--spectrum-fieldlabel-padding-top);
    font-size: var(--spectrum-text-size-text-label);
    line-height: var(--spectrum-line-height-text-label);
}

#label {
    padding-left: 0;
    flex-grow: 1;
}

#value {
    flex-grow: 0;
    padding-right: 0;
    cursor: default;
}

#ticks {
    display: flex;
    justify-content: space-between;
    z-index: 0;
    margin: 0 var(--spectrum-slider-track-margin-offset);
    margin-top: calc(
        var(--spectrum-slider-tick-mark-height) +
            calc(var(--spectrum-slider-track-height) / 2)
    );
}

.tick {
    position: relative;
    width: var(--spectrum-slider-tick-mark-width);

    &::after {
        display: block;
        position: absolute;
        top: 0;
        left: calc(50% - calc(var(--spectrum-slider-tick-mark-width) / 2));
        content: '';
        width: var(--spectrum-slider-tick-mark-width);
        height: var(--spectrum-slider-tick-mark-height);
        border-radius: var(--spectrum-slider-tick-mark-border-radius);
    }

    .tickLabel {
        display: flex;
        align-items: center;
        justify-content: center;
        margin: var(--spectrum-slider-label-gap-x)
            calc(var(--spectrum-slider-label-gap-x) * -1) 0
            calc(var(--spectrum-slider-label-gap-x) * -1);
        font-size: var(--spectrum-text-size-text-label);
        line-height: var(--spectrum-line-height-text-label);
    }

    &:first-of-type,
    &:last-of-type {
        .tickLabel {
            display: block;
            position: absolute;
            margin: var(--spectrum-slider-label-gap-x) 0 0 0;
        }
    }

    &:first-of-type {
        .tickLabel {
            left: 0;
        }
    }

    &:last-of-type {
        .tickLabel {
            right: 0;
        }
    }
}

.u-isGrabbing {
    cursor: ns-resize;
    cursor: -webkit-grabbing;
    cursor: grabbing;
    -webkit-user-select: none;
    -moz-user-select: none;
    -ms-user-select: none;
    user-select: none;

    & :host {
        & #label,
        & #value {
            cursor: inherit;
        }
    }
}

:host([is-disabled]) {
    cursor: default;
    & #handle,
    & #input {
        cursor: default;
        pointer-events: none;
    }

    &.spectrum-Slider--color {
        .spectrum-Slider-handle {
            &:hover,
            &:active {
                border-width: var(
                    --spectrum-slider-color-handle-outset-border-size
                );
            }
        }
    }
}
