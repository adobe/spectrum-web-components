import"./swc.CwJ2sOLK.js";import{f as t}from"./swc.C-4VxDS_.js";import{M as a}from"./swc.Dofmtdop.js";import{i as r}from"./swc.DMToGq_w.js";import{i as e}from"./swc.Cl2X6-fK.js";import{S as i}from"./swc.DAg73LFj.js";import{x as o}from"./swc.BkWj9Vim.js";import{n}from"./swc.Cbbf2bfB.js";import{a as s}from"./swc.DeJGzahI.js";import{d}from"./swc.JlveB6nj.js";import"./swc.BPALZckB.js";import"./swc.CBXJ4PuA.js";const m=e`
    :host{inline-size:100%;justify-content:center;display:flex;position:fixed;inset-block-end:0;inset-inline-start:0}.tray{--mod-modal-max-width:100%;inline-size:100%;max-inline-size:100%;max-block-size:calc(100vh - var(--mod-tray-spacing-edge-to-tray-safe-zone,var(--spectrum-tray-spacing-edge-to-tray-safe-zone)));box-sizing:border-box;border-radius:0;border-radius:var(--mod-tray-corner-radius-portrait,0)var(--mod-tray-corner-radius-portrait,0)0 0;transition:opacity var(--mod-tray-exit-animation-duration,var(--spectrum-tray-exit-animation-duration))cubic-bezier(.5,0,1,1)var(--mod-tray-exit-animation-delay,var(--spectrum-tray-exit-animation-delay)),visibility var(--mod-tray-exit-animation-duration,var(--spectrum-tray-exit-animation-duration))linear calc(var(--mod-tray-exit-animation-delay,var(--spectrum-tray-exit-animation-delay)) + var(--mod-tray-exit-animation-duration,var(--spectrum-tray-exit-animation-duration))),transform var(--mod-tray-exit-animation-duration,var(--spectrum-tray-exit-animation-duration))cubic-bezier(.5,0,1,1)var(--mod-tray-exit-animation-delay,var(--spectrum-tray-exit-animation-delay));background-color:var(--highcontrast-tray-background-color,var(--mod-tray-background-color,var(--spectrum-tray-background-color)));outline:none;margin-block-start:var(--mod-tray-spacing-edge-to-tray-safe-zone,var(--spectrum-tray-spacing-edge-to-tray-safe-zone));padding-block-start:var(--mod-tray-top-to-content-area,var(--spectrum-tray-top-to-content-area));padding-block-end:var(--mod-tray-bottom-to-content-area,var(--spectrum-tray-top-to-content-area));overflow:auto;transform:translateY(100%)}:host([open]) .tray{transition:transform var(--mod-tray-entry-animation-duration,var(--spectrum-tray-entry-animation-duration))cubic-bezier(0,0,.4,1)var(--mod-tray-entry-animation-delay,var(--spectrum-tray-entry-animation-delay)),opacity var(--spectrum-tray-entry-animation-duration,var(--mod-tray-entry-animation-duration))cubic-bezier(0,0,.4,1)var(--mod-tray-entry-animation-delay,var(--spectrum-tray-entry-animation-delay));transform:translateY(0)}@media screen and (orientation:landscape){.tray{max-inline-size:var(--mod-tray-max-inline-size,var(--spectrum-tray-max-inline-size));border-start-start-radius:var(--mod-tray-corner-radius,var(--spectrum-tray-corner-radius));border-start-end-radius:var(--mod-tray-corner-radius,var(--spectrum-tray-corner-radius))}}@media (forced-colors:active){.tray{--highcontrast-tray-background-color:Canvas;border:solid}.tray ::slotted(*){border:none}}:host{--spectrum-tray-exit-animation-delay:var(--system-tray-exit-animation-delay);--spectrum-tray-entry-animation-delay:var(--system-tray-entry-animation-delay);--spectrum-tray-max-inline-size:var(--system-tray-max-inline-size);--spectrum-tray-spacing-edge-to-tray-safe-zone:var(--system-tray-spacing-edge-to-safe-zone);--spectrum-tray-entry-animation-duration:var(--system-tray-entry-animation-duration);--spectrum-tray-exit-animation-duration:var(--system-tray-exit-animation-duration);--spectrum-tray-corner-radius:var(--system-tray-corner-radius);--spectrum-tray-background-color:var(--system-tray-background-color)}:host{max-height:100vh;max-height:100dvh;align-items:flex-end;position:fixed!important}sp-underlay{touch-action:none}.tray{overscroll-behavior:contain;display:inline-flex}::slotted(.visually-hidden){clip:rect(0,0,0,0);clip-path:inset(50%);height:1px;width:1px;white-space:nowrap;border:0;margin:0 -1px -1px 0;padding:0;position:absolute;overflow:hidden}
`;var c=Object.defineProperty,y=(t,a,r,e)=>{for(var i,o=void 0,n=t.length-1;n>=0;n--)(i=t[n])&&(o=i(a,r,o)||o);return o&&c(a,r,o),o};class p extends i{constructor(){super(...arguments),this.open=!1,this.prefersMotion=new a(this,"(prefers-reduced-motion: no-preference)"),this.transitionPromise=Promise.resolve(),this.resolveTransitionPromise=()=>{},this.animating=!1}static get styles(){return[r,m]}focus(){const a=t(this);a?a.focus():1===this.children.length?this.tray.focus():super.focus()}overlayWillCloseCallback(){return this.open?(this.close(),!0):this.animating}close(){this.open=!1,this.prefersMotion.matches||this.dispatchClosed()}dispatchClosed(){this.dispatchEvent(new Event("close",{bubbles:!0}))}handleUnderlayTransitionend(){this.open||(this.resolveTransitionPromise(),this.dispatchClosed())}handleTrayTransitionend(){this.open&&this.resolveTransitionPromise()}update(t){t.has("open")&&void 0!==t.get("open")&&this.prefersMotion.matches&&(this.animating=!0,this.transitionPromise=new Promise((t=>{this.resolveTransitionPromise=()=>{this.animating=!1,t()}}))),super.update(t)}render(){return o`
            <sp-underlay
                ?open=${this.open}
                @close=${this.close}
                @transitionend=${this.handleUnderlayTransitionend}
            ></sp-underlay>
            <div
                class="tray modal"
                tabindex="-1"
                @transitionend=${this.handleTrayTransitionend}
            >
                <slot></slot>
            </div>
        `}async getUpdateComplete(){const t=await super.getUpdateComplete();return await this.transitionPromise,t}}y([n({type:Boolean,reflect:!0})],p.prototype,"open"),y([s(".tray")],p.prototype,"tray"),d("sp-tray",p);
//# sourceMappingURL=swc.DNFi76Us.js.map
