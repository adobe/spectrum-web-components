{
  "version": 3,
  "sources": ["thumbnail.test.ts"],
  "sourcesContent": ["/*\nCopyright 2020 Adobe. All rights reserved.\nThis file is licensed to you under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License. You may obtain a copy\nof the License at http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software distributed under\nthe License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\nOF ANY KIND, either express or implied. See the License for the specific language\ngoverning permissions and limitations under the License.\n*/\n\nimport { elementUpdated, expect, fixture, html } from '@open-wc/testing';\n\nimport '@spectrum-web-components/thumbnail/sp-thumbnail.js';\nimport { Thumbnail } from '..';\nimport { thumbnail } from '../stories/images.js';\nimport { testForLitDevWarnings } from '../../../test/testing-helpers.js';\nimport { stub } from 'sinon';\n\ndescribe('Thumbnail', () => {\n    testForLitDevWarnings(\n        async () =>\n            await fixture<Thumbnail>(html`\n                <sp-thumbnail>\n                    <img src=${thumbnail} alt=\"Woman crouching\" />\n                </sp-thumbnail>\n            `)\n    );\n    it('loads default thumbnail accessibly', async () => {\n        const el = await fixture<Thumbnail>(html`\n            <sp-thumbnail>\n                <img src=${thumbnail} alt=\"Woman crouching\" />\n            </sp-thumbnail>\n        `);\n\n        await elementUpdated(el);\n\n        await expect(el).to.be.accessible();\n    });\n    it('can be size `50`', async () => {\n        const el = await fixture<Thumbnail>(html`\n            <sp-thumbnail size=\"50\">\n                <img src=${thumbnail} alt=\"Woman crouching\" />\n            </sp-thumbnail>\n        `);\n\n        await elementUpdated(el);\n\n        expect(el.size).to.equal('50');\n    });\n    it('accepts `background`', async () => {\n        const el = await fixture<Thumbnail>(html`\n            <sp-thumbnail background=\"blue\">\n                <img src=${thumbnail} alt=\"Woman crouching\" />\n            </sp-thumbnail>\n        `);\n\n        const background = el.shadowRoot.querySelector('.background');\n        expect(background).to.not.be.null;\n    });\n    it('renders the opacity checkerboard and slot', async () => {\n        const el = await fixture<Thumbnail>(html`\n            <sp-thumbnail>\n                <img src=${thumbnail} alt=\"Woman crouching\" />\n            </sp-thumbnail>\n        `);\n\n        await elementUpdated(el);\n        el.setAttribute('layer', 'true');\n        await elementUpdated(el);\n        const checkerboard = el.shadowRoot.querySelector(\n            '.opacity-checkerboard.layer-inner'\n        );\n        expect(checkerboard).to.not.be.null;\n\n        const slot = checkerboard?.querySelector('slot');\n        expect(slot).to.not.be.null;\n    });\n    describe('dev mode', () => {\n        let consoleWarnStub!: ReturnType<typeof stub>;\n        before(() => {\n            window.__swc.verbose = true;\n            consoleWarnStub = stub(console, 'warn');\n        });\n        afterEach(() => {\n            consoleWarnStub.resetHistory();\n        });\n        after(() => {\n            window.__swc.verbose = false;\n            consoleWarnStub.restore();\n        });\n    });\n});\n"],
  "mappings": ";AAYA,SAAS,gBAAgB,QAAQ,SAAS,YAAY;AAEtD,OAAO;AAEP,SAAS,iBAAiB;AAC1B,SAAS,6BAA6B;AACtC,SAAS,YAAY;AAErB,SAAS,aAAa,MAAM;AACxB;AAAA,IACI,YACI,MAAM,QAAmB;AAAA;AAAA,+BAEN,SAAS;AAAA;AAAA,aAE3B;AAAA,EACT;AACA,KAAG,sCAAsC,YAAY;AACjD,UAAM,KAAK,MAAM,QAAmB;AAAA;AAAA,2BAEjB,SAAS;AAAA;AAAA,SAE3B;AAED,UAAM,eAAe,EAAE;AAEvB,UAAM,OAAO,EAAE,EAAE,GAAG,GAAG,WAAW;AAAA,EACtC,CAAC;AACD,KAAG,oBAAoB,YAAY;AAC/B,UAAM,KAAK,MAAM,QAAmB;AAAA;AAAA,2BAEjB,SAAS;AAAA;AAAA,SAE3B;AAED,UAAM,eAAe,EAAE;AAEvB,WAAO,GAAG,IAAI,EAAE,GAAG,MAAM,IAAI;AAAA,EACjC,CAAC;AACD,KAAG,wBAAwB,YAAY;AACnC,UAAM,KAAK,MAAM,QAAmB;AAAA;AAAA,2BAEjB,SAAS;AAAA;AAAA,SAE3B;AAED,UAAM,aAAa,GAAG,WAAW,cAAc,aAAa;AAC5D,WAAO,UAAU,EAAE,GAAG,IAAI,GAAG;AAAA,EACjC,CAAC;AACD,KAAG,6CAA6C,YAAY;AACxD,UAAM,KAAK,MAAM,QAAmB;AAAA;AAAA,2BAEjB,SAAS;AAAA;AAAA,SAE3B;AAED,UAAM,eAAe,EAAE;AACvB,OAAG,aAAa,SAAS,MAAM;AAC/B,UAAM,eAAe,EAAE;AACvB,UAAM,eAAe,GAAG,WAAW;AAAA,MAC/B;AAAA,IACJ;AACA,WAAO,YAAY,EAAE,GAAG,IAAI,GAAG;AAE/B,UAAM,OAAO,6CAAc,cAAc;AACzC,WAAO,IAAI,EAAE,GAAG,IAAI,GAAG;AAAA,EAC3B,CAAC;AACD,WAAS,YAAY,MAAM;AACvB,QAAI;AACJ,WAAO,MAAM;AACT,aAAO,MAAM,UAAU;AACvB,wBAAkB,KAAK,SAAS,MAAM;AAAA,IAC1C,CAAC;AACD,cAAU,MAAM;AACZ,sBAAgB,aAAa;AAAA,IACjC,CAAC;AACD,UAAM,MAAM;AACR,aAAO,MAAM,UAAU;AACvB,sBAAgB,QAAQ;AAAA,IAC5B,CAAC;AAAA,EACL,CAAC;AACL,CAAC;",
  "names": []
}
