"use strict";var n=Object.defineProperty;var u=Object.getOwnPropertyDescriptor;var s=(l,i,e,o)=>{for(var t=o>1?void 0:o?u(i,e):i,r=l.length-1,a;r>=0;r--)(a=l[r])&&(t=(o?a(i,e,t):a(t))||t);return o&&t&&n(i,e,t),t};import{html as p,SizedMixin as d,SpectrumElement as m}from"@spectrum-web-components/base";import{property as c,queryAssignedNodes as f}from"@spectrum-web-components/base/src/decorators.js";import{FocusGroupController as h}from"@spectrum-web-components/reactive-controllers/src/FocusGroup.js";import g from"./accordion.css.js";export class Accordion extends d(m,{noDefaultSize:!0}){constructor(){super(...arguments);this.allowMultiple=!1;this.focusGroupController=new h(this,{direction:"vertical",elements:()=>this.items,isFocusableElement:e=>!e.disabled})}static get styles(){return[g]}get items(){return[...this.defaultNodes||[]].filter(e=>typeof e.tagName!="undefined")}focus(){this.focusGroupController.focus()}async onToggle(e){const o=e.target;if(await 0,this.allowMultiple||e.defaultPrevented)return;const t=[...this.items];t&&!t.length||t.forEach(r=>{r!==o&&(r.open=!1)})}handleSlotchange(){this.focusGroupController.clearElementCache(),this.items.forEach(e=>{e.size=this.size})}updated(e){super.updated(e),e.has("size")&&(e.get("size")||this.size!=="m")&&this.items.forEach(o=>{o.size=this.size})}render(){return p`
            <slot
                @slotchange=${this.handleSlotchange}
                @sp-accordion-item-toggle=${this.onToggle}
            ></slot>
        `}}s([c({type:Boolean,reflect:!0,attribute:"allow-multiple"})],Accordion.prototype,"allowMultiple",2),s([c({type:String,reflect:!0})],Accordion.prototype,"density",2),s([f()],Accordion.prototype,"defaultNodes",2);
//# sourceMappingURL=Accordion.js.map
