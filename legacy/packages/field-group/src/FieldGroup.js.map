{
  "version": 3,
  "sources": ["FieldGroup.ts"],
  "sourcesContent": ["/*\nCopyright 2020 Adobe. All rights reserved.\nThis file is licensed to you under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License. You may obtain a copy\nof the License at http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software distributed under\nthe License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\nOF ANY KIND, either express or implied. See the License for the specific language\ngoverning permissions and limitations under the License.\n*/\n\nimport {\n    CSSResultArray,\n    html,\n    PropertyValues,\n    SpectrumElement,\n    TemplateResult,\n} from '@spectrum-web-components/base';\nimport { property } from '@spectrum-web-components/base/src/decorators.js';\nimport { ManageHelpText } from '@spectrum-web-components/help-text/src/manage-help-text.js';\n\nimport styles from './field-group.css.js';\n\n/**\n * @element sp-field-group\n * @slot - the form controls that make up the group\n * @slot help-text - default or non-negative help text to associate to your form element\n * @slot negative-help-text - negative help text to associate to your form element when `invalid`\n */\nexport class FieldGroup extends ManageHelpText(SpectrumElement, {\n    mode: 'external',\n}) {\n    public static override get styles(): CSSResultArray {\n        return [styles];\n    }\n\n    @property({ type: Boolean, reflect: true })\n    public horizontal = false;\n\n    @property({ type: Boolean, reflect: true })\n    public invalid = false;\n\n    @property()\n    public label = '';\n\n    @property({ type: Boolean, reflect: true })\n    public vertical = false;\n\n    protected handleSlotchange(): void {\n        // Surface this functionality for easy composition in extensions.\n        return;\n    }\n\n    protected override render(): TemplateResult {\n        return html`\n            <div class=\"group\" role=\"presentation\">\n                <slot @slotchange=${this.handleSlotchange}></slot>\n            </div>\n            ${this.renderHelpText(this.invalid)}\n        `;\n    }\n\n    protected override firstUpdated(changes: PropertyValues): void {\n        super.firstUpdated(changes);\n        if (!this.hasAttribute('role')) {\n            this.setAttribute('role', 'group');\n        }\n    }\n\n    protected override updated(changes: PropertyValues<this>): void {\n        super.updated(changes);\n        if (changes.has('label')) {\n            if (this.label) {\n                this.setAttribute('aria-label', this.label);\n            } else {\n                this.removeAttribute('aria-label');\n            }\n        }\n    }\n}\n"],
  "mappings": "qNAYA,OAEI,QAAAA,EAEA,mBAAAC,MAEG,gCACP,OAAS,YAAAC,MAAgB,kDACzB,OAAS,kBAAAC,MAAsB,6DAE/B,OAAOC,MAAY,uBAQZ,aAAM,mBAAmBD,EAAeF,EAAiB,CAC5D,KAAM,UACV,CAAC,CAAE,CAFI,kCAQH,KAAO,WAAa,GAGpB,KAAO,QAAU,GAGjB,KAAO,MAAQ,GAGf,KAAO,SAAW,GAdlB,WAA2B,QAAyB,CAChD,MAAO,CAACG,CAAM,CAClB,CAcU,kBAAyB,CAGnC,CAEmB,QAAyB,CACxC,OAAOJ;AAAA;AAAA,oCAEqB,KAAK,gBAAgB;AAAA;AAAA,cAE3C,KAAK,eAAe,KAAK,OAAO,CAAC;AAAA,SAE3C,CAEmB,aAAaK,EAA+B,CAC3D,MAAM,aAAaA,CAAO,EACrB,KAAK,aAAa,MAAM,GACzB,KAAK,aAAa,OAAQ,OAAO,CAEzC,CAEmB,QAAQA,EAAqC,CAC5D,MAAM,QAAQA,CAAO,EACjBA,EAAQ,IAAI,OAAO,IACf,KAAK,MACL,KAAK,aAAa,aAAc,KAAK,KAAK,EAE1C,KAAK,gBAAgB,YAAY,EAG7C,CACJ,CA1CWC,EAAA,CADNJ,EAAS,CAAE,KAAM,QAAS,QAAS,EAAK,CAAC,GAPjC,WAQF,0BAGAI,EAAA,CADNJ,EAAS,CAAE,KAAM,QAAS,QAAS,EAAK,CAAC,GAVjC,WAWF,uBAGAI,EAAA,CADNJ,EAAS,GAbD,WAcF,qBAGAI,EAAA,CADNJ,EAAS,CAAE,KAAM,QAAS,QAAS,EAAK,CAAC,GAhBjC,WAiBF",
  "names": ["html", "SpectrumElement", "property", "ManageHelpText", "styles", "changes", "__decorateClass"]
}
