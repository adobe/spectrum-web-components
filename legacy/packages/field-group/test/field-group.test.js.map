{
  "version": 3,
  "sources": ["field-group.test.ts"],
  "sourcesContent": ["/*\nCopyright 2020 Adobe. All rights reserved.\nThis file is licensed to you under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License. You may obtain a copy\nof the License at http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software distributed under\nthe License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\nOF ANY KIND, either express or implied. See the License for the specific language\ngoverning permissions and limitations under the License.\n*/\n\nimport { elementUpdated, expect, fixture, html } from '@open-wc/testing';\nimport { findDescribedNode } from '../../../test/testing-helpers-a11y.js';\nimport { HelpText } from '@spectrum-web-components/help-text';\nimport { FieldGroup } from '@spectrum-web-components/field-group';\nimport '@spectrum-web-components/help-text/sp-help-text.js';\nimport '@spectrum-web-components/checkbox/sp-checkbox.js';\nimport '@spectrum-web-components/field-group/sp-field-group.js';\nimport { testForLitDevWarnings } from '../../../test/testing-helpers.js';\n\ndescribe('FieldGroup', () => {\n    testForLitDevWarnings(\n        async () =>\n            await fixture<FieldGroup>(\n                html`\n                    <sp-field-group horizontal>\n                        <sp-checkbox>Checkbox 1</sp-checkbox>\n                        <sp-checkbox>Checkbox 2</sp-checkbox>\n                        <sp-checkbox>Checkbox 3</sp-checkbox>\n                        <sp-checkbox>Checkbox 4</sp-checkbox>\n                        <sp-checkbox>Checkbox 5</sp-checkbox>\n                    </sp-field-group>\n                `\n            )\n    );\n    it('loads default field-group accessibly', async () => {\n        const el = await fixture<FieldGroup>(\n            html`\n                <sp-field-group horizontal>\n                    <sp-checkbox>Checkbox 1</sp-checkbox>\n                    <sp-checkbox>Checkbox 2</sp-checkbox>\n                    <sp-checkbox>Checkbox 3</sp-checkbox>\n                    <sp-checkbox>Checkbox 4</sp-checkbox>\n                    <sp-checkbox>Checkbox 5</sp-checkbox>\n                </sp-field-group>\n            `\n        );\n\n        await elementUpdated(el);\n\n        await expect(el).to.be.accessible();\n    });\n\n    describe('help text', () => {\n        const name = 'This is a field group';\n        const description = 'This text helps you fill it out';\n        const descriptionNegative = 'This text helps you when invalid';\n        it('accepts help text in `slot=\"help-text\"`', async () => {\n            const el = await fixture(html`\n                <sp-field-group label=${name}>\n                    <sp-help-text slot=\"help-text\">${description}</sp-help-text>\n                </sp-field-group>\n            `);\n\n            await elementUpdated(el);\n\n            await findDescribedNode(name, description);\n        });\n        it('accepts help text in `slot=\"help-text\"` w/ own ID', async () => {\n            const el = await fixture(html`\n                <sp-field-group label=${name}>\n                    <sp-help-text slot=\"help-text\" id=\"help-text-id-1\">\n                        ${description}\n                    </sp-help-text>\n                </sp-field-group>\n            `);\n\n            await elementUpdated(el);\n\n            await findDescribedNode(name, description);\n        });\n        it('manages neutral/negative help text pairs', async () => {\n            const el = await fixture<FieldGroup>(html`\n                <sp-field-group label=${name}>\n                    <sp-help-text slot=\"help-text\">${description}</sp-help-text>\n                    <sp-help-text slot=\"negative-help-text\">\n                        ${descriptionNegative}\n                    </sp-help-text>\n                </sp-field-group>\n            `);\n            const negativeHelpText = el.querySelector(\n                '[slot=\"negative-help-text\"]'\n            ) as HelpText;\n\n            await elementUpdated(el);\n\n            expect(negativeHelpText.variant).to.equal('neutral');\n            await findDescribedNode(name, description);\n\n            el.invalid = true;\n            await elementUpdated(el);\n\n            expect(negativeHelpText.variant).to.equal('negative');\n            await findDescribedNode(name, descriptionNegative);\n        });\n        it('manages neutral/negative help text pairs w/ own IDs', async () => {\n            const el = await fixture<FieldGroup>(html`\n                <sp-field-group label=${name}>\n                    <sp-help-text slot=\"help-text\" id=\"help-text-id-2\">\n                        ${description}\n                    </sp-help-text>\n                    <sp-help-text slot=\"negative-help-text\" id=\"help-text-id-3\">\n                        ${descriptionNegative}\n                    </sp-help-text>\n                </sp-field-group>\n            `);\n            const negativeHelpText = el.querySelector(\n                '[slot=\"negative-help-text\"]'\n            ) as HelpText;\n\n            await elementUpdated(el);\n\n            expect(negativeHelpText.variant).to.equal('neutral');\n            await findDescribedNode(name, description);\n\n            el.invalid = true;\n            await elementUpdated(el);\n\n            expect(negativeHelpText.variant).to.equal('negative');\n            await findDescribedNode(name, descriptionNegative);\n        });\n    });\n});\n"],
  "mappings": ";AAYA,SAAS,gBAAgB,QAAQ,SAAS,YAAY;AACtD,SAAS,yBAAyB;AAGlC,OAAO;AACP,OAAO;AACP,OAAO;AACP,SAAS,6BAA6B;AAEtC,SAAS,cAAc,MAAM;AACzB;AAAA,IACI,YACI,MAAM;AAAA,MACF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IASJ;AAAA,EACR;AACA,KAAG,wCAAwC,YAAY;AACnD,UAAM,KAAK,MAAM;AAAA,MACb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IASJ;AAEA,UAAM,eAAe,EAAE;AAEvB,UAAM,OAAO,EAAE,EAAE,GAAG,GAAG,WAAW;AAAA,EACtC,CAAC;AAED,WAAS,aAAa,MAAM;AACxB,UAAM,OAAO;AACb,UAAM,cAAc;AACpB,UAAM,sBAAsB;AAC5B,OAAG,2CAA2C,YAAY;AACtD,YAAM,KAAK,MAAM,QAAQ;AAAA,wCACG,IAAI;AAAA,qDACS,WAAW;AAAA;AAAA,aAEnD;AAED,YAAM,eAAe,EAAE;AAEvB,YAAM,kBAAkB,MAAM,WAAW;AAAA,IAC7C,CAAC;AACD,OAAG,qDAAqD,YAAY;AAChE,YAAM,KAAK,MAAM,QAAQ;AAAA,wCACG,IAAI;AAAA;AAAA,0BAElB,WAAW;AAAA;AAAA;AAAA,aAGxB;AAED,YAAM,eAAe,EAAE;AAEvB,YAAM,kBAAkB,MAAM,WAAW;AAAA,IAC7C,CAAC;AACD,OAAG,4CAA4C,YAAY;AACvD,YAAM,KAAK,MAAM,QAAoB;AAAA,wCACT,IAAI;AAAA,qDACS,WAAW;AAAA;AAAA,0BAEtC,mBAAmB;AAAA;AAAA;AAAA,aAGhC;AACD,YAAM,mBAAmB,GAAG;AAAA,QACxB;AAAA,MACJ;AAEA,YAAM,eAAe,EAAE;AAEvB,aAAO,iBAAiB,OAAO,EAAE,GAAG,MAAM,SAAS;AACnD,YAAM,kBAAkB,MAAM,WAAW;AAEzC,SAAG,UAAU;AACb,YAAM,eAAe,EAAE;AAEvB,aAAO,iBAAiB,OAAO,EAAE,GAAG,MAAM,UAAU;AACpD,YAAM,kBAAkB,MAAM,mBAAmB;AAAA,IACrD,CAAC;AACD,OAAG,uDAAuD,YAAY;AAClE,YAAM,KAAK,MAAM,QAAoB;AAAA,wCACT,IAAI;AAAA;AAAA,0BAElB,WAAW;AAAA;AAAA;AAAA,0BAGX,mBAAmB;AAAA;AAAA;AAAA,aAGhC;AACD,YAAM,mBAAmB,GAAG;AAAA,QACxB;AAAA,MACJ;AAEA,YAAM,eAAe,EAAE;AAEvB,aAAO,iBAAiB,OAAO,EAAE,GAAG,MAAM,SAAS;AACnD,YAAM,kBAAkB,MAAM,WAAW;AAEzC,SAAG,UAAU;AACb,YAAM,eAAe,EAAE;AAEvB,aAAO,iBAAiB,OAAO,EAAE,GAAG,MAAM,UAAU;AACpD,YAAM,kBAAkB,MAAM,mBAAmB;AAAA,IACrD,CAAC;AAAA,EACL,CAAC;AACL,CAAC;",
  "names": []
}
