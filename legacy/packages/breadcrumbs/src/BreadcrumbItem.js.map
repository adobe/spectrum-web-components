{
  "version": 3,
  "sources": ["BreadcrumbItem.ts"],
  "sourcesContent": ["/*\nCopyright 2024 Adobe. All rights reserved.\nThis file is licensed to you under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License. You may obtain a copy\nof the License at http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software distributed under\nthe License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\nOF ANY KIND, either express or implied. See the License for the specific language\ngoverning permissions and limitations under the License.\n*/\n\nimport {\n    CSSResultArray,\n    html,\n    PropertyValues,\n    TemplateResult,\n} from '@spectrum-web-components/base';\nimport { ifDefined } from '@spectrum-web-components/base/src/directives.js';\nimport { property } from '@spectrum-web-components/base/src/decorators.js';\nimport { Focusable } from '@spectrum-web-components/shared/src/focusable.js';\nimport { LikeAnchor } from '@spectrum-web-components/shared/src/like-anchor.js';\nimport chevronStyles from '@spectrum-web-components/icon/src/spectrum-icon-chevron.css.js';\nimport '@spectrum-web-components/icons-ui/icons/sp-icon-chevron100.js';\n\nimport styles from './breadcrumb-item.css.js';\n\nexport interface BreadcrumbSelectDetail {\n    value: string;\n}\n\nexport class BreadcrumbItem extends LikeAnchor(Focusable) {\n    public static override get styles(): CSSResultArray {\n        return [styles, chevronStyles];\n    }\n\n    @property()\n    public value: string | undefined = undefined;\n\n    /**\n     * @private\n     * Marks this breadcrumb item as the current route.\n     */\n    @property({ type: Boolean })\n    public isLastOfType = false;\n\n    public override get focusElement(): HTMLElement {\n        return this.shadowRoot.querySelector('#item-link') as HTMLElement;\n    }\n\n    override connectedCallback(): void {\n        super.connectedCallback();\n\n        if (!this.hasAttribute('role')) {\n            this.setAttribute('role', 'listitem');\n        }\n    }\n\n    private announceSelected(value: string): void {\n        const selectDetail: BreadcrumbSelectDetail = {\n            value,\n        };\n\n        const selectionEvent = new CustomEvent('breadcrumb-select', {\n            bubbles: true,\n            composed: true,\n            detail: selectDetail,\n        });\n\n        this.dispatchEvent(selectionEvent);\n    }\n\n    protected handleClick(event?: Event): void {\n        if (!this.href && event) {\n            event.preventDefault();\n        }\n\n        if (!this.href || event?.defaultPrevented) {\n            if (this.value && !this.isLastOfType) {\n                this.announceSelected(this.value);\n            }\n        }\n    }\n\n    protected handleKeyDown(event: KeyboardEvent): void {\n        if (event.key === 'Enter' || event.keyCode === 13) {\n            this.handleClick(event);\n        }\n    }\n\n    protected renderLink(): TemplateResult {\n        return html`\n            <a\n                id=\"item-link\"\n                href=${ifDefined(!this.isLastOfType ? this.href : undefined)}\n                tabindex=${0}\n                aria-current=${ifDefined(\n                    this.isLastOfType ? 'page' : undefined\n                )}\n                @keydown=${this.handleKeyDown}\n                @click=${this.handleClick}\n            >\n                <slot></slot>\n            </a>\n        `;\n    }\n\n    private renderSeparator(): TemplateResult {\n        return html`\n            <sp-icon-chevron100\n                id=\"separator\"\n                size=\"xs\"\n                class=\"spectrum-UIIcon-ChevronRight100\"\n            ></sp-icon-chevron100>\n        `;\n    }\n\n    protected override render(): TemplateResult {\n        return html`\n            ${this.renderLink()}\n            <slot name=\"menu\"></slot>\n            ${this.renderSeparator()}\n        `;\n    }\n\n    protected override updated(changes: PropertyValues): void {\n        if (changes.has('disabled')) {\n            if (this.disabled) {\n                this.setAttribute('aria-disabled', 'true');\n            } else {\n                this.removeAttribute('aria-disabled');\n            }\n        }\n    }\n}\n"],
  "mappings": "qNAYA,OAEI,QAAAA,MAGG,gCACP,OAAS,aAAAC,MAAiB,kDAC1B,OAAS,YAAAC,MAAgB,kDACzB,OAAS,aAAAC,MAAiB,mDAC1B,OAAS,cAAAC,MAAkB,qDAC3B,OAAOC,MAAmB,iEAC1B,MAAO,gEAEP,OAAOC,MAAY,2BAMZ,aAAM,uBAAuBF,EAAWD,CAAS,CAAE,CAAnD,kCAMH,KAAO,MAA4B,OAOnC,KAAO,aAAe,GAZtB,WAA2B,QAAyB,CAChD,MAAO,CAACG,EAAQD,CAAa,CACjC,CAYA,IAAoB,cAA4B,CAC5C,OAAO,KAAK,WAAW,cAAc,YAAY,CACrD,CAES,mBAA0B,CAC/B,MAAM,kBAAkB,EAEnB,KAAK,aAAa,MAAM,GACzB,KAAK,aAAa,OAAQ,UAAU,CAE5C,CAEQ,iBAAiBE,EAAqB,CAC1C,MAAMC,EAAuC,CACzC,MAAAD,CACJ,EAEME,EAAiB,IAAI,YAAY,oBAAqB,CACxD,QAAS,GACT,SAAU,GACV,OAAQD,CACZ,CAAC,EAED,KAAK,cAAcC,CAAc,CACrC,CAEU,YAAYC,EAAqB,CACnC,CAAC,KAAK,MAAQA,GACdA,EAAM,eAAe,GAGrB,CAAC,KAAK,MAAQA,GAAA,MAAAA,EAAO,mBACjB,KAAK,OAAS,CAAC,KAAK,cACpB,KAAK,iBAAiB,KAAK,KAAK,CAG5C,CAEU,cAAcA,EAA4B,EAC5CA,EAAM,MAAQ,SAAWA,EAAM,UAAY,KAC3C,KAAK,YAAYA,CAAK,CAE9B,CAEU,YAA6B,CACnC,OAAOV;AAAA;AAAA;AAAA,uBAGQC,EAAW,KAAK,aAA2B,OAAZ,KAAK,IAAgB,CAAC;AAAA,2BACjD,CAAC;AAAA,+BACGA,EACX,KAAK,aAAe,OAAS,MACjC,CAAC;AAAA,2BACU,KAAK,aAAa;AAAA,yBACpB,KAAK,WAAW;AAAA;AAAA;AAAA;AAAA,SAKrC,CAEQ,iBAAkC,CACtC,OAAOD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAOX,CAEmB,QAAyB,CACxC,OAAOA;AAAA,cACD,KAAK,WAAW,CAAC;AAAA;AAAA,cAEjB,KAAK,gBAAgB,CAAC;AAAA,SAEhC,CAEmB,QAAQW,EAA+B,CAClDA,EAAQ,IAAI,UAAU,IAClB,KAAK,SACL,KAAK,aAAa,gBAAiB,MAAM,EAEzC,KAAK,gBAAgB,eAAe,EAGhD,CACJ,CAjGWC,EAAA,CADNV,EAAS,GALD,eAMF,qBAOAU,EAAA,CADNV,EAAS,CAAE,KAAM,OAAQ,CAAC,GAZlB,eAaF",
  "names": ["html", "ifDefined", "property", "Focusable", "LikeAnchor", "chevronStyles", "styles", "value", "selectDetail", "selectionEvent", "event", "changes", "__decorateClass"]
}
