{
  "version": 3,
  "sources": ["breadcrumbs.stories.ts"],
  "sourcesContent": ["/*\nCopyright 2024 Adobe. All rights reserved.\nThis file is licensed to you under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License. You may obtain a copy\nof the License at http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software distributed under\nthe License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\nOF ANY KIND, either express or implied. See the License for the specific language\ngoverning permissions and limitations under the License.\n*/\nimport { html, TemplateResult } from '@spectrum-web-components/base';\nimport '@spectrum-web-components/icons-workflow/icons/sp-icon-settings.js';\nimport { LitElement } from '@spectrum-web-components/base';\nimport { property } from '@spectrum-web-components/base/src/decorators.js';\n\nimport {\n    getBreadcrumbs,\n    getBreadcrumbsWithLinks,\n    getResizableStyles,\n    StoryArgs,\n    Template,\n} from './template.js';\nimport { argTypes } from './args.js';\nimport { ifDefined } from '@spectrum-web-components/base/src/directives.js';\nimport { spreadProps } from '../../../test/lit-helpers.js';\nimport '@spectrum-web-components/button/sp-button.js';\n\nexport default {\n    title: 'Breadcrumbs',\n    component: 'sp-breadcrumbs',\n    args: {\n        'max-visible-items': 4,\n    },\n    argTypes,\n};\n\nexport const Default = (args: StoryArgs): TemplateResult => Template(args);\n\nexport const Disabled = (args: StoryArgs): TemplateResult => Template(args);\nDisabled.args = {\n    disabled: true,\n};\n\nexport const Compact = (args: StoryArgs): TemplateResult => Template(args);\nCompact.args = {\n    compact: true,\n};\n\nexport const Links = (args: StoryArgs): TemplateResult => {\n    return html`\n        <sp-breadcrumbs\n            ${spreadProps(args)}\n            max-visible-items=${ifDefined(args['max-visible-items'])}\n            @change=${args.onChange}\n        >\n            ${getBreadcrumbsWithLinks(4)}\n        </sp-breadcrumbs>\n    `;\n};\n\nclass AddItemsStoryBreadcrumbs extends LitElement {\n    private _counter = 2;\n    private _items: TemplateResult[] = [];\n\n    @property({ type: Number })\n    accessor maxVisibleItems = 4;\n\n    protected override firstUpdated(): void {\n        this._items = getBreadcrumbsWithLinks(this._counter);\n        this.requestUpdate();\n    }\n\n    protected override render(): TemplateResult {\n        return html`\n            <sp-breadcrumbs\n                max-visible-items=${this.maxVisibleItems}\n                @slotchange=${() => {\n                    const breadcrumbs =\n                        this.shadowRoot?.querySelector('sp-breadcrumbs');\n                    if (breadcrumbs) {\n                        breadcrumbs.requestUpdate();\n                    }\n                }}\n            >\n                ${this._items}\n            </sp-breadcrumbs>\n            <sp-button\n                @click=${() => {\n                    this._counter++;\n                    this._items = getBreadcrumbsWithLinks(this._counter);\n                    this.requestUpdate();\n                }}\n                style=\"margin-top: 8px;\"\n                id=\"add-more-items\"\n            >\n                Add more items (current: ${this._counter})\n            </sp-button>\n        `;\n    }\n}\n\ncustomElements.define('add-items-story-breadcrumbs', AddItemsStoryBreadcrumbs);\n\nexport const AddItemsDynamic = (args: StoryArgs): TemplateResult => {\n    return html`\n        <add-items-story-breadcrumbs\n            maxVisibleItems=${ifDefined(args['max-visible-items'])}\n        ></add-items-story-breadcrumbs>\n    `;\n};\n\nAddItemsDynamic.swc_vrt = {\n    skip: true,\n};\n\nexport const ShowRoot = (args: StoryArgs): TemplateResult => {\n    return html`\n        <sp-breadcrumbs\n            ${spreadProps(args)}\n            max-visible-items=${ifDefined(args['max-visible-items'])}\n            @change=${args.onChange}\n        >\n            <sp-breadcrumb-item value=\"Home\" slot=\"root\">\n                Home\n            </sp-breadcrumb-item>\n            ${getBreadcrumbs(6)}\n        </sp-breadcrumbs>\n    `;\n};\n\nexport const resizableBehavior = (args: StoryArgs): TemplateResult => {\n    return html`\n        <div class=\"resizable-container\">\n            ${getResizableStyles()}\n\n            <sp-breadcrumbs\n                ${spreadProps(args)}\n                max-visible-items=${ifDefined(args['max-visible-items'])}\n                @change=${args.onChange}\n            >\n                ${getBreadcrumbs(4)}\n            </sp-breadcrumbs>\n        </div>\n    `;\n};\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;AAAA;AAWA,SAAS,YAA4B;AACrC,OAAO;AACP,SAAS,kBAAkB;AAC3B,SAAS,gBAAgB;AAEzB;AAAA,EACI;AAAA,EACA;AAAA,EACA;AAAA,EAEA;AAAA,OACG;AACP,SAAS,gBAAgB;AACzB,SAAS,iBAAiB;AAC1B,SAAS,mBAAmB;AAC5B,OAAO;AAEP,eAAe;AAAA,EACX,OAAO;AAAA,EACP,WAAW;AAAA,EACX,MAAM;AAAA,IACF,qBAAqB;AAAA,EACzB;AAAA,EACA;AACJ;AAEO,aAAM,UAAU,CAAC,SAAoC,SAAS,IAAI;AAElE,aAAM,WAAW,CAAC,SAAoC,SAAS,IAAI;AAC1E,SAAS,OAAO;AAAA,EACZ,UAAU;AACd;AAEO,aAAM,UAAU,CAAC,SAAoC,SAAS,IAAI;AACzE,QAAQ,OAAO;AAAA,EACX,SAAS;AACb;AAEO,aAAM,QAAQ,CAAC,SAAoC;AACtD,SAAO;AAAA;AAAA,cAEG,YAAY,IAAI,CAAC;AAAA,gCACC,UAAU,KAAK,mBAAmB,CAAC,CAAC;AAAA,sBAC9C,KAAK,QAAQ;AAAA;AAAA,cAErB,wBAAwB,CAAC,CAAC;AAAA;AAAA;AAGxC;AAEA,MAAM,iCAAiC,WAAW;AAAA,EAAlD;AAAA;AACI,SAAQ,WAAW;AACnB,SAAQ,SAA2B,CAAC;AAGpC,uBAAS,kBAAkB;AAAA;AAAA,EAA3B,IAAS;AAAA;AAAA;AAAA,EAAT,IAAS;AAAA;AAAA;AAAA,EAEU,eAAqB;AACpC,SAAK,SAAS,wBAAwB,KAAK,QAAQ;AACnD,SAAK,cAAc;AAAA,EACvB;AAAA,EAEmB,SAAyB;AACxC,WAAO;AAAA;AAAA,oCAEqB,KAAK,eAAe;AAAA,8BAC1B,MAAM;AA7EpC;AA8EoB,YAAM,eACF,UAAK,eAAL,mBAAiB,cAAc;AACnC,UAAI,aAAa;AACb,oBAAY,cAAc;AAAA,MAC9B;AAAA,IACJ,CAAC;AAAA;AAAA,kBAEC,KAAK,MAAM;AAAA;AAAA;AAAA,yBAGJ,MAAM;AACX,WAAK;AACL,WAAK,SAAS,wBAAwB,KAAK,QAAQ;AACnD,WAAK,cAAc;AAAA,IACvB,CAAC;AAAA;AAAA;AAAA;AAAA,2CAI0B,KAAK,QAAQ;AAAA;AAAA;AAAA,EAGpD;AACJ;AAlCa;AAAA;AAAA,EADR,SAAS,EAAE,MAAM,OAAO,CAAC;AAAA,GAJxB,yBAKO;AAoCb,eAAe,OAAO,+BAA+B,wBAAwB;AAEtE,aAAM,kBAAkB,CAAC,SAAoC;AAChE,SAAO;AAAA;AAAA,8BAEmB,UAAU,KAAK,mBAAmB,CAAC,CAAC;AAAA;AAAA;AAGlE;AAEA,gBAAgB,UAAU;AAAA,EACtB,MAAM;AACV;AAEO,aAAM,WAAW,CAAC,SAAoC;AACzD,SAAO;AAAA;AAAA,cAEG,YAAY,IAAI,CAAC;AAAA,gCACC,UAAU,KAAK,mBAAmB,CAAC,CAAC;AAAA,sBAC9C,KAAK,QAAQ;AAAA;AAAA;AAAA;AAAA;AAAA,cAKrB,eAAe,CAAC,CAAC;AAAA;AAAA;AAG/B;AAEO,aAAM,oBAAoB,CAAC,SAAoC;AAClE,SAAO;AAAA;AAAA,cAEG,mBAAmB,CAAC;AAAA;AAAA;AAAA,kBAGhB,YAAY,IAAI,CAAC;AAAA,oCACC,UAAU,KAAK,mBAAmB,CAAC,CAAC;AAAA,0BAC9C,KAAK,QAAQ;AAAA;AAAA,kBAErB,eAAe,CAAC,CAAC;AAAA;AAAA;AAAA;AAInC;",
  "names": []
}
