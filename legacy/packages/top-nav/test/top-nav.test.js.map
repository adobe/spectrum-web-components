{
  "version": 3,
  "sources": ["top-nav.test.ts"],
  "sourcesContent": ["/*\nCopyright 2020 Adobe. All rights reserved.\nThis file is licensed to you under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License. You may obtain a copy\nof the License at http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software distributed under\nthe License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\nOF ANY KIND, either express or implied. See the License for the specific language\ngoverning permissions and limitations under the License.\n*/\n\nimport { elementUpdated, expect, fixture, nextFrame } from '@open-wc/testing';\n\nimport { TopNav, TopNavItem } from '@spectrum-web-components/top-nav';\nimport { Default, Selected } from '../stories/top-nav.stories.js';\nimport { spy } from 'sinon';\nimport { testForLitDevWarnings } from '../../../test/testing-helpers';\nimport { sendMouse } from '../../../test/plugins/browser.js';\n\ndescribe('TopNav', () => {\n    testForLitDevWarnings(async () => await fixture<TopNav>(Default()));\n    it('loads default top-nav accessibly', async () => {\n        const el = await fixture<TopNav>(Default());\n\n        await elementUpdated(el);\n\n        await expect(el).to.be.accessible();\n    });\n    it('accepts and removes `label` accessibly', async () => {\n        const el = await fixture<TopNav>(Default());\n\n        await elementUpdated(el);\n\n        el.label = 'Page';\n        await elementUpdated(el);\n        await expect(el).to.be.accessible();\n\n        el.label = '';\n        await elementUpdated(el);\n        await expect(el).to.be.accessible();\n    });\n    it('loads with a selected item accessible', async () => {\n        const el = await fixture<TopNav>(Selected());\n\n        await elementUpdated(el);\n\n        await expect(el).to.be.accessible();\n    });\n    it('updates indicator size when Nav Item content changes', async () => {\n        const el = await fixture<TopNav>(Selected());\n\n        await elementUpdated(el);\n\n        const items = [...el.querySelectorAll('sp-top-nav-item')];\n        await Promise.all(items.map((item) => elementUpdated(item)));\n\n        const indicator = el.shadowRoot.querySelector(\n            '#selection-indicator'\n        ) as HTMLDivElement;\n        const { width: widthStart } = indicator.getBoundingClientRect();\n\n        const selectedItem = el.querySelector(\n            `[href=\"${el.selected}\"]`\n        ) as TopNavItem;\n        selectedItem.innerHTML = '0';\n\n        // Wait for slotchange time before continuing the test.\n        await nextFrame();\n        await nextFrame();\n\n        const { width: widthEnd } = indicator.getBoundingClientRect();\n\n        expect(\n            widthStart,\n            `${widthStart} is not greater than ${widthEnd}`\n        ).to.be.greaterThan(widthEnd);\n    });\n    it('can have an item removed', async () => {\n        const el = await fixture<TopNav>(Selected());\n        const item = el.querySelector('.selected') as TopNavItem;\n\n        await elementUpdated(el);\n        await elementUpdated(item);\n\n        expect(el.selected).to.equal(item.value);\n\n        item.remove();\n        await elementUpdated(el);\n\n        expect(el.selected).to.not.equal(item.value);\n    });\n});\n\ndescribe('TopNavItem', () => {\n    it('passes click to `<a>`', async () => {\n        const clickSpy = spy();\n        const test = await fixture<TopNav>(Selected());\n        const el = test.querySelector(\n            'sp-top-nav-item:nth-of-type(4)'\n        ) as TopNavItem;\n        const anchor = el.focusElement;\n        test.addEventListener('click', (event: Event) => {\n            event.preventDefault();\n            const target = event.composedPath()[0];\n            clickSpy(target);\n        });\n        await elementUpdated(el);\n\n        el.click();\n\n        expect(clickSpy.called).to.be.true;\n        expect(clickSpy.calledWith(anchor)).to.be.true;\n    });\n    it('`<a>` accepts click across full item area', async () => {\n        const clickSpy = spy();\n        const test = await fixture<TopNav>(Selected());\n        const el = test.querySelector(\n            'sp-top-nav-item:nth-of-type(4)'\n        ) as TopNavItem;\n        const anchor = el.focusElement;\n        test.addEventListener('click', (event: Event) => {\n            event.preventDefault();\n            const target = event.composedPath()[0];\n            clickSpy(target);\n        });\n        await elementUpdated(el);\n        const rect = el.getBoundingClientRect();\n\n        await sendMouse({\n            steps: [\n                {\n                    type: 'click',\n                    position: [rect.left + rect.width / 2, rect.top + 1],\n                },\n            ],\n        });\n        await elementUpdated(test);\n\n        expect(clickSpy.called).to.be.true;\n        expect(clickSpy.calledWith(anchor)).to.be.true;\n    });\n});\n"],
  "mappings": "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",
  "names": []
}
