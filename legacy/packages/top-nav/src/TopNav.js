"use strict";var u=Object.defineProperty;var h=Object.getOwnPropertyDescriptor;var s=(n,l,e,t)=>{for(var i=t>1?void 0:t?h(l,e):l,r=n.length-1,a;r>=0;r--)(a=n[r])&&(i=(t?a(l,e,i):a(i))||i);return t&&i&&u(l,e,i),i};import{html as p,SizedMixin as m,SpectrumElement as f}from"@spectrum-web-components/base";import{property as o,query as v}from"@spectrum-web-components/base/src/decorators.js";import{ifDefined as b}from"@spectrum-web-components/base/src/directives.js";import{ResizeController as S}from"@lit-labs/observers/resize-controller.js";import g from"@spectrum-web-components/tabs/src/tabs-sizes.css.js";import I from"@spectrum-web-components/tabs/src/tabs.css.js";import{ScaledIndicator as d}from"@spectrum-web-components/tabs/src/Tabs.js";const c="transform: translateX(0px) scaleX(0) scaleY(0)";export class TopNav extends m(f){constructor(){super(...arguments);this.label="";this.ignoreURLParts="";this.selectionIndicatorStyle=c;this.shouldAnimate=!1;this.quiet=!1;this.onClick=e=>{const t=e.target;this.shouldAnimate=!0,this.selectTarget(t)};this._items=[];this.resizeController=new S(this,{callback:()=>{this.updateSelectionIndicator()}});this.updateSelectionIndicator=async()=>{const e=this.items.find(i=>i.value===this.selected||i.value===window.location.href);if(!e){this.selectionIndicatorStyle=c;return}await Promise.all([e.updateComplete,document.fonts?document.fonts.ready:Promise.resolve()]);const{width:t}=e.getBoundingClientRect();this.selectionIndicatorStyle=d.transformX(e.offsetLeft,t)}}static get styles(){return[g,I,d.baseStyles()]}set selected(e){const t=this.selected;e!==t&&(this.updateCheckedState(e),this._selected=e,this.requestUpdate("selected",t))}get selected(){return this._selected}get items(){return this._items}set items(e){e!==this.items&&(this._items.forEach(t=>{this.resizeController.unobserve(t)}),e.forEach(t=>{this.resizeController.observe(t)}),this._items=e)}manageItems(){this.items=this.slotEl.assignedElements({flatten:!0}).filter(r=>r.localName==="sp-top-nav-item");let{href:e}=window.location;const t=this.ignoreURLParts.split(" ");t.includes("hash")&&(e=e.replace(window.location.hash,"")),t.includes("search")&&(e=e.replace(window.location.search,""));const i=this.items.find(r=>r.value===e);i?this.selectTarget(i):this.selected=""}render(){return p`
            <div @click=${this.onClick} id="list">
                <slot @slotchange=${this.onSlotChange}></slot>
                <div
                    id="selection-indicator"
                    class=${b(this.shouldAnimate?void 0:"first-position")}
                    style=${this.selectionIndicatorStyle}
                ></div>
            </div>
        `}firstUpdated(e){super.firstUpdated(e),this.setAttribute("direction","horizontal"),this.setAttribute("role","navigation")}updated(e){super.updated(e),e.has("dir")&&this.updateSelectionIndicator(),!this.shouldAnimate&&typeof e.get("shouldAnimate")!="undefined"&&(this.shouldAnimate=!0),e.has("label")&&(this.label||typeof e.get("label")!="undefined")&&(this.label.length?this.setAttribute("aria-label",this.label):this.removeAttribute("aria-label"))}selectTarget(e){const{value:t}=e;t&&(this.selected=t)}onSlotChange(){this.manageItems()}updateCheckedState(e){this.items.forEach(t=>{t.selected=!1}),requestAnimationFrame(()=>{if(e&&e.length){const t=this.items.find(i=>i.value===e||i.value===window.location.href);t?t.selected=!0:this.selected=""}this.updateSelectionIndicator()})}connectedCallback(){super.connectedCallback(),window.addEventListener("resize",this.updateSelectionIndicator),"fonts"in document&&document.fonts.addEventListener("loadingdone",this.updateSelectionIndicator)}disconnectedCallback(){window.removeEventListener("resize",this.updateSelectionIndicator),"fonts"in document&&document.fonts.removeEventListener("loadingdone",this.updateSelectionIndicator),super.disconnectedCallback()}}s([o({reflect:!0})],TopNav.prototype,"dir",2),s([o({type:String})],TopNav.prototype,"label",2),s([o({attribute:"ignore-url-parts"})],TopNav.prototype,"ignoreURLParts",2),s([o()],TopNav.prototype,"selectionIndicatorStyle",2),s([o({attribute:!1})],TopNav.prototype,"shouldAnimate",2),s([o({type:Boolean,reflect:!0})],TopNav.prototype,"quiet",2),s([o({reflect:!0})],TopNav.prototype,"selected",1),s([v("slot")],TopNav.prototype,"slotEl",2);
//# sourceMappingURL=TopNav.js.map
