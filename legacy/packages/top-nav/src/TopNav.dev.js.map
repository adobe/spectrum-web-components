{
  "version": 3,
  "sources": ["TopNav.ts"],
  "sourcesContent": ["/* eslint-disable lit-a11y/click-events-have-key-events */\n/*\nCopyright 2020 Adobe. All rights reserved.\nThis file is licensed to you under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License. You may obtain a copy\nof the License at http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software distributed under\nthe License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\nOF ANY KIND, either express or implied. See the License for the specific language\ngoverning permissions and limitations under the License.\n*/\n\nimport {\n    CSSResultArray,\n    html,\n    PropertyValues,\n    SizedMixin,\n    SpectrumElement,\n    TemplateResult,\n} from '@spectrum-web-components/base';\nimport {\n    property,\n    query,\n} from '@spectrum-web-components/base/src/decorators.js';\nimport { ifDefined } from '@spectrum-web-components/base/src/directives.js';\nimport { ResizeController } from '@lit-labs/observers/resize-controller.js';\nimport { TopNavItem } from './TopNavItem.dev.js'\n\nimport tabsSizes from '@spectrum-web-components/tabs/src/tabs-sizes.css.js';\nimport tabStyles from '@spectrum-web-components/tabs/src/tabs.css.js';\nimport { ScaledIndicator } from '@spectrum-web-components/tabs/src/Tabs.js';\n\nconst noSelectionStyle = 'transform: translateX(0px) scaleX(0) scaleY(0)';\n\n/**\n * @element sp-top-nav\n *\n * @slot - Nav Items to display as a group\n * @attr {Boolean} compact - The collection of tabs take up less space\n */\n\nexport class TopNav extends SizedMixin(SpectrumElement) {\n    public static override get styles(): CSSResultArray {\n        return [tabsSizes, tabStyles, ScaledIndicator.baseStyles()];\n    }\n\n    @property({ reflect: true })\n    public override dir!: 'ltr' | 'rtl';\n\n    @property({ type: String })\n    public label = '';\n\n    /**\n     * A space separated list of part of the URL to ignore when matching\n     * for the \"selected\" Top Nav Item. Currently supported values are\n     * `hash` and `search`, which will remove the `#hash` and\n     * `?search=value` respectively.\n     */\n    @property({ attribute: 'ignore-url-parts' })\n    public ignoreURLParts = '';\n\n    @property()\n    public selectionIndicatorStyle = noSelectionStyle;\n\n    @property({ attribute: false })\n    public shouldAnimate = false;\n\n    /**\n     * The Top Nav is displayed without a border.\n     */\n    @property({ type: Boolean, reflect: true })\n    public quiet = false;\n\n    private onClick = (event: Event): void => {\n        const target = event.target as TopNavItem;\n        this.shouldAnimate = true;\n        this.selectTarget(target);\n    };\n\n    @property({ reflect: true })\n    public set selected(value: string | undefined) {\n        const oldValue = this.selected;\n\n        if (value === oldValue) {\n            return;\n        }\n        this.updateCheckedState(value);\n\n        this._selected = value;\n        this.requestUpdate('selected', oldValue);\n    }\n\n    public get selected(): string | undefined {\n        return this._selected;\n    }\n\n    private _selected!: string | undefined;\n\n    @query('slot')\n    private slotEl!: HTMLSlotElement;\n\n    protected get items(): TopNavItem[] {\n        return this._items;\n    }\n\n    protected set items(items: TopNavItem[]) {\n        if (items === this.items) return;\n        this._items.forEach((item) => {\n            this.resizeController.unobserve(item);\n        });\n        items.forEach((item) => {\n            this.resizeController.observe(item);\n        });\n        this._items = items;\n    }\n\n    private _items: TopNavItem[] = [];\n\n    protected resizeController = new ResizeController(this, {\n        callback: () => {\n            this.updateSelectionIndicator();\n        },\n    });\n\n    private manageItems(): void {\n        this.items = this.slotEl\n            .assignedElements({ flatten: true })\n            .filter((el) => el.localName === 'sp-top-nav-item') as TopNavItem[];\n        let { href } = window.location;\n        const ignoredURLParts = this.ignoreURLParts.split(' ');\n        if (ignoredURLParts.includes('hash')) {\n            href = href.replace(window.location.hash, '');\n        }\n        if (ignoredURLParts.includes('search')) {\n            href = href.replace(window.location.search, '');\n        }\n        const selectedChild = this.items.find((item) => item.value === href);\n        if (selectedChild) {\n            this.selectTarget(selectedChild);\n        } else {\n            this.selected = '';\n        }\n    }\n\n    protected override render(): TemplateResult {\n        return html`\n            <div @click=${this.onClick} id=\"list\">\n                <slot @slotchange=${this.onSlotChange}></slot>\n                <div\n                    id=\"selection-indicator\"\n                    class=${ifDefined(\n                        this.shouldAnimate ? undefined : 'first-position'\n                    )}\n                    style=${this.selectionIndicatorStyle}\n                ></div>\n            </div>\n        `;\n    }\n\n    protected override firstUpdated(changes: PropertyValues): void {\n        super.firstUpdated(changes);\n        this.setAttribute('direction', 'horizontal');\n        this.setAttribute('role', 'navigation');\n    }\n\n    protected override updated(changes: PropertyValues): void {\n        super.updated(changes);\n        if (changes.has('dir')) {\n            this.updateSelectionIndicator();\n        }\n        if (\n            !this.shouldAnimate &&\n            typeof changes.get('shouldAnimate') !== 'undefined'\n        ) {\n            this.shouldAnimate = true;\n        }\n        if (\n            changes.has('label') &&\n            (this.label || typeof changes.get('label') !== 'undefined')\n        ) {\n            if (this.label.length) {\n                this.setAttribute('aria-label', this.label);\n            } else {\n                this.removeAttribute('aria-label');\n            }\n        }\n    }\n\n    private selectTarget(target: TopNavItem): void {\n        const { value } = target;\n        if (value) {\n            this.selected = value;\n        }\n    }\n\n    protected onSlotChange(): void {\n        this.manageItems();\n    }\n\n    protected updateCheckedState(value: string | undefined): void {\n        this.items.forEach((item) => {\n            item.selected = false;\n        });\n\n        requestAnimationFrame(() => {\n            if (value && value.length) {\n                const currentItem = this.items.find(\n                    (item) =>\n                        item.value === value ||\n                        item.value === window.location.href\n                );\n\n                if (currentItem) {\n                    currentItem.selected = true;\n                } else {\n                    this.selected = '';\n                }\n            }\n\n            this.updateSelectionIndicator();\n        });\n    }\n\n    private updateSelectionIndicator = async (): Promise<void> => {\n        const selectedItem = this.items.find(\n            (item) =>\n                item.value === this.selected ||\n                item.value === window.location.href\n        );\n        if (!selectedItem) {\n            this.selectionIndicatorStyle = noSelectionStyle;\n            return;\n        }\n        await Promise.all([\n            selectedItem.updateComplete,\n            document.fonts ? document.fonts.ready : Promise.resolve(),\n        ]);\n        const { width } = selectedItem.getBoundingClientRect();\n        this.selectionIndicatorStyle = ScaledIndicator.transformX(\n            selectedItem.offsetLeft,\n            width\n        );\n    };\n\n    public override connectedCallback(): void {\n        super.connectedCallback();\n        window.addEventListener('resize', this.updateSelectionIndicator);\n        if ('fonts' in document) {\n            document.fonts.addEventListener(\n                'loadingdone',\n                this.updateSelectionIndicator\n            );\n        }\n    }\n\n    public override disconnectedCallback(): void {\n        window.removeEventListener('resize', this.updateSelectionIndicator);\n        if ('fonts' in document) {\n            (\n                document as unknown as {\n                    fonts: {\n                        removeEventListener: (\n                            name: string,\n                            callback: () => void\n                        ) => void;\n                    };\n                }\n            ).fonts.removeEventListener(\n                'loadingdone',\n                this.updateSelectionIndicator\n            );\n        }\n        super.disconnectedCallback();\n    }\n}\n"],
  "mappings": "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",
  "names": []
}
