{
  "version": 3,
  "sources": ["action-button.test.ts"],
  "sourcesContent": ["/*\nCopyright 2020 Adobe. All rights reserved.\nThis file is licensed to you under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License. You may obtain a copy\nof the License at http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software distributed under\nthe License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\nOF ANY KIND, either express or implied. See the License for the specific language\ngoverning permissions and limitations under the License.\n*/\n\nimport '@spectrum-web-components/action-button/sp-action-button.js';\nimport {\n    ActionButton,\n    LONGPRESS_DURATION,\n} from '@spectrum-web-components/action-button';\nimport {\n    aTimeout,\n    elementUpdated,\n    expect,\n    fixture,\n    html,\n    waitUntil,\n} from '@open-wc/testing';\nimport { sendKeys } from '@web/test-runner-commands';\nimport { spy } from 'sinon';\nimport { testForLitDevWarnings } from '../../../test/testing-helpers.js';\nimport { m as BlackActionButton } from '../stories/action-button-black.stories.js';\nimport { sendMouse } from '../../../test/plugins/browser.js';\n\ndescribe('ActionButton', () => {\n    testForLitDevWarnings(\n        async () =>\n            await fixture<ActionButton>(\n                BlackActionButton(BlackActionButton.args)\n            )\n    );\n    it('loads default', async () => {\n        const el = await fixture<ActionButton>(html`\n            <sp-action-button>Button</sp-action-button>\n        `);\n\n        await elementUpdated(el);\n        expect(el).to.not.be.undefined;\n        expect(el.textContent).to.include('Button');\n        await expect(el).to.be.accessible();\n    });\n    it('gardens \"value\" as a property', async () => {\n        const el = await fixture<ActionButton>(html`\n            <sp-action-button>Button</sp-action-button>\n        `);\n\n        await elementUpdated(el);\n        expect(el.hasAttribute('value')).to.be.false;\n        el.value = 'Value';\n        await elementUpdated(el);\n        expect(el.hasAttribute('value')).to.be.true;\n        el.value = '';\n        await elementUpdated(el);\n        expect(el.hasAttribute('value')).to.be.false;\n    });\n    it('loads [hold-affordance]', async () => {\n        const el = await fixture<ActionButton>(html`\n            <sp-action-button hold-affordance>Button</sp-action-button>\n        `);\n\n        await elementUpdated(el);\n        expect(el).to.not.be.undefined;\n        expect(el.textContent).to.include('Button');\n        await expect(el).to.be.accessible();\n    });\n    it('manages a `tabindex`', async () => {\n        const el = await fixture<ActionButton>(html`\n            <sp-action-button>Button</sp-action-button>\n        `);\n\n        expect(el.tabIndex).to.equal(0);\n        expect(el.disabled).to.be.false;\n\n        el.setAttribute('tabindex', '-1');\n        await elementUpdated(el);\n\n        expect(el.tabIndex).to.equal(-1);\n        expect(el.disabled).to.be.false;\n\n        el.disabled = true;\n        await elementUpdated(el);\n\n        expect(el.tabIndex).to.equal(-1);\n        expect(el.disabled).to.be.true;\n\n        el.disabled = false;\n        await elementUpdated(el);\n\n        expect(el.tabIndex).to.equal(-1);\n        expect(el.disabled).to.be.false;\n    });\n    it('manages a `size` attribute', async () => {\n        const el = await fixture<ActionButton>(html`\n            <sp-action-button size=\"xl\">Button</sp-action-button>\n        `);\n\n        await elementUpdated(el);\n        expect(el.size).to.equal('xl');\n        expect(el.getAttribute('size')).to.equal('xl');\n        el.removeAttribute('size');\n        await elementUpdated(el);\n        expect(el.size).to.equal('m');\n        expect(el.hasAttribute('size')).to.be.false;\n    });\n    it('does not apply a default `size` attribute', async () => {\n        const el = await fixture<ActionButton>(html`\n            <sp-action-button>Button</sp-action-button>\n        `);\n\n        await elementUpdated(el);\n        expect(el.size).to.equal('m');\n        expect(el.hasAttribute('size')).to.be.false;\n    });\n    it('dispatches `longpress` events when [hold-affordance]', async () => {\n        const longpressSpy = spy();\n        const el = await fixture<ActionButton>(html`\n            <sp-action-button\n                hold-affordance\n                @longpress=${() => longpressSpy()}\n            >\n                Button\n            </sp-action-button>\n        `);\n\n        await elementUpdated(el);\n\n        el.focus();\n        await sendKeys({\n            press: 'Space',\n        });\n\n        expect(longpressSpy.callCount).to.equal(1);\n        await sendKeys({\n            press: 'Alt+ArrowDown',\n        });\n\n        expect(longpressSpy.callCount).to.equal(2);\n        el.dispatchEvent(new PointerEvent('pointerdown', { button: 0 }));\n        el.dispatchEvent(new PointerEvent('pointerup'));\n        el.dispatchEvent(new PointerEvent('pointerdown', { button: 0 }));\n        await waitUntil(() => longpressSpy.callCount === 3);\n    });\n    it('does not dispatch `longpress` events when \"right click\"ed', async () => {\n        const longpressSpy = spy();\n        const el = await fixture<ActionButton>(html`\n            <sp-action-button\n                hold-affordance\n                @longpress=${() => longpressSpy()}\n            >\n                Button\n            </sp-action-button>\n        `);\n\n        await elementUpdated(el);\n        expect(longpressSpy.callCount).to.equal(0);\n\n        el.focus();\n        el.dispatchEvent(new PointerEvent('pointerdown', { button: 1 }));\n        await aTimeout(2 * LONGPRESS_DURATION);\n        expect(longpressSpy.callCount).to.equal(0);\n    });\n    it(':not([toggles])', async () => {\n        const el = await fixture<ActionButton>(html`\n            <sp-action-button>Button</sp-action-button>\n        `);\n\n        await elementUpdated(el);\n        const button = el.focusElement;\n\n        expect(el.toggles).to.be.false;\n        expect(el.selected).to.be.false;\n        expect(button.hasAttribute('aria-pressed')).to.be.false;\n\n        el.click();\n        await elementUpdated(el);\n\n        expect(el.toggles).to.be.false;\n        expect(el.selected).to.be.false;\n        expect(button.hasAttribute('aria-pressed')).to.be.false;\n    });\n    it('responds to [selected]', async () => {\n        const el = await fixture<ActionButton>(html`\n            <sp-action-button>Button</sp-action-button>\n        `);\n\n        await elementUpdated(el);\n        const button = el.focusElement;\n\n        expect(el.toggles).to.be.false;\n        expect(el.selected).to.be.false;\n        expect(button.hasAttribute('aria-pressed')).to.be.false;\n\n        el.selected = true;\n        await elementUpdated(el);\n\n        expect(el.toggles).to.be.false;\n        expect(el.selected).to.be.true;\n        expect(button.getAttribute('aria-pressed')).to.equal('true');\n\n        el.selected = false;\n        await elementUpdated(el);\n\n        expect(el.toggles).to.be.false;\n        expect(el.selected).to.be.false;\n        expect(button.hasAttribute('aria-pressed')).to.be.false;\n    });\n    it('toggles', async () => {\n        const el = await fixture<ActionButton>(html`\n            <sp-action-button toggles>Button</sp-action-button>\n        `);\n\n        await elementUpdated(el);\n        const button = el.focusElement;\n\n        expect(el.toggles).to.be.true;\n        expect(el.selected).to.be.false;\n        expect(button.getAttribute('aria-pressed')).to.equal('false');\n\n        el.focus();\n        await sendKeys({\n            press: 'Space',\n        });\n        await elementUpdated(el);\n\n        expect(el.toggles).to.be.true;\n        expect(el.selected).to.be.true;\n        expect(button.getAttribute('aria-pressed')).to.equal('true');\n\n        el.addEventListener('change', (event: Event) => event.preventDefault());\n        el.click();\n        await elementUpdated(el);\n\n        expect(el.toggles).to.be.true;\n        expect(el.selected).to.be.true;\n        expect(button.getAttribute('aria-pressed')).to.equal('true');\n    });\n    it('toggles [aria-haspopup][aria-expanded]', async () => {\n        const el = await fixture<ActionButton>(html`\n            <sp-action-button\n                toggles\n                aria-haspopup=\"true\"\n                aria-expanded=\"false\"\n            >\n                Button\n            </sp-action-button>\n        `);\n\n        await elementUpdated(el);\n        const button = el.focusElement;\n\n        expect(el.toggles).to.be.true;\n        expect(el.selected).to.be.false;\n        expect(button).not.to.have.attribute('aria-pressed');\n        expect(button).to.have.attribute('aria-haspopup', 'true');\n        expect(button).to.have.attribute('aria-expanded', 'false');\n\n        el.focus();\n        await sendKeys({\n            press: 'Space',\n        });\n        await elementUpdated(el);\n\n        expect(el.toggles).to.be.true;\n        expect(el.selected).to.be.true;\n        expect(button).not.to.have.attribute('aria-pressed');\n        expect(button).to.have.attribute('aria-haspopup', 'true');\n        expect(button).to.have.attribute('aria-expanded', 'true');\n\n        el.addEventListener('change', (event: Event) => event.preventDefault());\n        el.click();\n        await elementUpdated(el);\n\n        expect(el.toggles).to.be.true;\n        expect(el.selected).to.be.true;\n        expect(button).not.to.have.attribute('aria-pressed');\n        expect(button).to.have.attribute('aria-haspopup', 'true');\n        expect(button).to.have.attribute('aria-expanded', 'true');\n    });\n    it('manages a `static-color` attribute', async () => {\n        const el = await fixture<ActionButton>(html`\n            <sp-action-button static-color=\"black\">Button</sp-action-button>\n        `);\n\n        await elementUpdated(el);\n        expect(el.staticColor).to.equal('black');\n        expect(el.getAttribute('static-color')).to.equal('black');\n        el.removeAttribute('static-color');\n        await elementUpdated(el);\n        expect(el.staticColor).to.be.null;\n        expect(el.hasAttribute('static-color')).to.be.false;\n    });\n    it('allows link click', async () => {\n        let clicked = false;\n        const el = await fixture<ActionButton>(html`\n            <sp-action-button href=\"#top\" target=\"_blank\">\n                With Target\n            </sp-action-button>\n        `);\n\n        await elementUpdated(el);\n\n        // prevents browser from activating link but records the proxy click\n        el.shadowRoot\n            ?.querySelector('.anchor')\n            ?.addEventListener('click', (event: Event) => {\n                event.preventDefault();\n                clicked = true;\n            });\n        const rect = el.getBoundingClientRect();\n\n        // tests mouse click events, and by extension VoiceOver CRTL+Option+Space click\n        await sendMouse({\n            steps: [\n                {\n                    position: [\n                        rect.left + rect.width / 2,\n                        rect.top + rect.height / 2,\n                    ],\n                    type: 'click',\n                },\n            ],\n        });\n        await elementUpdated(el);\n        expect(clicked).to.be.true;\n    });\n});\n"],
  "mappings": "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",
  "names": []
}
