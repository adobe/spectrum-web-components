{
  "version": 3,
  "sources": ["tabs.stories.ts"],
  "sourcesContent": ["/*\nCopyright 2020 Adobe. All rights reserved.\nThis file is licensed to you under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License. You may obtain a copy\nof the License at http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software distributed under\nthe License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\nOF ANY KIND, either express or implied. See the License for the specific language\ngoverning permissions and limitations under the License.\n*/\nimport '@spectrum-web-components/icon/sp-icon.js';\nimport '@spectrum-web-components/icons-workflow/icons/sp-icon-checkmark.js';\nimport '@spectrum-web-components/icons-workflow/icons/sp-icon-close.js';\nimport '@spectrum-web-components/icons-workflow/icons/sp-icon-chevron-down.js';\nimport '@spectrum-web-components/icons-workflow/icons/sp-icon-help.js';\nimport '@spectrum-web-components/tabs/sp-tabs.js';\nimport '@spectrum-web-components/tabs/sp-tab.js';\nimport '@spectrum-web-components/tabs/sp-tab-panel.js';\nimport { html, TemplateResult } from '@spectrum-web-components/base';\n\nexport default {\n    component: 'sp-tabs',\n    title: 'Tabs',\n    argTypes: {\n        direction: {\n            name: 'direction',\n            type: { name: 'string', required: false },\n            description: 'The direction of the Tabs element',\n            table: {\n                type: {\n                    summary: '\"vertical\" | \"vertical-right\" | \"horizontal\"',\n                },\n                defaultValue: { summary: 'horizontal' },\n            },\n            control: {\n                type: 'text',\n            },\n        },\n        verticalTab: { control: 'boolean' },\n        auto: { control: 'boolean' },\n    },\n    args: {\n        direction: 'horizontal',\n        type: false,\n        verticalTab: false,\n        auto: false,\n    },\n};\n\ninterface Properties {\n    direction: 'vertical' | 'vertical-right' | 'horizontal';\n    verticalTabs?: boolean;\n    verticalTab?: boolean;\n    auto?: boolean;\n}\n\nconst panels = (): TemplateResult => html`\n    <sp-tab-panel value=\"1\">Content for \"Really Long Name\"</sp-tab-panel>\n    <sp-tab-panel value=\"2\">Content for tab 2</sp-tab-panel>\n    <sp-tab-panel value=\"3\">Content for tab 3</sp-tab-panel>\n    <sp-tab-panel value=\"4\">Content for tab 4</sp-tab-panel>\n`;\n\nexport const Default = (args: Properties): TemplateResult => {\n    return html`\n        <style>\n            sp-tabs {\n                display: grid;\n                grid-template-columns: 100%;\n            }\n            sp-tab-panel {\n                grid-area: 2/1/2/1;\n                transition: opacity var(--spectrum-animation-duration-300)\n                        ease-in-out,\n                    transform var(--spectrum-animation-duration-300) ease-in-out;\n            }\n            sp-tab-panel:not([selected]) {\n                display: unset;\n                opacity: 0;\n                height: 0;\n                pointer-events: none;\n                transform: translateY(calc(var(--swc-scale-factor) * 6px));\n                transition: opacity var(--spectrum-animation-duration-300)\n                        ease-in-out,\n                    transform var(--spectrum-animation-duration-300) ease-in-out,\n                    height 0s ease var(--spectrum-animation-duration-300);\n            }\n        </style>\n        <sp-tabs\n            selected=\"1\"\n            ?auto=${args.auto}\n            label=\"Demo Tabs\"\n            direction=${args.direction}\n        >\n            <sp-tab value=\"2\">Tab 2</sp-tab>\n            <sp-tab value=\"3\">Tab 3</sp-tab>\n            <sp-tab value=\"4\">Tab 4</sp-tab>\n            <sp-tab value=\"1\" selected>Really Long Name</sp-tab>\n            ${panels()}\n        </sp-tabs>\n    `;\n};\n\nexport const Autofocus = (args: Properties): TemplateResult => {\n    return html`\n        <sp-tabs\n            selected=\"1\"\n            autofocus\n            ?auto=${args.auto}\n            label=\"Demo Tabs\"\n            direction=${args.direction}\n        >\n            <sp-tab label=\"Tab 1\" value=\"1\"></sp-tab>\n            <sp-tab label=\"Tab 2\" value=\"2\"></sp-tab>\n            <sp-tab label=\"Tab 3\" value=\"3\"></sp-tab>\n            <sp-tab label=\"Tab 4\" value=\"4\"></sp-tab>\n            ${panels()}\n        </sp-tabs>\n    `;\n};\n\nexport const disabledTabs = (args: Properties): TemplateResult => {\n    return html`\n        <sp-tabs\n            selected=\"1\"\n            disabled\n            ?auto=${args.auto}\n            label=\"Disabled Tabs\"\n            direction=${args.direction}\n        >\n            <sp-tab label=\"Tab 1\" value=\"1\"></sp-tab>\n            <sp-tab label=\"Tab 2\" value=\"2\"></sp-tab>\n            <sp-tab label=\"Tab 3\" value=\"3\"></sp-tab>\n            <sp-tab label=\"Tab 4\" value=\"4\"></sp-tab>\n            ${panels()}\n        </sp-tabs>\n    `;\n};\n\nexport const disabledTab = (args: Properties): TemplateResult => {\n    return html`\n        <sp-tabs\n            selected=\"1\"\n            ?auto=${args.auto}\n            label=\"Disabled Tab\"\n            direction=${args.direction}\n        >\n            <sp-tab label=\"Tab 1\" value=\"1\"></sp-tab>\n            <sp-tab label=\"Tab 2\" value=\"2\" disabled></sp-tab>\n            <sp-tab label=\"Tab 3\" value=\"3\" disabled></sp-tab>\n            <sp-tab label=\"Tab 4\" value=\"4\"></sp-tab>\n            ${panels()}\n        </sp-tabs>\n    `;\n};\n\nexport const emphasized = (args: Properties): TemplateResult => {\n    return html`\n        <sp-tabs selected=\"1\" emphasized ?auto=${args.auto} label=\"Demo Tabs\">\n            <sp-tab label=\"Tab 1\" value=\"1\"></sp-tab>\n            <sp-tab label=\"Tab 2\" value=\"2\"></sp-tab>\n            <sp-tab label=\"Tab 3\" value=\"3\"></sp-tab>\n            <sp-tab label=\"Tab 4\" value=\"4\"></sp-tab>\n            ${panels()}\n        </sp-tabs>\n    `;\n};\n\nexport const emphasizedQuiet = (args: Properties): TemplateResult => {\n    return html`\n        <style>\n            sp-tabs {\n                display: grid;\n                grid-template-columns: 100%;\n            }\n        </style>\n        <sp-tabs\n            selected=\"1\"\n            emphasized\n            quiet\n            ?auto=${args.auto}\n            label=\"Demo Tabs\"\n        >\n            <sp-tab label=\"Tab 1\" value=\"1\"></sp-tab>\n            <sp-tab label=\"Tab 2\" value=\"2\"></sp-tab>\n            <sp-tab label=\"Tab 3\" value=\"3\"></sp-tab>\n            <sp-tab label=\"Tab 4\" value=\"4\"></sp-tab>\n            ${panels()}\n        </sp-tabs>\n    `;\n};\n\nexport const Vertical = (args: Properties): TemplateResult => {\n    return html`\n        <sp-tabs\n            selected=\"1\"\n            direction=${args.direction}\n            ?auto=${args.auto}\n            label=\"Demo Tabs\"\n        >\n            <sp-tab label=\"Tab 1\" value=\"1\"></sp-tab>\n            <sp-tab label=\"Tab 2\" value=\"2\"></sp-tab>\n            <sp-tab label=\"Tab 3\" value=\"3\"></sp-tab>\n            <sp-tab label=\"Tab 4\" value=\"4\"></sp-tab>\n            ${panels()}\n        </sp-tabs>\n    `;\n};\nVertical.args = {\n    direction: 'vertical',\n};\n\nexport const verticalQuiet = (args: Properties): TemplateResult => {\n    return html`\n        <sp-tabs\n            selected=\"1\"\n            direction=${args.direction}\n            ?auto=${args.auto}\n            label=\"Demo Tabs\"\n            quiet\n        >\n            <sp-tab label=\"Tab 1\" value=\"1\"></sp-tab>\n            <sp-tab label=\"Tab 2\" value=\"2\"></sp-tab>\n            <sp-tab label=\"Tab 3\" value=\"3\"></sp-tab>\n            <sp-tab label=\"Tab 4\" value=\"4\"></sp-tab>\n            ${panels()}\n        </sp-tabs>\n    `;\n};\nverticalQuiet.args = {\n    direction: 'vertical',\n};\n\nexport const verticalEmphasizedQuiet = (args: Properties): TemplateResult => {\n    return html`\n        <sp-tabs\n            selected=\"1\"\n            direction=${args.direction}\n            ?auto=${args.auto}\n            label=\"Demo Tabs\"\n            quiet\n            emphasized\n        >\n            <sp-tab label=\"Tab 1\" value=\"1\"></sp-tab>\n            <sp-tab label=\"Tab 2\" value=\"2\"></sp-tab>\n            <sp-tab label=\"Tab 3\" value=\"3\"></sp-tab>\n            <sp-tab label=\"Tab 4\" value=\"4\"></sp-tab>\n            ${panels()}\n        </sp-tabs>\n    `;\n};\nverticalEmphasizedQuiet.args = {\n    direction: 'vertical',\n};\n\nexport const verticalCompact = (args: Properties): TemplateResult => {\n    return html`\n        <sp-tabs\n            selected=\"1\"\n            direction=${args.direction}\n            ?auto=${args.auto}\n            label=\"Demo Tabs\"\n            compact\n        >\n            <sp-tab label=\"Tab 1\" value=\"1\"></sp-tab>\n            <sp-tab label=\"Tab 2\" value=\"2\"></sp-tab>\n            <sp-tab label=\"Tab 3\" value=\"3\"></sp-tab>\n            <sp-tab label=\"Tab 4\" value=\"4\"></sp-tab>\n            ${panels()}\n        </sp-tabs>\n    `;\n};\nverticalCompact.args = {\n    direction: 'vertical',\n};\n\nexport const verticalQuietCompact = (args: Properties): TemplateResult => {\n    return html`\n        <sp-tabs\n            selected=\"1\"\n            direction=${args.direction}\n            ?auto=${args.auto}\n            label=\"Demo Tabs\"\n            quiet\n            compact\n        >\n            <sp-tab label=\"Tab 1\" value=\"1\"></sp-tab>\n            <sp-tab label=\"Tab 2\" value=\"2\"></sp-tab>\n            <sp-tab label=\"Tab 3\" value=\"3\"></sp-tab>\n            <sp-tab label=\"Tab 4\" value=\"4\"></sp-tab>\n            ${panels()}\n        </sp-tabs>\n    `;\n};\nverticalQuietCompact.args = {\n    direction: 'vertical',\n};\n\nexport const VerticalSized = (args: Properties): TemplateResult => {\n    return html`\n        <style>\n            sp-tabs {\n                display: grid;\n                height: 75vh;\n                --swc-tabs-list-justify-content: center;\n            }\n        </style>\n        <sp-tabs\n            selected=\"1\"\n            direction=${args.direction}\n            ?auto=${args.auto}\n            label=\"Demo Tabs\"\n        >\n            <sp-tab label=\"Tab 1\" value=\"1\"></sp-tab>\n            <sp-tab label=\"Tab 2\" value=\"2\"></sp-tab>\n            <sp-tab label=\"Tab 3\" value=\"3\"></sp-tab>\n            <sp-tab label=\"Tab 4\" value=\"4\"></sp-tab>\n            ${panels()}\n        </sp-tabs>\n    `;\n};\nVerticalSized.args = {\n    direction: 'vertical',\n};\n\nexport const VerticalRight = (args: Properties): TemplateResult => {\n    return html`\n        <style>\n            sp-tabs {\n                height: 75vh;\n                --swc-tabs-list-justify-content: center;\n            }\n        </style>\n        <sp-tabs\n            selected=\"1\"\n            direction=${args.direction}\n            ?auto=${args.auto}\n            label=\"Demo Tabs\"\n        >\n            <sp-tab label=\"Tab 1\" value=\"1\"></sp-tab>\n            <sp-tab label=\"Tab 2\" value=\"2\"></sp-tab>\n            <sp-tab label=\"Tab 3\" value=\"3\"></sp-tab>\n            <sp-tab label=\"Tab 4\" value=\"4\"></sp-tab>\n            ${panels()}\n        </sp-tabs>\n    `;\n};\nVerticalRight.args = {\n    direction: 'vertical-right',\n};\n\nexport const Icons = ({\n    direction,\n    verticalTab,\n    auto,\n}: Properties): TemplateResult => {\n    return html`\n        <sp-tabs selected=\"1\" direction=${direction} ?auto=${auto}>\n            <sp-tab label=\"Tab 1\" value=\"1\" ?vertical=${verticalTab}>\n                <sp-icon-checkmark slot=\"icon\"></sp-icon-checkmark>\n            </sp-tab>\n            <sp-tab label=\"Tab 2\" value=\"2\" ?vertical=${verticalTab}>\n                <sp-icon-close slot=\"icon\"></sp-icon-close>\n            </sp-tab>\n            <sp-tab label=\"Tab 3\" value=\"3\" ?vertical=${verticalTab}>\n                <sp-icon-chevron-down slot=\"icon\"></sp-icon-chevron-down>\n            </sp-tab>\n            <sp-tab label=\"Tab 4\" value=\"4\" ?vertical=${verticalTab}>\n                <sp-icon-help slot=\"icon\"></sp-icon-help>\n            </sp-tab>\n            ${panels()}\n        </sp-tabs>\n    `;\n};\n\nexport const IconsWithSlottedLabel = ({\n    direction,\n    verticalTab,\n    auto,\n}: Properties): TemplateResult => {\n    return html`\n        <sp-tabs selected=\"1\" direction=${direction} ?auto=${auto}>\n            <sp-tab value=\"1\" ?vertical=${verticalTab}>\n                Tab 1\n                <sp-icon-checkmark slot=\"icon\"></sp-icon-checkmark>\n            </sp-tab>\n            <sp-tab value=\"2\" ?vertical=${verticalTab}>\n                Tab 2\n                <sp-icon-close slot=\"icon\"></sp-icon-close>\n            </sp-tab>\n            <sp-tab value=\"3\" ?vertical=${verticalTab}>\n                Tab 3\n                <sp-icon-chevron-down slot=\"icon\"></sp-icon-chevron-down>\n            </sp-tab>\n            <sp-tab value=\"4\" ?vertical=${verticalTab}>\n                Tab 4\n                <sp-icon-help slot=\"icon\"></sp-icon-help>\n            </sp-tab>\n            ${panels()}\n        </sp-tabs>\n    `;\n};\n\nexport const IconsOnly = ({\n    direction,\n    verticalTab,\n    auto,\n}: Properties): TemplateResult => {\n    return html`\n        <sp-tabs selected=\"1\" direction=${direction} ?auto=${auto}>\n            <sp-tab aria-label=\"Tab 1\" value=\"1\" ?vertical=${verticalTab}>\n                <sp-icon-checkmark slot=\"icon\"></sp-icon-checkmark>\n            </sp-tab>\n            <sp-tab aria-label=\"Tab 2\" value=\"2\" ?vertical=${verticalTab}>\n                <sp-icon-close slot=\"icon\"></sp-icon-close>\n            </sp-tab>\n            <sp-tab aria-label=\"Tab 3\" value=\"3\" ?vertical=${verticalTab}>\n                <sp-icon-chevron-down slot=\"icon\"></sp-icon-chevron-down>\n            </sp-tab>\n            <sp-tab aria-label=\"Tab 4\" value=\"4\" ?vertical=${verticalTab}>\n                <sp-icon-help slot=\"icon\"></sp-icon-help>\n            </sp-tab>\n            ${panels()}\n        </sp-tabs>\n    `;\n};\n\nexport const iconsIi = (args: Properties): TemplateResult => {\n    return html`\n        <sp-tabs\n            selected=\"1\"\n            direction=${args.direction}\n            ?auto=${args.auto}\n            label=\"Demo Tabs\"\n        >\n            <sp-tab label=\"Tab 1\" value=\"1\" vertical>\n                <sp-icon-checkmark slot=\"icon\"></sp-icon-checkmark>\n            </sp-tab>\n            <sp-tab label=\"Tab 2\" value=\"2\" vertical>\n                <sp-icon-close slot=\"icon\"></sp-icon-close>\n            </sp-tab>\n            <sp-tab label=\"Tab 3\" value=\"3\" vertical>\n                <sp-icon-chevron-down slot=\"icon\"></sp-icon-chevron-down>\n            </sp-tab>\n            <sp-tab label=\"Tab 4\" value=\"4\" vertical>\n                <sp-icon-help slot=\"icon\"></sp-icon-help>\n            </sp-tab>\n            ${panels()}\n        </sp-tabs>\n    `;\n};\niconsIi.args = {\n    direction: 'vertical',\n};\niconsIi.storyName = 'Icons II';\n\nexport const iconsIii = (args: Properties): TemplateResult => {\n    return html`\n        <sp-tabs\n            selected=\"1\"\n            direction=${args.direction}\n            ?auto=${args.auto}\n            label=\"Demo Tabs\"\n        >\n            <sp-tab label=\"Tab 1\" value=\"1\">\n                <sp-icon-checkmark slot=\"icon\"></sp-icon-checkmark>\n            </sp-tab>\n            <sp-tab label=\"Tab 2\" value=\"2\">\n                <sp-icon-close slot=\"icon\"></sp-icon-close>\n            </sp-tab>\n            <sp-tab label=\"Tab 3\" value=\"3\">\n                <sp-icon-chevron-down slot=\"icon\"></sp-icon-chevron-down>\n            </sp-tab>\n            <sp-tab label=\"Tab 4\" value=\"4\">\n                <sp-icon-help slot=\"icon\"></sp-icon-help>\n            </sp-tab>\n            ${panels()}\n        </sp-tabs>\n    `;\n};\niconsIii.args = {\n    direction: 'vertical',\n};\niconsIii.storyName = 'Icons III';\n\nexport const Quiet = ({ direction, auto }: Properties): TemplateResult => {\n    return html`\n        <style>\n            sp-tabs {\n                display: grid;\n                grid-template-columns: 100%;\n            }\n        </style>\n        <sp-tabs selected=\"1\" quiet direction=${direction} ?auto=${auto}>\n            <sp-tab label=\"Tab 1\" value=\"1\"></sp-tab>\n            <sp-tab label=\"Tab 2\" value=\"2\"></sp-tab>\n            <sp-tab label=\"Tab 3\" value=\"3\"></sp-tab>\n            <sp-tab label=\"Tab 4\" value=\"4\"></sp-tab>\n            ${panels()}\n        </sp-tabs>\n    `;\n};\n\nexport const Compact = ({ direction, auto }: Properties): TemplateResult => {\n    return html`\n        <sp-tabs selected=\"1\" compact direction=${direction} ?auto=${auto}>\n            <sp-tab label=\"Tab 1\" value=\"1\"></sp-tab>\n            <sp-tab label=\"Tab 2\" value=\"2\"></sp-tab>\n            <sp-tab label=\"Tab 3\" value=\"3\"></sp-tab>\n            <sp-tab label=\"Tab 4\" value=\"4\"></sp-tab>\n            ${panels()}\n        </sp-tabs>\n    `;\n};\n\nexport const quietCompact = ({\n    direction,\n    auto,\n}: Properties): TemplateResult => {\n    return html`\n        <style>\n            sp-tabs {\n                display: grid;\n                grid-template-columns: 100%;\n            }\n        </style>\n        <sp-tabs\n            selected=\"1\"\n            quiet\n            compact\n            direction=${direction}\n            ?auto=${auto}\n        >\n            <sp-tab label=\"Tab 1\" value=\"1\"></sp-tab>\n            <sp-tab label=\"Tab 2\" value=\"2\"></sp-tab>\n            <sp-tab label=\"Tab 3\" value=\"3\"></sp-tab>\n            <sp-tab label=\"Tab 4\" value=\"4\"></sp-tab>\n            ${panels()}\n        </sp-tabs>\n    `;\n};\n\nquietCompact.storyName = 'Quiet Compact';\n"],
  "mappings": "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",
  "names": []
}
