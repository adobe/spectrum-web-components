{
  "version": 3,
  "sources": ["tab.test.ts"],
  "sourcesContent": ["/*\nCopyright 2020 Adobe. All rights reserved.\nThis file is licensed to you under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License. You may obtain a copy\nof the License at http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software distributed under\nthe License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\nOF ANY KIND, either express or implied. See the License for the specific language\ngoverning permissions and limitations under the License.\n*/\nimport '@spectrum-web-components/tabs/sp-tabs.js';\nimport '@spectrum-web-components/tabs/sp-tab.js';\nimport { Tab, Tabs } from '@spectrum-web-components/tabs';\nimport { elementUpdated, expect, fixture } from '@open-wc/testing';\nimport { html } from 'lit/static-html.js';\nimport { testForLitDevWarnings } from '../../../test/testing-helpers.js';\n\ndescribe('Tab', () => {\n    testForLitDevWarnings(\n        async () =>\n            await fixture<Tabs>(\n                html`\n                    <sp-tabs>\n                        <sp-tab label=\"Tab 1\" value=\"first\"></sp-tab>\n                    </sp-tabs>\n                `\n            )\n    );\n    it('loads default tab accessibly', async () => {\n        const el = await fixture<Tabs>(\n            html`\n                <sp-tabs>\n                    <sp-tab label=\"Tab 1\" value=\"first\"></sp-tab>\n                </sp-tabs>\n            `\n        );\n\n        await elementUpdated(el);\n\n        await expect(el).to.be.accessible();\n    });\n    it('Updates label', async () => {\n        const el = await fixture<Tabs>(\n            html`\n                <sp-tabs>\n                    <sp-tab label=\"Tab 1\" value=\"first\"></sp-tab>\n                </sp-tabs>\n            `\n        );\n\n        await elementUpdated(el);\n        const firstTab = el.querySelector('sp-tab') as Tab;\n        const label = firstTab.shadowRoot\n            ? (firstTab.shadowRoot.querySelector(\n                  '#item-label'\n              ) as HTMLLabelElement)\n            : (firstTab.querySelector('#itemLabel') as HTMLLabelElement);\n        expect(label.textContent).to.include('Tab 1');\n\n        firstTab.label = 'Other Tab';\n\n        await elementUpdated(firstTab);\n        expect(label.textContent).to.include('Other Tab');\n    });\n});\n"],
  "mappings": ";AAWA,OAAO;AACP,OAAO;AAEP,SAAS,gBAAgB,QAAQ,eAAe;AAChD,SAAS,YAAY;AACrB,SAAS,6BAA6B;AAEtC,SAAS,OAAO,MAAM;AAClB;AAAA,IACI,YACI,MAAM;AAAA,MACF;AAAA;AAAA;AAAA;AAAA;AAAA,IAKJ;AAAA,EACR;AACA,KAAG,gCAAgC,YAAY;AAC3C,UAAM,KAAK,MAAM;AAAA,MACb;AAAA;AAAA;AAAA;AAAA;AAAA,IAKJ;AAEA,UAAM,eAAe,EAAE;AAEvB,UAAM,OAAO,EAAE,EAAE,GAAG,GAAG,WAAW;AAAA,EACtC,CAAC;AACD,KAAG,iBAAiB,YAAY;AAC5B,UAAM,KAAK,MAAM;AAAA,MACb;AAAA;AAAA;AAAA;AAAA;AAAA,IAKJ;AAEA,UAAM,eAAe,EAAE;AACvB,UAAM,WAAW,GAAG,cAAc,QAAQ;AAC1C,UAAM,QAAQ,SAAS,aAChB,SAAS,WAAW;AAAA,MACjB;AAAA,IACJ,IACC,SAAS,cAAc,YAAY;AAC1C,WAAO,MAAM,WAAW,EAAE,GAAG,QAAQ,OAAO;AAE5C,aAAS,QAAQ;AAEjB,UAAM,eAAe,QAAQ;AAC7B,WAAO,MAAM,WAAW,EAAE,GAAG,QAAQ,WAAW;AAAA,EACpD,CAAC;AACL,CAAC;",
  "names": []
}
