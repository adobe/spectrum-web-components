{
  "version": 3,
  "sources": ["sidenav.test.ts"],
  "sourcesContent": ["/*\nCopyright 2020 Adobe. All rights reserved.\nThis file is licensed to you under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License. You may obtain a copy\nof the License at http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software distributed under\nthe License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\nOF ANY KIND, either express or implied. See the License for the specific language\ngoverning permissions and limitations under the License.\n*/\n\nimport '@spectrum-web-components/sidenav/sp-sidenav.js';\nimport '@spectrum-web-components/sidenav/sp-sidenav-item.js';\nimport '@spectrum-web-components/sidenav/sp-sidenav-heading.js';\nimport { SideNav, SideNavItem } from '@spectrum-web-components/sidenav';\nimport { manageTabIndex } from '../stories/sidenav.stories.js';\nimport {\n    arrowDownEvent,\n    arrowUpEvent,\n    shiftTabEvent,\n} from '../../../test/testing-helpers.js';\nimport {\n    elementUpdated,\n    expect,\n    fixture,\n    html,\n    nextFrame,\n    waitUntil,\n} from '@open-wc/testing';\nimport { LitElement, TemplateResult } from '@spectrum-web-components/base';\nimport { spy } from 'sinon';\nimport { sendMouse } from '../../../test/plugins/browser.js';\nimport { testForLitDevWarnings } from '../../../test/testing-helpers.js';\n\ndescribe('Sidenav', () => {\n    testForLitDevWarnings(\n        async () =>\n            await fixture<SideNav>(html`\n                <sp-sidenav>\n                    <sp-sidenav-heading label=\"CATEGORY 1\">\n                        <sp-sidenav-item\n                            value=\"Section 1\"\n                            label=\"Section 1\"\n                        ></sp-sidenav-item>\n                        <sp-sidenav-item\n                            value=\"Section 2\"\n                            label=\"Section 2\"\n                        ></sp-sidenav-item>\n                    </sp-sidenav-heading>\n                </sp-sidenav>\n            `)\n    );\n    it('loads', async () => {\n        const el = await fixture<SideNav>(html`\n            <sp-sidenav>\n                <sp-sidenav-heading label=\"CATEGORY 1\">\n                    <sp-sidenav-item\n                        value=\"Section 1\"\n                        label=\"Section 1\"\n                    ></sp-sidenav-item>\n                    <sp-sidenav-item\n                        value=\"Section 2\"\n                        label=\"Section 2\"\n                    ></sp-sidenav-item>\n                </sp-sidenav-heading>\n            </sp-sidenav>\n        `);\n\n        await elementUpdated(el);\n\n        await expect(el).to.be.accessible();\n    });\n    it('does not accept focus/click/blur when empty', async () => {\n        const el = await fixture<SideNav>(html`\n            <sp-sidenav></sp-sidenav>\n        `);\n\n        await elementUpdated(el);\n\n        expect(document.activeElement === el).to.be.false;\n\n        el.focus();\n        await elementUpdated(el);\n\n        expect(document.activeElement === el).to.be.false;\n\n        el.blur();\n        await elementUpdated(el);\n\n        expect(document.activeElement === el).to.be.false;\n\n        el.click();\n        await elementUpdated(el);\n\n        expect(document.activeElement === el).to.be.false;\n    });\n    it('does not accept keyboard events when items are not present', async () => {\n        const errorSpy = spy();\n        const el = await fixture<SideNav>(html`\n            <sp-sidenav>\n                <sp-sidenav-item\n                    value=\"Section 1\"\n                    label=\"Section 1\"\n                ></sp-sidenav-item>\n            </sp-sidenav>\n        `);\n\n        await elementUpdated(el);\n        const item = el.querySelector('sp-sidenav-item') as SideNavItem;\n        window.addEventListener('error', () => errorSpy());\n\n        el.dispatchEvent(new FocusEvent('focusin'));\n        item.remove();\n\n        await elementUpdated(el);\n        el.dispatchEvent(\n            new KeyboardEvent('keydown', {\n                code: 'ArrowDown',\n            })\n        );\n\n        expect(errorSpy.callCount).to.equal(0);\n    });\n    it('does not accept focus when all children [disabled]', async () => {\n        const el = await fixture<SideNav>(html`\n            <sp-sidenav>\n                <sp-sidenav-item\n                    disabled\n                    value=\"Section 1\"\n                    label=\"Section 1\"\n                ></sp-sidenav-item>\n                <sp-sidenav-item\n                    disabled\n                    value=\"Section 2\"\n                    label=\"Section 2\"\n                ></sp-sidenav-item>\n            </sp-sidenav>\n        `);\n\n        await elementUpdated(el);\n\n        expect(document.activeElement === el).to.be.false;\n\n        el.focus();\n        await elementUpdated(el);\n\n        expect(document.activeElement === el).to.be.false;\n        expect(el.matches(':focus-within')).to.be.false;\n    });\n    it('sets manageTabIndex on new children', async () => {\n        const el = await fixture<SideNav>(html`\n            <sp-sidenav>\n                <sp-sidenav-item\n                    value=\"Section 1\"\n                    label=\"Section 1\"\n                ></sp-sidenav-item>\n                <sp-sidenav-item\n                    value=\"Section 2\"\n                    label=\"Section 2\"\n                ></sp-sidenav-item>\n            </sp-sidenav>\n        `);\n\n        await elementUpdated(el);\n        expect(el.manageTabIndex).to.be.false;\n\n        const item1 = el.querySelector('sp-sidenav-item') as SideNavItem;\n        expect(item1.tabIndex).to.equal(0);\n\n        const newItem = document.createElement('sp-sidenav-item');\n        newItem.value = 'Section 3';\n        newItem.label = 'Section 3';\n        el.appendChild(newItem);\n\n        await elementUpdated(newItem);\n\n        expect(newItem.tabIndex).to.equal(0);\n\n        el.focus();\n        const focused = document.activeElement as SideNavItem;\n        focused.click();\n        expect(focused.selected).to.be.true;\n\n        el.dispatchEvent(shiftTabEvent());\n        const outsideFocused = document.activeElement as HTMLElement;\n\n        expect(typeof outsideFocused).not.to.equal(SideNavItem);\n    });\n    it('handles select', async () => {\n        const changeSpy = spy();\n        const el = await fixture<SideNav>(html`\n            <sp-sidenav @change=${() => changeSpy()}>\n                <sp-sidenav-heading label=\"CATEGORY 1\">\n                    <sp-sidenav-item\n                        value=\"Section 1\"\n                        label=\"Section 1\"\n                    ></sp-sidenav-item>\n                    <sp-sidenav-item value=\"Section 2\" label=\"Section 2\">\n                        <sp-sidenav-item\n                            value=\"Section 2a\"\n                            label=\"Section 2a\"\n                        ></sp-sidenav-item>\n                    </sp-sidenav-item>\n                </sp-sidenav-heading>\n            </sp-sidenav>\n        `);\n\n        await elementUpdated(el);\n\n        expect(el.value).to.be.undefined;\n\n        const sidenavItem = el.querySelector(\n            '[value=\"Section 2\"]'\n        ) as SideNavItem;\n        sidenavItem.dispatchEvent(\n            new CustomEvent('sidenav-select', {\n                bubbles: true,\n                detail: {\n                    value: 'Section 2',\n                },\n            })\n        );\n\n        await elementUpdated(el);\n\n        expect(el.value).to.equal('Section 2');\n        expect(changeSpy.callCount).to.equal(1);\n\n        sidenavItem.click();\n\n        await elementUpdated(sidenavItem);\n\n        const sidenavItemChild = el.querySelector(\n            '[value=\"Section 2a\"]'\n        ) as SideNavItem;\n        sidenavItemChild.click();\n\n        await elementUpdated(el);\n\n        expect(el.value).to.equal('Section 2a');\n        expect(changeSpy.callCount).to.equal(2);\n    });\n    it('prevents selection', async () => {\n        const changeSpy = spy();\n        const el = await fixture<SideNav>(html`\n            <sp-sidenav\n                @change=${(event: Event) => {\n                    event.preventDefault();\n                    changeSpy();\n                }}\n            >\n                <sp-sidenav-heading label=\"CATEGORY 1\">\n                    <sp-sidenav-item\n                        value=\"Section 1\"\n                        label=\"Section 1\"\n                    ></sp-sidenav-item>\n                    <sp-sidenav-item value=\"Section 2\" label=\"Section 2\" opened>\n                        <sp-sidenav-item\n                            value=\"Section 2a\"\n                            label=\"Section 2a\"\n                        ></sp-sidenav-item>\n                    </sp-sidenav-item>\n                </sp-sidenav-heading>\n            </sp-sidenav>\n        `);\n\n        await elementUpdated(el);\n\n        expect(el.value).to.be.undefined;\n\n        el.click();\n\n        await elementUpdated(el);\n\n        expect(el.value).to.be.undefined;\n        expect(changeSpy.callCount).to.equal(1);\n    });\n    it('prevents [tabindex=0] while `focusin`', async () => {\n        const el = await fixture<SideNav>(manageTabIndex());\n        const selected = el.querySelector('[value=\"Section 1\"]') as SideNavItem;\n        const toBeSelected = el.querySelector(\n            '[value=\"Section 0\"]'\n        ) as SideNavItem;\n\n        await elementUpdated(el);\n        await waitUntil(() => el.value === 'Section 1', 'wait for selection');\n\n        expect(el.value).to.equal('Section 1');\n        expect(selected.tabIndex, 'initially 0').to.equal(0);\n        expect(toBeSelected.tabIndex, 'initially -1').to.equal(-1);\n\n        el.focus();\n\n        await elementUpdated(el);\n\n        expect(el.value).to.equal('Section 1');\n        expect(selected.tabIndex, '0 when focusin').to.equal(0);\n\n        el.blur();\n\n        await elementUpdated(el);\n\n        expect(el.value).to.equal('Section 1');\n        expect(selected.tabIndex, '0 when blur').to.equal(0);\n\n        const bindingRect = toBeSelected.getBoundingClientRect();\n        await sendMouse({\n            steps: [\n                {\n                    type: 'click',\n                    position: [\n                        bindingRect.x + bindingRect.width / 2,\n                        bindingRect.y + bindingRect.height / 2,\n                    ],\n                },\n            ],\n        });\n        toBeSelected.dispatchEvent(\n            new CustomEvent('sidenav-select', {\n                bubbles: true,\n                detail: {\n                    value: 'Section 0',\n                },\n            })\n        );\n        await elementUpdated(el);\n\n        expect(el.value).to.equal('Section 0');\n        expect(toBeSelected.tabIndex, 'will be new focusable child').to.equal(\n            0\n        );\n        expect(selected.tabIndex, 'no longer selected').to.equal(-1);\n    });\n    it('manage tab index', async () => {\n        const el = await fixture<SideNav>(manageTabIndex());\n\n        await elementUpdated(el);\n        expect(el.value).to.equal('Section 1');\n\n        el.focus();\n        el.dispatchEvent(arrowUpEvent());\n        let focused = document.activeElement as SideNavItem;\n        focused.click();\n\n        await elementUpdated(el);\n\n        expect(el.value).to.equal('Section 0');\n\n        el.focus();\n        el.dispatchEvent(arrowDownEvent());\n        el.dispatchEvent(arrowDownEvent());\n        focused = document.activeElement as SideNavItem;\n        expect(focused.expanded, 'not expanded').to.be.false;\n        focused.click();\n\n        await elementUpdated(el);\n\n        expect(focused.expanded, 'expanded').to.be.true;\n\n        el.dispatchEvent(arrowDownEvent());\n        await elementUpdated(el);\n        focused = document.activeElement as SideNavItem;\n        focused.click();\n\n        await elementUpdated(el);\n\n        expect(el.value).to.equal('Section 3a');\n\n        document.body.focus();\n\n        el.focus();\n        focused = document.activeElement as SideNavItem;\n        expect(focused.selected, 'selected').to.be.true;\n\n        el.dispatchEvent(shiftTabEvent());\n        const outsideFocused = document.activeElement as HTMLElement;\n\n        expect(typeof outsideFocused).not.to.equal(SideNavItem);\n    });\n    it('focuses the child anchor not the root when [tabindex=-1]', async () => {\n        const el = await fixture<SideNav>(manageTabIndex());\n\n        await nextFrame();\n        await nextFrame();\n        await nextFrame();\n        await nextFrame();\n\n        await elementUpdated(el);\n        const firstItem = el.querySelector(\n            '[value=\"Section 0\"]'\n        ) as SideNavItem;\n        const selected = el.querySelector('[selected]') as SideNavItem;\n        expect(selected.tabIndex).to.equal(0);\n        expect(firstItem.tabIndex).to.equal(-1);\n\n        const firstRect = firstItem.getBoundingClientRect();\n        await sendMouse({\n            steps: [\n                {\n                    type: 'click',\n                    position: [\n                        firstRect.x + firstRect.width / 2,\n                        firstRect.y + firstRect.height / 2,\n                    ],\n                },\n            ],\n        });\n        await elementUpdated(el);\n\n        expect(firstItem.matches(':focus'), 'root has focus').to.be.true;\n        expect(\n            firstItem.focusElement.matches(':focus'),\n            'child has more precise focus'\n        ).to.be.true;\n    });\n    it('manage tab index through shadow DOM', async () => {\n        class SideNavTestEl extends LitElement {\n            protected override render(): TemplateResult {\n                return manageTabIndex();\n            }\n        }\n        customElements.define('sidenav-test-el', SideNavTestEl);\n        const el = await fixture<SideNav>(html`\n            <sidenav-test-el></sidenav-test-el>\n        `);\n\n        await elementUpdated(el);\n        const rootNode = el.shadowRoot as ShadowRoot;\n        const sidenavEl = rootNode.querySelector('sp-sidenav') as SideNav;\n\n        await elementUpdated(sidenavEl);\n        expect(sidenavEl.value).to.equal('Section 1');\n\n        sidenavEl.focus();\n        sidenavEl.dispatchEvent(arrowUpEvent());\n        let focused = rootNode.activeElement as SideNavItem;\n        focused.focusElement.click();\n\n        await elementUpdated(sidenavEl);\n\n        expect(sidenavEl.value).to.equal('Section 0');\n\n        sidenavEl.focus();\n        sidenavEl.dispatchEvent(arrowDownEvent());\n        sidenavEl.dispatchEvent(arrowDownEvent());\n        focused = rootNode.activeElement as SideNavItem;\n        expect(focused.expanded).to.be.false;\n        focused.focusElement.click();\n\n        await elementUpdated(sidenavEl);\n\n        expect(focused.expanded).to.be.true;\n\n        sidenavEl.dispatchEvent(arrowDownEvent());\n        await elementUpdated(sidenavEl);\n        focused = rootNode.activeElement as SideNavItem;\n        focused.focusElement.click();\n\n        await elementUpdated(sidenavEl);\n\n        expect(sidenavEl.value).to.equal('Section 3a');\n\n        document.body.focus();\n\n        sidenavEl.focus();\n        focused = rootNode.activeElement as SideNavItem;\n        expect(focused.selected).to.be.true;\n\n        sidenavEl.dispatchEvent(shiftTabEvent());\n        const outsideFocused = rootNode.activeElement as HTMLElement;\n\n        expect(typeof outsideFocused).not.to.equal(SideNavItem);\n    });\n    it('manage tab index for late added items', async () => {\n        const el = await fixture<SideNav>(html`\n            <sp-sidenav manage-tab-index>\n                <sp-sidenav-item\n                    value=\"Section 0\"\n                    label=\"Section 0\"\n                ></sp-sidenav-item>\n                <sp-sidenav-item\n                    value=\"Section 1\"\n                    label=\"Section 1\"\n                ></sp-sidenav-item>\n            </sp-sidenav>\n        `);\n\n        await elementUpdated(el);\n        expect(el.manageTabIndex).to.be.true;\n\n        const item1 = el.querySelector('sp-sidenav-item') as SideNavItem;\n        const item2 = el.querySelector(\n            'sp-sidenav-item:nth-child(2)'\n        ) as SideNavItem;\n\n        await elementUpdated(item1);\n        await elementUpdated(item2);\n        expect(item1.tabIndex, 'first item tabindex').to.equal(0);\n        expect(item2.tabIndex, 'second item tabindex').to.equal(-1);\n\n        const item3 = document.createElement('sp-sidenav-item');\n        item3.value = 'Section 2';\n        item3.label = 'Section 2';\n\n        await elementUpdated(el);\n\n        el.appendChild(item3);\n\n        await elementUpdated(item3);\n        await elementUpdated(el);\n\n        await waitUntil(() => item3.tabIndex === -1, 'after');\n    });\n});\n"],
  "mappings": "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",
  "names": []
}
