"use strict";var c=Object.defineProperty;var n=Object.getOwnPropertyDescriptor;var a=(l,d,e,t)=>{for(var i=t>1?void 0:t?n(d,e):d,s=l.length-1,o;s>=0;s--)(o=l[s])&&(i=(t?o(d,e,i):o(i))||i);return t&&i&&c(d,e,i),i};import{property as r,queryAssignedNodes as h}from"@spectrum-web-components/base/src/decorators.js";import{FocusVisiblePolyfillMixin as u}from"@spectrum-web-components/shared/src/focus-visible.js";import{FieldGroup as p}from"@spectrum-web-components/field-group";import{Radio as f}from"./Radio.js";import{RovingTabindexController as v}from"@spectrum-web-components/reactive-controllers/src/RovingTabindex.js";export class RadioGroup extends u(p){constructor(){super(...arguments);this.name="";this.rovingTabindexController=new v(this,{focusInIndex:e=>e.findIndex(t=>this.selected?!t.disabled&&t.value===this.selected:!t.disabled),elementEnterAction:e=>{this._setSelected(e.value)},elements:()=>this.buttons,isFocusableElement:e=>!e.disabled});this.selected=""}get buttons(){return this.defaultNodes.filter(e=>e instanceof f)}focus(){this.rovingTabindexController.focus()}_setSelected(e){if(e===this.selected)return;const t=this.selected,i=e?this.querySelector(`sp-radio[value="${e}"]`):void 0;if(this.selected=i?e:"",!this.dispatchEvent(new Event("change",{cancelable:!0,bubbles:!0,composed:!0}))){this.selected=t;return}this.validateRadios()}willUpdate(e){if(!this.hasUpdated){this.setAttribute("role","radiogroup");const t=this.querySelector("sp-radio[checked]"),i=t?t.value:"";if(this.selected=i||this.selected,this.selected&&this.selected!==i){const s=this.querySelector(`sp-radio[value="${this.selected}"]`);s&&(s.checked=!0)}this.shadowRoot.addEventListener("change",s=>{s.stopPropagation();const o=s.target;this._setSelected(o.value)})}e.has("selected")&&this.validateRadios()}async validateRadios(){let e=!1;this.hasUpdated||await this.updateComplete,this.buttons.map(t=>{t.checked=this.selected===t.value,e=e||t.checked}),e||(this.selected="")}handleSlotchange(){this.rovingTabindexController.clearElementCache()}}a([r({type:String})],RadioGroup.prototype,"name",2),a([h()],RadioGroup.prototype,"defaultNodes",2),a([r({reflect:!0})],RadioGroup.prototype,"selected",2);
//# sourceMappingURL=RadioGroup.js.map
