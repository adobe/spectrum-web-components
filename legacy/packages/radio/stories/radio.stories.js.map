{
  "version": 3,
  "sources": ["radio.stories.ts"],
  "sourcesContent": ["/*\nCopyright 2020 Adobe. All rights reserved.\nThis file is licensed to you under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License. You may obtain a copy\nof the License at http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software distributed under\nthe License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\nOF ANY KIND, either express or implied. See the License for the specific language\ngoverning permissions and limitations under the License.\n*/\nimport { html, TemplateResult } from '@spectrum-web-components/base';\n\nimport '@spectrum-web-components/radio/sp-radio.js';\nimport '@spectrum-web-components/radio/sp-radio-group.js';\nimport { spreadProps } from '../../../test/lit-helpers.js';\n\nexport default {\n    component: 'sp-radio',\n    title: 'Radio',\n    argTypes: {\n        checked: {\n            name: 'checked',\n            type: { name: 'boolean', required: false },\n            description: 'Represents when the input is checked',\n            table: {\n                type: { summary: 'boolean' },\n                defaultValue: { summary: false },\n            },\n            control: 'boolean',\n        },\n        disabled: {\n            name: 'disabled',\n            type: { name: 'boolean', required: false },\n            description:\n                'Disable this control. It will not receive focus or events.',\n            table: {\n                type: { summary: 'boolean' },\n                defaultValue: { summary: false },\n            },\n            control: {\n                type: 'boolean',\n            },\n        },\n        emphasized: {\n            name: 'emphasized',\n            type: { name: 'boolean', required: false },\n            description: \"Set the button's state to emphasized.\",\n            table: {\n                type: { summary: 'boolean' },\n                defaultValue: { summary: false },\n            },\n            control: {\n                type: 'boolean',\n            },\n        },\n        invalid: {\n            name: 'invalid',\n            type: { name: 'boolean', required: false },\n            table: {\n                type: { summary: 'boolean' },\n                defaultValue: { summary: false },\n            },\n            control: {\n                type: 'boolean',\n            },\n        },\n    },\n    args: {\n        checked: false,\n        disabled: false,\n        emphasized: false,\n        invalid: false,\n    },\n};\n\nexport interface StoryArgs {\n    checked?: boolean;\n    disabled?: boolean;\n    emphasized?: boolean;\n    invalid?: boolean;\n    readonly?: boolean;\n    size?: 's' | 'm' | 'l' | 'xl';\n    [prop: string]: unknown;\n}\n\nfunction renderRadio(args: StoryArgs): TemplateResult {\n    return html`\n        <sp-radio ${spreadProps(args)}>Radio</sp-radio>\n    `;\n}\nexport const Default = (args: StoryArgs): TemplateResult => renderRadio(args);\n\nexport const readonly = (args: StoryArgs): TemplateResult =>\n    renderRadio({\n        ...args,\n        readonly: true,\n    });\nreadonly.args = {\n    checked: true,\n};\n\nexport const Emphasized = (args: StoryArgs): TemplateResult =>\n    renderRadio(args);\nEmphasized.args = {\n    checked: true,\n    emphasized: true,\n};\n\nexport const Autofocus = (args: StoryArgs): TemplateResult => {\n    return html`\n        <sp-radio autofocus ${spreadProps(args)}>Radio</sp-radio>\n    `;\n};\n\nexport const Invalid = (args: StoryArgs): TemplateResult => renderRadio(args);\nInvalid.args = {\n    invalid: true,\n};\n\nexport const Disabled = (args: StoryArgs): TemplateResult => renderRadio(args);\nDisabled.args = {\n    disabled: true,\n};\n\nconst values = {\n    first: 1,\n    second: 2,\n    third: 3,\n    fourth: 4,\n};\n\nexport const groupExample = (): TemplateResult => {\n    return html`\n        <sp-radio-group vertical selected=\"1\" name=\"group-example\">\n            <sp-radio value=${values.first}>Option 1</sp-radio>\n            <sp-radio value=${values.second}>Option 2</sp-radio>\n            <sp-radio value=${values.third}>Option 3</sp-radio>\n            <sp-radio value=${values.fourth}>Option 4</sp-radio>\n        </sp-radio-group>\n    `;\n};\n\nexport const horizontalGroup = (): TemplateResult => {\n    return html`\n        <sp-radio-group horizontal selected=\"first\" name=\"group-example\">\n            <sp-radio value=\"first\">Option 1</sp-radio>\n            <sp-radio value=\"second\">Option 2</sp-radio>\n            <sp-radio value=\"third\">Option 3</sp-radio>\n            <sp-radio value=\"fourth\">Option 4</sp-radio>\n        </sp-radio-group>\n    `;\n};\n\nexport const tabIndexExample = (): TemplateResult => {\n    return html`\n        <sp-radio-group vertical name=\"group-example\">\n            <sp-radio emphasized value=\"zero\" tabindex=\"0\">\n                Tab Index 0\n            </sp-radio>\n            <sp-radio disabled value=\"three\" tabindex=\"3\">Tab Index 3</sp-radio>\n            <sp-radio value=\"one\" tabindex=\"1\" autofocus>Tab Index 1</sp-radio>\n            <sp-radio value=\"four\" tabindex=\"4\">Tab Index 4</sp-radio>\n            <sp-radio invalid value=\"two\" tabindex=\"2\">Tab Index 2</sp-radio>\n        </sp-radio-group>\n    `;\n};\n\nexport const horizontalTabIndexExample = (): TemplateResult => {\n    return html`\n        <sp-radio-group horizontal name=\"group-example\">\n            <sp-radio emphasized value=\"zero\" tabindex=\"0\">\n                Tab Index 0\n            </sp-radio>\n            <sp-radio disabled value=\"three\" tabindex=\"3\">Tab Index 3</sp-radio>\n            <sp-radio value=\"one\" tabindex=\"1\" autofocus>Tab Index 1</sp-radio>\n            <sp-radio value=\"four\" tabindex=\"4\">Tab Index 4</sp-radio>\n            <sp-radio invalid value=\"two\" tabindex=\"2\">Tab Index 2</sp-radio>\n        </sp-radio-group>\n    `;\n};\n\ntabIndexExample.storyName = 'Tab index example';\n"],
  "mappings": "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",
  "names": []
}
