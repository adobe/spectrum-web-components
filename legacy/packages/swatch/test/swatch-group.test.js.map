{
  "version": 3,
  "sources": ["swatch-group.test.ts"],
  "sourcesContent": ["/*\nCopyright 2022 Adobe. All rights reserved.\nThis file is licensed to you under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License. You may obtain a copy\nof the License at http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software distributed under\nthe License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\nOF ANY KIND, either express or implied. See the License for the specific language\ngoverning permissions and limitations under the License.\n*/\nimport { elementUpdated, expect, fixture, nextFrame } from '@open-wc/testing';\nimport { sendKeys } from '@web/test-runner-commands';\n\nimport '@spectrum-web-components/swatch/sp-swatch.js';\nimport { Swatch, SwatchGroup } from '../';\nimport { Default } from '../stories/swatch-group.stories.js';\nimport { spy, stub } from 'sinon';\nimport { html } from '@spectrum-web-components/base';\nimport { testForLitDevWarnings } from '../../../test/testing-helpers.js';\n\ndescribe('Swatch Group', () => {\n    let el: SwatchGroup;\n    beforeEach(async () => {\n        el = await fixture<SwatchGroup>(Default(Default.args));\n\n        await elementUpdated(el);\n    });\n    testForLitDevWarnings(\n        async () => await fixture<SwatchGroup>(Default(Default.args))\n    );\n    it('loads default swatch accessibly', async () => {\n        await expect(el).to.be.accessible();\n    });\n    it('forwards `border` to children', async () => {\n        el.border = 'light';\n        await elementUpdated(el);\n\n        ([...el.children] as Swatch[]).forEach((child) => {\n            expect(child.border).to.equal('light');\n        });\n    });\n    it('forwards `rounding` to children', async () => {\n        el.rounding = 'full';\n        await elementUpdated(el);\n\n        ([...el.children] as Swatch[]).forEach((child) => {\n            expect(child.rounding).to.equal('full');\n        });\n    });\n    it('forwards `size` to children', async () => {\n        el.size = 'xs';\n        await elementUpdated(el);\n\n        ([...el.children] as Swatch[]).forEach((child) => {\n            expect(child.size).to.equal('xs');\n        });\n    });\n    it('forwards `shape` to children', async () => {\n        el.shape = 'rectangle';\n        await elementUpdated(el);\n\n        ([...el.children] as Swatch[]).forEach((child) => {\n            expect(child.shape).to.equal('rectangle');\n        });\n    });\n    it('unsets forwarding', async () => {\n        el.border = 'light';\n        el.rounding = 'full';\n        el.size = 'xs';\n        el.shape = 'rectangle';\n        await elementUpdated(el);\n\n        ([...el.children] as Swatch[]).forEach((child) => {\n            expect(child.border).to.not.be.undefined;\n            expect(child.rounding).to.not.be.undefined;\n            expect(child.size).to.not.equal('m');\n            expect(child.shape).to.not.be.undefined;\n        });\n\n        el.border = undefined;\n        el.rounding = undefined;\n        el.removeAttribute('size');\n        el.shape = undefined;\n        await elementUpdated(el);\n\n        ([...el.children] as Swatch[]).forEach((child) => {\n            expect(child.border).to.equal(undefined);\n            expect(child.rounding).to.equal(undefined);\n            expect(child.size).to.equal('m');\n            expect(child.shape).to.equal(undefined);\n        });\n    });\n    it('does not dispatch `change` events without `selects` attribute', async () => {\n        const selectedChild = el.querySelector(\n            ':scope > sp-swatch:nth-child(4)'\n        ) as Swatch;\n\n        const changeSpy = spy();\n\n        el.addEventListener('change', () => changeSpy());\n\n        expect(el.selected).to.deep.equal([]);\n\n        selectedChild.click();\n\n        expect(changeSpy.called).to.be.false;\n        expect(el.selected).to.deep.equal([]);\n    });\n    it('dispatches `change` events as [selects=\"single\"]', async () => {\n        el.selects = 'single';\n        const selectedChild = el.querySelector(\n            ':scope > sp-swatch:nth-child(4)'\n        ) as Swatch;\n\n        const changeSpy = spy();\n\n        el.addEventListener('change', () => changeSpy());\n\n        expect(el.selected).to.deep.equal([]);\n        expect(selectedChild.selected).to.be.false;\n\n        selectedChild.click();\n\n        expect(changeSpy.calledOnce).to.be.true;\n        expect(el.selected).to.deep.equal([selectedChild.value]);\n        expect(selectedChild.selected).to.be.true;\n\n        selectedChild.click();\n\n        expect(changeSpy.calledOnce).to.be.true;\n        expect(el.selected).to.deep.equal([selectedChild.value]);\n        expect(selectedChild.selected).to.be.true;\n    });\n    it('can have `change` events prevented', async () => {\n        el.selects = 'single';\n        const selectedChild = el.querySelector(\n            ':scope > sp-swatch:nth-child(4)'\n        ) as Swatch;\n\n        el.addEventListener('change', (event: Event) => event.preventDefault());\n\n        expect(el.selected).to.deep.equal([]);\n        expect(selectedChild.selected).to.be.false;\n\n        selectedChild.click();\n\n        expect(el.selected).to.deep.equal([]);\n        expect(selectedChild.selected).to.be.false;\n    });\n    it('dispatches `change` events as [selects=\"multiple\"]', async () => {\n        el.selects = 'multiple';\n        const selectedChild0 = el.querySelector(\n            ':scope > sp-swatch:nth-child(1)'\n        ) as Swatch;\n        const selectedChild1 = el.querySelector(\n            ':scope > sp-swatch:nth-child(4)'\n        ) as Swatch;\n        const selectedChild2 = el.querySelector(\n            ':scope > sp-swatch:nth-child(6)'\n        ) as Swatch;\n\n        await elementUpdated(selectedChild0);\n\n        const changeSpy = spy();\n\n        el.addEventListener('change', () => changeSpy());\n\n        expect(el.selected).to.deep.equal([]);\n\n        selectedChild0.click();\n        selectedChild1.click();\n        selectedChild2.click();\n\n        expect(changeSpy.callCount).to.equal(3);\n        expect(el.selected).to.deep.equal([\n            selectedChild0.value,\n            selectedChild1.value,\n            selectedChild2.value,\n        ]);\n    });\n    it('filters `selected` when a selected Swatch is removed from the DOM', async () => {\n        el.selects = 'multiple';\n        const selectedChild0 = el.querySelector(\n            ':scope > sp-swatch:nth-child(1)'\n        ) as Swatch;\n        const selectedChild1 = el.querySelector(\n            ':scope > sp-swatch:nth-child(4)'\n        ) as Swatch;\n        const selectedChild2 = el.querySelector(\n            ':scope > sp-swatch:nth-child(6)'\n        ) as Swatch;\n\n        await elementUpdated(selectedChild0);\n\n        expect(el.selected).to.deep.equal([]);\n\n        selectedChild0.click();\n        selectedChild1.click();\n        selectedChild2.click();\n\n        expect(el.selected).to.deep.equal([\n            selectedChild0.value,\n            selectedChild1.value,\n            selectedChild2.value,\n        ]);\n\n        selectedChild0.remove();\n        await elementUpdated(el);\n\n        expect(el.selected).to.deep.equal([\n            selectedChild1.value,\n            selectedChild2.value,\n        ]);\n\n        selectedChild2.remove();\n        await elementUpdated(el);\n\n        expect(el.selected).to.deep.equal([selectedChild1.value]);\n\n        selectedChild1.remove();\n        await elementUpdated(el);\n\n        expect(el.selected).to.deep.equal([]);\n    });\n    it('maintains a single tab stop', async () => {\n        const inputBefore = document.createElement('input');\n        const inputAfter = document.createElement('input');\n        el.insertAdjacentElement('beforebegin', inputBefore);\n        el.insertAdjacentElement('afterend', inputAfter);\n        inputBefore.focus();\n        expect(document.activeElement === el.children[0]).to.be.false;\n        await sendKeys({\n            press: 'Tab',\n        });\n        expect(document.activeElement === el.children[0]).to.be.true;\n        await sendKeys({\n            press: 'Tab',\n        });\n        expect(document.activeElement === el.children[0]).to.be.false;\n        await sendKeys({\n            press: 'Shift+Tab',\n        });\n        expect(document.activeElement === el.children[0]).to.be.true;\n    });\n    it('makes the first selected child the single tab stop', async () => {\n        const selectedChild = el.querySelector(\n            ':scope > sp-swatch:nth-child(4)'\n        ) as Swatch;\n        expect(selectedChild.selected).to.be.false;\n\n        const inputBefore = document.createElement('input');\n        const inputAfter = document.createElement('input');\n        el.insertAdjacentElement('beforebegin', inputBefore);\n        el.insertAdjacentElement('afterend', inputAfter);\n        inputBefore.focus();\n        el.selects = 'single';\n        el.selected = [selectedChild.value];\n        await elementUpdated(el);\n        await nextFrame();\n        await nextFrame();\n\n        expect(selectedChild.selected).to.be.true;\n\n        expect(document.activeElement === selectedChild).to.be.false;\n        await sendKeys({\n            press: 'Tab',\n        });\n        expect(document.activeElement === selectedChild).to.be.true;\n        await sendKeys({\n            press: 'Tab',\n        });\n        expect(document.activeElement === selectedChild).to.be.false;\n        await sendKeys({\n            press: 'Shift+Tab',\n        });\n        expect(document.activeElement === selectedChild).to.be.true;\n    });\n    it('focus()es to the first Swatch', async () => {\n        el.focus();\n        expect(document.activeElement === el.children[0]).to.be.true;\n    });\n    it('focus()es to the first selected Swatch', async () => {\n        const selectedChild = el.querySelector(\n            ':scope > sp-swatch:nth-child(4)'\n        ) as Swatch;\n        expect(selectedChild.selected).to.be.false;\n        el.selects = 'single';\n        el.selected = [selectedChild.value];\n        await elementUpdated(el);\n        await nextFrame();\n\n        expect(selectedChild.selected).to.be.true;\n        el.focus();\n        expect(document.activeElement === selectedChild).to.be.true;\n    });\n});\n\ndescribe('Swatch Group - DOM selected', () => {\n    describe('dev mode', () => {\n        let consoleWarnStub!: ReturnType<typeof stub>;\n        before(() => {\n            window.__swc.verbose = true;\n            consoleWarnStub = stub(console, 'warn');\n        });\n        afterEach(() => {\n            consoleWarnStub.resetHistory();\n        });\n        after(() => {\n            window.__swc.verbose = false;\n            consoleWarnStub.restore();\n        });\n\n        it('warns in Dev Mode when mixed-value attribute is added in sp-swatch when parent sp-swatch-group is not having selects=\"multiple\"', async () => {\n            const el = await fixture<SwatchGroup>(\n                html`\n                    <sp-swatch-group selects=\"single\">\n                        <sp-swatch mixed-value></sp-swatch>\n                    </sp-swatch-group>\n                `\n            );\n\n            await elementUpdated(el);\n            await nextFrame();\n            await nextFrame();\n\n            expect(consoleWarnStub.called).to.be.true;\n            const spyCall = consoleWarnStub.getCall(0);\n\n            expect(\n                (spyCall.args.at(0) as string).includes(\n                    '<sp-swatch> elements can only leverage the \"mixed-value\" attribute when their <sp-swatch-group> parent element is also leveraging \"selects=\"multiple\"'\n                ),\n                'confirm warning message'\n            ).to.be.true;\n\n            expect(spyCall.args.at(-1), 'confirm `data` shape').to.deep.equal({\n                data: {\n                    localName: 'sp-swatch-group',\n                    type: 'accessibility',\n                    level: 'default',\n                },\n            });\n        });\n    });\n    it('accepts selection from DOM', async () => {\n        const el = await fixture<SwatchGroup>(html`\n            <sp-swatch-group selects=\"multiple\">\n                <sp-swatch value=\"color-0\" color=\"red\"></sp-swatch>\n                <sp-swatch value=\"color-1\" color=\"green\" selected></sp-swatch>\n                <sp-swatch value=\"color-2\" color=\"blue\"></sp-swatch>\n                <sp-swatch value=\"color-3\" color=\"yellow\" selected></sp-swatch>\n            </sp-swatch-group>\n        `);\n\n        await elementUpdated(el);\n\n        expect(el.selected).to.deep.equal(['color-1', 'color-3']);\n    });\n    it('merges `selected` and selection from DOM', async function () {\n        const el = await fixture<SwatchGroup>(html`\n            <sp-swatch-group selects=\"multiple\" .selected=${['color-1']}>\n                <sp-swatch value=\"color-0\" color=\"red\"></sp-swatch>\n                <sp-swatch value=\"color-1\" color=\"green\"></sp-swatch>\n                <sp-swatch value=\"color-2\" color=\"blue\"></sp-swatch>\n                <sp-swatch value=\"color-3\" color=\"yellow\" selected></sp-swatch>\n            </sp-swatch-group>\n        `);\n\n        await elementUpdated(el);\n        await nextFrame();\n        await nextFrame();\n\n        expect(el.selected).to.deep.equal(['color-1', 'color-3']);\n    });\n    it('lazily accepts selection from DOM', async function () {\n        const el = await fixture<SwatchGroup>(html`\n            <sp-swatch-group selects=\"multiple\">\n                <sp-swatch value=\"color-0\" color=\"red\"></sp-swatch>\n                <sp-swatch value=\"color-1\" color=\"green\"></sp-swatch>\n                <sp-swatch value=\"color-2\" color=\"blue\"></sp-swatch>\n                <sp-swatch value=\"color-3\" color=\"yellow\" selected></sp-swatch>\n            </sp-swatch-group>\n        `);\n\n        await elementUpdated(el);\n        await nextFrame();\n        await nextFrame();\n        const color1 = el.querySelector('[value=\"color-1\"]') as Swatch;\n\n        expect(el.selected).to.deep.equal(['color-3']);\n\n        color1.selected = true;\n        await elementUpdated(el);\n        await nextFrame();\n        await nextFrame();\n\n        expect(el.selected).to.deep.equal(['color-3', 'color-1']);\n    });\n    it('clears previously selected children when updating `selected`', async () => {\n        const el = await fixture<SwatchGroup>(html`\n            <sp-swatch-group selects=\"single\" .selected=${['color-1']}>\n                <sp-swatch value=\"color-0\" color=\"red\"></sp-swatch>\n                <sp-swatch value=\"color-1\" color=\"green\"></sp-swatch>\n                <sp-swatch value=\"color-2\" color=\"blue\"></sp-swatch>\n            </sp-swatch-group>\n        `);\n        await elementUpdated(el);\n        expect(el.selected).to.deep.equal(['color-1']);\n        el.selected = ['color-2'];\n        await elementUpdated(el);\n        expect(el.selected).to.deep.equal(['color-2']);\n    });\n});\n\ndescribe('Swatch Group - slotted', () => {\n    it('manages [selects=\"single\"] selection through multiple slots', async () => {\n        const test = await fixture<HTMLDivElement>(\n            html`\n                <div>\n                    <sp-swatch value=\"First\">First</sp-swatch>\n                    <sp-swatch value=\"Second\">Second</sp-swatch>\n                    <sp-swatch value=\"Third\" selected>Third</sp-swatch>\n                </div>\n            `\n        );\n\n        const firstItem = test.querySelector('sp-swatch') as Swatch;\n        const thirdItem = test.querySelector('sp-swatch[selected]') as Swatch;\n\n        const shadowRoot = test.attachShadow({ mode: 'open' });\n        shadowRoot.innerHTML = `\n            <sp-swatch-group label=\"Selects Single Group\" selects=\"single\">\n                <slot></slot>\n            </sp-swatch-group>\n        `;\n\n        const el = shadowRoot.querySelector('sp-swatch-group') as SwatchGroup;\n        await elementUpdated(el);\n        // Await test slot change time.\n        await nextFrame();\n        await nextFrame();\n\n        expect(el.selected, '\"Third\" selected').to.deep.equal(['Third']);\n        expect(firstItem.selected).to.be.false;\n        expect(thirdItem.selected).to.be.true;\n\n        firstItem.click();\n        await elementUpdated(el);\n\n        expect(el.selected, '\"First\" selected').to.deep.equal(['First']);\n        expect(firstItem.selected).to.be.true;\n        expect(thirdItem.selected).to.be.false;\n    });\n});\n"],
  "mappings": "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",
  "names": []
}
