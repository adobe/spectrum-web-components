{
  "version": 3,
  "sources": ["Switch.ts"],
  "sourcesContent": ["/*\nCopyright 2020 Adobe. All rights reserved.\nThis file is licensed to you under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License. You may obtain a copy\nof the License at http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software distributed under\nthe License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\nOF ANY KIND, either express or implied. See the License for the specific language\ngoverning permissions and limitations under the License.\n*/\n\nimport {\n    CSSResultArray,\n    html,\n    PropertyValues,\n    SizedMixin,\n    TemplateResult,\n} from '@spectrum-web-components/base';\nimport { property } from '@spectrum-web-components/base/src/decorators.js';\nimport { CheckboxBase } from '@spectrum-web-components/checkbox/src/CheckboxBase.js';\nimport switchStyles from './switch.css.js';\nimport legacyStyles from './switch-legacy.css.js';\n\n/**\n * @element sp-switch\n *\n * @slot - text label of the Switch\n * @fires change - Announces a change in the `checked` property of a Switch\n */\nexport class Switch extends SizedMixin(CheckboxBase) {\n    public static override get styles(): CSSResultArray {\n        /* c8 ignore next 4 */\n        if (window.hasOwnProperty('ShadyDOM')) {\n            // Override some styles if we are using the web component polyfill\n            return [switchStyles, legacyStyles];\n        }\n        return [switchStyles];\n    }\n\n    @property({ type: Boolean, reflect: true })\n    public emphasized = false;\n\n    protected override render(): TemplateResult {\n        return html`\n            ${super.render()}\n            <span id=\"switch\"></span>\n            <label id=\"label\" for=\"input\"><slot></slot></label>\n        `;\n    }\n\n    protected override firstUpdated(changes: PropertyValues): void {\n        super.firstUpdated(changes);\n        this.inputElement.setAttribute('role', 'switch');\n    }\n\n    protected override updated(changes: PropertyValues): void {\n        if (changes.has('checked')) {\n            this.inputElement.setAttribute(\n                'aria-checked',\n                this.checked ? 'true' : 'false'\n            );\n        }\n    }\n}\n"],
  "mappings": "qNAYA,OAEI,QAAAA,EAEA,cAAAC,MAEG,gCACP,OAAS,YAAAC,MAAgB,kDACzB,OAAS,gBAAAC,MAAoB,wDAC7B,OAAOC,MAAkB,kBACzB,OAAOC,MAAkB,yBAQlB,aAAM,eAAeJ,EAAWE,CAAY,CAAE,CAA9C,kCAWH,KAAO,WAAa,GAVpB,WAA2B,QAAyB,CAEhD,OAAI,OAAO,eAAe,UAAU,EAEzB,CAACC,EAAcC,CAAY,EAE/B,CAACD,CAAY,CACxB,CAKmB,QAAyB,CACxC,OAAOJ;AAAA,cACD,MAAM,OAAO,CAAC;AAAA;AAAA;AAAA,SAIxB,CAEmB,aAAaM,EAA+B,CAC3D,MAAM,aAAaA,CAAO,EAC1B,KAAK,aAAa,aAAa,OAAQ,QAAQ,CACnD,CAEmB,QAAQA,EAA+B,CAClDA,EAAQ,IAAI,SAAS,GACrB,KAAK,aAAa,aACd,eACA,KAAK,QAAU,OAAS,OAC5B,CAER,CACJ,CAvBWC,EAAA,CADNL,EAAS,CAAE,KAAM,QAAS,QAAS,EAAK,CAAC,GAVjC,OAWF",
  "names": ["html", "SizedMixin", "property", "CheckboxBase", "switchStyles", "legacyStyles", "changes", "__decorateClass"]
}
