{
  "version": 3,
  "sources": ["Checkbox.ts"],
  "sourcesContent": ["/*\nCopyright 2020 Adobe. All rights reserved.\nThis file is licensed to you under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License. You may obtain a copy\nof the License at http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software distributed under\nthe License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\nOF ANY KIND, either express or implied. See the License for the specific language\ngoverning permissions and limitations under the License.\n*/\n\nimport {\n    CSSResultArray,\n    DefaultElementSize,\n    html,\n    PropertyValues,\n    SizedMixin,\n    SpectrumElement,\n    TemplateResult,\n} from '@spectrum-web-components/base';\nimport { property } from '@spectrum-web-components/base/src/decorators.js';\nimport { CheckboxMixin } from './CheckboxMixin.js';\nimport checkboxStyles from './checkbox.css.js';\nimport '@spectrum-web-components/icons-ui/icons/sp-icon-checkmark75.js';\nimport '@spectrum-web-components/icons-ui/icons/sp-icon-checkmark100.js';\nimport '@spectrum-web-components/icons-ui/icons/sp-icon-checkmark200.js';\nimport '@spectrum-web-components/icons-ui/icons/sp-icon-checkmark300.js';\nimport '@spectrum-web-components/icons-ui/icons/sp-icon-dash75.js';\nimport '@spectrum-web-components/icons-ui/icons/sp-icon-dash100.js';\nimport '@spectrum-web-components/icons-ui/icons/sp-icon-dash200.js';\nimport '@spectrum-web-components/icons-ui/icons/sp-icon-dash300.js';\nimport checkmarkSmallStyles from '@spectrum-web-components/icon/src/spectrum-icon-checkmark.css.js';\nimport dashSmallStyles from '@spectrum-web-components/icon/src/spectrum-icon-dash.css.js';\n\nconst checkmarkIcon = {\n    s: () => {\n        return html`\n            <sp-icon-checkmark75\n                id=\"checkmark\"\n                class=\"spectrum-Icon spectrum-UIIcon-Checkmark75\"\n            ></sp-icon-checkmark75>\n        `;\n    },\n    m: () => {\n        return html`\n            <sp-icon-checkmark100\n                id=\"checkmark\"\n                class=\"spectrum-Icon spectrum-UIIcon-Checkmark100\"\n            ></sp-icon-checkmark100>\n        `;\n    },\n    l: () => {\n        return html`\n            <sp-icon-checkmark200\n                id=\"checkmark\"\n                class=\"spectrum-Icon spectrum-UIIcon-Checkmark200\"\n            ></sp-icon-checkmark200>\n        `;\n    },\n    xl: () => {\n        return html`\n            <sp-icon-checkmark300\n                id=\"checkmark\"\n                class=\"spectrum-Icon spectrum-UIIcon-Checkmark300\"\n            ></sp-icon-checkmark300>\n        `;\n    },\n};\n\nconst dashIcon = {\n    s: () => {\n        return html`\n            <sp-icon-dash75\n                id=\"partialCheckmark\"\n                class=\"spectrum-Icon spectrum-UIIcon-Dash75\"\n            ></sp-icon-dash75>\n        `;\n    },\n    m: () => {\n        return html`\n            <sp-icon-dash100\n                id=\"partialCheckmark\"\n                class=\"spectrum-Icon spectrum-UIIcon-Dash100\"\n            ></sp-icon-dash100>\n        `;\n    },\n    l: () => {\n        return html`\n            <sp-icon-dash200\n                id=\"partialCheckmark\"\n                class=\"spectrum-Icon spectrum-UIIcon-Dash200\"\n            ></sp-icon-dash200>\n        `;\n    },\n    xl: () => {\n        return html`\n            <sp-icon-dash300\n                id=\"partialCheckmark\"\n                class=\"spectrum-Icon spectrum-UIIcon-Dash300\"\n            ></sp-icon-dash300>\n        `;\n    },\n};\n\n/**\n * @element sp-checkbox\n * @slot - content to display as the label for the Checkbox\n * @fires change - Announces a change in the `checked` property of a Checkbox\n */\nexport class Checkbox extends SizedMixin(CheckboxMixin(SpectrumElement), {\n    noDefaultSize: true,\n}) {\n    static override shadowRootOptions = {\n        ...SpectrumElement.shadowRootOptions,\n        delegatesFocus: true,\n    };\n\n    /**\n     * Disable this control. It will not receive focus or events\n     */\n    @property({ type: Boolean, reflect: true })\n    public disabled = false;\n\n    @property({ type: Boolean, reflect: true })\n    public indeterminate = false;\n\n    @property({ type: Boolean, reflect: true })\n    public invalid = false;\n\n    @property({ type: Boolean, reflect: true })\n    public emphasized = false;\n\n    @property({ reflect: true, type: Number, attribute: 'tabindex' })\n    public override tabIndex = 0;\n\n    public override connectedCallback(): void {\n        super.connectedCallback();\n        if (this.hasAttribute('autofocus')) {\n            this.updateComplete.then(() => {\n                this.focus();\n            });\n        }\n    }\n\n    public static override get styles(): CSSResultArray {\n        return [checkboxStyles, checkmarkSmallStyles, dashSmallStyles];\n    }\n\n    public override click(): void {\n        if (this.disabled) {\n            return;\n        }\n\n        this.inputElement?.click();\n    }\n\n    public override handleChange(): void {\n        this.indeterminate = false;\n        super.handleChange();\n    }\n\n    protected override render(): TemplateResult {\n        return html`\n            ${super.render()}\n            <span id=\"box\">\n                ${this.checked\n                    ? checkmarkIcon[this.size as DefaultElementSize]()\n                    : html``}\n                ${this.indeterminate\n                    ? dashIcon[this.size as DefaultElementSize]()\n                    : html``}\n            </span>\n            <label id=\"label\" for=\"input\"><slot></slot></label>\n        `;\n    }\n\n    protected override updated(changes: PropertyValues): void {\n        super.updated(changes);\n        if (\n            changes.has('disabled') &&\n            (typeof changes.get('disabled') !== 'undefined' || this.disabled)\n        ) {\n            if (this.disabled) {\n                this.inputElement.tabIndex = this.tabIndex;\n                this.tabIndex = -1;\n            } else {\n                this.tabIndex = this.inputElement.tabIndex;\n                this.inputElement.removeAttribute('tabindex');\n            }\n            this.inputElement.disabled = this.disabled;\n        }\n        if (changes.has('indeterminate')) {\n            this.inputElement.indeterminate = this.indeterminate;\n        }\n        if (changes.has('invalid')) {\n            if (this.invalid) {\n                this.inputElement.setAttribute('aria-invalid', 'true');\n            } else {\n                this.inputElement.removeAttribute('aria-invalid');\n            }\n        }\n    }\n}\n"],
  "mappings": "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",
  "names": ["html", "SizedMixin", "SpectrumElement", "property", "CheckboxMixin", "checkboxStyles", "checkmarkSmallStyles", "dashSmallStyles", "checkmarkIcon", "dashIcon", "_a", "changes", "__decorateClass"]
}
