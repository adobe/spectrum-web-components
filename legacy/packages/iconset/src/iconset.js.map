{
  "version": 3,
  "sources": ["iconset.ts"],
  "sourcesContent": ["/*\nCopyright 2020 Adobe. All rights reserved.\nThis file is licensed to you under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License. You may obtain a copy\nof the License at http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software distributed under\nthe License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\nOF ANY KIND, either express or implied. See the License for the specific language\ngoverning permissions and limitations under the License.\n*/\nimport { IconsetRegistry } from './iconset-registry.js';\n\nimport { LitElement } from '@spectrum-web-components/base';\nimport { property } from '@spectrum-web-components/base/src/decorators.js';\n\nexport abstract class Iconset extends LitElement {\n    protected registered = false;\n\n    private _name!: string;\n\n    protected override firstUpdated(): void {\n        // force no display for all iconsets\n        this.style.display = 'none';\n        if (window.__swc.DEBUG) {\n            window.__swc.warn(\n                this,\n                'Iconsets have been deprecated and will be removed from the project in an upcoming version. For default Spectrum Icons, learn more about leveraging UI Icons (https://opensource.adobe.com/spectrum-web-components/components/icons-ui/) or Workflow Icons (https://opensource.adobe.com/spectrum-web-components/components/icons-workflow/) as an alternative.',\n                'https://opensource.adobe.com/spectrum-web-components/components/iconset/#deprecated',\n                { level: 'deprecation' }\n            );\n        }\n    }\n\n    /**\n     * Name of the iconset, used by the IconsetRegistry to serve this icon set\n     * to consuming icons.\n     */\n    @property()\n    public set name(value: string) {\n        // if we're already registered in the iconset registry\n        // we'll need to update our registration\n        if (this.registered) {\n            if (this._name) {\n                // remove from the iconset map using the old name\n                IconsetRegistry.getInstance().removeIconset(this._name);\n            }\n\n            if (value) {\n                // set in the map using the new name\n                IconsetRegistry.getInstance().addIconset(value, this);\n            }\n        }\n        this._name = value;\n    }\n    public get name(): string {\n        return this._name;\n    }\n\n    /**\n     * Applies an icon to the given element\n     */\n    public abstract applyIconToElement(\n        el: HTMLElement,\n        icon: string,\n        size: string,\n        label: string\n    ): void;\n\n    /**\n     * Returns a list of all icons in this iconset.\n     */\n    public abstract getIconList(): string[];\n\n    private handleRemoved = ({\n        detail,\n    }: {\n        detail: { name: string };\n    }): void => {\n        if (detail.name === this.name) {\n            this.registered = false;\n            this.addIconset();\n        }\n    };\n\n    /**\n     * On updated we register the iconset if we're not already registered\n     */\n    public override connectedCallback(): void {\n        super.connectedCallback();\n        this.addIconset();\n        window.addEventListener('sp-iconset-removed', this.handleRemoved);\n    }\n    /**\n     * On disconnected we remove the iconset\n     */\n    public override disconnectedCallback(): void {\n        super.disconnectedCallback();\n        window.removeEventListener('sp-iconset-removed', this.handleRemoved);\n        this.removeIconset();\n    }\n\n    private addIconset(): void {\n        if (!this.name || this.registered) {\n            return;\n        }\n        IconsetRegistry.getInstance().addIconset(this.name, this);\n        this.registered = true;\n    }\n\n    private removeIconset(): void {\n        if (!this.name) {\n            return;\n        }\n        IconsetRegistry.getInstance().removeIconset(this.name);\n        this.registered = false;\n    }\n}\n"],
  "mappings": "qNAWA,OAAS,mBAAAA,MAAuB,wBAEhC,OAAS,cAAAC,MAAkB,gCAC3B,OAAS,YAAAC,MAAgB,kDAElB,aAAe,gBAAgBD,CAAW,CAA1C,kCACH,KAAU,WAAa,GAyDvB,KAAQ,cAAgB,CAAC,CACrB,OAAAE,CACJ,IAEY,CACJA,EAAO,OAAS,KAAK,OACrB,KAAK,WAAa,GAClB,KAAK,WAAW,EAExB,EA9DmB,cAAqB,CAEpC,KAAK,MAAM,QAAU,MASzB,CAOA,IAAW,KAAKC,EAAe,CAGvB,KAAK,aACD,KAAK,OAELJ,EAAgB,YAAY,EAAE,cAAc,KAAK,KAAK,EAGtDI,GAEAJ,EAAgB,YAAY,EAAE,WAAWI,EAAO,IAAI,GAG5D,KAAK,MAAQA,CACjB,CACA,IAAW,MAAe,CACtB,OAAO,KAAK,KAChB,CA+BgB,mBAA0B,CACtC,MAAM,kBAAkB,EACxB,KAAK,WAAW,EAChB,OAAO,iBAAiB,qBAAsB,KAAK,aAAa,CACpE,CAIgB,sBAA6B,CACzC,MAAM,qBAAqB,EAC3B,OAAO,oBAAoB,qBAAsB,KAAK,aAAa,EACnE,KAAK,cAAc,CACvB,CAEQ,YAAmB,CACnB,CAAC,KAAK,MAAQ,KAAK,aAGvBJ,EAAgB,YAAY,EAAE,WAAW,KAAK,KAAM,IAAI,EACxD,KAAK,WAAa,GACtB,CAEQ,eAAsB,CACrB,KAAK,OAGVA,EAAgB,YAAY,EAAE,cAAc,KAAK,IAAI,EACrD,KAAK,WAAa,GACtB,CACJ,CA9EeK,EAAA,CADVH,EAAS,GAtBQ,QAuBP",
  "names": ["IconsetRegistry", "LitElement", "property", "detail", "value", "__decorateClass"]
}
