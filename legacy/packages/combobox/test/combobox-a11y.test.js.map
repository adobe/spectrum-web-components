{
  "version": 3,
  "sources": ["combobox-a11y.test.ts"],
  "sourcesContent": ["/*\nCopyright 2020 Adobe. All rights reserved.\nThis file is licensed to you under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License. You may obtain a copy\nof the License at http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software distributed under\nthe License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\nOF ANY KIND, either express or implied. See the License for the specific language\ngoverning permissions and limitations under the License.\n*/\n\nimport {\n    elementUpdated,\n    expect,\n    html,\n    nextFrame,\n    oneEvent,\n} from '@open-wc/testing';\n\nimport '@spectrum-web-components/combobox/sp-combobox.js';\nimport { Combobox } from '@spectrum-web-components/combobox';\nimport { fixture } from '../../../test/testing-helpers.js';\nimport { findDescribedNode } from '../../../test/testing-helpers-a11y.js';\nimport {\n    a11ySnapshot,\n    findAccessibilityNode,\n    sendKeys,\n} from '@web/test-runner-commands';\nimport type { AccessibleNamedNode } from './helpers.js';\nimport { comboboxFixture } from './helpers.js';\nimport {\n    withFieldLabel,\n    withHelpText,\n    withTooltip,\n} from '../stories/combobox.stories.js';\nimport { MenuItem } from '@spectrum-web-components/menu';\n\ndescribe('Combobox accessibility', () => {\n    it('renders accessibly with `label` attribute', async () => {\n        const el = await comboboxFixture();\n        const opened = oneEvent(el, 'sp-opened');\n        el.open = true;\n        await opened;\n\n        await elementUpdated(el);\n        await expect(el).to.be.accessible();\n    });\n    it('renders accessibly with <sp-field-label>', async () => {\n        const test = await fixture<HTMLDivElement>(html`\n            <div>${withFieldLabel()}</div>\n        `);\n        const el = test.querySelector('sp-combobox') as unknown as Combobox;\n\n        await elementUpdated(el);\n\n        await expect(el).to.be.accessible();\n    });\n    it('renders accessibly with <sp-help-text>', async () => {\n        const test = await fixture<HTMLDivElement>(html`\n            <div>${withHelpText()}</div>\n        `);\n        const el = test.querySelector('sp-combobox') as unknown as Combobox;\n\n        await elementUpdated(el);\n\n        await expect(el).to.be.accessible();\n    });\n    it('manages its \"name\" value with <sp-field-label>', async () => {\n        const test = await fixture<HTMLDivElement>(html`\n            <div>${withFieldLabel()}</div>\n        `);\n        const el = test.querySelector('sp-combobox') as unknown as Combobox;\n\n        await elementUpdated(el);\n        await nextFrame();\n        await nextFrame();\n\n        let snapshot = (await a11ySnapshot(\n            {}\n        )) as unknown as AccessibleNamedNode & {\n            children: AccessibleNamedNode[];\n        };\n\n        const a11yNode = findAccessibilityNode<AccessibleNamedNode>(\n            snapshot,\n            (node) =>\n                node.name === 'Pick something' && !node.value && node.role === 'combobox'\n        );\n        // by default, is there a combobox that has `name` as the label?\n        expect(a11yNode, '`name` is the label text').to.not.be.null;\n\n        el.value = 'Banana';\n        await elementUpdated(el);\n\n        snapshot = (await a11ySnapshot(\n            {}\n        )) as unknown as AccessibleNamedNode & {\n            children: AccessibleNamedNode[];\n        };\n        const node = findAccessibilityNode<AccessibleNamedNode>(\n            snapshot,\n            (node) =>\n                node.name === 'Pick something' &&\n                node.value === 'Banana' &&\n                node.role === 'combobox'\n        );\n\n        expect(\n            node,\n            `node not available: ${JSON.stringify(\n                snapshot,\n                null,\n                '  '\n            )}`\n        ).to.not.be.null;\n    });\n    it('manages its \"name\" value in the accessibility tree', async () => {\n        const el = await comboboxFixture();\n\n        await elementUpdated(el);\n        await nextFrame();\n        await nextFrame();\n\n        let snapshot = (await a11ySnapshot(\n            {}\n        )) as unknown as AccessibleNamedNode & {\n            children: AccessibleNamedNode[];\n        };\n\n        const a11yNode = findAccessibilityNode<AccessibleNamedNode>(\n            snapshot,\n            (node) =>\n                node.name === 'Combobox' && !node.value && node.role === 'combobox'\n        );\n        // by default, is there a combobox that has `name` as the label?\n        expect(a11yNode, '`name` is the label text').to.not.be.null;\n\n        el.value = 'Banana';\n        await elementUpdated(el);\n\n        snapshot = (await a11ySnapshot(\n            {}\n        )) as unknown as AccessibleNamedNode & {\n            children: AccessibleNamedNode[];\n        };\n        const node = findAccessibilityNode<AccessibleNamedNode>(\n            snapshot,\n            (node) =>\n                node.name === 'Combobox' &&\n                node.value === 'Banana' &&\n                node.role === 'combobox'\n        );\n\n        expect(\n            node,\n            `node not available: ${JSON.stringify(\n                snapshot,\n                null,\n                '  '\n            )}`\n        ).to.not.be.null;\n    });\n    it('manages its \"description\" value with slotted <sp-tooltip>', async () => {\n        const test = await fixture<HTMLDivElement>(html`\n            <div>${withTooltip()}</div>\n        `);\n        const el = test.querySelector('sp-combobox') as unknown as Combobox;\n        const tooltipText = 'This combobox has a tooltip.';\n\n        await elementUpdated(el);\n        await findDescribedNode(el.label, tooltipText);\n    });\n    it('renders open', async () => {\n        const el = await comboboxFixture();\n\n        const opened = oneEvent(el, 'sp-opened');\n        el.open = true;\n        await opened;\n\n        await elementUpdated(el);\n        await expect(el).to.be.accessible();\n    });\n    it('manages aria-activedescendant', async () => {\n        // a11ySnapshot does not track the aria-activedescendant, hence querySelecting\n        const el = await comboboxFixture();\n        await elementUpdated(el);\n\n        expect(el.activeDescendant).to.be.undefined;\n\n        el.focus();\n        await elementUpdated(el);\n\n        await sendKeys({\n            press: 'ArrowDown',\n        });\n        await elementUpdated(el);\n\n        expect(el.activeDescendant).to.not.be.undefined;\n        expect(el.activeDescendant.value).to.equal('apple');\n\n        // aria-activedescendant should keep the combobox focused even when navigating the menu\n        const activeDescendant = el.shadowRoot.querySelector(\n            '#apple'\n        ) as MenuItem;\n\n        await elementUpdated(activeDescendant);\n        // Menu Item association with a Menu happens outside of the update lifecycle\n        await nextFrame();\n        await nextFrame();\n\n        expect(activeDescendant.focused).to.be.true;\n        expect(el.focused).to.be.true;\n        await expect(el).to.be.accessible();\n    });\n    it('manages aria-selected', async () => {\n        const el = await comboboxFixture();\n\n        await elementUpdated(el);\n\n        type SelectedNode = { selected?: boolean };\n        let snapshot = (await a11ySnapshot({})) as unknown as SelectedNode & {\n            children: SelectedNode[];\n        };\n\n        expect(\n            findAccessibilityNode<SelectedNode>(\n                snapshot,\n                (node) => !!node.selected\n            )\n        ).to.be.null;\n\n        const opened = oneEvent(el, 'sp-opened');\n        el.click();\n        await opened;\n        await elementUpdated(el);\n        expect(el.open).to.be.true;\n\n        el.focus();\n        await elementUpdated(el);\n\n        await sendKeys({\n            press: 'ArrowDown',\n        });\n        await elementUpdated(el);\n\n        expect(el.activeDescendant.value).to.equal('apple');\n        snapshot = (await a11ySnapshot({})) as unknown as SelectedNode & {\n            children: SelectedNode[];\n        };\n        expect(\n            findAccessibilityNode<SelectedNode>(\n                snapshot,\n                (node) => !!node.selected\n            ),\n            JSON.stringify(snapshot, null, '  ')\n        ).to.not.be.null;\n    });\n    it('manages aria-expanded', async () => {\n        const el = await comboboxFixture();\n\n        await elementUpdated(el);\n\n        type ExpandedNode = { expanded?: boolean };\n        let snapshot = (await a11ySnapshot({})) as unknown as ExpandedNode & {\n            children: ExpandedNode[];\n        };\n\n        expect(\n            findAccessibilityNode<ExpandedNode>(\n                snapshot,\n                (node) => !!node.expanded\n            )\n        ).to.be.null;\n\n        el.click();\n        await elementUpdated(el);\n        expect(el.open).to.be.true;\n\n        snapshot = (await a11ySnapshot({})) as unknown as ExpandedNode & {\n            children: ExpandedNode[];\n        };\n        expect(\n            findAccessibilityNode<ExpandedNode>(\n                snapshot,\n                (node) => !!node.expanded\n            )\n        ).to.not.be.null;\n    });\n    it('loads with list closed', async () => {\n        const el = await comboboxFixture();\n\n        await elementUpdated(el);\n\n        expect(el.open).to.be.false;\n    });\n    it('renders accessibly with `pending` attribute', async () => {\n        const el = await comboboxFixture();\n        el.value = 'Banana';\n        el.pending = true;\n\n        await elementUpdated(el);\n        await nextFrame();\n\n        const name = 'Pending Combobox';\n\n        const snapshot = (await a11ySnapshot(\n            {}\n        )) as unknown as AccessibleNamedNode & {\n            children: AccessibleNamedNode[];\n        };\n\n        const a11yNode = findAccessibilityNode<AccessibleNamedNode>(\n            snapshot,\n            (node) => node.name === name && node.role === 'combobox'\n        );\n\n        expect(a11yNode).to.not.be.null;\n    });\n});\n"],
  "mappings": "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",
  "names": ["node"]
}
