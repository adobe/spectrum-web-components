{
  "version": 3,
  "sources": ["Combobox.ts"],
  "sourcesContent": ["/*\nCopyright 2020 Adobe. All rights reserved.\nThis file is licensed to you under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License. You may obtain a copy\nof the License at http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software distributed under\nthe License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\nOF ANY KIND, either express or implied. See the License for the specific language\ngoverning permissions and limitations under the License.\n*/\n\nimport {\n    CSSResultArray,\n    html,\n    nothing,\n    TemplateResult,\n} from '@spectrum-web-components/base';\nimport { ComboboxBase } from './combobox.base.js';\nimport {\n    ifDefined,\n    live,\n    repeat,\n} from '@spectrum-web-components/base/src/directives.js';\nimport '@spectrum-web-components/overlay/sp-overlay.js';\nimport '@spectrum-web-components/icons-ui/icons/sp-icon-chevron100.js';\nimport '@spectrum-web-components/popover/sp-popover.js';\nimport '@spectrum-web-components/menu/sp-menu.js';\nimport '@spectrum-web-components/menu/sp-menu-item.js';\nimport '@spectrum-web-components/picker-button/sp-picker-button.js';\nimport chevronStyles from '@spectrum-web-components/icon/src/spectrum-icon-chevron.css.js';\n\nimport styles from './combobox.css.js';\n\nexport class Combobox extends ComboboxBase {\n    public static override get styles(): CSSResultArray {\n        return [...super.styles, chevronStyles, styles];\n    }\n\n    protected renderAppliedLabel(): TemplateResult {\n        /**\n         * appliedLabel corresponds to `<label for=\"...\">`, which is overriden\n         * if user adds the `label` attribute manually to `<sp-combobox>`.\n         **/\n        const appliedLabel = this.label || this.appliedLabel;\n\n        return html`\n            ${this.pending\n                ? html`\n                      <span\n                          aria-hidden=\"true\"\n                          class=\"visually-hidden\"\n                          id=\"pending-label\"\n                      >\n                          ${this.pendingLabel}\n                      </span>\n                  `\n                : nothing}\n            ${this.value\n                ? html`\n                      <span\n                          aria-hidden=\"true\"\n                          class=\"visually-hidden\"\n                          id=\"applied-label\"\n                      >\n                          ${appliedLabel}\n                      </span>\n                      <slot name=\"label\" id=\"label\">\n                          <span class=\"visually-hidden\" aria-hidden=\"true\">\n                              ${this.value}\n                          </span>\n                      </slot>\n                  `\n                : html`\n                      <span hidden id=\"applied-label\">${appliedLabel}</span>\n                  `}\n        `;\n    }\n\n    protected renderLoader(): TemplateResult {\n        import(\n            '@spectrum-web-components/progress-circle/sp-progress-circle.js'\n        );\n        return html`\n            <sp-progress-circle\n                size=\"s\"\n                indeterminate\n                aria-hidden=\"true\"\n                class=\"progress-circle\"\n            ></sp-progress-circle>\n        `;\n    }\n\n    protected override renderField(): TemplateResult {\n        return html`\n            ${this.renderStateIcons()}\n            <input\n                aria-activedescendant=${ifDefined(\n                    this.activeDescendant\n                        ? `${this.activeDescendant.value}`\n                        : undefined\n                )}\n                aria-autocomplete=${ifDefined(\n                    this.autocomplete as 'list' | 'none'\n                )}\n                aria-controls=${ifDefined(\n                    this.open ? 'listbox-menu' : undefined\n                )}\n                aria-describedby=\"${this.helpTextId} tooltip\"\n                aria-expanded=\"${this.open ? 'true' : 'false'}\"\n                aria-label=${ifDefined(this.label || this.appliedLabel)}\n                aria-labelledby=\"pending-label applied-label label\"\n                aria-invalid=${ifDefined(this.invalid || undefined)}\n                autocomplete=\"off\"\n                @click=${this.toggleOpen}\n                @keydown=${this.handleComboboxKeydown}\n                id=\"input\"\n                class=\"input\"\n                role=\"combobox\"\n                type=\"text\"\n                .value=${live(this.displayValue)}\n                tabindex=\"0\"\n                @sp-closed=${this.handleClosed}\n                @sp-opened=${this.handleOpened}\n                maxlength=${ifDefined(\n                    this.maxlength > -1 ? this.maxlength : undefined\n                )}\n                minlength=${ifDefined(\n                    this.minlength > -1 ? this.minlength : undefined\n                )}\n                pattern=${ifDefined(this.pattern)}\n                @change=${this.handleChange}\n                @input=${this.handleInput}\n                @focus=${this.onFocus}\n                @blur=${this.onBlur}\n                ?disabled=${this.disabled}\n                ?required=${this.required}\n                ?readonly=${this.readonly}\n            />\n            ${this.pendingStateController.renderPendingState()}\n        `;\n    }\n    protected override render(): TemplateResult {\n        const width = (this.input || this).offsetWidth;\n\n        return html`\n            ${super.render()}\n            <sp-picker-button\n                aria-controls=\"listbox-menu\"\n                aria-describedby=\"${this.helpTextId} tooltip\"\n                aria-expanded=${this.open ? 'true' : 'false'}\n                aria-label=${ifDefined(this.label || this.appliedLabel)}\n                aria-labelledby=\"applied-label label\"\n                @click=${this.toggleOpen}\n                tabindex=\"-1\"\n                class=\"button ${this.focused\n                    ? 'focus-visible is-keyboardFocused'\n                    : ''}\"\n                ?disabled=${this.disabled}\n                ?focused=${this.focused}\n                ?quiet=${this.quiet}\n                size=${this.size}\n            ></sp-picker-button>\n            <sp-overlay\n                ?open=${this.open}\n                .triggerElement=${this.input}\n                offset=\"0\"\n                placement=\"bottom-start\"\n                .receivesFocus=${'false'}\n                role=\"presentation\"\n            >\n                <sp-popover\n                    id=\"listbox\"\n                    ?open=${this.open}\n                    role=\"presentation\"\n                    ?hidden=${this.availableOptions.length === 0}\n                >\n                    <sp-menu\n                        @change=${this.handleMenuChange}\n                        tabindex=\"-1\"\n                        aria-labelledby=\"label applied-label\"\n                        aria-label=${ifDefined(this.label || this.appliedLabel)}\n                        id=\"listbox-menu\"\n                        role=\"listbox\"\n                        selects=${ifDefined(\n                            this.autocomplete === 'none' ? 'single' : undefined\n                        )}\n                        .selected=${this.autocomplete === 'none' &&\n                        this.itemValue\n                            ? [this.itemValue]\n                            : []}\n                        style=\"min-width: ${width}px;\"\n                        size=${this.size}\n                    >\n                        ${this.overlayOpen\n                            ? repeat(\n                                  this.availableOptions,\n                                  (option) => option.value,\n                                  (option) => {\n                                      return html`\n                                          <sp-menu-item\n                                              id=\"${option.value}\"\n                                              ?focused=${this.activeDescendant\n                                                  ?.value === option.value}\n                                              aria-selected=${this\n                                                  .activeDescendant?.value ===\n                                              option.value\n                                                  ? 'true'\n                                                  : 'false'}\n                                              .value=${option.value}\n                                              .selected=${option.value ===\n                                              this.itemValue}\n                                              ?disabled=${option.disabled}\n                                          >\n                                              ${option.itemText}\n                                          </sp-menu-item>\n                                      `;\n                                  }\n                              )\n                            : html``}\n                        <slot\n                            hidden\n                            @slotchange=${this.handleSlotchange}\n                        ></slot>\n                    </sp-menu>\n                </sp-popover>\n            </sp-overlay>\n            ${this.renderAppliedLabel()}\n            <slot\n                aria-hidden=\"true\"\n                name=\"tooltip\"\n                id=\"tooltip\"\n                @slotchange=${this.handleTooltipSlotchange}\n            ></slot>\n        `;\n    }\n}\n"],
  "mappings": "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",
  "names": ["html", "nothing", "ComboboxBase", "ifDefined", "live", "repeat", "chevronStyles", "styles", "appliedLabel", "width", "option", "_a", "_b"]
}
