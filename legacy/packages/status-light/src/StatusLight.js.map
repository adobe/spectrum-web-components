{
  "version": 3,
  "sources": ["StatusLight.ts"],
  "sourcesContent": ["/*\nCopyright 2020 Adobe. All rights reserved.\nThis file is licensed to you under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License. You may obtain a copy\nof the License at http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software distributed under\nthe License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\nOF ANY KIND, either express or implied. See the License for the specific language\ngoverning permissions and limitations under the License.\n*/\n\nimport {\n    CSSResultArray,\n    html,\n    PropertyValues,\n    SizedMixin,\n    SpectrumElement,\n    TemplateResult,\n} from '@spectrum-web-components/base';\nimport { property } from '@spectrum-web-components/base/src/decorators.js';\nimport statusLightStyles from './status-light.css.js';\n\n/**\n * @element sp-status-light\n *\n * @slot - text label of the Status Light\n */\nexport class StatusLight extends SizedMixin(SpectrumElement, {\n    noDefaultSize: true,\n}) {\n    public static override get styles(): CSSResultArray {\n        return [statusLightStyles];\n    }\n\n    /**\n     * A status light in a disabled state shows that a status exists, but is not available in that circumstance. This can be used to maintain layout continuity and communicate that a status may become available later.\n     */\n    @property({ type: Boolean, reflect: true })\n    public disabled = false;\n\n    /**\n     * The visual variant to apply to this status light.\n     */\n    @property({ reflect: true })\n    public variant:\n        | 'negative'\n        | 'notice'\n        | 'positive'\n        | 'info'\n        | 'neutral'\n        | 'yellow'\n        | 'fuchsia'\n        | 'indigo'\n        | 'seafoam'\n        | 'chartreuse'\n        | 'magenta'\n        | 'celery'\n        | 'purple' = 'info';\n\n    protected override render(): TemplateResult {\n        return html`\n            <slot></slot>\n        `;\n    }\n\n    protected override updated(changes: PropertyValues): void {\n        super.updated(changes);\n        if (changes.has('disabled')) {\n            if (this.disabled) {\n                this.setAttribute('aria-disabled', 'true');\n            } else {\n                this.removeAttribute('aria-disabled');\n            }\n        }\n    }\n}\n"],
  "mappings": "qNAYA,OAEI,QAAAA,EAEA,cAAAC,EACA,mBAAAC,MAEG,gCACP,OAAS,YAAAC,MAAgB,kDACzB,OAAOC,MAAuB,wBAOvB,aAAM,oBAAoBH,EAAWC,EAAiB,CACzD,cAAe,EACnB,CAAC,CAAE,CAFI,kCAWH,KAAO,SAAW,GAMlB,KAAO,QAaU,OA3BjB,WAA2B,QAAyB,CAChD,MAAO,CAACE,CAAiB,CAC7B,CA2BmB,QAAyB,CACxC,OAAOJ;AAAA;AAAA,SAGX,CAEmB,QAAQK,EAA+B,CACtD,MAAM,QAAQA,CAAO,EACjBA,EAAQ,IAAI,UAAU,IAClB,KAAK,SACL,KAAK,aAAa,gBAAiB,MAAM,EAEzC,KAAK,gBAAgB,eAAe,EAGhD,CACJ,CArCWC,EAAA,CADNH,EAAS,CAAE,KAAM,QAAS,QAAS,EAAK,CAAC,GAVjC,YAWF,wBAMAG,EAAA,CADNH,EAAS,CAAE,QAAS,EAAK,CAAC,GAhBlB,YAiBF",
  "names": ["html", "SizedMixin", "SpectrumElement", "property", "statusLightStyles", "changes", "__decorateClass"]
}
