{
  "version": 3,
  "sources": ["card.stories.ts"],
  "sourcesContent": ["/*\nCopyright 2020 Adobe. All rights reserved.\nThis file is licensed to you under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License. You may obtain a copy\nof the License at http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software distributed under\nthe License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\nOF ANY KIND, either express or implied. See the License for the specific language\ngoverning permissions and limitations under the License.\n*/\nimport { html, TemplateResult } from '@spectrum-web-components/base';\n\nimport '@spectrum-web-components/card/sp-card.js';\nimport { landscape, portrait } from './images';\nimport '@spectrum-web-components/icons-workflow/icons/sp-icon-file-txt.js';\nimport '@spectrum-web-components/textfield/sp-textfield.js';\nimport '@spectrum-web-components/action-menu/sp-action-menu.js';\nimport '@spectrum-web-components/menu/sp-menu.js';\nimport '@spectrum-web-components/menu/sp-menu-item.js';\nimport '@spectrum-web-components/menu/sp-menu-divider.js';\nimport '@spectrum-web-components/link/sp-link.js';\n\nexport default {\n    component: 'sp-card',\n    title: 'Card',\n    args: {\n        horizontal: false,\n    },\n    argTypes: {\n        horizontal: {\n            name: 'horizontal',\n            type: { name: 'boolean', required: false },\n            table: {\n                type: { summary: 'boolean' },\n                defaultValue: { summary: false },\n            },\n            control: {\n                type: 'boolean',\n            },\n        },\n    },\n};\n\nexport interface StoryArgs {\n    horizontal?: boolean;\n    size?: 's' | 'm';\n    onClick?: ((event: Event) => void) | undefined;\n}\n\nexport const Default = (args: StoryArgs): TemplateResult => {\n    return html`\n        <sp-card\n            heading=\"Card Heading\"\n            subheading=\"JPG\"\n            ?horizontal=${args.horizontal}\n            style=\"width: 200px;\"\n        >\n            <img slot=\"cover-photo\" src=${portrait} alt=\"Demo Graphic\" />\n            <div slot=\"footer\">Footer</div>\n        </sp-card>\n    `;\n};\nDefault.args = {};\n\nexport const SmallQuiet = (args: StoryArgs): TemplateResult => {\n    const { onClick } = args;\n    return html`\n        <sp-card\n            heading=\"Card Heading\"\n            subheading=\"JPG\"\n            toggles\n            ?horizontal=${args.horizontal}\n            style=\"width: 200px;\"\n            href=\"https://opensource.adobe.com/spectrum-web-components\"\n            variant=\"quiet\"\n            size=\"s\"\n            toggles\n            @click=${(event: Event) => {\n                const composedTarget = event.composedPath()[0] as HTMLElement;\n                if (composedTarget.id !== 'like-anchor') return;\n                event.stopPropagation();\n                event.preventDefault();\n                onClick && onClick(event);\n            }}\n        >\n            <div slot=\"footer\">\n                Footer with a\n                <sp-link href=\"https://google.com\">link to Google</sp-link>\n            </div>\n            <sp-action-menu\n                label=\"More Actions\"\n                slot=\"actions\"\n                placement=\"bottom-end\"\n                quiet\n            >\n                <sp-menu-item>Deselect</sp-menu-item>\n                <sp-menu-item>Select Inverse</sp-menu-item>\n                <sp-menu-item>Feather...</sp-menu-item>\n                <sp-menu-item>Select and Mask...</sp-menu-item>\n                <sp-menu-divider></sp-menu-divider>\n                <sp-menu-item>Save Selection</sp-menu-item>\n                <sp-menu-item disabled>Make Work Path</sp-menu-item>\n            </sp-action-menu>\n            <img slot=\"cover-photo\" src=${portrait} alt=\"Demo Graphic\" />\n        </sp-card>\n    `;\n};\nSmallQuiet.argTypes = {\n    onClick: { action: 'link click' },\n};\n\nexport const href = (args: StoryArgs): TemplateResult => {\n    const { onClick } = args;\n    return html`\n        <sp-card\n            heading=\"Card Heading\"\n            subheading=\"JPG\"\n            toggles\n            ?horizontal=${args.horizontal}\n            style=\"width: 200px;\"\n            href=\"https://opensource.adobe.com/spectrum-web-components\"\n            @click=${(event: Event) => {\n                const composedTarget = event.composedPath()[0] as HTMLElement;\n                if (composedTarget.id !== 'like-anchor') return;\n                event.stopPropagation();\n                event.preventDefault();\n                onClick && onClick(event);\n            }}\n        >\n            <div slot=\"footer\">\n                Footer with a\n                <sp-link href=\"https://google.com\">link to Google</sp-link>\n            </div>\n            <sp-action-menu\n                label=\"More Actions\"\n                slot=\"actions\"\n                placement=\"bottom-end\"\n                quiet\n            >\n                <sp-menu-item>Deselect</sp-menu-item>\n                <sp-menu-item>Select Inverse</sp-menu-item>\n                <sp-menu-item>Feather...</sp-menu-item>\n                <sp-menu-item>Select and Mask...</sp-menu-item>\n                <sp-menu-divider></sp-menu-divider>\n                <sp-menu-item>Save Selection</sp-menu-item>\n                <sp-menu-item disabled>Make Work Path</sp-menu-item>\n            </sp-action-menu>\n            <img slot=\"cover-photo\" src=${portrait} alt=\"Demo Graphic\" />\n        </sp-card>\n    `;\n};\nhref.argTypes = {\n    onClick: { action: 'link click' },\n};\n\nexport const actions = (args: StoryArgs): TemplateResult => {\n    return html`\n        <sp-card\n            heading=\"Card Heading\"\n            subheading=\"JPG\"\n            ?horizontal=${args.horizontal}\n            style=\"width: 200px;\"\n        >\n            <img slot=\"cover-photo\" src=${portrait} alt=\"Demo Graphic\" />\n            <div slot=\"footer\">Footer</div>\n            <sp-action-menu\n                label=\"More Actions\"\n                slot=\"actions\"\n                placement=\"bottom-end\"\n                quiet\n            >\n                <sp-menu-item>Deselect</sp-menu-item>\n                <sp-menu-item>Select Inverse</sp-menu-item>\n                <sp-menu-item>Feather...</sp-menu-item>\n                <sp-menu-item>Select and Mask...</sp-menu-item>\n                <sp-menu-divider></sp-menu-divider>\n                <sp-menu-item>Save Selection</sp-menu-item>\n                <sp-menu-item disabled>Make Work Path</sp-menu-item>\n            </sp-action-menu>\n        </sp-card>\n    `;\n};\n\nexport const Gallery = (args: StoryArgs): TemplateResult => {\n    return html`\n        <sp-card\n            variant=\"gallery\"\n            heading=\"Card Heading\"\n            subheading=\"JPG\"\n            ?horizontal=${args.horizontal}\n        >\n            <img\n                slot=\"preview\"\n                src=${landscape}\n                style=\"object-fit: cover\"\n                alt=\"Demo Graphic\"\n            />\n            <div slot=\"description\">10/15/18</div>\n        </sp-card>\n    `;\n};\n\nexport const noPreviewImage = (args: StoryArgs): TemplateResult => {\n    return html`\n        <sp-card\n            heading=\"Card Heading\"\n            subheading=\"No preview image\"\n            ?horizontal=${args.horizontal}\n            style=\"width: 200px;\"\n        >\n            <div slot=\"footer\">Footer</div>\n        </sp-card>\n    `;\n};\n\nexport const Quiet = (args: StoryArgs): TemplateResult => {\n    return html`\n        <div>\n            <sp-card\n                variant=\"quiet\"\n                heading=\"Card Heading\"\n                subheading=\"JPG\"\n                ?horizontal=${args.horizontal}\n                style=\"width: 208px; height: 264px\"\n            >\n                <img src=${portrait} alt=\"Demo Graphic\" slot=\"preview\" />\n                <div slot=\"description\">10/15/18</div>\n            </sp-card>\n        </div>\n    `;\n};\n\nexport const quietFile = (args: StoryArgs): TemplateResult => {\n    return html`\n        <div>\n            <sp-card\n                variant=\"quiet\"\n                subheading=\"JPG\"\n                asset=\"file\"\n                ?horizontal=${args.horizontal}\n                style=\"width: 208px; height: 264px\"\n            >\n                <img src=${portrait} alt=\"Demo Graphic\" slot=\"preview\" />\n                <div slot=\"heading\">File Name</div>\n                <div slot=\"description\">10/15/18</div>\n            </sp-card>\n        </div>\n    `;\n};\n\nexport const quietFolder = (args: StoryArgs): TemplateResult => {\n    return html`\n        <div>\n            <sp-card\n                variant=\"quiet\"\n                subheading=\"JPG\"\n                asset=\"folder\"\n                ?horizontal=${args.horizontal}\n                style=\"width: 208px; height: 264px\"\n            >\n                <img src=${portrait} alt=\"Demo Graphic\" slot=\"preview\" />\n                <div slot=\"heading\">Folder Name</div>\n                <div slot=\"description\">10/15/18</div>\n            </sp-card>\n        </div>\n    `;\n};\n\nexport const quietActions = (args: StoryArgs): TemplateResult => {\n    return html`\n        <div>\n            <sp-card\n                variant=\"quiet\"\n                heading=\"Card Heading\"\n                subheading=\"JPG\"\n                ?horizontal=${args.horizontal}\n                style=\"width: 208px; height: 264px\"\n            >\n                <img src=${portrait} alt=\"Demo Graphic\" slot=\"preview\" />\n                <div slot=\"description\">10/15/18</div>\n                <sp-action-menu\n                    label=\"More Actions\"\n                    slot=\"actions\"\n                    placement=\"bottom-end\"\n                    quiet\n                >\n                    <sp-menu-item>Deselect</sp-menu-item>\n                    <sp-menu-item>Select Inverse</sp-menu-item>\n                    <sp-menu-item>Feather...</sp-menu-item>\n                    <sp-menu-item>Select and Mask...</sp-menu-item>\n                    <sp-menu-divider></sp-menu-divider>\n                    <sp-menu-item>Save Selection</sp-menu-item>\n                    <sp-menu-item disabled>Make Work Path</sp-menu-item>\n                </sp-action-menu>\n            </sp-card>\n        </div>\n    `;\n};\n\nquietActions.storyName = 'Quiet w/ Actions';\n\nexport const Horizontal = (args: StoryArgs): TemplateResult => {\n    return html`\n        <sp-card\n            ?horizontal=${args.horizontal}\n            heading=\"Card Heading\"\n            subheading=\"JPG\"\n        >\n            <sp-icon-file-txt\n                slot=\"preview\"\n                style=\"width: 36px; height: 36px;\"\n            ></sp-icon-file-txt>\n        </sp-card>\n    `;\n};\nHorizontal.args = {\n    horizontal: true,\n};\n\nexport const horizontalWithHREF = (args: StoryArgs): TemplateResult => {\n    return html`\n        <sp-card\n            ?horizontal=${args.horizontal}\n            heading=\"Card Heading\"\n            subheading=\"JPG\"\n            href=\"https://opensource.adobe.com/spectrum-web-components\"\n            target=\"_blank\"\n        >\n            <sp-icon-file-txt\n                slot=\"preview\"\n                style=\"width: 36px; height: 36px;\"\n            ></sp-icon-file-txt>\n        </sp-card>\n    `;\n};\nhorizontalWithHREF.args = {\n    horizontal: true,\n};\n\nexport const smallQuiet = (args: StoryArgs): TemplateResult => {\n    return html`\n        <div>\n            <sp-card\n                size=${args.size}\n                ?horizontal=${args.horizontal}\n                heading=\"Card Heading\"\n                subheading=\"JPG\"\n                variant=\"quiet\"\n                style=\"width: 115px\"\n            >\n                <img src=${portrait} alt=\"Demo Graphic\" slot=\"preview\" />\n                <div slot=\"footer\">Footer</div>\n                <sp-action-menu\n                    label=\"More Actions\"\n                    slot=\"actions\"\n                    placement=\"bottom-end\"\n                    quiet\n                >\n                    <sp-menu-item>Deselect</sp-menu-item>\n                    <sp-menu-item>Select Inverse</sp-menu-item>\n                    <sp-menu-item>Feather...</sp-menu-item>\n                    <sp-menu-item>Select and Mask...</sp-menu-item>\n                    <sp-menu-divider></sp-menu-divider>\n                    <sp-menu-item>Save Selection</sp-menu-item>\n                    <sp-menu-item disabled>Make Work Path</sp-menu-item>\n                </sp-action-menu>\n            </sp-card>\n        </div>\n    `;\n};\nsmallQuiet.args = {\n    size: 's',\n};\n\nexport const SlottedHeading = (args: StoryArgs): TemplateResult => {\n    return html`\n        <style>\n            .slotted-textfield-heading {\n                width: 100%;\n            }\n        </style>\n        <sp-card\n            style=\"\n                --spectrum-card-title-width: 100%;\n                --spectrum-card-title-padding-right: 0;\n                --spectrum-card-title-padding-left: 0;\n                --spectrum-card-body-header-height: auto;\n                --spectrum-alias-single-line-width: 100%;\n            \"\n            ?horizontal=${args.horizontal}\n        >\n            <img slot=\"cover-photo\" src=${portrait} alt=\"Demo Graphic\" />\n            <sp-textfield\n                class=\"slotted-textfield-heading\"\n                slot=\"heading\"\n                value=\"Apr 23 Project\"\n                quiet\n            ></sp-textfield>\n            <div slot=\"subheading\">Last modified on 6/17/2020, 3:37 PM</div>\n            <sp-action-menu\n                label=\"More Actions\"\n                slot=\"actions\"\n                placement=\"bottom-end\"\n                quiet\n            >\n                <sp-menu-item>Deselect</sp-menu-item>\n                <sp-menu-item>Select Inverse</sp-menu-item>\n                <sp-menu-item>Feather...</sp-menu-item>\n                <sp-menu-item>Select and Mask...</sp-menu-item>\n                <sp-menu-divider></sp-menu-divider>\n                <sp-menu-item>Save Selection</sp-menu-item>\n                <sp-menu-item disabled>Make Work Path</sp-menu-item>\n            </sp-action-menu>\n        </sp-card>\n    `;\n};\n"],
  "mappings": ";AAWA,SAAS,YAA4B;AAErC,OAAO;AACP,SAAS,WAAW,gBAAgB;AACpC,OAAO;AACP,OAAO;AACP,OAAO;AACP,OAAO;AACP,OAAO;AACP,OAAO;AACP,OAAO;AAEP,eAAe;AAAA,EACX,WAAW;AAAA,EACX,OAAO;AAAA,EACP,MAAM;AAAA,IACF,YAAY;AAAA,EAChB;AAAA,EACA,UAAU;AAAA,IACN,YAAY;AAAA,MACR,MAAM;AAAA,MACN,MAAM,EAAE,MAAM,WAAW,UAAU,MAAM;AAAA,MACzC,OAAO;AAAA,QACH,MAAM,EAAE,SAAS,UAAU;AAAA,QAC3B,cAAc,EAAE,SAAS,MAAM;AAAA,MACnC;AAAA,MACA,SAAS;AAAA,QACL,MAAM;AAAA,MACV;AAAA,IACJ;AAAA,EACJ;AACJ;AAQO,aAAM,UAAU,CAAC,SAAoC;AACxD,SAAO;AAAA;AAAA;AAAA;AAAA,0BAIe,KAAK,UAAU;AAAA;AAAA;AAAA,0CAGC,QAAQ;AAAA;AAAA;AAAA;AAIlD;AACA,QAAQ,OAAO,CAAC;AAET,aAAM,aAAa,CAAC,SAAoC;AAC3D,QAAM,EAAE,QAAQ,IAAI;AACpB,SAAO;AAAA;AAAA;AAAA;AAAA;AAAA,0BAKe,KAAK,UAAU;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAMpB,CAAC,UAAiB;AACvB,UAAM,iBAAiB,MAAM,aAAa,EAAE,CAAC;AAC7C,QAAI,eAAe,OAAO,cAAe;AACzC,UAAM,gBAAgB;AACtB,UAAM,eAAe;AACrB,eAAW,QAAQ,KAAK;AAAA,EAC5B,CAAC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0CAoB6B,QAAQ;AAAA;AAAA;AAGlD;AACA,WAAW,WAAW;AAAA,EAClB,SAAS,EAAE,QAAQ,aAAa;AACpC;AAEO,aAAM,OAAO,CAAC,SAAoC;AACrD,QAAM,EAAE,QAAQ,IAAI;AACpB,SAAO;AAAA;AAAA;AAAA;AAAA;AAAA,0BAKe,KAAK,UAAU;AAAA;AAAA;AAAA,qBAGpB,CAAC,UAAiB;AACvB,UAAM,iBAAiB,MAAM,aAAa,EAAE,CAAC;AAC7C,QAAI,eAAe,OAAO,cAAe;AACzC,UAAM,gBAAgB;AACtB,UAAM,eAAe;AACrB,eAAW,QAAQ,KAAK;AAAA,EAC5B,CAAC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0CAoB6B,QAAQ;AAAA;AAAA;AAGlD;AACA,KAAK,WAAW;AAAA,EACZ,SAAS,EAAE,QAAQ,aAAa;AACpC;AAEO,aAAM,UAAU,CAAC,SAAoC;AACxD,SAAO;AAAA;AAAA;AAAA;AAAA,0BAIe,KAAK,UAAU;AAAA;AAAA;AAAA,0CAGC,QAAQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAkBlD;AAEO,aAAM,UAAU,CAAC,SAAoC;AACxD,SAAO;AAAA;AAAA;AAAA;AAAA;AAAA,0BAKe,KAAK,UAAU;AAAA;AAAA;AAAA;AAAA,sBAInB,SAAS;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAO/B;AAEO,aAAM,iBAAiB,CAAC,SAAoC;AAC/D,SAAO;AAAA;AAAA;AAAA;AAAA,0BAIe,KAAK,UAAU;AAAA;AAAA;AAAA;AAAA;AAAA;AAMzC;AAEO,aAAM,QAAQ,CAAC,SAAoC;AACtD,SAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BAMmB,KAAK,UAAU;AAAA;AAAA;AAAA,2BAGlB,QAAQ;AAAA;AAAA;AAAA;AAAA;AAKnC;AAEO,aAAM,YAAY,CAAC,SAAoC;AAC1D,SAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BAMmB,KAAK,UAAU;AAAA;AAAA;AAAA,2BAGlB,QAAQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAMnC;AAEO,aAAM,cAAc,CAAC,SAAoC;AAC5D,SAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BAMmB,KAAK,UAAU;AAAA;AAAA;AAAA,2BAGlB,QAAQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAMnC;AAEO,aAAM,eAAe,CAAC,SAAoC;AAC7D,SAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BAMmB,KAAK,UAAU;AAAA;AAAA;AAAA,2BAGlB,QAAQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAmBnC;AAEA,aAAa,YAAY;AAElB,aAAM,aAAa,CAAC,SAAoC;AAC3D,SAAO;AAAA;AAAA,0BAEe,KAAK,UAAU;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAUzC;AACA,WAAW,OAAO;AAAA,EACd,YAAY;AAChB;AAEO,aAAM,qBAAqB,CAAC,SAAoC;AACnE,SAAO;AAAA;AAAA,0BAEe,KAAK,UAAU;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAYzC;AACA,mBAAmB,OAAO;AAAA,EACtB,YAAY;AAChB;AAEO,aAAM,aAAa,CAAC,SAAoC;AAC3D,SAAO;AAAA;AAAA;AAAA,uBAGY,KAAK,IAAI;AAAA,8BACF,KAAK,UAAU;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BAMlB,QAAQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAmBnC;AACA,WAAW,OAAO;AAAA,EACd,MAAM;AACV;AAEO,aAAM,iBAAiB,CAAC,SAAoC;AAC/D,SAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAce,KAAK,UAAU;AAAA;AAAA,0CAEC,QAAQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAwBlD;",
  "names": []
}
