{
  "version": 3,
  "sources": ["coachmark.test.ts"],
  "sourcesContent": ["/*\nCopyright 2020 Adobe. All rights reserved.\nThis file is licensed to you under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License. You may obtain a copy\nof the License at http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software distributed under\nthe License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\nOF ANY KIND, either express or implied. See the License for the specific language\ngoverning permissions and limitations under the License.\n*/\n\nimport {\n    elementUpdated,\n    expect,\n    fixture,\n    html,\n    nextFrame,\n} from '@open-wc/testing';\n\nimport { Coachmark, CoachmarkItem } from '@spectrum-web-components/coachmark';\nimport { testForLitDevWarnings } from '../../../test/testing-helpers.js';\nimport '@spectrum-web-components/coachmark/sp-coachmark.js';\nimport '@spectrum-web-components/coachmark/sp-coach-indicator.js';\nimport '@spectrum-web-components/overlay/sp-overlay.js';\nimport { spy } from 'sinon';\nimport { Button } from '@spectrum-web-components/button';\nimport {\n    Default,\n    InTour,\n    single,\n    withImage,\n    withKeys,\n    withShortCut,\n} from '../stories/coachmark.stories.js';\n\nconst defaultItem: CoachmarkItem = {\n    heading: 'I am the heading for Coachmark',\n    content: 'I am the content for this Coachmark',\n};\ndescribe('Coachmark', () => {\n    testForLitDevWarnings(\n        async () =>\n            await fixture<Coachmark>(\n                html`\n                    <sp-coachmark\n                        id=\"coachmark\"\n                        .content=${{\n                            title: defaultItem.heading,\n                            description: defaultItem.content,\n                        }}\n                    ></sp-coachmark>\n                `\n            )\n    );\n    it('loads default coachmark accessibly', async () => {\n        const el = await fixture<Coachmark>(Default());\n        await elementUpdated(el);\n        await expect(el).to.be.accessible();\n    });\n    it('displays the slotted content as `.title`', async () => {\n        const testHeading = 'Coachmark with Text Only';\n        const el = await fixture<Coachmark>(Default());\n\n        await elementUpdated(el);\n\n        const root = el.shadowRoot ? el.shadowRoot : el;\n        const headingSlot = root.querySelector(\n            '[name=\"title\"]'\n        ) as HTMLSlotElement;\n\n        expect(headingSlot, 'did not find slot element').to.not.be.null;\n        const nodes = headingSlot.assignedNodes();\n        const divElement = nodes.find(\n            (node) => (node as HTMLElement).id === 'heading'\n        );\n        expect(divElement, 'did not find div element').to.not.be.null;\n        expect((divElement as HTMLDivElement).textContent).to.contain(\n            testHeading,\n            'the slotted content renders in the element'\n        );\n    });\n    it('if in tour coachmark loads with pagination with previous, next buttons and action menu', async () => {\n        const el = await fixture<Coachmark>(\n            InTour(\n                {\n                    open: true,\n                    heading: 'Coachmark In Tour',\n                    content: 'This is a Coachmark with nothing but text in it.',\n                },\n                {}\n            )\n        );\n        await elementUpdated(el);\n        await nextFrame();\n        await nextFrame();\n\n        const stepCount = el.shadowRoot.querySelector(\n            'span[aria-live=\"polite\"]'\n        );\n\n        const stepCountSlot = el.querySelector(\n            '[slot=\"step-count\"]'\n        ) as HTMLSlotElement;\n        expect(stepCountSlot?.textContent?.trim()).to.equal('2 of 8');\n\n        expect(stepCount?.textContent);\n        const nextButton = el.shadowRoot.querySelector(\n            'sp-button[variant=\"primary\"'\n        );\n        expect(nextButton).to.not.be.undefined;\n        expect(nextButton?.textContent?.trim()).to.equal('Next');\n\n        const prevButton = el.shadowRoot.querySelector(\n            'sp-button[variant=\"secondary\"'\n        );\n        expect(prevButton).to.not.be.undefined;\n        expect(prevButton?.textContent?.trim()).to.equal('Previous');\n    });\n    it('loads pagination when total step count is greater than 1', async () => {\n        const el = await fixture<Coachmark>(\n            InTour(\n                {\n                    open: true,\n                    heading: 'Coachmark In Tour',\n                    content: 'This is a Coachmark with nothing but text in it.',\n                    currentStep: 2,\n                    totalSteps: 8,\n                },\n                {}\n            )\n        );\n        await elementUpdated(el);\n        const stepCountSlot = el.querySelector(\n            '[slot=\"step-count\"]'\n        ) as HTMLSlotElement;\n        expect(stepCountSlot?.textContent?.trim()).to.equal('2 of 8');\n\n        await expect(el).to.be.accessible();\n    });\n    it('loads primary button with text \"Ok\" for a single coachmark', async () => {\n        const el = await fixture<Coachmark>(single());\n\n        await elementUpdated(el);\n        const okayButton = el.shadowRoot.querySelector(\n            'sp-button[variant=\"primary\"'\n        );\n        expect(okayButton).to.not.be.null;\n        expect(okayButton?.textContent?.trim()).to.equal('Ok');\n    });\n    it('renders modifier keys with joiner', async () => {\n        const modifierKeys = ['\u21E7 Shift', '\u2318'];\n        const el = await fixture<Coachmark>(\n            withKeys({\n                modifierKeys,\n                heading: 'Coachmark with Keys',\n                content: 'This is a Coachmark with nothing but text in it.',\n            })\n        );\n        await elementUpdated(el);\n        const modifier = el.shadowRoot.querySelector('span[type=\"modifier\"]');\n        expect(modifier).to.not.be.undefined;\n        expect(modifier?.textContent?.trim()).to.include('\u21E7 Shift');\n        const joiner = el.shadowRoot.querySelector('span[class=\"plus\"]');\n        expect(joiner).to.not.be.undefined;\n        expect(joiner?.textContent?.trim()).to.include('+');\n    });\n    it('renders with shortcut', async () => {\n        const el = await fixture<Coachmark>(\n            withShortCut({\n                currentStep: 1,\n                totalSteps: 8,\n            })\n        );\n        await elementUpdated(el);\n\n        const shortcutKey = el.shadowRoot.querySelector(\n            'span[type=\"shortcut\"]'\n        );\n        expect(shortcutKey).to.not.be.undefined;\n        expect(shortcutKey?.textContent?.trim()).to.include('Z');\n    });\n    it('renders content with image asset', async () => {\n        const el = await fixture<Coachmark>(\n            withImage({\n                currentStep: 1,\n                totalSteps: 8,\n            })\n        );\n        await elementUpdated(el);\n        const imageElement = el.shadowRoot.querySelector(\n            'img[src=\"https://picsum.photos/id/237/200/300\"'\n        );\n        expect(imageElement).not.to.be.undefined;\n    });\n    it('in tour dispatches `primary` and `secondary`', async () => {\n        const primarySpy = spy();\n        const secondarySpy = spy();\n        const handlePrimary = (): void => primarySpy();\n        const handleSecondary = (): void => secondarySpy();\n        const el = await fixture<Coachmark>(\n            InTour(\n                {\n                    open: true,\n                    heading: 'Coachmark in Tour',\n                    content: 'This is a Coachmark with nothing but text in it.',\n                },\n                {}\n            )\n        );\n        el.addEventListener('primary', handlePrimary);\n        el.addEventListener('secondary', handleSecondary);\n\n        await elementUpdated(el);\n        expect(primarySpy.called).to.be.false;\n        expect(secondarySpy.called).to.be.false;\n\n        const primaryButton = el.shadowRoot.querySelector(\n            '[variant=\"primary\"]'\n        ) as Button;\n        const secondaryButton = el.shadowRoot.querySelector(\n            '[variant=\"secondary\"]'\n        ) as Button;\n        primaryButton.click();\n\n        await elementUpdated(el);\n        expect(primarySpy.called, 'dispatched `primary`').to.be.true;\n        expect(secondarySpy.called).to.be.false;\n\n        secondaryButton.click();\n\n        await elementUpdated(el);\n        expect(primarySpy.callCount).to.equal(1);\n        expect(secondarySpy.called, 'dispatched `secondary`').to.be.true;\n    });\n});\n"],
  "mappings": "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",
  "names": []
}
