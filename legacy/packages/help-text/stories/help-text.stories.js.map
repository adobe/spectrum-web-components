{
  "version": 3,
  "sources": ["help-text.stories.ts"],
  "sourcesContent": ["/*\nCopyright 2020 Adobe. All rights reserved.\nThis file is licensed to you under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License. You may obtain a copy\nof the License at http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software distributed under\nthe License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\nOF ANY KIND, either express or implied. See the License for the specific language\ngoverning permissions and limitations under the License.\n*/\n\nimport { html, TemplateResult } from '@spectrum-web-components/base';\n\nimport '@spectrum-web-components/help-text/sp-help-text.js';\n\nexport default {\n    title: 'Help Text',\n    component: 'sp-help-text',\n    argTypes: {\n        icon: {\n            name: 'icon',\n            type: { name: 'boolean', required: false },\n            discription: 'Whether the Help Text is delivered with an icon.',\n            table: {\n                type: { summary: 'boolean' },\n                defaultValue: { summary: false },\n            },\n            control: {\n                type: 'boolean',\n            },\n        },\n        disabled: {\n            name: 'disabled',\n            type: { name: 'boolean', required: false },\n            description: 'Help Text for disabled form elements.',\n            table: {\n                type: { summary: 'boolean' },\n                defaultValue: { summary: false },\n            },\n            control: {\n                type: 'boolean',\n            },\n        },\n        variant: {\n            name: 'variant',\n            type: { name: 'string', required: false },\n            description: 'The visual variant to apply to the Help Text.',\n            table: {\n                type: { summary: 'string' },\n                defaultValue: { summary: 'cta' },\n            },\n            control: {\n                type: 'inline-radio',\n                options: ['neutral', 'negative'],\n            },\n        },\n        size: {\n            name: 'size',\n            type: { name: 'string', required: false },\n            description: 'The visual variant to apply to the Help Text.',\n            table: {\n                type: { summary: 'string' },\n                defaultValue: { summary: 'cta' },\n            },\n            control: {\n                type: 'inline-radio',\n                options: ['s', 'm', 'l', 'xl'],\n            },\n        },\n    },\n    args: {\n        size: 'm',\n    },\n};\n\ninterface Properties {\n    content?: string;\n    disabled?: boolean;\n    icon?: boolean;\n    size?: 's' | 'm' | 'l' | 'xl';\n    variant?: 'neutral' | 'negative';\n}\n\nconst Template = (args: Properties): TemplateResult => html`\n    <sp-help-text\n        ?disabled=${args.disabled}\n        ?icon=${args.icon}\n        variant=${args.variant}\n        size=${args.size}\n    >\n        ${args.content}\n    </sp-help-text>\n`;\n\nexport const neutral = (args: Properties = {}): TemplateResult =>\n    Template({\n        ...args,\n        content: 'Passwords must be at least 8 characters.',\n    });\nneutral.args = {\n    variant: 'neutral',\n};\n\nexport const negative = (args: Properties = {}): TemplateResult =>\n    Template({\n        ...args,\n        content: 'Create a password with at least 8 characters.',\n    });\nnegative.args = {\n    variant: 'negative',\n};\n\nexport const negativeIcon = (args: Properties = {}): TemplateResult =>\n    Template({\n        ...args,\n        content: 'Create a password with at least 8 characters.',\n    });\nnegativeIcon.args = {\n    icon: true,\n    variant: 'negative',\n};\n\nexport const disabled = (args: Properties = {}): TemplateResult =>\n    Template({\n        ...args,\n        content: 'Passwords must be at least 8 characters.',\n    });\ndisabled.args = {\n    disabled: true,\n    variant: 'neutral',\n};\n"],
  "mappings": ";AAYA,SAAS,YAA4B;AAErC,OAAO;AAEP,eAAe;AAAA,EACX,OAAO;AAAA,EACP,WAAW;AAAA,EACX,UAAU;AAAA,IACN,MAAM;AAAA,MACF,MAAM;AAAA,MACN,MAAM,EAAE,MAAM,WAAW,UAAU,MAAM;AAAA,MACzC,aAAa;AAAA,MACb,OAAO;AAAA,QACH,MAAM,EAAE,SAAS,UAAU;AAAA,QAC3B,cAAc,EAAE,SAAS,MAAM;AAAA,MACnC;AAAA,MACA,SAAS;AAAA,QACL,MAAM;AAAA,MACV;AAAA,IACJ;AAAA,IACA,UAAU;AAAA,MACN,MAAM;AAAA,MACN,MAAM,EAAE,MAAM,WAAW,UAAU,MAAM;AAAA,MACzC,aAAa;AAAA,MACb,OAAO;AAAA,QACH,MAAM,EAAE,SAAS,UAAU;AAAA,QAC3B,cAAc,EAAE,SAAS,MAAM;AAAA,MACnC;AAAA,MACA,SAAS;AAAA,QACL,MAAM;AAAA,MACV;AAAA,IACJ;AAAA,IACA,SAAS;AAAA,MACL,MAAM;AAAA,MACN,MAAM,EAAE,MAAM,UAAU,UAAU,MAAM;AAAA,MACxC,aAAa;AAAA,MACb,OAAO;AAAA,QACH,MAAM,EAAE,SAAS,SAAS;AAAA,QAC1B,cAAc,EAAE,SAAS,MAAM;AAAA,MACnC;AAAA,MACA,SAAS;AAAA,QACL,MAAM;AAAA,QACN,SAAS,CAAC,WAAW,UAAU;AAAA,MACnC;AAAA,IACJ;AAAA,IACA,MAAM;AAAA,MACF,MAAM;AAAA,MACN,MAAM,EAAE,MAAM,UAAU,UAAU,MAAM;AAAA,MACxC,aAAa;AAAA,MACb,OAAO;AAAA,QACH,MAAM,EAAE,SAAS,SAAS;AAAA,QAC1B,cAAc,EAAE,SAAS,MAAM;AAAA,MACnC;AAAA,MACA,SAAS;AAAA,QACL,MAAM;AAAA,QACN,SAAS,CAAC,KAAK,KAAK,KAAK,IAAI;AAAA,MACjC;AAAA,IACJ;AAAA,EACJ;AAAA,EACA,MAAM;AAAA,IACF,MAAM;AAAA,EACV;AACJ;AAUA,MAAM,WAAW,CAAC,SAAqC;AAAA;AAAA,oBAEnC,KAAK,QAAQ;AAAA,gBACjB,KAAK,IAAI;AAAA,kBACP,KAAK,OAAO;AAAA,eACf,KAAK,IAAI;AAAA;AAAA,UAEd,KAAK,OAAO;AAAA;AAAA;AAIf,aAAM,UAAU,CAAC,OAAmB,CAAC,MACxC,SAAS;AAAA,EACL,GAAG;AAAA,EACH,SAAS;AACb,CAAC;AACL,QAAQ,OAAO;AAAA,EACX,SAAS;AACb;AAEO,aAAM,WAAW,CAAC,OAAmB,CAAC,MACzC,SAAS;AAAA,EACL,GAAG;AAAA,EACH,SAAS;AACb,CAAC;AACL,SAAS,OAAO;AAAA,EACZ,SAAS;AACb;AAEO,aAAM,eAAe,CAAC,OAAmB,CAAC,MAC7C,SAAS;AAAA,EACL,GAAG;AAAA,EACH,SAAS;AACb,CAAC;AACL,aAAa,OAAO;AAAA,EAChB,MAAM;AAAA,EACN,SAAS;AACb;AAEO,aAAM,WAAW,CAAC,OAAmB,CAAC,MACzC,SAAS;AAAA,EACL,GAAG;AAAA,EACH,SAAS;AACb,CAAC;AACL,SAAS,OAAO;AAAA,EACZ,UAAU;AAAA,EACV,SAAS;AACb;",
  "names": []
}
