{
  "version": 3,
  "sources": ["badge.stories.ts"],
  "sourcesContent": ["/*\nCopyright 2020 Adobe. All rights reserved.\nThis file is licensed to you under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License. You may obtain a copy\nof the License at http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software distributed under\nthe License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\nOF ANY KIND, either express or implied. See the License for the specific language\ngoverning permissions and limitations under the License.\n*/\n\nimport '@spectrum-web-components/badge/sp-badge.js';\nimport { html, TemplateResult } from '@spectrum-web-components/base';\nimport '@spectrum-web-components/icons-workflow/icons/sp-icon-checkmark-circle.js';\n\nexport default {\n    title: 'Badge',\n    component: 'sp-badge',\n};\n\nexport const Default = (): TemplateResult => {\n    return html`\n        <sp-badge>Badge</sp-badge>\n    `;\n};\n\nexport const Icons = (): TemplateResult => {\n    return html`\n        <sp-badge>No icon</sp-badge>\n\n        <sp-badge>\n            <sp-icon-checkmark-circle slot=\"icon\"></sp-icon-checkmark-circle>\n            Icon and label\n        </sp-badge>\n\n        <sp-badge>\n            <sp-icon-checkmark-circle slot=\"icon\"></sp-icon-checkmark-circle>\n        </sp-badge>\n    `;\n};\n\nexport const Sizes = (): TemplateResult => {\n    return html`\n        <div style=\"display: flex; align-items: center; gap: 8px;\">\n            <sp-badge size=\"s\">\n                <sp-icon-checkmark-circle\n                    slot=\"icon\"\n                ></sp-icon-checkmark-circle>\n                Small\n            </sp-badge>\n            <sp-badge size=\"m\">\n                <sp-icon-checkmark-circle\n                    slot=\"icon\"\n                ></sp-icon-checkmark-circle>\n                Medium\n            </sp-badge>\n            <sp-badge size=\"l\">\n                <sp-icon-checkmark-circle\n                    slot=\"icon\"\n                ></sp-icon-checkmark-circle>\n                Large\n            </sp-badge>\n            <sp-badge size=\"xl\">\n                <sp-icon-checkmark-circle\n                    slot=\"icon\"\n                ></sp-icon-checkmark-circle>\n                Extra-large\n            </sp-badge>\n            <sp-badge style=\"max-width: 180px\">\n                <sp-icon-checkmark-circle\n                    slot=\"icon\"\n                ></sp-icon-checkmark-circle>\n                This long content automatically wraps, but shows no more than\n                two lines\n            </sp-badge>\n        </div>\n    `;\n};\n\nexport const Semantic = (): TemplateResult => {\n    return html`\n        <sp-badge variant=\"accent\">Accent</sp-badge>\n        <sp-badge variant=\"positive\">Positive</sp-badge>\n        <sp-badge variant=\"informative\">Informative</sp-badge>\n        <sp-badge variant=\"negative\">Negative</sp-badge>\n        <sp-badge variant=\"neutral\">Neutral</sp-badge>\n        <sp-badge variant=\"notice\">Notice</sp-badge>\n    `;\n};\n\nexport const NonSemantic = (): TemplateResult => {\n    return html`\n        <sp-badge variant=\"seafoam\">Seafoam</sp-badge>\n        <sp-badge variant=\"indigo\">Indigo</sp-badge>\n        <sp-badge variant=\"purple\">Purple</sp-badge>\n        <sp-badge variant=\"fuchsia\">Fuchsia</sp-badge>\n        <sp-badge variant=\"magenta\">Magenta</sp-badge>\n        <sp-badge variant=\"yellow\">Yellow</sp-badge>\n        <sp-badge variant=\"gray\">Gray</sp-badge>\n        <sp-badge variant=\"red\">Red</sp-badge>\n        <sp-badge variant=\"orange\">Orange</sp-badge>\n        <sp-badge variant=\"chartreuse\">Chartreuse</sp-badge>\n        <sp-badge variant=\"celery\">Celery</sp-badge>\n        <sp-badge variant=\"green\">Green</sp-badge>\n        <sp-badge variant=\"cyan\">Cyan</sp-badge>\n        <sp-badge variant=\"blue\">Blue</sp-badge>\n    `;\n};\n\nexport const Inline = (): TemplateResult => {\n    return html`\n        Badge is a simple\n        <sp-badge variant=\"positive\" size=\"s\">inline</sp-badge>\n        element that should\n        <sp-badge variant=\"neutral\" size=\"s\">flow</sp-badge>\n        with the rest of the page:\n        <sp-badge variant=\"negative\">Missing</sp-badge>\n        <sp-badge variant=\"positive\">Successful</sp-badge>\n        <sp-badge variant=\"accent\">Accent</sp-badge>\n    `;\n};\n\nexport const Fixed = (): TemplateResult => {\n    return html`\n        <div\n            style=\"position: relative; width: 400px; height: 200px; background: #eee\"\n        >\n            <sp-badge>None</sp-badge>\n            <sp-badge\n                fixed=\"block-start\"\n                style=\"position: absolute; top: 0; left: 200px;\"\n            >\n                block-start\n            </sp-badge>\n            <sp-badge\n                fixed=\"inline-end\"\n                style=\"position: absolute; right: 0; top: 100px;\"\n            >\n                inline-end\n            </sp-badge>\n            <sp-badge\n                fixed=\"block-end\"\n                style=\"position: absolute; bottom: 0; left: 200px;\"\n            >\n                block-end\n            </sp-badge>\n            <sp-badge\n                fixed=\"inline-start\"\n                style=\"position: absolute; left: 0; top: 100px;\"\n            >\n                inline-start\n            </sp-badge>\n        </div>\n    `;\n};\n"],
  "mappings": ";AAYA,OAAO;AACP,SAAS,YAA4B;AACrC,OAAO;AAEP,eAAe;AAAA,EACX,OAAO;AAAA,EACP,WAAW;AACf;AAEO,aAAM,UAAU,MAAsB;AACzC,SAAO;AAAA;AAAA;AAGX;AAEO,aAAM,QAAQ,MAAsB;AACvC,SAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAYX;AAEO,aAAM,QAAQ,MAAsB;AACvC,SAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAmCX;AAEO,aAAM,WAAW,MAAsB;AAC1C,SAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQX;AAEO,aAAM,cAAc,MAAsB;AAC7C,SAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAgBX;AAEO,aAAM,SAAS,MAAsB;AACxC,SAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAUX;AAEO,aAAM,QAAQ,MAAsB;AACvC,SAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AA+BX;",
  "names": []
}
