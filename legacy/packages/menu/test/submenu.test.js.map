{
  "version": 3,
  "sources": ["submenu.test.ts"],
  "sourcesContent": ["/*\nCopyright 2020 Adobe. All rights reserved.\nThis file is licensed to you under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License. You may obtain a copy\nof the License at http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software distributed under\nthe License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\nOF ANY KIND, either express or implied. See the License for the specific language\ngoverning permissions and limitations under the License.\n*/\n\nimport '@spectrum-web-components/menu/sp-menu.js';\nimport '@spectrum-web-components/menu/sp-menu-item.js';\nimport { Menu, MenuItem } from '@spectrum-web-components/menu';\nimport {\n    aTimeout,\n    elementUpdated,\n    expect,\n    html,\n    nextFrame,\n    oneEvent,\n} from '@open-wc/testing';\nimport {\n    fixture,\n    sendMouseFrom,\n    sendMouseTo,\n} from '../../../test/testing-helpers.js';\nimport { sendMouse } from '../../../test/plugins/browser.js';\nimport { spy } from 'sinon';\nimport { sendKeys } from '@web/test-runner-commands';\nimport { ActionMenu } from '@spectrum-web-components/action-menu';\nimport '@spectrum-web-components/action-menu/sp-action-menu.js';\nimport '@spectrum-web-components/menu/sp-menu-group.js';\nimport '@spectrum-web-components/overlay/sp-overlay.js';\nimport '@spectrum-web-components/icons-workflow/icons/sp-icon-show-menu.js';\nimport { TemplateResult } from 'lit-html';\nimport { slottableRequest } from '@spectrum-web-components/overlay/src/slottable-request-directive.js';\nimport { isWebKit } from '@spectrum-web-components/shared';\n\ntype SelectsWithKeyboardTest = {\n    dir: 'ltr' | 'rtl' | 'auto';\n    openKey: 'ArrowRight' | 'ArrowLeft';\n    closeKey: 'ArrowRight' | 'ArrowLeft';\n};\n\nconst selectsWithKeyboardData = [\n    {\n        dir: 'ltr',\n        openKey: 'ArrowRight',\n        closeKey: 'ArrowLeft',\n    },\n    {\n        dir: 'rtl',\n        openKey: 'ArrowLeft',\n        closeKey: 'ArrowRight',\n    },\n] as SelectsWithKeyboardTest[];\n\ndescribe('Submenu', () => {\n    function selectWithPointer(): void {\n        it('with pointer', async function () {\n            expect(this.rootItem.open).to.be.false;\n\n            const opened = oneEvent(this.rootItem, 'sp-opened');\n            await sendMouseTo(this.rootItem);\n            await opened;\n\n            expect(this.rootItem.open).to.be.true;\n\n            const item2 = document.querySelector('.submenu-item-2') as MenuItem;\n\n            const closed = oneEvent(this.rootItem, 'sp-closed');\n            await sendMouseTo(item2, 'click');\n            await closed;\n\n            expect(\n                this.submenuChanged.withArgs('Two').calledOnce,\n                `submenu changed ${this.submenuChanged.callCount} times`\n            ).to.be.true;\n            expect(\n                this.rootChanged.withArgs('Has submenu').calledOnce,\n                'root changed'\n            ).to.be.true;\n        });\n    }\n    function selectsWithBoth(testData: SelectsWithKeyboardTest): void {\n        it(`with pointer and keyboard: ${testData.dir}`, async function () {\n            expect(this.rootItem.open).to.be.false;\n\n            const opened = oneEvent(this.rootItem, 'sp-opened');\n            await sendMouseTo(this.rootItem);\n            await opened;\n            const item1 = document.querySelector('.submenu-item-1') as MenuItem;\n            const item2 = document.querySelector('.submenu-item-2') as MenuItem;\n\n            expect(this.rootItem.open, `submenu should open`).to.be.true;\n            expect(document.activeElement).not.to.equal(item1);\n\n            const prev = this.rootItem.previousElementSibling as MenuItem;\n\n            // arrow up should move focus away from the submenu\n            // but submenu stays open while pointer is over it\n            await sendKeys({\n                press: 'ArrowUp',\n            });\n            expect(document.activeElement).to.equal(prev);\n            expect(prev.focused, `focus is on previous item`).to.be.true;\n            expect(this.rootItem.open, `submenu should stay open`).to.be.true;\n\n            const closed = oneEvent(this.rootItem, 'sp-closed');\n            await sendMouseTo(item2, 'click');\n            await closed;\n\n            expect(\n                this.submenuChanged.withArgs('Two').calledOnce,\n                `submenu changed ${this.submenuChanged.callCount} times`\n            ).to.be.true;\n            expect(\n                this.rootChanged.withArgs('Has submenu').calledOnce,\n                `root changed ${this.submenuChanged.callCount} times`\n            ).to.be.true;\n        });\n    }\n    function selectsWithKeyboard(testData: SelectsWithKeyboardTest): void {\n        it(`with keyboard: ${testData.dir}`, async function () {\n            this.el.parentElement.dir = testData.dir;\n\n            await elementUpdated(this.el);\n            expect(\n                this.rootItem.open,\n                `rootItem open before ${testData.openKey}`\n            ).to.be.false;\n            const input = document.createElement('input');\n            this.el.insertAdjacentElement('beforebegin', input);\n            this.el.focus();\n\n            // by default, Safari doesn't tab to some elements\n            if (!isWebKit) {\n                await sendKeys({\n                    press: 'Shift+Tab',\n                });\n\n                expect(document.activeElement).to.equal(input);\n                await sendKeys({\n                    press: 'Tab',\n                });\n\n                expect(document.activeElement).to.equal(this.el);\n            }\n            await sendKeys({\n                press: 'ArrowDown',\n            });\n            await elementUpdated(this.rootItem);\n\n            expect(\n                this.rootItem.focused,\n                `rootItem focused before ${testData.openKey}`\n            ).to.be.true;\n\n            let opened = oneEvent(this.rootItem, 'sp-opened');\n            await sendKeys({\n                press: testData.openKey,\n            });\n            await opened;\n\n            const rootItem = this.el.querySelector('.root') as MenuItem;\n            let submenu = this.el.querySelector('[slot=\"submenu\"]') as Menu;\n            let submenuItem = this.el.querySelector(\n                '.submenu-item-1'\n            ) as MenuItem;\n\n            expect(\n                this.rootItem.open,\n                `rootItem open after ${testData.openKey}`\n            ).to.be.true;\n\n            //opening a menu via keyboard should set focus on first item\n            expect(document.activeElement).to.equal(submenuItem);\n\n            let closed = oneEvent(this.rootItem, 'sp-closed');\n            await sendKeys({\n                press: testData.closeKey,\n            });\n            await closed;\n\n            expect(\n                this.rootItem.open,\n                `rootItem open after ${testData.closeKey}`\n            ).to.be.false;\n\n            //closing a submenu via keyboard should set focus on its parent menuitem\n            expect(document.activeElement).to.equal(rootItem);\n\n            opened = oneEvent(this.rootItem, 'sp-opened');\n            await sendKeys({\n                press: testData.openKey,\n            });\n            await opened;\n            await elementUpdated(this.rootItem);\n\n            submenu = this.el.querySelector('[slot=\"submenu\"]') as Menu;\n\n            expect(this.rootItem.open, 'rootItem.open').to.be.true;\n            expect(submenuItem.focused, 'submenuItem.focused').to.be.true;\n            expect(document.activeElement).to.equal(submenuItem);\n\n            await sendKeys({\n                press: 'ArrowDown',\n            });\n            await elementUpdated(submenu);\n            await elementUpdated(submenuItem);\n\n            submenuItem = this.el.querySelector('.submenu-item-2') as MenuItem;\n            expect(submenuItem.focused, `submenu focused`).to.be.true;\n            expect(document.activeElement === submenuItem, `submenu active`).to\n                .be.true;\n\n            closed = oneEvent(this.rootItem, 'sp-closed');\n            await sendKeys({\n                press: 'Enter',\n            });\n            await closed;\n\n            expect(this.submenuChanged.calledWith('Two'), 'submenu changed').to\n                .be.true;\n            expect(this.rootChanged.called, 'root has changed').to.be.true;\n            expect(\n                this.rootChanged.calledWith('Has submenu'),\n                'root specifically changed'\n            ).to.be.true;\n        });\n    }\n    function returnsFocusToRootWhenClosingSubmenu(): void {\n        it('returns visible focus when submenu closed', async function () {\n            const input = document.createElement('input');\n            this.el.insertAdjacentElement('beforebegin', input);\n            // by default, Safari doesn't tab to some elements\n            if (!isWebKit) {\n                await sendKeys({\n                    press: 'Shift+Tab',\n                });\n\n                expect(document.activeElement).to.equal(input);\n                await sendKeys({\n                    press: 'Tab',\n                });\n\n                expect(document.activeElement).to.equal(this.el);\n            }\n            this.el.focus();\n            await sendKeys({\n                press: 'ArrowDown',\n            });\n            await elementUpdated(this.el);\n            await nextFrame();\n            await nextFrame();\n            expect(this.rootItem.active, 'not active').to.be.false;\n            expect(\n                this.rootItem.focused,\n                `focused: ${document.activeElement?.localName}`\n            ).to.be.true;\n            expect(this.rootItem.open, 'not open').to.be.false;\n            expect(document.activeElement).to.equal(this.rootItem);\n\n            const opened = oneEvent(this.rootItem, 'sp-opened');\n            await sendKeys({\n                press: 'ArrowRight',\n            });\n            await opened;\n\n            expect(this.rootItem.active).to.be.true;\n            expect(this.rootItem.focused).to.be.false;\n            expect(this.rootItem.open).to.be.true;\n\n            await sendKeys({\n                press: 'ArrowDown',\n            });\n\n            expect(this.rootItem.active).to.be.true;\n            expect(this.rootItem.focused).to.be.false;\n            expect(this.rootItem.open).to.be.true;\n\n            const closed = oneEvent(this.rootItem, 'sp-closed');\n            await sendKeys({\n                press: 'ArrowLeft',\n            });\n            await closed;\n\n            expect(this.rootItem.active).to.be.false;\n            expect(this.rootItem.focused).to.be.true;\n            expect(this.rootItem.open).to.be.false;\n        });\n    }\n    function closesOnPointerLeave(): void {\n        it('closes on `pointerleave`', async function () {\n            expect(this.rootItem.open).to.be.false;\n\n            const opened = oneEvent(this.rootItem, 'sp-opened');\n            await sendMouseTo(this.rootItem);\n            await opened;\n\n            expect(this.rootItem.open).to.be.true;\n\n            const closed = oneEvent(this.rootItem, 'sp-closed');\n            await sendMouseFrom(this.rootItem);\n            await closed;\n\n            expect(this.rootItem.open).to.be.false;\n        });\n    }\n    function persistsThroughMouseLeaveAndReturn(): void {\n        it('stays open when mousing off menu item and back again', async function () {\n            expect(this.rootItem.open).to.be.false;\n\n            const opened = oneEvent(this.rootItem, 'sp-opened');\n            await sendMouseTo(this.rootItem);\n            await sendMouseFrom(this.rootItem);\n            await sendMouseTo(this.rootItem);\n            await opened;\n            expect(this.rootItem.open).to.be.true;\n\n            const closed = oneEvent(this.rootItem, 'sp-closed');\n            await sendMouseFrom(this.rootItem);\n            await closed;\n        });\n    }\n    function doesNotOpenWhenDisabled(): void {\n        it('does not open when disabled', async function () {\n            this.rootItem.disabled = true;\n            await elementUpdated(this.rootItem);\n\n            expect(this.rootItem.open).to.be.false;\n\n            await sendMouseTo(this.rootItem);\n\n            // wait 200ms for open\n            await new Promise((r) => setTimeout(r, 200));\n\n            expect(this.rootItem.open).to.be.false;\n        });\n    }\n    function persistsWhenMovingBetweenItemAndSubmenu(): void {\n        it('stays open when mousing between menu item and submenu', async function () {\n            expect(this.rootItem.open).to.be.false;\n\n            const opened = oneEvent(this.rootItem, 'sp-opened');\n            await sendMouseTo(this.rootItem);\n            await opened;\n            await nextFrame();\n            await nextFrame();\n\n            const subItem = this.el.querySelector(\n                '.submenu-item-2'\n            ) as MenuItem;\n            const clickSpy = spy();\n            subItem.addEventListener('click', () => clickSpy());\n            expect(this.rootItem.open).to.be.true;\n\n            await sendMouseTo(subItem);\n            expect(this.rootItem.open).to.be.true;\n            // Ensure it _doesn't_ get closed.\n            await aTimeout(150);\n\n            expect(this.rootItem.open).to.be.true;\n\n            const closed = oneEvent(this.rootItem, 'sp-closed');\n            await sendMouseTo(subItem, 'click');\n            await closed;\n\n            expect(clickSpy.callCount).to.equal(1);\n        });\n    }\n    function continuesToOpenWhenMovingBetweenItemAndSubmenu(): void {\n        it('continues to open when mousing between menu item and submenu', async function () {\n            expect(this.rootItem.open).to.be.false;\n\n            const opened = oneEvent(this.rootItem, 'sp-opened');\n            await sendMouseTo(this.rootItem);\n            // Wait for the overlay system to position the submenu before measuring it's position and moving to it.\n            await nextFrame();\n            await nextFrame();\n            await nextFrame();\n            await nextFrame();\n            await nextFrame();\n            await nextFrame();\n            await nextFrame();\n            await nextFrame();\n            const subItem = this.el.querySelector(\n                '.submenu-item-2'\n            ) as MenuItem;\n            const clickSpy = spy();\n            subItem.addEventListener('click', () => clickSpy());\n            await sendMouseTo(subItem);\n            await opened;\n            expect(this.rootItem.open).to.be.true;\n            // Ensure it _doesn't_ get closed.\n            await aTimeout(150);\n\n            expect(this.rootItem.open).to.be.true;\n\n            const closed = oneEvent(this.rootItem, 'sp-closed');\n            await sendMouseTo(subItem, 'click');\n            await closed;\n\n            expect(clickSpy.callCount).to.equal(1);\n        });\n    }\n    const renderSubmenu = (): TemplateResult => html`\n        <sp-menu-item class=\"submenu-item-1\">One</sp-menu-item>\n        <sp-menu-item class=\"submenu-item-2\">Two</sp-menu-item>\n        <sp-menu-item class=\"submenu-item-3\">Three</sp-menu-item>\n    `;\n    describe('static DOM', () => {\n        beforeEach(async function () {\n            this.rootChanged = spy();\n            this.submenuChanged = spy();\n            this.el = await fixture<Menu>(html`\n                <sp-menu\n                    @change=${(event: Event & { target: Menu }) => {\n                        this.rootChanged(event.target.value);\n                    }}\n                >\n                    <sp-menu-item>No submenu</sp-menu-item>\n                    <sp-menu-item class=\"root\">\n                        Has submenu\n                        <sp-menu\n                            slot=\"submenu\"\n                            @change=${(event: Event & { target: Menu }) => {\n                                this.submenuChanged(event.target.value);\n                            }}\n                        >\n                            ${renderSubmenu()}\n                        </sp-menu>\n                    </sp-menu-item>\n                </sp-menu>\n            `);\n            await elementUpdated(this.el);\n            this.rootItem = this.el.querySelector('.root') as MenuItem;\n            await elementUpdated(this.rootItem);\n        });\n        describe('selects', () => {\n            selectWithPointer();\n            selectsWithKeyboardData.map((testData) => {\n                selectsWithKeyboard(testData);\n                selectsWithBoth(testData);\n            });\n        });\n        closesOnPointerLeave();\n        returnsFocusToRootWhenClosingSubmenu();\n        persistsThroughMouseLeaveAndReturn();\n        doesNotOpenWhenDisabled();\n        persistsWhenMovingBetweenItemAndSubmenu();\n        continuesToOpenWhenMovingBetweenItemAndSubmenu();\n    });\n    describe('directive', () => {\n        beforeEach(async function () {\n            this.rootChanged = spy();\n            this.submenuChanged = spy();\n            this.el = await fixture<Menu>(html`\n                <sp-menu\n                    @change=${(event: Event & { target: Menu }) => {\n                        this.rootChanged(event.target.value);\n                    }}\n                >\n                    <sp-menu-item>No submenu</sp-menu-item>\n                    <sp-menu-item class=\"root\">\n                        Has submenu\n                        <sp-menu\n                            slot=\"submenu\"\n                            @change=${(event: Event & { target: Menu }) => {\n                                this.submenuChanged(event.target.value);\n                            }}\n                            ${slottableRequest(renderSubmenu)}\n                        ></sp-menu>\n                    </sp-menu-item>\n                </sp-menu>\n            `);\n            await elementUpdated(this.el);\n            this.rootItem = this.el.querySelector('.root') as MenuItem;\n            await elementUpdated(this.rootItem);\n        });\n        describe('selects', () => {\n            selectWithPointer();\n            selectsWithKeyboardData.map((testData) => {\n                selectsWithKeyboard(testData);\n                selectsWithBoth(testData);\n            });\n        });\n        closesOnPointerLeave();\n        returnsFocusToRootWhenClosingSubmenu();\n        persistsThroughMouseLeaveAndReturn();\n        doesNotOpenWhenDisabled();\n        persistsWhenMovingBetweenItemAndSubmenu();\n        continuesToOpenWhenMovingBetweenItemAndSubmenu();\n    });\n    it('closes deep tree on selection', async function () {\n        const rootChanged = spy();\n        const submenuChanged = spy();\n        const subSubmenuChanged = spy();\n        const el = await fixture<Menu>(html`\n            <sp-menu\n                @change=${(event: Event & { target: Menu }) => {\n                    rootChanged(event.target.value);\n                }}\n            >\n                <sp-menu-item class=\"root\">\n                    Has submenu\n                    <sp-menu\n                        slot=\"submenu\"\n                        @change=${(event: Event & { target: Menu }) => {\n                            submenuChanged(event.target.value);\n                        }}\n                    >\n                        <sp-menu-item class=\"submenu-item-1\">One</sp-menu-item>\n                        <sp-menu-item class=\"submenu-item-2\">\n                            Two\n                            <sp-menu\n                                slot=\"submenu\"\n                                @change=${(event: Event & { target: Menu }) => {\n                                    subSubmenuChanged(event.target.value);\n                                }}\n                            >\n                                <sp-menu-item class=\"sub-submenu-item-1\">\n                                    A\n                                </sp-menu-item>\n                                <sp-menu-item class=\"sub-submenu-item-2\">\n                                    B\n                                </sp-menu-item>\n                                <sp-menu-item class=\"sub-submenu-item-3\">\n                                    C\n                                </sp-menu-item>\n                            </sp-menu>\n                        </sp-menu-item>\n                        <sp-menu-item class=\"submenu-item-3\">\n                            Three\n                        </sp-menu-item>\n                    </sp-menu>\n                </sp-menu-item>\n            </sp-menu>\n        `);\n        const rootItem = el.querySelector('.root') as MenuItem;\n        const item2 = document.querySelector('.submenu-item-2') as MenuItem;\n        const itemC = document.querySelector('.sub-submenu-item-3') as MenuItem;\n        expect(rootItem.open).to.be.false;\n\n        let opened = oneEvent(rootItem, 'sp-opened');\n        // Hover the root menu item to open a submenu\n        await sendMouseTo(rootItem);\n        await opened;\n\n        expect(rootItem.open).to.be.true;\n\n        opened = oneEvent(item2, 'sp-opened');\n        // Move to the submenu item to open a submenu\n        await sendMouseTo(item2);\n        await opened;\n\n        expect(item2.open).to.be.true;\n\n        const closed = oneEvent(rootItem, 'sp-closed');\n        // click to select and close\n        await sendMouseTo(itemC, 'click');\n        await closed;\n\n        expect(rootChanged.calledWith('Has submenu'), 'root changed').to.be\n            .true;\n        expect(submenuChanged.calledWith('Two'), 'submenu changed').to.be.true;\n        expect(subSubmenuChanged.calledWith('C'), 'sub submenu changed').to.be\n            .true;\n    });\n    it('closes all descendant submenus when closing a ancestor menu', async () => {\n        const el = await fixture<ActionMenu>(html`\n            <sp-action-menu label=\"Closing ancestors will close submenus\">\n                <sp-icon-show-menu slot=\"icon\"></sp-icon-show-menu>\n                <sp-menu-group role=\"none\" id=\"group\">\n                    <span slot=\"header\">New York</span>\n                    <sp-menu-item>Bronx</sp-menu-item>\n                    <sp-menu-item id=\"submenu-item-1\">\n                        Brooklyn\n                        <sp-menu slot=\"submenu\" id=\"submenu-1\">\n                            <sp-menu-item id=\"submenu-item-2\">\n                                Ft. Greene\n                                <sp-menu slot=\"submenu\" id=\"submenu-2\">\n                                    <sp-menu-item>S. Oxford St</sp-menu-item>\n                                    <sp-menu-item>S. Portland Ave</sp-menu-item>\n                                    <sp-menu-item>S. Elliot Pl</sp-menu-item>\n                                </sp-menu>\n                            </sp-menu-item>\n                            <sp-menu-item disabled>Park Slope</sp-menu-item>\n                            <sp-menu-item>Williamsburg</sp-menu-item>\n                        </sp-menu>\n                    </sp-menu-item>\n                    <sp-menu-item id=\"submenu-item-3\">\n                        Manhattan\n                        <sp-menu slot=\"submenu\" id=\"submenu-3\">\n                            <sp-menu-item disabled>SoHo</sp-menu-item>\n                            <sp-menu-item>\n                                Union Square\n                                <sp-menu slot=\"submenu\">\n                                    <sp-menu-item>14th St</sp-menu-item>\n                                    <sp-menu-item>Broadway</sp-menu-item>\n                                    <sp-menu-item>Park Ave</sp-menu-item>\n                                </sp-menu>\n                            </sp-menu-item>\n                            <sp-menu-item>Upper East Side</sp-menu-item>\n                        </sp-menu>\n                    </sp-menu-item>\n                </sp-menu-group>\n            </sp-action-menu>\n        `);\n\n        const rootMenu1 = el.querySelector('#submenu-item-1') as MenuItem;\n        const rootMenu2 = el.querySelector('#submenu-item-3') as MenuItem;\n        const childMenu2 = el.querySelector('#submenu-item-2') as MenuItem;\n\n        expect(el.open).to.be.false;\n        let opened = oneEvent(el, 'sp-opened');\n        el.click();\n        await opened;\n        expect(el.open).to.be.true;\n\n        opened = oneEvent(rootMenu1, 'sp-opened');\n        sendMouseTo(rootMenu1);\n        await opened;\n        expect(rootMenu1.open).to.be.true;\n\n        opened = oneEvent(childMenu2, 'sp-opened');\n        sendMouseTo(childMenu2);\n        await opened;\n        expect(childMenu2.open).to.be.true;\n\n        const childMenu2Closed = oneEvent(childMenu2, 'sp-closed');\n        const rootMenu1Closed = oneEvent(rootMenu1, 'sp-closed');\n        const rootMenu2Opened = oneEvent(rootMenu2, 'sp-opened');\n        rootMenu2.dispatchEvent(\n            new PointerEvent('pointerenter', { bubbles: true })\n        );\n        await childMenu2Closed;\n        await rootMenu1Closed;\n        await rootMenu2Opened;\n    });\n    describe('deep tree', () => {\n        beforeEach(async function () {\n            this.el = await fixture<ActionMenu>(html`\n                <sp-action-menu id=\"action-menu\" label=\"Deep submenu tree\">\n                    <sp-icon-show-menu slot=\"icon\"></sp-icon-show-menu>\n                    <sp-menu-group role=\"none\">\n                        <span slot=\"header\">New York</span>\n                        <sp-menu-item id=\"no-submenu\">Bronx</sp-menu-item>\n                        <sp-menu-item id=\"submenu-item-1\">\n                            Brooklyn\n                            <sp-menu slot=\"submenu\">\n                                <sp-menu-item id=\"submenu-item-2\">\n                                    Ft. Greene\n                                    <sp-menu slot=\"submenu\">\n                                        <sp-menu-item>\n                                            S. Oxford St\n                                        </sp-menu-item>\n                                        <sp-menu-item>\n                                            S. Portland Ave\n                                        </sp-menu-item>\n                                        <sp-menu-item>\n                                            S. Elliot Pl\n                                        </sp-menu-item>\n                                    </sp-menu>\n                                </sp-menu-item>\n                                <sp-menu-item disabled>Park Slope</sp-menu-item>\n                                <sp-menu-item id=\"ancestor-item\">\n                                    Williamsburg\n                                </sp-menu-item>\n                            </sp-menu>\n                        </sp-menu-item>\n                        <sp-menu-item id=\"submenu-item-3\">\n                            Manhattan\n                            <sp-menu slot=\"submenu\">\n                                <sp-menu-item disabled>SoHo</sp-menu-item>\n                                <sp-menu-item>\n                                    Union Square\n                                    <sp-menu slot=\"submenu\">\n                                        <sp-menu-item>14th St</sp-menu-item>\n                                        <sp-menu-item>Broadway</sp-menu-item>\n                                        <sp-menu-item>Park Ave</sp-menu-item>\n                                    </sp-menu>\n                                </sp-menu-item>\n                                <sp-menu-item>Upper East Side</sp-menu-item>\n                            </sp-menu>\n                        </sp-menu-item>\n                    </sp-menu-group>\n                </sp-action-menu>\n            `);\n            await nextFrame();\n            await nextFrame();\n        });\n        it('closes back to the first overlay without a `root` when clicking away', async function () {\n            const rootMenu1 = this.el.querySelector('#submenu-item-1') as Menu;\n            const childMenu2 = this.el.querySelector('#submenu-item-2') as Menu;\n            document.body.style.setProperty('padding', '50px');\n\n            expect(this.el.open).to.be.false;\n            let opened = oneEvent(this.el, 'sp-opened');\n            this.el.click();\n            await opened;\n            expect(this.el.open).to.be.true;\n\n            opened = oneEvent(rootMenu1, 'sp-opened');\n            await sendMouseTo(rootMenu1);\n            await opened;\n\n            opened = oneEvent(childMenu2, 'sp-opened');\n            await sendMouseTo(childMenu2);\n            await opened;\n            const closed = Promise.all([\n                oneEvent(childMenu2, 'sp-closed'),\n                oneEvent(rootMenu1, 'sp-closed'),\n            ]);\n            await sendMouseFrom(this.el);\n            await closed;\n        });\n        it('closes descendant menus when Menu Item in ancestor without a submenu is pointerentered', async function () {\n            const rootMenu = this.el.querySelector(\n                '#submenu-item-1'\n            ) as MenuItem;\n            const noSubmenu = this.el.querySelector('#no-submenu') as MenuItem;\n\n            expect(this.el.open).to.be.false;\n            let opened = oneEvent(this.el, 'sp-opened');\n            this.el.click();\n            await opened;\n            expect(this.el.open).to.be.true;\n\n            opened = oneEvent(rootMenu, 'sp-opened');\n            rootMenu.dispatchEvent(\n                new PointerEvent('pointerenter', { bubbles: true })\n            );\n            await opened;\n\n            const closed = oneEvent(rootMenu, 'sp-closed');\n            noSubmenu.dispatchEvent(\n                new PointerEvent('pointerenter', { bubbles: true })\n            );\n            await closed;\n        });\n        it('closes descendant menus when Menu Item in ancestor is clicked', async function () {\n            const rootMenu1 = this.el.querySelector(\n                '#submenu-item-1'\n            ) as MenuItem;\n            const childMenu2 = this.el.querySelector(\n                '#submenu-item-2'\n            ) as MenuItem;\n            const ancestorItem = this.el.querySelector(\n                '#ancestor-item'\n            ) as MenuItem;\n\n            expect(this.el.open).to.be.false;\n            let opened = oneEvent(this.el, 'sp-opened');\n            this.el.click();\n            await opened;\n            expect(this.el.open).to.be.true;\n\n            opened = oneEvent(rootMenu1, 'sp-opened');\n            sendMouseTo(rootMenu1);\n            await opened;\n\n            opened = oneEvent(childMenu2, 'sp-opened');\n            sendMouseTo(childMenu2);\n            await opened;\n\n            const closed = Promise.all([\n                oneEvent(childMenu2, 'sp-closed'),\n                oneEvent(rootMenu1, 'sp-closed'),\n            ]);\n            await sendMouseTo(ancestorItem, 'click');\n            await closed;\n        });\n    });\n    it('cleans up submenus that close before they are \"open\"', async () => {\n        if ('showPopover' in document.createElement('div')) {\n            return;\n        }\n        await sendMouse({\n            steps: [\n                {\n                    type: 'move',\n                    position: [1, 1],\n                },\n            ],\n        });\n        const el = await fixture<Menu>(html`\n            <sp-menu>\n                <sp-menu-item class=\"root-1\">\n                    Has submenu\n                    <sp-menu slot=\"submenu\">${renderSubmenu()}</sp-menu>\n                </sp-menu-item>\n                <sp-menu-item class=\"root-2\">\n                    Has submenu\n                    <sp-menu slot=\"submenu\">${renderSubmenu()}</sp-menu>\n                </sp-menu-item>\n            </sp-menu>\n        `);\n\n        await elementUpdated(el);\n        const rootItem1 = el.querySelector('.root-1') as MenuItem;\n        const rootItem2 = el.querySelector('.root-2') as MenuItem;\n        expect(rootItem1.open, 'initially closed 1').to.be.false;\n        expect(rootItem2.open, 'initially closed 2').to.be.false;\n\n        const rootItemBoundingRect1 = rootItem1.getBoundingClientRect();\n        const rootItemBoundingRect2 = rootItem2.getBoundingClientRect();\n\n        // Open the first submenu\n        await sendMouseTo(rootItemBoundingRect1);\n        // Open the second submenu, closing the first\n        await sendMouseTo(rootItemBoundingRect2);\n        // Open the first submenu, closing the second\n        await sendMouseTo(rootItemBoundingRect1);\n        // Open the second submenu, closing the first\n        await sendMouseTo(rootItemBoundingRect2);\n        await nextFrame();\n        await nextFrame();\n        await nextFrame();\n        await nextFrame();\n        await nextFrame();\n        await nextFrame();\n        const closed = oneEvent(rootItem2, 'sp-closed');\n        // Close the second submenu\n        await sendMouseFrom(rootItemBoundingRect2);\n        await closed;\n\n        expect(rootItem1.open, 'finally closed 1').to.be.false;\n        expect(rootItem2.open, 'finally closed 2').to.be.false;\n    });\n    it('allows using non-menu-item elements as the root of a submenu', async () => {\n        const el = await fixture<Menu>(html`\n            <sp-menu>\n                <sp-menu-item class=\"root\">\n                    Has submenu\n                    <div role=\"menuitem\" slot=\"submenu\">\n                        <sp-menu-item class=\"submenu-1\">One</sp-menu-item>\n                        <sp-menu-item>Two</sp-menu-item>\n                        <sp-menu-item>Three</sp-menu-item>\n                    </div\n                ></div>\n                </sp-menu-item>\n            </sp-menu>\n        `);\n        await elementUpdated(el);\n        const rootItem = el.querySelector('.root') as MenuItem;\n\n        // Open the first submenu\n        await sendMouseTo(rootItem);\n\n        expect(rootItem.open).to.be.true;\n\n        const firstSubMenuItemRect = el\n            .querySelector('.submenu-1')\n            ?.getBoundingClientRect();\n\n        if (!firstSubMenuItemRect) {\n            throw new Error('Submenu item not found');\n        }\n\n        // click to select\n        await sendMouseTo(firstSubMenuItemRect);\n\n        // This test will fail if the click event throws an error\n        // because the submenu root is not a menu-item\n    });\n    it('should make submenu scrollable when content exceeds max height', async () => {\n        const el = await fixture<Menu>(html`\n            <sp-menu>\n                <sp-menu-item>\n                    Parent Item\n                    <div role=\"menu\" slot=\"submenu\">\n                        ${Array(20)\n                            .fill(0)\n                            .map(\n                                (_, i) => html`\n                                    <sp-menu-item>\n                                        Submenu Item ${i + 1}\n                                    </sp-menu-item>\n                                `\n                            )}\n                    </div>\n                </sp-menu-item>\n            </sp-menu>\n        `);\n\n        await elementUpdated(el);\n\n        const menuItem = el.querySelector('sp-menu-item') as MenuItem;\n        const submenu = menuItem.querySelector(\n            '[slot=\"submenu\"]'\n        ) as HTMLElement;\n\n        // Open the submenu\n        const opened = oneEvent(menuItem, 'sp-opened');\n        menuItem.dispatchEvent(\n            new PointerEvent('pointerenter', { bubbles: true })\n        );\n        await opened;\n\n        // Force a specific max-height to ensure scrolling\n        submenu.style.maxHeight = '200px';\n        await elementUpdated(submenu);\n\n        // Get computed styles\n        const computedStyle = window.getComputedStyle(submenu);\n\n        // Verify overflow-y is set to auto\n        expect(computedStyle.overflowY).to.equal('auto');\n\n        // Verify that the content is actually overflowing\n        expect(submenu.scrollHeight).to.be.greaterThan(submenu.clientHeight);\n\n        // Verify that the submenu is scrollable\n        const initialScrollTop = submenu.scrollTop;\n        submenu.scrollTop = 50;\n        await elementUpdated(submenu);\n        expect(submenu.scrollTop).to.equal(50);\n        expect(submenu.scrollTop).to.not.equal(initialScrollTop);\n    });\n});\n"],
  "mappings": "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",
  "names": []
}
