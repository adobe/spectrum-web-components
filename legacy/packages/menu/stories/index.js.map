{
  "version": 3,
  "sources": ["index.ts"],
  "sourcesContent": ["/*\nCopyright 2023 Adobe. All rights reserved.\nThis file is licensed to you under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License. You may obtain a copy\nof the License at http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software distributed under\nthe License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\nOF ANY KIND, either express or implied. See the License for the specific language\ngoverning permissions and limitations under the License.\n*/\n\nimport {\n    html,\n    LitElement,\n    TemplateResult,\n} from '@spectrum-web-components/base';\nimport '@spectrum-web-components/menu/sp-menu.js';\nimport '@spectrum-web-components/menu/sp-menu-divider.js';\nimport '@spectrum-web-components/menu/sp-menu-item.js';\nimport '@spectrum-web-components/popover/sp-popover.js';\nimport { Menu } from '@spectrum-web-components/menu';\n\nexport const MenuMarkup = ({\n    size = 'm' as 's' | 'm' | 'l' | 'xl',\n} = {}): TemplateResult => {\n    return html`\n        <sp-menu size=${size}>\n            <sp-menu-item>Deselect</sp-menu-item>\n            <sp-menu-item>Select Inverse</sp-menu-item>\n            <sp-menu-item>Feather...</sp-menu-item>\n            <sp-menu-item>Select and Mask...</sp-menu-item>\n            <sp-menu-divider></sp-menu-divider>\n            <sp-menu-item>Save Selection</sp-menu-item>\n            <sp-menu-item disabled>Make Work Path</sp-menu-item>\n        </sp-menu>\n\n        <sp-popover open>\n            <sp-menu size=${size}>\n                <sp-menu-item>Deselect</sp-menu-item>\n                <sp-menu-item>Select Inverse</sp-menu-item>\n                <sp-menu-item>Feather...</sp-menu-item>\n                <sp-menu-item>Select and Mask...</sp-menu-item>\n                <sp-menu-divider></sp-menu-divider>\n                <sp-menu-item>Save Selection</sp-menu-item>\n                <sp-menu-item disabled>Make Work Path</sp-menu-item>\n            </sp-menu>\n        </sp-popover>\n    `;\n};\n\nexport class ComplexSlottedGroup extends LitElement {\n    get menu(): Menu {\n        return this.renderRoot.querySelector('sp-menu') as Menu;\n    }\n\n    static override shadowRootOptions = {\n        ...LitElement.shadowRootOptions,\n        delegatesFocus: true,\n    };\n\n    protected override render(): TemplateResult {\n        return html`\n            <sp-menu id=\"sp-menu\">\n                <sp-menu-group id=\"sp-menu-group-1\">\n                    <sp-menu-item id=\"i-1\">Before First</sp-menu-item>\n                    <slot name=\"before\"></slot>\n                </sp-menu-group>\n                <sp-menu-group id=\"sp-menu-group-2\">\n                    <sp-menu-item id=\"i-4\">Sibling 1</sp-menu-item>\n                    <slot></slot>\n                    <sp-menu-item id=\"i-10\">Sibling 2</sp-menu-item>\n                </sp-menu-group>\n                <sp-menu-group id=\"sp-menu-group-3\">\n                    <sp-menu-item id=\"i-11\">After 1</sp-menu-item>\n                    <sp-menu-item id=\"i-12\">After 2</sp-menu-item>\n                </sp-menu-group>\n            </sp-menu>\n        `;\n    }\n}\n\ncustomElements.define('complex-slotted-group', ComplexSlottedGroup);\n\nexport class ComplexSlottedMenu extends LitElement {\n    get menu(): Menu {\n        return (\n            this.renderRoot.querySelector(\n                'complex-slotted-group'\n            ) as ComplexSlottedGroup\n        ).menu;\n    }\n\n    static override shadowRootOptions = {\n        ...LitElement.shadowRootOptions,\n        delegatesFocus: true,\n    };\n\n    protected override render(): TemplateResult {\n        return html`\n            <complex-slotted-group id=\"complex-slotted-group\">\n                <sp-menu-item id=\"i-5\">Middle 1</sp-menu-item>\n                <sp-menu-item id=\"i-6\">Middle 2</sp-menu-item>\n                <sp-menu-item id=\"i-7\">Middle 3</sp-menu-item>\n                <slot></slot>\n                <slot name=\"before\" slot=\"before\"></slot>\n                <sp-menu-item slot=\"before\" id=\"i-3\">Before Last</sp-menu-item>\n            </complex-slotted-group>\n        `;\n    }\n}\n\ncustomElements.define('complex-slotted-menu', ComplexSlottedMenu);\n"],
  "mappings": ";AAYA;AAAA,EACI;AAAA,EACA;AAAA,OAEG;AACP,OAAO;AACP,OAAO;AACP,OAAO;AACP,OAAO;AAGA,aAAM,aAAa,CAAC;AAAA,EACvB,OAAO;AACX,IAAI,CAAC,MAAsB;AACvB,SAAO;AAAA,wBACa,IAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BAWA,IAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAWhC;AAEO,aAAM,4BAA4B,WAAW;AAAA,EAChD,IAAI,OAAa;AACb,WAAO,KAAK,WAAW,cAAc,SAAS;AAAA,EAClD;AAAA,EAOmB,SAAyB;AACxC,WAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAiBX;AACJ;AA7Ba,oBAKO,oBAAoB;AAAA,EAChC,GAAG,WAAW;AAAA,EACd,gBAAgB;AACpB;AAuBJ,eAAe,OAAO,yBAAyB,mBAAmB;AAE3D,aAAM,2BAA2B,WAAW;AAAA,EAC/C,IAAI,OAAa;AACb,WACI,KAAK,WAAW;AAAA,MACZ;AAAA,IACJ,EACF;AAAA,EACN;AAAA,EAOmB,SAAyB;AACxC,WAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAUX;AACJ;AA1Ba,mBASO,oBAAoB;AAAA,EAChC,GAAG,WAAW;AAAA,EACd,gBAAgB;AACpB;AAgBJ,eAAe,OAAO,wBAAwB,kBAAkB;",
  "names": []
}
