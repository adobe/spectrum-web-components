{
  "version": 3,
  "sources": ["menu-group.stories.ts"],
  "sourcesContent": ["/*\nCopyright 2020 Adobe. All rights reserved.\nThis file is licensed to you under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License. You may obtain a copy\nof the License at http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software distributed under\nthe License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\nOF ANY KIND, either express or implied. See the License for the specific language\ngoverning permissions and limitations under the License.\n*/\nimport { html, TemplateResult } from '@spectrum-web-components/base';\n\nimport { MenuGroup } from '@spectrum-web-components/menu';\nimport '@spectrum-web-components/menu/sp-menu.js';\nimport '@spectrum-web-components/menu/sp-menu-divider.js';\nimport '@spectrum-web-components/popover/sp-popover.js';\nimport '@spectrum-web-components/menu/sp-menu.js';\nimport '@spectrum-web-components/menu/sp-menu-item.js';\nimport '@spectrum-web-components/menu/sp-menu-divider.js';\nimport '@spectrum-web-components/menu/sp-menu-group.js';\n\nimport './index.js';\n\nexport default {\n    component: 'sp-menu',\n    title: 'Menu Group',\n};\n\nexport const complexSlotted = (): TemplateResult => {\n    return html`\n        <complex-slotted-menu>\n            <sp-menu-item slot=\"before\" id=\"i-2\">External A</sp-menu-item>\n            <sp-menu-item id=\"i-8\">External 1</sp-menu-item>\n            <sp-menu-item id=\"i-9\">External 2</sp-menu-item>\n        </complex-slotted-menu>\n    `;\n};\n\nexport const mixed = (): TemplateResult => {\n    let style = 'italic';\n    let weight = '700';\n    let color = 'blue';\n    let decoration = 'overline';\n    const styleRules = ({\n        style,\n        weight,\n        color,\n        decoration,\n    }: {\n        style: string;\n        weight: string;\n        color: string;\n        decoration: string;\n    }): string => {\n        return `\n        .style-rule {\n            font-weight: ${weight};\n            font-style: ${style};\n            color: ${color};\n            text-decoration: ${decoration};\n        }\n        `;\n    };\n    const update = (event: Event): void => {\n        const { value, id } = event.target as MenuGroup;\n        switch (id) {\n            case 'font':\n                const values = value.split(',');\n                style = values.indexOf('italic') > -1 ? 'italic' : 'normal';\n                weight = values.indexOf('bold') > -1 ? '700' : '400';\n                break;\n            case 'color':\n                color = value;\n                break;\n            case 'decoration':\n                decoration = value;\n                break;\n        }\n        (document.querySelector('#output') as HTMLElement).textContent =\n            styleRules({\n                style,\n                weight,\n                color,\n                decoration,\n            });\n    };\n    return html`\n        <style>\n            sp-popover {\n                position: static;\n                float: left;\n            }\n        </style>\n        <sp-popover open>\n            <sp-menu label=\"Style/Color\" @change=${update}>\n                <sp-menu-group label=\"Font Style\" selects=\"multiple\" id=\"font\">\n                    <sp-menu-item value=\"bold\" selected>Bold</sp-menu-item>\n                    <sp-menu-item value=\"italic\" selected>Italic</sp-menu-item>\n                </sp-menu-group>\n                <sp-menu-divider></sp-menu-divider>\n                <sp-menu-group label=\"Text Color\" selects=\"single\" id=\"color\">\n                    <sp-menu-item value=\"black\">Black</sp-menu-item>\n                    <sp-menu-item value=\"blue\" selected>Blue</sp-menu-item>\n                    <sp-menu-item value=\"red\">Red</sp-menu-item>\n                    <sp-menu-item value=\"green\">Green</sp-menu-item>\n                </sp-menu-group>\n                <sp-menu-divider></sp-menu-divider>\n                <sp-menu-group\n                    label=\"Text Decoration\"\n                    selects=\"single\"\n                    id=\"decoration\"\n                >\n                    <sp-menu-item value=\"none\">None</sp-menu-item>\n                    <sp-menu-item value=\"overline\" selected>\n                        Overline\n                    </sp-menu-item>\n                    <sp-menu-item value=\"line-through\">\n                        Line-through\n                    </sp-menu-item>\n                    <sp-menu-item value=\"underline\">Underline</sp-menu-item>\n                </sp-menu-group>\n            </sp-menu>\n        </sp-popover>\n        <pre\n            id=\"output\"\n            style=\"font-family: var(--spectrum-alias-body-text-font-family);\"\n        >\n            ${styleRules({ style, weight, color, decoration })}\n        </pre\n        >\n    `;\n};\n\nexport const inherit = (): TemplateResult => {\n    return html`\n        <style>\n            sp-popover {\n                position: static;\n                float: left;\n            }\n        </style>\n        <sp-popover open>\n            <sp-menu label=\"Groceries\" selects=\"multiple\">\n                <sp-menu-group label=\"Juice\" selects=\"inherit\">\n                    <sp-menu-item selected>Orange</sp-menu-item>\n                    <sp-menu-item selected>Apple</sp-menu-item>\n                    <sp-menu-item>Grape</sp-menu-item>\n                </sp-menu-group>\n                <sp-menu-divider></sp-menu-divider>\n                <sp-menu-group label=\"Vegetables\" selects=\"inherit\">\n                    <sp-menu-item>Carrots</sp-menu-item>\n                    <sp-menu-item selected>Summer Squash</sp-menu-item>\n                    <sp-menu-item>Zuccini</sp-menu-item>\n                </sp-menu-group>\n                <sp-menu-divider></sp-menu-divider>\n                <sp-menu-group label=\"Dry Goods\" selects=\"inherit\">\n                    <sp-menu-item>Ceral</sp-menu-item>\n                    <sp-menu-item selected>Flour</sp-menu-item>\n                    <sp-menu-item>Salt</sp-menu-item>\n                    <sp-menu-item>Sugar</sp-menu-item>\n                </sp-menu-group>\n            </sp-menu>\n        </sp-popover>\n    `;\n};\n"],
  "mappings": ";AAWA,SAAS,YAA4B;AAGrC,OAAO;AACP,OAAO;AACP,OAAO;AACP,OAAO;AACP,OAAO;AACP,OAAO;AACP,OAAO;AAEP,OAAO;AAEP,eAAe;AAAA,EACX,WAAW;AAAA,EACX,OAAO;AACX;AAEO,aAAM,iBAAiB,MAAsB;AAChD,SAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOX;AAEO,aAAM,QAAQ,MAAsB;AACvC,MAAI,QAAQ;AACZ,MAAI,SAAS;AACb,MAAI,QAAQ;AACZ,MAAI,aAAa;AACjB,QAAM,aAAa,CAAC;AAAA,IAChB,OAAAA;AAAA,IACA,QAAAC;AAAA,IACA,OAAAC;AAAA,IACA,YAAAC;AAAA,EACJ,MAKc;AACV,WAAO;AAAA;AAAA,2BAEYF,OAAM;AAAA,0BACPD,MAAK;AAAA,qBACVE,MAAK;AAAA,+BACKC,WAAU;AAAA;AAAA;AAAA,EAGrC;AACA,QAAM,SAAS,CAAC,UAAuB;AACnC,UAAM,EAAE,OAAO,GAAG,IAAI,MAAM;AAC5B,YAAQ,IAAI;AAAA,MACR,KAAK;AACD,cAAM,SAAS,MAAM,MAAM,GAAG;AAC9B,gBAAQ,OAAO,QAAQ,QAAQ,IAAI,KAAK,WAAW;AACnD,iBAAS,OAAO,QAAQ,MAAM,IAAI,KAAK,QAAQ;AAC/C;AAAA,MACJ,KAAK;AACD,gBAAQ;AACR;AAAA,MACJ,KAAK;AACD,qBAAa;AACb;AAAA,IACR;AACA,IAAC,SAAS,cAAc,SAAS,EAAkB,cAC/C,WAAW;AAAA,MACP;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,IACJ,CAAC;AAAA,EACT;AACA,SAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mDAQwC,MAAM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAiC3C,WAAW,EAAE,OAAO,QAAQ,OAAO,WAAW,CAAC,CAAC;AAAA;AAAA;AAAA;AAI9D;AAEO,aAAM,UAAU,MAAsB;AACzC,SAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AA8BX;",
  "names": ["style", "weight", "color", "decoration"]
}
