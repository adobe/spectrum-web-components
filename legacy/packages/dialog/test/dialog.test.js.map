{
  "version": 3,
  "sources": ["dialog.test.ts"],
  "sourcesContent": ["/*\nCopyright 2020 Adobe. All rights reserved.\nThis file is licensed to you under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License. You may obtain a copy\nof the License at http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software distributed under\nthe License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\nOF ANY KIND, either express or implied. See the License for the specific language\ngoverning permissions and limitations under the License.\n*/\n\nimport {\n    elementUpdated,\n    expect,\n    fixture,\n    html,\n    nextFrame,\n} from '@open-wc/testing';\nimport { TemplateResult } from '@spectrum-web-components/base';\n\nimport '@spectrum-web-components/dialog/sp-dialog.js';\nimport { Dialog } from '@spectrum-web-components/dialog';\nimport {\n    alertError,\n    dismissable,\n    fullscreen,\n    small,\n} from '../stories/dialog.stories.js';\nimport { spy } from 'sinon';\nimport { testForLitDevWarnings } from '../../../test/testing-helpers.js';\n\ndescribe('Dialog', () => {\n    testForLitDevWarnings(async () => await fixture<Dialog>(small()));\n    it('loads `[size=small]` dialog accessibly', async () => {\n        const el = await fixture<Dialog>(small());\n\n        await elementUpdated(el);\n\n        await expect(el).to.be.accessible();\n    });\n    it('loads `[size=alert]` dialog accessibly', async () => {\n        const el = await fixture<Dialog>(alertError());\n\n        await elementUpdated(el);\n\n        await expect(el).to.be.accessible();\n    });\n    it('loads `[dismissable]` dialog accessibly', async () => {\n        const el = await fixture<Dialog>(dismissable());\n\n        await elementUpdated(el);\n\n        await expect(el).to.be.accessible();\n    });\n    it('loads `[mode=fullscreen]` dialog accessibly', async () => {\n        const el = await fixture<Dialog>(fullscreen());\n\n        await elementUpdated(el);\n\n        await expect(el).to.be.accessible();\n    });\n    it('loads dialog without footer accessibly', async () => {\n        const el = await fixture<Dialog>(small());\n\n        await elementUpdated(el);\n\n        await expect(el).to.be.accessible();\n    });\n    it('does not recycle applied content ids', async () => {\n        const el = await fixture<Dialog>(html`\n            <sp-dialog size=\"s\">\n                <h2 slot=\"heading\">Disclaimer</h2>\n            </sp-dialog>\n        `);\n\n        await elementUpdated(el);\n\n        await expect(el).to.be.accessible();\n\n        const paragraph = document.createElement('p');\n        paragraph.textContent = 'Added paragraph.';\n\n        el.querySelector('p')?.remove();\n        el.insertAdjacentElement('beforeend', paragraph);\n\n        // Slotchange time exists outside of the standard update lifecycle\n        await nextFrame();\n\n        await elementUpdated(el);\n\n        await expect(el).to.be.accessible();\n\n        paragraph.querySelector('p')?.remove();\n\n        // Slotchange time exists outside of the standard update lifecycle\n        await nextFrame();\n\n        await elementUpdated(el);\n\n        await expect(el).to.be.accessible();\n\n        el.insertAdjacentElement('beforeend', paragraph);\n\n        // Slotchange time exists outside of the standard update lifecycle\n        await nextFrame();\n\n        await elementUpdated(el);\n\n        await expect(el).to.be.accessible();\n\n        const heading = document.createElement('h2');\n        heading.slot = 'heading';\n        heading.textContent = 'New heading';\n\n        el.querySelector('h2')?.remove();\n        el.insertAdjacentElement('afterbegin', heading);\n\n        // Slotchange time exists outside of the standard update lifecycle\n        await nextFrame();\n\n        await elementUpdated(el);\n\n        await expect(el).to.be.accessible();\n    });\n    it('closes', async () => {\n        const closeSpy = spy();\n        const el = await fixture<Dialog>(dismissable());\n        el.addEventListener('close', () => closeSpy());\n        await elementUpdated(el);\n\n        const closeButton = (\n            el.shadowRoot\n                ? el.shadowRoot.querySelector('.close-button')\n                : el.querySelector('.close-button ')\n        ) as HTMLElement;\n\n        expect(closeButton.ariaLabel).to.be.equals('Close');\n\n        closeButton.click();\n\n        await elementUpdated(el);\n        expect(closeSpy.calledOnce).to.be.true;\n    });\n    it('allows hero override', async () => {\n        class Override extends Dialog {\n            protected override get hasHero(): boolean {\n                return true;\n            }\n            protected override renderHero(): TemplateResult {\n                return html`\n                    <div id=\"hero-container\"></div>\n                `;\n            }\n        }\n\n        customElements.define('hero-dialog', Override);\n\n        const el = await fixture<Override>(html`\n            <hero-dialog></hero-dialog>\n        `);\n\n        const container = el.shadowRoot.querySelector('#hero-container');\n        expect(container).to.not.be.null;\n    });\n    it('allows heading override', async () => {\n        class Override extends Dialog {\n            protected override renderHeading(): TemplateResult {\n                return html`\n                    <h2 id=\"heading-container\">Test</h2>\n                `;\n            }\n        }\n\n        customElements.define('heading-dialog', Override);\n\n        const el = await fixture<Override>(html`\n            <heading-dialog></heading-dialog>\n        `);\n\n        const container = el.shadowRoot.querySelector('#heading-container');\n        expect(container).to.not.be.null;\n    });\n    it('allows content override', async () => {\n        class Override extends Dialog {\n            protected override renderContent(): TemplateResult {\n                return html`\n                    <p id=\"content-container\">Test</p>\n                `;\n            }\n        }\n\n        customElements.define('content-dialog', Override);\n\n        const el = await fixture<Override>(html`\n            <content-dialog></content-dialog>\n        `);\n\n        const container = el.shadowRoot.querySelector('#content-container');\n        expect(container).to.not.be.null;\n    });\n    it('allows footer override', async () => {\n        class Override extends Dialog {\n            protected override get hasFooter(): boolean {\n                return true;\n            }\n            protected override renderFooter(): TemplateResult {\n                return html`\n                    <p id=\"footer-container\">Test</p>\n                `;\n            }\n        }\n\n        customElements.define('footer-dialog', Override);\n\n        const el = await fixture<Override>(html`\n            <footer-dialog></footer-dialog>\n        `);\n\n        const container = el.shadowRoot.querySelector('#footer-container');\n        expect(container).to.not.be.null;\n    });\n    it('allows button override', async () => {\n        class Override extends Dialog {\n            protected override get hasButtons(): boolean {\n                return true;\n            }\n            protected override renderButtons(): TemplateResult {\n                return html`\n                    <p id=\"button-container\">Test</p>\n                `;\n            }\n        }\n\n        customElements.define('button-dialog', Override);\n\n        const el = await fixture<Override>(html`\n            <button-dialog></button-dialog>\n        `);\n\n        const container = el.shadowRoot.querySelector('#button-container');\n        expect(container).to.not.be.null;\n    });\n    it('allows dismiss override', async () => {\n        class Override extends Dialog {\n            protected override renderDismiss(): TemplateResult {\n                return html`\n                    <p id=\"dismiss-container\">Test</p>\n                `;\n            }\n        }\n\n        customElements.define('dismiss-dialog', Override);\n\n        const el = await fixture<Override>(html`\n            <dismiss-dialog dismissable></dismiss-dialog>\n        `);\n\n        const container = el.shadowRoot.querySelector('#dismiss-container');\n        expect(container).to.not.be.null;\n    });\n});\n"],
  "mappings": ";AAYA;AAAA,EACI;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,OACG;AAGP,OAAO;AACP,SAAS,cAAc;AACvB;AAAA,EACI;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,OACG;AACP,SAAS,WAAW;AACpB,SAAS,6BAA6B;AAEtC,SAAS,UAAU,MAAM;AACrB,wBAAsB,YAAY,MAAM,QAAgB,MAAM,CAAC,CAAC;AAChE,KAAG,0CAA0C,YAAY;AACrD,UAAM,KAAK,MAAM,QAAgB,MAAM,CAAC;AAExC,UAAM,eAAe,EAAE;AAEvB,UAAM,OAAO,EAAE,EAAE,GAAG,GAAG,WAAW;AAAA,EACtC,CAAC;AACD,KAAG,0CAA0C,YAAY;AACrD,UAAM,KAAK,MAAM,QAAgB,WAAW,CAAC;AAE7C,UAAM,eAAe,EAAE;AAEvB,UAAM,OAAO,EAAE,EAAE,GAAG,GAAG,WAAW;AAAA,EACtC,CAAC;AACD,KAAG,2CAA2C,YAAY;AACtD,UAAM,KAAK,MAAM,QAAgB,YAAY,CAAC;AAE9C,UAAM,eAAe,EAAE;AAEvB,UAAM,OAAO,EAAE,EAAE,GAAG,GAAG,WAAW;AAAA,EACtC,CAAC;AACD,KAAG,+CAA+C,YAAY;AAC1D,UAAM,KAAK,MAAM,QAAgB,WAAW,CAAC;AAE7C,UAAM,eAAe,EAAE;AAEvB,UAAM,OAAO,EAAE,EAAE,GAAG,GAAG,WAAW;AAAA,EACtC,CAAC;AACD,KAAG,0CAA0C,YAAY;AACrD,UAAM,KAAK,MAAM,QAAgB,MAAM,CAAC;AAExC,UAAM,eAAe,EAAE;AAEvB,UAAM,OAAO,EAAE,EAAE,GAAG,GAAG,WAAW;AAAA,EACtC,CAAC;AACD,KAAG,wCAAwC,YAAY;AArE3D;AAsEQ,UAAM,KAAK,MAAM,QAAgB;AAAA;AAAA;AAAA;AAAA,SAIhC;AAED,UAAM,eAAe,EAAE;AAEvB,UAAM,OAAO,EAAE,EAAE,GAAG,GAAG,WAAW;AAElC,UAAM,YAAY,SAAS,cAAc,GAAG;AAC5C,cAAU,cAAc;AAExB,aAAG,cAAc,GAAG,MAApB,mBAAuB;AACvB,OAAG,sBAAsB,aAAa,SAAS;AAG/C,UAAM,UAAU;AAEhB,UAAM,eAAe,EAAE;AAEvB,UAAM,OAAO,EAAE,EAAE,GAAG,GAAG,WAAW;AAElC,oBAAU,cAAc,GAAG,MAA3B,mBAA8B;AAG9B,UAAM,UAAU;AAEhB,UAAM,eAAe,EAAE;AAEvB,UAAM,OAAO,EAAE,EAAE,GAAG,GAAG,WAAW;AAElC,OAAG,sBAAsB,aAAa,SAAS;AAG/C,UAAM,UAAU;AAEhB,UAAM,eAAe,EAAE;AAEvB,UAAM,OAAO,EAAE,EAAE,GAAG,GAAG,WAAW;AAElC,UAAM,UAAU,SAAS,cAAc,IAAI;AAC3C,YAAQ,OAAO;AACf,YAAQ,cAAc;AAEtB,aAAG,cAAc,IAAI,MAArB,mBAAwB;AACxB,OAAG,sBAAsB,cAAc,OAAO;AAG9C,UAAM,UAAU;AAEhB,UAAM,eAAe,EAAE;AAEvB,UAAM,OAAO,EAAE,EAAE,GAAG,GAAG,WAAW;AAAA,EACtC,CAAC;AACD,KAAG,UAAU,YAAY;AACrB,UAAM,WAAW,IAAI;AACrB,UAAM,KAAK,MAAM,QAAgB,YAAY,CAAC;AAC9C,OAAG,iBAAiB,SAAS,MAAM,SAAS,CAAC;AAC7C,UAAM,eAAe,EAAE;AAEvB,UAAM,cACF,GAAG,aACG,GAAG,WAAW,cAAc,eAAe,IAC3C,GAAG,cAAc,gBAAgB;AAG3C,WAAO,YAAY,SAAS,EAAE,GAAG,GAAG,OAAO,OAAO;AAElD,gBAAY,MAAM;AAElB,UAAM,eAAe,EAAE;AACvB,WAAO,SAAS,UAAU,EAAE,GAAG,GAAG;AAAA,EACtC,CAAC;AACD,KAAG,wBAAwB,YAAY;AAAA,IACnC,MAAM,iBAAiB,OAAO;AAAA,MAC1B,IAAuB,UAAmB;AACtC,eAAO;AAAA,MACX;AAAA,MACmB,aAA6B;AAC5C,eAAO;AAAA;AAAA;AAAA,MAGX;AAAA,IACJ;AAEA,mBAAe,OAAO,eAAe,QAAQ;AAE7C,UAAM,KAAK,MAAM,QAAkB;AAAA;AAAA,SAElC;AAED,UAAM,YAAY,GAAG,WAAW,cAAc,iBAAiB;AAC/D,WAAO,SAAS,EAAE,GAAG,IAAI,GAAG;AAAA,EAChC,CAAC;AACD,KAAG,2BAA2B,YAAY;AAAA,IACtC,MAAM,iBAAiB,OAAO;AAAA,MACP,gBAAgC;AAC/C,eAAO;AAAA;AAAA;AAAA,MAGX;AAAA,IACJ;AAEA,mBAAe,OAAO,kBAAkB,QAAQ;AAEhD,UAAM,KAAK,MAAM,QAAkB;AAAA;AAAA,SAElC;AAED,UAAM,YAAY,GAAG,WAAW,cAAc,oBAAoB;AAClE,WAAO,SAAS,EAAE,GAAG,IAAI,GAAG;AAAA,EAChC,CAAC;AACD,KAAG,2BAA2B,YAAY;AAAA,IACtC,MAAM,iBAAiB,OAAO;AAAA,MACP,gBAAgC;AAC/C,eAAO;AAAA;AAAA;AAAA,MAGX;AAAA,IACJ;AAEA,mBAAe,OAAO,kBAAkB,QAAQ;AAEhD,UAAM,KAAK,MAAM,QAAkB;AAAA;AAAA,SAElC;AAED,UAAM,YAAY,GAAG,WAAW,cAAc,oBAAoB;AAClE,WAAO,SAAS,EAAE,GAAG,IAAI,GAAG;AAAA,EAChC,CAAC;AACD,KAAG,0BAA0B,YAAY;AAAA,IACrC,MAAM,iBAAiB,OAAO;AAAA,MAC1B,IAAuB,YAAqB;AACxC,eAAO;AAAA,MACX;AAAA,MACmB,eAA+B;AAC9C,eAAO;AAAA;AAAA;AAAA,MAGX;AAAA,IACJ;AAEA,mBAAe,OAAO,iBAAiB,QAAQ;AAE/C,UAAM,KAAK,MAAM,QAAkB;AAAA;AAAA,SAElC;AAED,UAAM,YAAY,GAAG,WAAW,cAAc,mBAAmB;AACjE,WAAO,SAAS,EAAE,GAAG,IAAI,GAAG;AAAA,EAChC,CAAC;AACD,KAAG,0BAA0B,YAAY;AAAA,IACrC,MAAM,iBAAiB,OAAO;AAAA,MAC1B,IAAuB,aAAsB;AACzC,eAAO;AAAA,MACX;AAAA,MACmB,gBAAgC;AAC/C,eAAO;AAAA;AAAA;AAAA,MAGX;AAAA,IACJ;AAEA,mBAAe,OAAO,iBAAiB,QAAQ;AAE/C,UAAM,KAAK,MAAM,QAAkB;AAAA;AAAA,SAElC;AAED,UAAM,YAAY,GAAG,WAAW,cAAc,mBAAmB;AACjE,WAAO,SAAS,EAAE,GAAG,IAAI,GAAG;AAAA,EAChC,CAAC;AACD,KAAG,2BAA2B,YAAY;AAAA,IACtC,MAAM,iBAAiB,OAAO;AAAA,MACP,gBAAgC;AAC/C,eAAO;AAAA;AAAA;AAAA,MAGX;AAAA,IACJ;AAEA,mBAAe,OAAO,kBAAkB,QAAQ;AAEhD,UAAM,KAAK,MAAM,QAAkB;AAAA;AAAA,SAElC;AAED,UAAM,YAAY,GAAG,WAAW,cAAc,oBAAoB;AAClE,WAAO,SAAS,EAAE,GAAG,IAAI,GAAG;AAAA,EAChC,CAAC;AACL,CAAC;",
  "names": []
}
