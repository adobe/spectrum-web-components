{
  "version": 3,
  "sources": ["dialog-wrapper.test.ts"],
  "sourcesContent": ["/*\nCopyright 2020 Adobe. All rights reserved.\nThis file is licensed to you under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License. You may obtain a copy\nof the License at http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software distributed under\nthe License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\nOF ANY KIND, either express or implied. See the License for the specific language\ngoverning permissions and limitations under the License.\n*/\n\nimport {\n    elementUpdated,\n    expect,\n    fixture,\n    oneEvent,\n    waitUntil,\n} from '@open-wc/testing';\nimport { SinonStub, spy, stub } from 'sinon';\n\nimport '@spectrum-web-components/theme/sp-theme.js';\nimport '@spectrum-web-components/theme/src/themes.js';\nimport '@spectrum-web-components/dialog/sp-dialog-wrapper.js';\nimport { Dialog, DialogWrapper } from '@spectrum-web-components/dialog';\nimport { Button } from '@spectrum-web-components/button';\nimport { Underlay } from '@spectrum-web-components/underlay';\nimport {\n    lazyHero,\n    longContent,\n    wrapperButtons,\n    wrapperButtonsUnderlay,\n    wrapperDismissable,\n    wrapperDismissableUnderlayError,\n    wrapperFullscreen,\n    wrapperHeadlineVisibilityNone,\n    wrapperLabeledHero,\n    wrapperWithHeadline,\n    wrapperWithHeadlineNoDivider,\n} from '../stories/dialog-wrapper.stories.js';\nimport { OverlayTrigger } from '@spectrum-web-components/overlay';\nimport { html, TemplateResult } from '@spectrum-web-components/base';\nimport { Theme } from '@spectrum-web-components/theme';\nimport { testForLitDevWarnings } from '../../../test/testing-helpers.js';\nimport { Divider } from '@spectrum-web-components/divider/src/Divider.js';\nimport { sendMouse } from '../../../test/plugins/browser.js';\nimport { nextFrame } from '@spectrum-web-components/overlay/src/AbstractOverlay.js';\n\nasync function styledFixture<T extends Element>(\n    story: TemplateResult\n): Promise<T> {\n    const test = await fixture<Theme>(html`\n        <sp-theme system=\"spectrum\" scale=\"medium\" color=\"dark\">\n            ${story}\n        </sp-theme>\n    `);\n    return test.children[0] as T;\n}\n\ndescribe('Dialog Wrapper', () => {\n    testForLitDevWarnings(\n        async () => await styledFixture<DialogWrapper>(wrapperDismissable())\n    );\n    it('loads wrapped dialog accessibly', async () => {\n        const el = await styledFixture<DialogWrapper>(wrapperDismissable());\n\n        await elementUpdated(el);\n\n        await expect(el).to.be.accessible();\n    });\n    it('loads labeled hero dialog accessibly', async () => {\n        const el = await styledFixture<DialogWrapper>(wrapperLabeledHero());\n\n        await elementUpdated(el);\n\n        await expect(el).to.be.accessible();\n    });\n    it('loads fullscreen wrapped dialog accessibly', async () => {\n        const el = await styledFixture<DialogWrapper>(wrapperFullscreen());\n\n        await elementUpdated(el);\n\n        await expect(el).to.be.accessible();\n    });\n    xit('loads with underlay and no headline accessibly', async () => {\n        const el = await styledFixture<DialogWrapper>(wrapperButtonsUnderlay());\n        await elementUpdated(el);\n        el.headline = '';\n        await elementUpdated(el);\n        await expect(el).to.be.accessible();\n    });\n    it('opens and closes', async () => {\n        const closeSpy = spy();\n        const openedSpy = spy();\n        const test = await styledFixture<OverlayTrigger>(html`\n            <div @sp-opened=${() => openedSpy()}>${longContent()}</div>\n        `);\n        const overlayTrigger = test.querySelector(\n            'overlay-trigger'\n        ) as OverlayTrigger;\n        const el = test.querySelector('sp-dialog-wrapper') as DialogWrapper;\n        el.addEventListener('close', () => closeSpy());\n        await waitUntil(\n            () => openedSpy.calledOnce,\n            'click content projected to overlay',\n            { timeout: 2000 }\n        );\n\n        expect(el.open).to.be.true;\n        const closed = oneEvent(overlayTrigger, 'sp-closed');\n        overlayTrigger.open = undefined;\n        await closed;\n\n        expect(el.open).to.be.false;\n        expect(closeSpy.callCount).to.equal(1);\n    });\n    it('opens and closes when element is recycled', async () => {\n        const closeSpy = spy();\n        const openedSpy = spy();\n        const test = await styledFixture<OverlayTrigger>(html`\n            <div @sp-opened=${() => openedSpy()}>${longContent()}</div>\n        `);\n        const overlayTrigger = test.querySelector(\n            'overlay-trigger'\n        ) as OverlayTrigger;\n        const el = test.querySelector('sp-dialog-wrapper') as DialogWrapper;\n        el.addEventListener('close', () => closeSpy());\n\n        await waitUntil(\n            () => openedSpy.calledOnce,\n            'click content projected to overlay',\n            { timeout: 2000 }\n        );\n\n        expect(el.open).to.be.true;\n        const closed = oneEvent(overlayTrigger, 'sp-closed');\n        overlayTrigger.open = undefined;\n        await closed;\n\n        expect(el.open).to.be.false;\n        expect(closeSpy.callCount).to.equal(1);\n    });\n    it(\"shows header divider when there's a header\", async () => {\n        const wrapper = await styledFixture<DialogWrapper>(\n            wrapperWithHeadline()\n        );\n        await elementUpdated(wrapper);\n\n        const dialog = wrapper.shadowRoot.querySelector('sp-dialog') as Dialog;\n        const divider = dialog.shadowRoot.querySelector(\n            'sp-divider.divider'\n        ) as Divider;\n\n        expect(divider).to.be.not.null;\n    });\n    it('hides header divider when there\\'s a header but \"no-divider\"', async () => {\n        const wrapper = await styledFixture<DialogWrapper>(\n            wrapperWithHeadlineNoDivider()\n        );\n        await elementUpdated(wrapper);\n\n        await expect(wrapper).to.be.accessible();\n\n        const dialog = wrapper.shadowRoot.querySelector('sp-dialog') as Dialog;\n        const divider = dialog.shadowRoot.querySelector(\n            'sp-divider.divider'\n        ) as Divider;\n\n        expect(divider).to.be.null;\n    });\n    it(\"hides header divider when there's no header\", async () => {\n        const wrapper = await styledFixture<DialogWrapper>(\n            wrapperHeadlineVisibilityNone()\n        );\n        await elementUpdated(wrapper);\n\n        await expect(wrapper).to.be.accessible();\n\n        const dialog = wrapper.shadowRoot.querySelector('sp-dialog') as Dialog;\n        const divider = dialog.shadowRoot.querySelector(\n            'sp-divider.divider'\n        ) as Divider;\n\n        expect(divider).to.be.null;\n    });\n    it('dismisses via clicking the underlay when [dismissable]', async () => {\n        const test = await styledFixture<DialogWrapper>(\n            wrapperDismissableUnderlayError()\n        );\n        const el = test.querySelector('sp-dialog-wrapper') as DialogWrapper;\n        await elementUpdated(el);\n        expect(el.open).to.be.true;\n        el.dismissable = true;\n        const underlay = el.shadowRoot.querySelector('sp-underlay') as Underlay;\n        underlay.click();\n        await elementUpdated(el);\n        expect(el.open).to.be.false;\n    });\n    it('does not dismiss via clicking the underlay :not([dismissable])', async () => {\n        const el = await styledFixture<DialogWrapper>(wrapperButtonsUnderlay());\n        await elementUpdated(el);\n        expect(el.open).to.be.true;\n        const underlay = el.shadowRoot.querySelector('sp-underlay') as Underlay;\n        underlay.click();\n        await elementUpdated(el);\n        expect(el.open).to.be.true;\n    });\n    it('dismisses', async () => {\n        const el = await styledFixture<DialogWrapper>(wrapperDismissable());\n\n        await elementUpdated(el);\n        expect(el.open).to.be.true;\n\n        const root = el.shadowRoot ? el.shadowRoot : el;\n        const dialog = root.querySelector('sp-dialog') as Dialog;\n        const dialogRoot = dialog.shadowRoot ? dialog.shadowRoot : dialog;\n        const dismissButton = dialogRoot.querySelector(\n            '.close-button'\n        ) as HTMLButtonElement;\n        expect(dismissButton.ariaLabel).to.be.equals('Close');\n        dismissButton.click();\n\n        await elementUpdated(el);\n        expect(el.open).to.be.false;\n    });\n    it('manages entry focus - buttons', async () => {\n        const el = await styledFixture<DialogWrapper>(wrapperButtons());\n\n        await elementUpdated(el);\n        expect(el.open).to.be.true;\n        expect(document.activeElement !== el, 'no focused').to.be.true;\n\n        const button = el.shadowRoot.querySelector('sp-button') as Button;\n\n        el.focus();\n        await elementUpdated(el);\n        expect(\n            document.activeElement === el,\n            `focused generally, ${document.activeElement}`\n        ).to.be.true;\n        expect(\n            (button.getRootNode() as Document).activeElement === button,\n            `focused specifically, ${\n                (button.getRootNode() as Document).activeElement?.outerHTML\n            }`\n        ).to.be.true;\n    });\n    it('dispatches `confirm`, `cancel` and `secondary`', async () => {\n        const confirmSpy = spy();\n        const cancelSpy = spy();\n        const secondarySpy = spy();\n        const handleConfirm = (): void => confirmSpy();\n        const handleCancel = (): void => cancelSpy();\n        const handleSecondary = (): void => secondarySpy();\n        const el = await styledFixture<DialogWrapper>(wrapperButtons());\n        el.addEventListener('confirm', handleConfirm);\n        el.addEventListener('cancel', handleCancel);\n        el.addEventListener('secondary', handleSecondary);\n\n        await elementUpdated(el);\n        expect(confirmSpy.called).to.be.false;\n        expect(cancelSpy.called).to.be.false;\n        expect(secondarySpy.called).to.be.false;\n\n        const accentButton = el.shadowRoot.querySelector(\n            '[variant=\"accent\"]'\n        ) as Button;\n        const primaryButton = el.shadowRoot.querySelector(\n            '[variant=\"primary\"]'\n        ) as Button;\n        const secondaryButton = el.shadowRoot.querySelector(\n            '[variant=\"secondary\"]'\n        ) as Button;\n\n        accentButton.click();\n\n        await elementUpdated(el);\n        expect(confirmSpy.called, 'dispatched `confirm`').to.be.true;\n        expect(secondarySpy.called).to.be.false;\n        expect(cancelSpy.called).to.be.false;\n\n        primaryButton.click();\n\n        await elementUpdated(el);\n        expect(confirmSpy.callCount).to.equal(1);\n        expect(secondarySpy.called, 'dispatched `cancel`').to.be.true;\n        expect(cancelSpy.called).to.be.false;\n\n        secondaryButton.click();\n\n        await elementUpdated(el);\n        expect(confirmSpy.callCount).to.equal(1);\n        expect(secondarySpy.callCount).to.equal(1);\n        expect(cancelSpy.called, 'dispatched `secondary`').to.be.true;\n    });\n\n    describe('dev mode', () => {\n        let consoleWarnStub!: SinonStub;\n        before(() => {\n            consoleWarnStub = stub(console, 'warn');\n        });\n        afterEach(() => {\n            consoleWarnStub.resetHistory();\n        });\n        after(() => {\n            consoleWarnStub.restore();\n        });\n        it('warns in Dev Mode when accessible attributes are not leveraged', async () => {\n            const el = await fixture<DialogWrapper>(html`\n                <sp-dialog-wrapper></sp-dialog-wrapper>\n            `);\n\n            await elementUpdated(el);\n\n            expect(consoleWarnStub.called).to.be.true;\n            const spyCall = consoleWarnStub.getCall(0);\n            expect(\n                spyCall.args.at(0).includes('accessible'),\n                'confirm accessibility-centric message'\n            ).to.be.true;\n            expect(spyCall.args.at(-1), 'confirm `data` shape').to.deep.equal({\n                data: {\n                    localName: 'sp-dialog-wrapper',\n                    type: 'accessibility',\n                    level: 'default',\n                },\n            });\n        });\n    });\n\n    it('manages content element tabindex on resize observer time', async () => {\n        const imgReadyPromise = new Promise((res) => {\n            const img = document.createElement('img');\n            img.onload = res;\n            img.src = lazyHero.args.src;\n        });\n        const test = await styledFixture(lazyHero(lazyHero.args));\n        const dialog = document.querySelector(\n            'sp-dialog-wrapper'\n        ) as DialogWrapper;\n        const button = document.querySelector('sp-button') as Button;\n        const rect = button.getBoundingClientRect();\n        const contentElement = (\n            (dialog as unknown as { dialog: Dialog }).dialog as unknown as {\n                contentElement: HTMLElement;\n            }\n        ).contentElement;\n        expect(contentElement.hasAttribute('tabindex')).to.be.false;\n        await elementUpdated(dialog);\n        const opened = oneEvent(test, 'sp-opened');\n        await sendMouse({\n            steps: [\n                {\n                    position: [\n                        rect.left + rect.width / 2,\n                        rect.top + rect.height / 2,\n                    ],\n                    type: 'click',\n                },\n            ],\n        });\n        await opened;\n        await elementUpdated(dialog);\n        await imgReadyPromise;\n        // Resize observer timing.\n        await nextFrame();\n        await nextFrame();\n        expect(contentElement.hasAttribute('tabindex')).to.be.true;\n    });\n});\n\ndescribe('dev mode', () => {\n    let consoleWarnStub!: ReturnType<typeof stub>;\n    before(() => {\n        window.__swc.verbose = true;\n        consoleWarnStub = stub(console, 'warn');\n    });\n    afterEach(() => {\n        consoleWarnStub.resetHistory();\n    });\n    after(() => {\n        window.__swc.verbose = false;\n        consoleWarnStub.restore();\n    });\n});\n"],
  "mappings": "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",
  "names": []
}
