{
  "version": 3,
  "sources": ["browser.ts"],
  "sourcesContent": ["/*\nCopyright 2020 Adobe. All rights reserved.\nThis file is licensed to you under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License. You may obtain a copy\nof the License at http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software distributed under\nthe License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\nOF ANY KIND, either express or implied. See the License for the specific language\ngoverning permissions and limitations under the License.\n*/\n\nimport { executeServerCommand } from '@web/test-runner-commands';\nimport type { Step } from './send-mouse-plugin.js';\n\n/**\n * Return the mouse to the `up` position.\n */\nasync function mouseCleanup() {\n    await executeServerCommand('send-pointer', {\n        steps: [\n            {\n                type: 'move',\n                position: [0, 0],\n            },\n            {\n                type: 'up',\n            },\n        ],\n    });\n}\n\n/**\n * If available, add cleanup work to the `afterEach` and `after` commands.\n */\nfunction queueMouseCleanUp() {\n    if (mouseCleanupQueued) return;\n    /**\n     * This registers the fixture cleanup as a side effect\n     */\n    try {\n        // we should not assume that our users load mocha types globally\n        // @ts-ignore\n        if ('afterEach' in window && 'after' in window) {\n            mouseCleanupQueued = true;\n            // @ts-ignore\n            afterEach(async function () {\n                // @ts-ignore\n                await mouseCleanup();\n            });\n            // @ts-ignore\n            after(() => {\n                mouseCleanupQueued = false;\n            });\n        }\n    } catch (error) {\n        /* do nothing */\n    }\n}\n\nlet mouseCleanupQueued = false;\n\n/**\n * Call to the browser with instructions for interacting with the pointing\n * device while queueing cleanup of those commands after the test is run.\n */\nexport function sendMouse(options: { steps: Step[] }) {\n    queueMouseCleanUp();\n    return executeServerCommand('send-pointer', options);\n}\n\n/**\n * Call to the browser with instructions for interacting with the pointing\n * device while queueing cleanup of those commands after the test is run.\n */\nexport function grantPermissions(options: string[]) {\n    return executeServerCommand('grant-permissions', options);\n}\n"],
  "mappings": ";AAYA,SAAS,4BAA4B;AAMrC,eAAe,eAAe;AAC1B,QAAM,qBAAqB,gBAAgB;AAAA,IACvC,OAAO;AAAA,MACH;AAAA,QACI,MAAM;AAAA,QACN,UAAU,CAAC,GAAG,CAAC;AAAA,MACnB;AAAA,MACA;AAAA,QACI,MAAM;AAAA,MACV;AAAA,IACJ;AAAA,EACJ,CAAC;AACL;AAKA,SAAS,oBAAoB;AACzB,MAAI,mBAAoB;AAIxB,MAAI;AAGA,QAAI,eAAe,UAAU,WAAW,QAAQ;AAC5C,2BAAqB;AAErB,gBAAU,iBAAkB;AAExB,cAAM,aAAa;AAAA,MACvB,CAAC;AAED,YAAM,MAAM;AACR,6BAAqB;AAAA,MACzB,CAAC;AAAA,IACL;AAAA,EACJ,SAAS,OAAO;AAAA,EAEhB;AACJ;AAEA,IAAI,qBAAqB;AAMlB,gBAAS,UAAU,SAA4B;AAClD,oBAAkB;AAClB,SAAO,qBAAqB,gBAAgB,OAAO;AACvD;AAMO,gBAAS,iBAAiB,SAAmB;AAChD,SAAO,qBAAqB,qBAAqB,OAAO;AAC5D;",
  "names": []
}
