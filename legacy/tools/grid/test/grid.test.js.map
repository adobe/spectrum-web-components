{
  "version": 3,
  "sources": ["grid.test.ts"],
  "sourcesContent": ["/*\nCopyright 2020 Adobe. All rights reserved.\nThis file is licensed to you under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License. You may obtain a copy\nof the License at http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software distributed under\nthe License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\nOF ANY KIND, either express or implied. See the License for the specific language\ngoverning permissions and limitations under the License.\n*/\n\nimport { elementUpdated, expect, fixture, nextFrame } from '@open-wc/testing';\nimport { html } from '@spectrum-web-components/base';\nimport { Card } from '@spectrum-web-components/card';\n\nimport '@spectrum-web-components/theme/sp-theme.js';\nimport '@spectrum-web-components/theme/scale-medium.js';\nimport '@spectrum-web-components/theme/theme-light.js';\nimport '@spectrum-web-components/grid/sp-grid.js';\nimport { Grid } from '@spectrum-web-components/grid';\nimport { Default } from '../stories/grid.stories.js';\nimport { sendKeys, sendMouse } from '@web/test-runner-commands';\nimport { testForLitDevWarnings } from '../../../test/testing-helpers.js';\nimport { isWebKit } from '@spectrum-web-components/shared';\n\ndescribe('Grid', () => {\n    testForLitDevWarnings(\n        async () =>\n            await fixture<HTMLDivElement>(html`\n                <div>${Default()}</div>\n            `)\n    );\n    it('loads default grid accessibly', async () => {\n        const test = await fixture<HTMLDivElement>(html`\n            <div>${Default()}</div>\n        `);\n        const el = test.querySelector('sp-grid') as Grid;\n\n        await elementUpdated(el);\n\n        await expect(el).to.be.accessible();\n    });\n    it('accepts focus', async () => {\n        const test = await fixture<HTMLDivElement>(html`\n            <div>${Default()}</div>\n        `);\n        const el = test.querySelector('sp-grid') as Grid;\n\n        await elementUpdated(el);\n\n        expect(el.tabIndex).to.equal(0);\n\n        await sendKeys({ press: 'Tab' });\n        await sendKeys({ press: 'Tab' });\n\n        await nextFrame();\n        await nextFrame();\n\n        if (!isWebKit()) {\n            sendMouse({\n                type: 'click',\n                position: [0, 0],\n            });\n        }\n\n        expect(\n            el.querySelector(el.focusableSelector) === document.activeElement\n        ).to.be.true;\n    });\n    it('does not focus when clicking grid', async () => {\n        const test = await fixture<HTMLDivElement>(html`\n            <sp-theme color=\"light\" scale=\"medium\">${Default()}</sp-theme>\n        `);\n        const el = test.querySelector('sp-grid') as Grid;\n\n        await elementUpdated(el);\n\n        expect(el.tabIndex).to.equal(0);\n\n        await sendKeys({ press: 'Tab' });\n        await sendKeys({ press: 'Tab' });\n\n        await nextFrame();\n        await nextFrame();\n\n        const firstItem = el.querySelector(el.focusableSelector) as HTMLElement;\n\n        expect(firstItem === document.activeElement).to.be.true;\n\n        const firstRect = firstItem?.getBoundingClientRect();\n        const position = [\n            Math.round(firstRect.x + firstRect.width + 2),\n            Math.round(firstRect.y + 2),\n        ] as [number, number];\n        await sendMouse({\n            type: 'click',\n            position,\n        });\n\n        await nextFrame();\n        await nextFrame();\n\n        expect(\n            el.querySelector(el.focusableSelector) === document.activeElement\n        ).to.be.false;\n    });\n    it('allows to tab in and out', async () => {\n        const test = await fixture<HTMLDivElement>(html`\n            <div>${Default()}</div>\n        `);\n        const el = test.querySelector('sp-grid') as Grid;\n        const firstInput = test.querySelector('#first-input') as HTMLElement;\n        const lastInput = test.querySelector('#last-input') as HTMLElement;\n\n        await elementUpdated(el);\n\n        expect(el.tabIndex).to.equal(0);\n\n        firstInput.focus();\n        expect(firstInput === document.activeElement).to.be.true;\n        expect(el.tabIndex).to.equal(0);\n\n        await sendKeys({\n            press: 'Tab',\n        });\n\n        await nextFrame();\n        await nextFrame();\n\n        expect(\n            el.querySelector(el.focusableSelector) === document.activeElement\n        ).to.be.true;\n        expect(el.tabIndex).to.equal(-1);\n\n        await sendKeys({\n            press: 'Tab',\n        });\n\n        await nextFrame();\n        await nextFrame();\n\n        await elementUpdated(el);\n        expect(lastInput === document.activeElement).to.be.true;\n        expect(el.tabIndex).to.equal(0);\n\n        await sendKeys({\n            press: 'Shift+Tab',\n        });\n\n        await nextFrame();\n        await nextFrame();\n        await nextFrame();\n        await nextFrame();\n\n        expect(\n            el.querySelector(el.focusableSelector) === document.activeElement\n        ).to.be.true;\n        expect(el.tabIndex).to.equal(-1);\n    });\n    it('manages roving tabindex', async () => {\n        const test = await fixture<HTMLDivElement>(html`\n            <div>${Default()}</div>\n        `);\n        const el = test.querySelector('sp-grid') as Grid;\n\n        await elementUpdated(el);\n\n        expect(el.tabIndex).to.equal(0);\n\n        el.focus();\n\n        await nextFrame();\n        await nextFrame();\n\n        let focused = el.querySelector(el.focusableSelector) as Card;\n        await elementUpdated(focused);\n        expect(focused === document.activeElement).to.be.true;\n        expect(focused.focused).to.be.true;\n\n        await sendKeys({\n            press: 'ArrowRight',\n        });\n\n        focused = el.querySelector(\n            `${el.focusableSelector}:nth-child(2)`\n        ) as Card;\n        await elementUpdated(focused);\n        expect(focused === document.activeElement).to.be.true;\n        expect(focused.focused).to.be.true;\n\n        await sendKeys({\n            press: 'ArrowDown',\n        });\n\n        focused = el.querySelector(\n            `${el.focusableSelector}:nth-child(5)`\n        ) as Card;\n        await elementUpdated(focused);\n        expect(focused === document.activeElement).to.be.true;\n        expect(focused.focused).to.be.true;\n\n        await sendKeys({\n            press: 'ArrowLeft',\n        });\n\n        focused = el.querySelector(\n            `${el.focusableSelector}:nth-child(4)`\n        ) as Card;\n        await elementUpdated(focused);\n        expect(focused === document.activeElement).to.be.true;\n        expect(focused.focused).to.be.true;\n\n        await sendKeys({\n            press: 'ArrowUp',\n        });\n\n        focused = el.querySelector(`${el.focusableSelector}`) as Card;\n        await elementUpdated(focused);\n        expect(focused === document.activeElement).to.be.true;\n        expect(focused.focused).to.be.true;\n    });\n    it('manages selection', async () => {\n        const test = await fixture<HTMLDivElement>(html`\n            <div>${Default()}</div>\n        `);\n        const el = test.querySelector('sp-grid') as Grid;\n\n        await elementUpdated(el);\n\n        expect(el.tabIndex).to.equal(0);\n\n        el.focus();\n\n        await nextFrame();\n        await nextFrame();\n\n        let focused = el.querySelector(el.focusableSelector) as Card;\n        await elementUpdated(focused);\n        expect(focused === document.activeElement).to.be.true;\n        expect(focused.focused).to.be.true;\n\n        await sendKeys({\n            press: 'ArrowRight',\n        });\n\n        focused = el.querySelector(\n            `${el.focusableSelector}:nth-child(2)`\n        ) as Card;\n        await elementUpdated(focused);\n        expect(focused === document.activeElement).to.be.true;\n        expect(focused.focused).to.be.true;\n\n        await sendKeys({\n            press: 'Space',\n        });\n\n        await elementUpdated(el);\n\n        expect(el.selected).to.deep.equal([{ id: 1 }]);\n\n        await sendKeys({\n            press: 'ArrowDown',\n        });\n\n        focused = el.querySelector(\n            `${el.focusableSelector}:nth-child(5)`\n        ) as Card;\n        await elementUpdated(focused);\n        expect(focused === document.activeElement).to.be.true;\n        expect(focused.focused).to.be.true;\n\n        await sendKeys({\n            press: 'Space',\n        });\n\n        await elementUpdated(el);\n\n        expect(el.selected).to.deep.equal([{ id: 1 }, { id: 4 }]);\n\n        await sendKeys({\n            press: 'ArrowUp',\n        });\n\n        focused = el.querySelector(\n            `${el.focusableSelector}:nth-child(2)`\n        ) as Card;\n        await elementUpdated(focused);\n        expect(focused === document.activeElement).to.be.true;\n        expect(focused.focused).to.be.true;\n\n        await sendKeys({\n            press: 'Space',\n        });\n\n        await elementUpdated(el);\n\n        expect(el.selected).to.deep.equal([{ id: 4 }]);\n    });\n    it('does not claim lit-virtualizer on the global registry', async () => {\n        const test = await fixture<HTMLDivElement>(html`\n            <div>${Default()}</div>\n        `);\n        const el = test.querySelector('sp-grid') as Grid;\n\n        await elementUpdated(el);\n\n        customElements.define('lit-virtualizer', class extends HTMLElement {});\n\n        // make sure we also don't prevent *any* registration of lit-virtualizer\n        expect(() => {\n            customElements.define(\n                'lit-virtualizer',\n                class extends HTMLElement {}\n            );\n        }).to.throw();\n    });\n});\n"],
  "mappings": "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",
  "names": []
}
