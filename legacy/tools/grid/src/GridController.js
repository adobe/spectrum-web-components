"use strict";import{ResizeController as a}from"@lit-labs/observers/resize-controller.js";import{RovingTabindexController as l}from"@spectrum-web-components/reactive-controllers/src/RovingTabindex.js";const o=r=>{requestAnimationFrame(()=>{requestAnimationFrame(()=>{r()})})};export class GridController{constructor(t,{elements:i,itemSize:e,gap:n,padding:s}){this._first=0;this._last=0;this.handleFocusin=t=>{const i=()=>this.host.scrollToIndex(0),e=()=>{this.focus(),this.host.tabIndex=-1};t.target===this.host&&(this._first>0?o(()=>{i(),o(e)}):o(e))};this.handleFocusout=t=>{(!t.relatedTarget||!this.host.contains(t.relatedTarget))&&(this.host.tabIndex=0)};this.handleRangeChanged=t=>{this.rovingTabindexController.clearElementCache(t.first)};this.handleVisibleChanged=t=>{this._first=t.first,this._last=t.last};this.host=t,this.host.addController(this),this.applyLayout(e,n,s),this.resizeController=new a(this.host,{callback:h=>{h.forEach(d=>{this.measureDirectionLength(d.contentRect)})}}),this.rovingTabindexController=new l(this.host,{direction:"grid",elements:i,focusInIndex:()=>this.host.getRootNode().activeElement===this.host?0:-1})}get itemSize(){return this._itemSize()}_itemSize(){return{width:100,height:100}}get gap(){return this._gap()}_gap(){}get padding(){return this._padding()}_padding(){}focus(t){this.rovingTabindexController.focus(t)}applyLayout(t,i,e){typeof t=="object"?this._itemSize=()=>t:typeof t=="function"&&typeof t()!="undefined"&&(this._itemSize=t),typeof i=="string"?this._gap=()=>i:typeof i=="function"&&(this._gap=i),typeof e=="string"?this._padding=()=>e:typeof e=="function"&&(this._padding=e)}update({elements:t,itemSize:i,gap:e,padding:n}){this.rovingTabindexController.update({elements:t}),this.applyLayout(i,e,n);const s=this.host.getBoundingClientRect();this.measureDirectionLength(s)}measureDirectionLength(t){const i=this.gap?parseFloat(this.gap):0,e=this.padding?parseFloat(this.padding):0,n=t.width-e*2,s=Math.floor((n-this.itemSize.width)/(i+this.itemSize.width))+1;this.rovingTabindexController.directionLength=Math.floor(s)}hostConnected(){this.host.addEventListener("rangeChanged",this.handleRangeChanged),this.host.addEventListener("visibilityChanged",this.handleVisibleChanged),this.host.addEventListener("focusin",this.handleFocusin),this.host.addEventListener("focusout",this.handleFocusout),this.host.tabIndex=0,this.host.style.setProperty("outline","none","important")}hostDisconnected(){this.host.removeEventListener("rangeChanged",this.handleRangeChanged),this.host.removeEventListener("visibilityChanged",this.handleVisibleChanged),this.host.removeEventListener("focusin",this.handleFocusin),this.host.removeEventListener("focusout",this.handleFocusout)}}
//# sourceMappingURL=GridController.js.map
