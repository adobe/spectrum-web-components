"use strict";var l=Object.defineProperty;var p=Object.getOwnPropertyDescriptor;var n=(d,a,e,i)=>{for(var t=i>1?void 0:i?p(a,e):a,r=d.length-1,s;r>=0;r--)(s=d[r])&&(t=(i?s(a,e,t):s(t))||t);return i&&t&&l(a,e,t),t};import{adoptStyles as h,html as c,render as u}from"@spectrum-web-components/base";import{property as o}from"@spectrum-web-components/base/src/decorators.js";import{LitVirtualizer as m}from"@lit-labs/virtualizer/LitVirtualizer.js";import{grid as g}from"@lit-labs/virtualizer/layouts/grid.js";import b from"./grid.css.js";import{GridController as S}from"./GridController.js";export class Grid extends m{constructor(){super(...arguments);this.__gridPart=void 0;this.gap="0";this.items=[];this.itemSize={width:200,height:200};this.selected=[];this.gridController=new S(this,{elements:()=>[],itemSize:()=>this.itemSize,gap:()=>this.gap,padding:()=>this.padding||this.gap})}static get styles(){return[b]}handleChange(e){const i=e.target,t=this.items[parseFloat(i.getAttribute("key")||"")],r=[...this.selected];if(!r.includes(t))r.push(t);else{const s=r.indexOf(t);s>-1&&r.splice(s,1)}this.selected=r}createRenderRoot(){var i;const e=(i=this.shadowRoot)!=null?i:this.attachShadow(this.constructor.shadowRootOptions);return h(e,this.constructor.elementStyles),e}render(){return c`
            <slot></slot>
        `}update(e){if((e.has("itemSize")||e.has("gap")||e.has("padding")||e.has("focusableSelector"))&&(this.updateComplete.then(()=>{this.gridController.update({elements:()=>[...this.querySelectorAll(this.focusableSelector)],itemSize:()=>this.itemSize,gap:()=>this.gap,padding:()=>this.padding||this.gap})}),this.layout=g({itemSize:{width:`${this.itemSize.width}px`,height:`${this.itemSize.height}px`},gap:this.gap,padding:this.padding||this.gap})),e.has("renderItem")){const i=this.renderItem;this.renderItem=(t,r)=>{const s=this.selected.includes(t);return i(t,r,s)}}this.isConnected&&(this.__gridPart=u(super.render(),this)),super.update(e)}connectedCallback(){var e;super.connectedCallback(),(e=this.__gridPart)==null||e.setConnected(!0),this.addEventListener("change",this.handleChange,{capture:!0})}disconnectedCallback(){var e;this.removeEventListener("change",this.handleChange,{capture:!0}),(e=this.__gridPart)==null||e.setConnected(!1),super.disconnectedCallback()}}n([o({type:String})],Grid.prototype,"focusableSelector",2),n([o({type:String})],Grid.prototype,"gap",2),n([o({type:String})],Grid.prototype,"padding",2),n([o({type:Array})],Grid.prototype,"items",2),n([o({type:Object})],Grid.prototype,"itemSize",2),n([o({type:Array})],Grid.prototype,"selected",2);
//# sourceMappingURL=Grid.js.map
