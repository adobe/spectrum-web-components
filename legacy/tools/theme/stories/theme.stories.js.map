{
  "version": 3,
  "sources": ["theme.stories.ts"],
  "sourcesContent": ["/*\nCopyright 2020 Adobe. All rights reserved.\nThis file is licensed to you under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License. You may obtain a copy\nof the License at http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software distributed under\nthe License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\nOF ANY KIND, either express or implied. See the License for the specific language\ngoverning permissions and limitations under the License.\n*/\nimport '@spectrum-web-components/theme/sp-theme.js';\nimport '@spectrum-web-components/theme/src/themes.js';\nimport '@spectrum-web-components/button/sp-button.js';\nimport '@spectrum-web-components/button-group/sp-button-group.js';\nimport '@spectrum-web-components/switch/sp-switch.js';\nimport '@spectrum-web-components/slider/sp-slider.js';\nimport { html, TemplateResult } from '@spectrum-web-components/base';\nimport { Color } from '../src/index.js';\n\nexport default {\n    component: 'sp-theme',\n    title: 'Theme',\n    argTypes: {\n        colorStop: {\n            control: {\n                type: 'inline-radio',\n                options: ['light', 'dark'],\n            },\n        },\n    },\n    args: {\n        colorStop: 'light',\n    },\n};\n\nconst storyStyles = html`\n    <style type=\"text/css\">\n        #outer,\n        #example {\n            width: 500px;\n            padding: 3em;\n            background-color: var(--spectrum-gray-100);\n            color: var(--spectrum-gray-800);\n        }\n\n        #inner {\n            margin-top: 2em;\n            padding: 2em;\n            background-color: var(--spectrum-gray-100);\n            color: var(--spectrum-gray-800);\n        }\n\n        #buttons {\n            margin-top: 2em;\n        }\n    </style>\n`;\n\nexport const Default = ({\n    colorStop: color,\n}: {\n    colorStop: Color;\n}): TemplateResult => {\n    return html`\n        ${storyStyles}\n        <sp-theme\n            color=\"${color}\"\n            system=${window.__swc_hack_knobs__.defaultSystemVariant}\n        >\n            <div id=\"example\">\n                <div>\n                    <sp-slider\n                        value=\"5\"\n                        step=\"1\"\n                        min=\"1\"\n                        max=\"11\"\n                        label=\"Volume\"\n                        id=\"volume-slider\"\n                    ></sp-slider>\n                </div>\n                <div><sp-switch>Overdrive</sp-switch></div>\n                <sp-button-group id=\"buttons\">\n                    <sp-button variant=\"primary\" treatment=\"outline\">\n                        Cancel\n                    </sp-button>\n                    <sp-button variant=\"accent\">Continue</sp-button>\n                </sp-button-group>\n            </div>\n        </sp-theme>\n    `;\n};\n\nexport const displayFlex = (): TemplateResult => html`\n    <style type=\"text/css\">\n        #flex-theme {\n            display: flex;\n            flex-direction: row;\n        }\n        #flex-theme sp-button {\n            flex: 0 0;\n        }\n        #flex-theme #middle-button {\n            flex: 1 0;\n        }\n    </style>\n    <sp-theme\n        id=\"flex-theme\"\n        color=\"dark\"\n        theme=${window.__swc_hack_knobs__.defaultSystemVariant}\n        system=${window.__swc_hack_knobs__.defaultSystemVariant}\n    >\n        <sp-button>Start</sp-button>\n        <sp-button id=\"middle-button\">Middle</sp-button>\n        <sp-button>End</sp-button>\n    </sp-theme>\n`;\n\nexport const none = (): TemplateResult => html`\n    ${storyStyles}\n    <div id=\"example\">\n        <div>\n            <sp-slider\n                value=\"5\"\n                step=\"1\"\n                min=\"1\"\n                max=\"11\"\n                label=\"Volume\"\n                id=\"volume-slider\"\n            ></sp-slider>\n        </div>\n        <div><sp-switch>Overdrive</sp-switch></div>\n        <sp-button-group id=\"buttons\">\n            <sp-button variant=\"primary\" treatment=\"outline\">Cancel</sp-button>\n            <sp-button variant=\"accent\">Continue</sp-button>\n        </sp-button-group>\n    </div>\n    <sp-theme></sp-theme>\n`;\n\nexport const nestedTheme = ({\n    colorStop: outer,\n}: {\n    colorStop: Color;\n}): TemplateResult => {\n    const inner = outer === 'light' ? 'dark' : 'light';\n    return html`\n        ${storyStyles}\n        <sp-theme\n            color=\"${outer}\"\n            theme=${window.__swc_hack_knobs__.defaultSystemVariant}\n            system=${window.__swc_hack_knobs__.defaultSystemVariant}\n        >\n            <div id=\"outer\">\n                <div>\n                    <sp-slider\n                        value=\"5\"\n                        step=\"1\"\n                        min=\"1\"\n                        max=\"11\"\n                        label=\"Volume\"\n                        id=\"volume-slider\"\n                    ></sp-slider>\n                </div>\n                <div><sp-switch>Overdrive</sp-switch></div>\n                <sp-button-group id=\"buttons\">\n                    <sp-button variant=\"primary\" treatment=\"outline\">\n                        Cancel\n                    </sp-button>\n                    <sp-button variant=\"accent\">Continue</sp-button>\n                </sp-button-group>\n                <sp-theme\n                    color=\"${inner}\"\n                    dir=\"ltr\"\n                    theme=${window.__swc_hack_knobs__.defaultSystemVariant}\n                    system=${window.__swc_hack_knobs__.defaultSystemVariant}\n                >\n                    <div id=\"inner\">\n                        <div>\n                            <sp-slider\n                                value=\"5\"\n                                step=\"1\"\n                                min=\"1\"\n                                max=\"11\"\n                                label=\"Volume\"\n                                id=\"volume-slider-inner\"\n                            ></sp-slider>\n                        </div>\n                        <div><sp-switch>Overdrive</sp-switch></div>\n                        <sp-button-group id=\"buttons-inner\">\n                            <sp-button variant=\"primary\" treatment=\"outline\">\n                                Cancel\n                            </sp-button>\n                            <sp-button variant=\"accent\">Continue</sp-button>\n                        </sp-button-group>\n                    </div>\n                </sp-theme>\n            </div>\n        </sp-theme>\n    `;\n};\n\nexport const reverseColorNestedTheme = ({\n    colorStop: outer,\n}: {\n    colorStop: Color;\n}): TemplateResult => {\n    const inner = outer === 'light' ? 'dark' : 'light';\n    return html`\n        <style type=\"text/css\">\n            #outer {\n                width: 500px;\n                padding: 3em;\n                background-color: var(--spectrum-gray-100);\n                color: var(--spectrum-gray-800);\n            }\n\n            #inner {\n                margin-top: 2em;\n                padding: 2em;\n                background-color: var(--spectrum-gray-100);\n                color: var(--spectrum-gray-800);\n            }\n\n            #buttons {\n                margin-top: 2em;\n            }\n        </style>\n        <sp-theme\n            color=\"${inner}\"\n            theme=${window.__swc_hack_knobs__.defaultSystemVariant}\n            system=${window.__swc_hack_knobs__.defaultSystemVariant}\n        >\n            <div id=\"outer\">\n                <div>\n                    <sp-slider\n                        value=\"5\"\n                        step=\"1\"\n                        min=\"1\"\n                        max=\"11\"\n                        label=\"Volume\"\n                        id=\"volume-slider\"\n                    ></sp-slider>\n                </div>\n                <div><sp-switch>Overdrive</sp-switch></div>\n                <sp-button-group id=\"buttons\">\n                    <sp-button variant=\"primary\" treatment=\"outline\">\n                        Cancel\n                    </sp-button>\n                    <sp-button variant=\"accent\">Continue</sp-button>\n                </sp-button-group>\n                <sp-theme\n                    color=\"${outer}\"\n                    dir=\"rtl\"\n                    theme=${window.__swc_hack_knobs__.defaultSystemVariant}\n                    system=${window.__swc_hack_knobs__.defaultSystemVariant}\n                >\n                    <div id=\"inner\">\n                        <div>\n                            <sp-slider\n                                value=\"5\"\n                                step=\"1\"\n                                min=\"1\"\n                                max=\"11\"\n                                label=\"Volume\"\n                                id=\"volume-slider-inner\"\n                            ></sp-slider>\n                        </div>\n                        <div><sp-switch>Overdrive</sp-switch></div>\n                        <sp-button-group id=\"buttons-inner\">\n                            <sp-button variant=\"primary\" treatment=\"outline\">\n                                Cancel\n                            </sp-button>\n                            <sp-button variant=\"accent\">Continue</sp-button>\n                        </sp-button-group>\n                    </div>\n                </sp-theme>\n            </div>\n        </sp-theme>\n    `;\n};\n"],
  "mappings": "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",
  "names": []
}
