{
  "version": 3,
  "sources": ["theme-lazy.test.ts"],
  "sourcesContent": ["/*\nCopyright 2020 Adobe. All rights reserved.\nThis file is licensed to you under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License. You may obtain a copy\nof the License at http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software distributed under\nthe License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\nOF ANY KIND, either express or implied. See the License for the specific language\ngoverning permissions and limitations under the License.\n*/\n\nimport '@spectrum-web-components/theme/sp-theme.js';\nimport { Theme, ThemeFragmentMap } from '@spectrum-web-components/theme';\nimport coreStyles from '@spectrum-web-components/theme/src/theme.css.js';\nimport lightStyles from '@spectrum-web-components/theme/src/theme-light.css.js';\nimport lightestStyles from '@spectrum-web-components/theme/src/theme-lightest.css.js';\nimport darkStyles from '@spectrum-web-components/theme/src/theme-dark.css.js';\nimport darkestStyles from '@spectrum-web-components/theme/src/theme-darkest.css.js';\nimport largeStyles from '@spectrum-web-components/theme/src/scale-large.css.js';\nimport mediumStyles from '@spectrum-web-components/theme/src/scale-medium.css.js';\nimport { elementUpdated, expect, fixture, html } from '@open-wc/testing';\n\ntype TestableThemeConstructor = {\n    instances: Set<Theme>;\n    themeFragmentsByKind: ThemeFragmentMap;\n};\n\ndescribe('Themes - lazy', () => {\n    beforeEach(() => {\n        (\n            Theme as unknown as TestableThemeConstructor\n        ).themeFragmentsByKind.clear();\n        // Core is registered by default in `theme.ts`\n        Theme.registerThemeFragment('spectrum', 'system', coreStyles);\n    });\n    after(() => {\n        Theme.registerThemeFragment('light', 'color', lightStyles);\n        Theme.registerThemeFragment('lightest', 'color', lightestStyles);\n        Theme.registerThemeFragment('dark', 'color', darkStyles);\n        Theme.registerThemeFragment('darkest', 'color', darkestStyles);\n        Theme.registerThemeFragment('large', 'scale', largeStyles);\n        Theme.registerThemeFragment('medium', 'scale', mediumStyles);\n    });\n    it('loads w/ no themes and none set', async () => {\n        const el = await fixture<Theme>(html`\n            <sp-theme></sp-theme>\n        `);\n\n        await elementUpdated(el);\n\n        if (el.shadowRoot.adoptedStyleSheets) {\n            expect(el.shadowRoot.adoptedStyleSheets.length).to.equal(1);\n        } else {\n            expect(\n                [...el.shadowRoot.querySelectorAll('style')].length\n            ).to.equal(1);\n        }\n        expect(el.color).to.equal('');\n        expect(el.scale).to.equal('');\n    });\n    it('loads w/ themes and none set', async () => {\n        const el = await fixture<Theme>(html`\n            <sp-theme></sp-theme>\n        `);\n\n        await elementUpdated(el);\n\n        Theme.registerThemeFragment('light', 'color', lightStyles);\n        Theme.registerThemeFragment('medium', 'scale', mediumStyles);\n\n        await elementUpdated(el);\n\n        if (el.shadowRoot.adoptedStyleSheets) {\n            expect(el.shadowRoot.adoptedStyleSheets.length).to.equal(1);\n        } else {\n            expect(\n                [...el.shadowRoot.querySelectorAll('style')].length\n            ).to.equal(1);\n        }\n        expect(el.color).to.equal('light');\n        expect(el.scale).to.equal('medium');\n    });\n    it('loads w/ no themes', async () => {\n        const el = await fixture<Theme>(html`\n            <sp-theme color=\"light\" scale=\"large\"></sp-theme>\n        `);\n\n        await elementUpdated(el);\n\n        if (el.shadowRoot.adoptedStyleSheets) {\n            expect(el.shadowRoot.adoptedStyleSheets.length).to.equal(1);\n        } else {\n            expect(\n                [...el.shadowRoot.querySelectorAll('style')].length\n            ).to.equal(1);\n        }\n    });\n    it('loads w/ not enough themes', async () => {\n        const el = await fixture<Theme>(html`\n            <sp-theme color=\"lightest\" scale=\"large\"></sp-theme>\n        `);\n\n        await elementUpdated(el);\n\n        Theme.registerThemeFragment('light', 'color', lightStyles);\n        Theme.registerThemeFragment('medium', 'scale', mediumStyles);\n\n        await elementUpdated(el);\n\n        if (el.shadowRoot.adoptedStyleSheets) {\n            expect(el.shadowRoot.adoptedStyleSheets.length).to.equal(1);\n        } else {\n            expect(\n                [...el.shadowRoot.querySelectorAll('style')].length\n            ).to.equal(1);\n        }\n    });\n    it('loads w/ lazy themes', async () => {\n        const el = await fixture<Theme>(html`\n            <sp-theme color=\"lightest\" scale=\"large\"></sp-theme>\n        `);\n\n        await elementUpdated(el);\n\n        Theme.registerThemeFragment('light', 'color', lightStyles);\n        Theme.registerThemeFragment('medium', 'scale', mediumStyles);\n\n        await elementUpdated(el);\n\n        if (el.shadowRoot.adoptedStyleSheets) {\n            expect(el.shadowRoot.adoptedStyleSheets.length).to.equal(1);\n        } else {\n            expect(\n                [...el.shadowRoot.querySelectorAll('style')].length\n            ).to.equal(1);\n        }\n\n        Theme.registerThemeFragment('lightest', 'color', lightestStyles);\n        Theme.registerThemeFragment('large', 'scale', largeStyles);\n\n        await elementUpdated(el);\n\n        if (el.shadowRoot.adoptedStyleSheets) {\n            expect(el.shadowRoot.adoptedStyleSheets.length).to.equal(3);\n        } else {\n            expect(\n                [...el.shadowRoot.querySelectorAll('style')].length\n            ).to.equal(3);\n        }\n    });\n});\n"],
  "mappings": "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",
  "names": []
}
