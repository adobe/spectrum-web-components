{
  "version": 3,
  "sources": ["sizedMixin.test.ts"],
  "sourcesContent": ["/*\nCopyright 2025 Adobe. All rights reserved.\nThis file is licensed to you under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License. You may obtain a copy\nof the License at http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software distributed under\nthe License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\nOF ANY KIND, either express or implied. See the License for the specific language\ngoverning permissions and limitations under the License.\n*/\n\nimport {\n    ElementSize,\n    SizedMixin,\n    SpectrumElement,\n    TemplateResult,\n} from '../src/index.js';\nimport { html } from '@open-wc/testing';\nimport { elementUpdated, expect, fixture } from '@open-wc/testing';\n\nexport class FancySizedComponent extends SizedMixin(SpectrumElement, {\n    defaultSize: 'm',\n    validSizes: ['xs', 's', 'm', 'l', 'xl'],\n}) {\n    public override render(): TemplateResult {\n        return html`\n            I an wearing size ${this.size}\n        `;\n    }\n}\n\ncustomElements.define('fancy-sized-component', FancySizedComponent);\n\ndescribe('sizedMixin', () => {\n    it('allows any given size in the validSizes array', async () => {\n        const validSizesChecks = (\n            ['xs', 's', 'm', 'l', 'xl'] as ElementSize[]\n        ).map(async (size) => {\n            const el = await fixture<FancySizedComponent>(html`\n                <fancy-sized-component></fancy-sized-component>\n            `);\n            await elementUpdated(el);\n\n            el.size = size;\n            await elementUpdated(el);\n            expect(el.shadowRoot?.textContent).to.include(\n                `I an wearing size ${size}`\n            );\n        });\n\n        await Promise.all(validSizesChecks);\n    });\n\n    it('fallbacks to default size if the provided size is invalid', async () => {\n        const el = await fixture<FancySizedComponent>(html`\n            <fancy-sized-component size=\"xxl\"></fancy-sized-component>\n        `);\n        await elementUpdated(el);\n\n        // Fallback is 'm', as defined by `defaultSize`.\n        expect(el.shadowRoot?.textContent).to.include('I an wearing size m');\n    });\n\n    it('fallbacks to default size if no size is provided', async () => {\n        const el = await fixture<FancySizedComponent>(html`\n            <fancy-sized-component></fancy-sized-component>\n        `);\n        await elementUpdated(el);\n\n        // Default is 'm', as defined by `defaultSize`.\n        expect(el.shadowRoot?.textContent).to.include('I an wearing size m');\n    });\n\n    it('applies the given size if it is a valid one', async () => {\n        const el = await fixture<FancySizedComponent>(html`\n            <fancy-sized-component size=\"l\"></fancy-sized-component>\n        `);\n        await elementUpdated(el);\n\n        expect(el.shadowRoot?.textContent).to.include('I an wearing size l');\n    });\n});\n"],
  "mappings": ";AAYA;AAAA,EAEI;AAAA,EACA;AAAA,OAEG;AACP,SAAS,YAAY;AACrB,SAAS,gBAAgB,QAAQ,eAAe;AAEzC,aAAM,4BAA4B,WAAW,iBAAiB;AAAA,EACjE,aAAa;AAAA,EACb,YAAY,CAAC,MAAM,KAAK,KAAK,KAAK,IAAI;AAC1C,CAAC,EAAE;AAAA,EACiB,SAAyB;AACrC,WAAO;AAAA,gCACiB,KAAK,IAAI;AAAA;AAAA,EAErC;AACJ;AAEA,eAAe,OAAO,yBAAyB,mBAAmB;AAElE,SAAS,cAAc,MAAM;AACzB,KAAG,iDAAiD,YAAY;AAC5D,UAAM,mBACF,CAAC,MAAM,KAAK,KAAK,KAAK,IAAI,EAC5B,IAAI,OAAO,SAAS;AAtC9B;AAuCY,YAAM,KAAK,MAAM,QAA6B;AAAA;AAAA,aAE7C;AACD,YAAM,eAAe,EAAE;AAEvB,SAAG,OAAO;AACV,YAAM,eAAe,EAAE;AACvB,cAAO,QAAG,eAAH,mBAAe,WAAW,EAAE,GAAG;AAAA,QAClC,qBAAqB,IAAI;AAAA,MAC7B;AAAA,IACJ,CAAC;AAED,UAAM,QAAQ,IAAI,gBAAgB;AAAA,EACtC,CAAC;AAED,KAAG,6DAA6D,YAAY;AAtDhF;AAuDQ,UAAM,KAAK,MAAM,QAA6B;AAAA;AAAA,SAE7C;AACD,UAAM,eAAe,EAAE;AAGvB,YAAO,QAAG,eAAH,mBAAe,WAAW,EAAE,GAAG,QAAQ,qBAAqB;AAAA,EACvE,CAAC;AAED,KAAG,oDAAoD,YAAY;AAhEvE;AAiEQ,UAAM,KAAK,MAAM,QAA6B;AAAA;AAAA,SAE7C;AACD,UAAM,eAAe,EAAE;AAGvB,YAAO,QAAG,eAAH,mBAAe,WAAW,EAAE,GAAG,QAAQ,qBAAqB;AAAA,EACvE,CAAC;AAED,KAAG,+CAA+C,YAAY;AA1ElE;AA2EQ,UAAM,KAAK,MAAM,QAA6B;AAAA;AAAA,SAE7C;AACD,UAAM,eAAe,EAAE;AAEvB,YAAO,QAAG,eAAH,mBAAe,WAAW,EAAE,GAAG,QAAQ,qBAAqB;AAAA,EACvE,CAAC;AACL,CAAC;",
  "names": []
}
