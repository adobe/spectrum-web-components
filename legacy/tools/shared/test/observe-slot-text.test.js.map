{
  "version": 3,
  "sources": ["observe-slot-text.test.ts"],
  "sourcesContent": ["/*\nCopyright 2020 Adobe. All rights reserved.\nThis file is licensed to you under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License. You may obtain a copy\nof the License at http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software distributed under\nthe License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\nOF ANY KIND, either express or implied. See the License for the specific language\ngoverning permissions and limitations under the License.\n*/\n\nimport { ObserveSlotText } from '@spectrum-web-components/shared/src/observe-slot-text.js';\nimport { LitElement, TemplateResult } from '@spectrum-web-components/base';\nimport { elementUpdated, expect, fixture, html } from '@open-wc/testing';\n\nclass ObserverTest extends ObserveSlotText(LitElement) {\n    protected override render(): TemplateResult {\n        return html`\n            <slot @slotchange=${this.manageTextObservedSlot}></slot>\n        `;\n    }\n}\n\ncustomElements.define('observe-slot-test', ObserverTest);\n\ndescribe('ObserveSlotText', () => {\n    it('does no management when slot unavailable', async () => {\n        const el = await fixture<ObserverTest>(\n            html`\n                <observe-slot-test></observe-slot-test>\n            `\n        );\n        await elementUpdated(el);\n\n        expect(el.slotHasContent).to.be.false;\n\n        el.textContent = `hi, i'm some text`;\n\n        await elementUpdated(el);\n\n        expect(el.slotHasContent).to.be.true;\n    });\n});\n"],
  "mappings": ";AAYA,SAAS,uBAAuB;AAChC,SAAS,kBAAkC;AAC3C,SAAS,gBAAgB,QAAQ,SAAS,YAAY;AAEtD,MAAM,qBAAqB,gBAAgB,UAAU,EAAE;AAAA,EAChC,SAAyB;AACxC,WAAO;AAAA,gCACiB,KAAK,sBAAsB;AAAA;AAAA,EAEvD;AACJ;AAEA,eAAe,OAAO,qBAAqB,YAAY;AAEvD,SAAS,mBAAmB,MAAM;AAC9B,KAAG,4CAA4C,YAAY;AACvD,UAAM,KAAK,MAAM;AAAA,MACb;AAAA;AAAA;AAAA,IAGJ;AACA,UAAM,eAAe,EAAE;AAEvB,WAAO,GAAG,cAAc,EAAE,GAAG,GAAG;AAEhC,OAAG,cAAc;AAEjB,UAAM,eAAe,EAAE;AAEvB,WAAO,GAAG,cAAc,EAAE,GAAG,GAAG;AAAA,EACpC,CAAC;AACL,CAAC;",
  "names": []
}
