{
  "version": 3,
  "sources": ["platform.ts"],
  "sourcesContent": ["/*\nCopyright 2020 Adobe. All rights reserved.\nThis file is licensed to you under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License. You may obtain a copy\nof the License at http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software distributed under\nthe License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\nOF ANY KIND, either express or implied. See the License for the specific language\ngoverning permissions and limitations under the License.\n*/\n\nfunction testUserAgent(re: RegExp): boolean {\n    return typeof window !== 'undefined' && window.navigator != null\n        ? re.test(window.navigator.userAgent)\n        : false;\n}\n\nfunction testPlatform(re: RegExp): boolean {\n    return typeof window !== 'undefined' && window.navigator != null\n        ? re.test(window.navigator.platform)\n        : false;\n}\n\n/* c8 ignore next 3 */\nexport function isMac(): boolean {\n    return testPlatform(/^Mac/);\n}\n\nexport function isIPhone(): boolean {\n    return testPlatform(/^iPhone/);\n}\n\nexport function isIPad(): boolean {\n    return (\n        testPlatform(/^iPad/) ||\n        // iPadOS 13 lies and says it's a Mac, but we can distinguish by detecting touch support.\n        (isMac() && navigator.maxTouchPoints > 1)\n    );\n}\n\nexport function isIOS(): boolean {\n    return isIPhone() || isIPad();\n}\n\n/* c8 ignore next 3 */\nexport function isAppleDevice(): boolean {\n    return isMac() || isIOS();\n}\n\n/* c8 ignore next 3 */\nexport function isWebKit(): boolean {\n    return testUserAgent(/AppleWebKit/) && !isChrome();\n}\n\n/* c8 ignore next 3 */\nexport function isChrome(): boolean {\n    return testUserAgent(/Chrome/);\n}\n\nexport function isFirefox(): boolean {\n    return testUserAgent(/Firefox/) && !isSeamonkey();\n}\n\nexport function isSeamonkey(): boolean {\n    return testUserAgent(/Seamonkey/);\n}\n\nexport function isAndroid(): boolean {\n    return testUserAgent(/Android/);\n}\n"],
  "mappings": ";AAYA,SAAS,cAAc,IAAqB;AACxC,SAAO,OAAO,WAAW,eAAe,OAAO,aAAa,OACtD,GAAG,KAAK,OAAO,UAAU,SAAS,IAClC;AACV;AAEA,SAAS,aAAa,IAAqB;AACvC,SAAO,OAAO,WAAW,eAAe,OAAO,aAAa,OACtD,GAAG,KAAK,OAAO,UAAU,QAAQ,IACjC;AACV;AAGO,gBAAS,QAAiB;AAC7B,SAAO,aAAa,MAAM;AAC9B;AAEO,gBAAS,WAAoB;AAChC,SAAO,aAAa,SAAS;AACjC;AAEO,gBAAS,SAAkB;AAC9B,SACI,aAAa,OAAO;AAAA,EAEnB,MAAM,KAAK,UAAU,iBAAiB;AAE/C;AAEO,gBAAS,QAAiB;AAC7B,SAAO,SAAS,KAAK,OAAO;AAChC;AAGO,gBAAS,gBAAyB;AACrC,SAAO,MAAM,KAAK,MAAM;AAC5B;AAGO,gBAAS,WAAoB;AAChC,SAAO,cAAc,aAAa,KAAK,CAAC,SAAS;AACrD;AAGO,gBAAS,WAAoB;AAChC,SAAO,cAAc,QAAQ;AACjC;AAEO,gBAAS,YAAqB;AACjC,SAAO,cAAc,SAAS,KAAK,CAAC,YAAY;AACpD;AAEO,gBAAS,cAAuB;AACnC,SAAO,cAAc,WAAW;AACpC;AAEO,gBAAS,YAAqB;AACjC,SAAO,cAAc,SAAS;AAClC;",
  "names": []
}
