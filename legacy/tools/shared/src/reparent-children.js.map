{
  "version": 3,
  "sources": ["reparent-children.ts"],
  "sourcesContent": ["/*\nCopyright 2020 Adobe. All rights reserved.\nThis file is licensed to you under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License. You may obtain a copy\nof the License at http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software distributed under\nthe License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\nOF ANY KIND, either express or implied. See the License for the specific language\ngoverning permissions and limitations under the License.\n*/\nfunction restoreChildren<T extends Element>(\n    placeholderItems: Comment[],\n    srcElements: T[],\n    cleanupCallbacks: ((el: T) => void)[] = []\n): T[] {\n    for (let index = 0; index < srcElements.length; ++index) {\n        const srcElement = srcElements[index];\n        const placeholderItem = placeholderItems[index];\n        const parentElement =\n            placeholderItem.parentElement || placeholderItem.getRootNode();\n        if (cleanupCallbacks[index]) {\n            cleanupCallbacks[index](srcElement);\n        }\n        if (parentElement && parentElement !== placeholderItem) {\n            parentElement.replaceChild(srcElement, placeholderItem);\n        }\n        delete placeholderItems[index];\n    }\n    return srcElements;\n}\n\nexport const reparentChildren = <T extends Element>(\n    srcElements: T[],\n    destination: Element,\n    {\n        position,\n        prepareCallback,\n    }: {\n        position: InsertPosition;\n        prepareCallback?: (el: T) => ((el: T) => void) | void;\n    } = { position: 'beforeend' }\n): (() => T[]) => {\n    let { length } = srcElements;\n    if (length === 0) {\n        return () => srcElements;\n    }\n\n    let step = 1;\n    let index = 0;\n\n    if (position === 'afterbegin' || position === 'afterend') {\n        step = -1;\n        index = length - 1;\n    }\n\n    const placeholderItems = new Array<Comment>(length);\n    const cleanupCallbacks = new Array<(el: T) => void>(length);\n    const placeholderTemplate: Comment = document.createComment(\n        'placeholder for reparented element'\n    );\n\n    do {\n        const srcElement = srcElements[index];\n        if (prepareCallback) {\n            cleanupCallbacks[index] = prepareCallback(srcElement) as (\n                el: T\n            ) => void;\n        }\n        placeholderItems[index] = placeholderTemplate.cloneNode() as Comment;\n\n        const parentElement =\n            srcElement.parentElement || srcElement.getRootNode();\n        if (parentElement && parentElement !== srcElement) {\n            parentElement.replaceChild(placeholderItems[index], srcElement);\n        }\n        destination.insertAdjacentElement(position, srcElement);\n\n        index += step;\n    } while (--length > 0);\n\n    return function (): T[] {\n        return restoreChildren<T>(\n            placeholderItems,\n            srcElements,\n            cleanupCallbacks\n        );\n    };\n};\n"],
  "mappings": "aAWA,SAASA,EACLC,EACAC,EACAC,EAAwC,CAAC,EACtC,CACH,QAASC,EAAQ,EAAGA,EAAQF,EAAY,OAAQ,EAAEE,EAAO,CACrD,MAAMC,EAAaH,EAAYE,CAAK,EAC9BE,EAAkBL,EAAiBG,CAAK,EACxCG,EACFD,EAAgB,eAAiBA,EAAgB,YAAY,EAC7DH,EAAiBC,CAAK,GACtBD,EAAiBC,CAAK,EAAEC,CAAU,EAElCE,GAAiBA,IAAkBD,GACnCC,EAAc,aAAaF,EAAYC,CAAe,EAE1D,OAAOL,EAAiBG,CAAK,CACjC,CACA,OAAOF,CACX,CAEO,aAAM,iBAAmB,CAC5BA,EACAM,EACA,CACI,SAAAC,EACA,gBAAAC,CACJ,EAGI,CAAE,SAAU,WAAY,IACd,CACd,GAAI,CAAE,OAAAC,CAAO,EAAIT,EACjB,GAAIS,IAAW,EACX,MAAO,IAAMT,EAGjB,IAAIU,EAAO,EACPR,EAAQ,GAERK,IAAa,cAAgBA,IAAa,cAC1CG,EAAO,GACPR,EAAQO,EAAS,GAGrB,MAAMV,EAAmB,IAAI,MAAeU,CAAM,EAC5CR,EAAmB,IAAI,MAAuBQ,CAAM,EACpDE,EAA+B,SAAS,cAC1C,oCACJ,EAEA,EAAG,CACC,MAAMR,EAAaH,EAAYE,CAAK,EAChCM,IACAP,EAAiBC,CAAK,EAAIM,EAAgBL,CAAU,GAIxDJ,EAAiBG,CAAK,EAAIS,EAAoB,UAAU,EAExD,MAAMN,EACFF,EAAW,eAAiBA,EAAW,YAAY,EACnDE,GAAiBA,IAAkBF,GACnCE,EAAc,aAAaN,EAAiBG,CAAK,EAAGC,CAAU,EAElEG,EAAY,sBAAsBC,EAAUJ,CAAU,EAEtDD,GAASQ,CACb,OAAS,EAAED,EAAS,GAEpB,OAAO,UAAiB,CACpB,OAAOX,EACHC,EACAC,EACAC,CACJ,CACJ,CACJ",
  "names": ["restoreChildren", "placeholderItems", "srcElements", "cleanupCallbacks", "index", "srcElement", "placeholderItem", "parentElement", "destination", "position", "prepareCallback", "length", "step", "placeholderTemplate"]
}
