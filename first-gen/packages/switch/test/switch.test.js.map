{
  "version": 3,
  "sources": ["switch.test.ts"],
  "sourcesContent": ["/**\n * Copyright 2025 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport '@spectrum-web-components/switch/sp-switch.js';\nimport { Switch } from '@spectrum-web-components/switch';\nimport { elementUpdated, expect, fixture, html } from '@open-wc/testing';\nimport { testForLitDevWarnings } from '../../../test/testing-helpers.js';\n\nfunction inputForSwitch(checkbox: Switch): HTMLInputElement {\n    if (!checkbox.shadowRoot) throw new Error('No shadowRoot');\n    return checkbox.shadowRoot.querySelector('#input') as HTMLInputElement;\n}\n\nfunction labelForSwitch(checkbox: Switch): HTMLLabelElement {\n    if (!checkbox.shadowRoot) throw new Error('No shadowRoot');\n    const labelEl = checkbox.shadowRoot.querySelector('label');\n    if (!labelEl) {\n        throw new Error('Failed to find label in shadowRoot');\n    }\n    return labelEl;\n}\n\ndescribe('Switch', () => {\n    testForLitDevWarnings(\n        async () =>\n            await fixture<Switch>(\n                html`\n                    <sp-switch>Not Checked</sp-switch>\n                `\n            )\n    );\n    it('loads default switch accessibly', async () => {\n        const el = await fixture<Switch>(\n            html`\n                <sp-switch>Not Checked</sp-switch>\n            `\n        );\n\n        await elementUpdated(el);\n\n        await expect(el).to.be.accessible();\n\n        const labelEl = labelForSwitch(el);\n        const inputEl = inputForSwitch(el);\n\n        expect(labelEl.getAttribute('for')).to.equal(inputEl.id);\n    });\n    it('has name attribute', async () => {\n        const el = await fixture<Switch>(\n            html`\n                <sp-switch>Not Checked</sp-switch>\n            `\n        );\n\n        await elementUpdated(el);\n\n        await expect(el.hasAttribute('name'));\n    });\n    it('loads `checked` switch accessibly', async () => {\n        const el = await fixture<Switch>(\n            html`\n                <sp-switch checked>Checked</sp-switch>\n            `\n        );\n\n        await elementUpdated(el);\n\n        await expect(el).to.be.accessible();\n\n        const labelEl = labelForSwitch(el);\n        const inputEl = inputForSwitch(el);\n\n        expect(labelEl.getAttribute('for')).to.equal(inputEl.id);\n    });\n\n    it('maintains its value when [readonly]', async () => {\n        const el = await fixture<Switch>(html`\n            <sp-switch checked readonly>Component</sp-switch>\n        `);\n        expect(el.checked).to.be.true;\n\n        el.click();\n        await elementUpdated(el);\n\n        expect(el.checked).to.be.true;\n    });\n});\n"],
  "mappings": ";AAYA,OAAO;AAEP,SAAS,gBAAgB,QAAQ,SAAS,YAAY;AACtD,SAAS,6BAA6B;AAEtC,SAAS,eAAe,UAAoC;AACxD,MAAI,CAAC,SAAS,WAAY,OAAM,IAAI,MAAM,eAAe;AACzD,SAAO,SAAS,WAAW,cAAc,QAAQ;AACrD;AAEA,SAAS,eAAe,UAAoC;AACxD,MAAI,CAAC,SAAS,WAAY,OAAM,IAAI,MAAM,eAAe;AACzD,QAAM,UAAU,SAAS,WAAW,cAAc,OAAO;AACzD,MAAI,CAAC,SAAS;AACV,UAAM,IAAI,MAAM,oCAAoC;AAAA,EACxD;AACA,SAAO;AACX;AAEA,SAAS,UAAU,MAAM;AACrB;AAAA,IACI,YACI,MAAM;AAAA,MACF;AAAA;AAAA;AAAA,IAGJ;AAAA,EACR;AACA,KAAG,mCAAmC,YAAY;AAC9C,UAAM,KAAK,MAAM;AAAA,MACb;AAAA;AAAA;AAAA,IAGJ;AAEA,UAAM,eAAe,EAAE;AAEvB,UAAM,OAAO,EAAE,EAAE,GAAG,GAAG,WAAW;AAElC,UAAM,UAAU,eAAe,EAAE;AACjC,UAAM,UAAU,eAAe,EAAE;AAEjC,WAAO,QAAQ,aAAa,KAAK,CAAC,EAAE,GAAG,MAAM,QAAQ,EAAE;AAAA,EAC3D,CAAC;AACD,KAAG,sBAAsB,YAAY;AACjC,UAAM,KAAK,MAAM;AAAA,MACb;AAAA;AAAA;AAAA,IAGJ;AAEA,UAAM,eAAe,EAAE;AAEvB,UAAM,OAAO,GAAG,aAAa,MAAM,CAAC;AAAA,EACxC,CAAC;AACD,KAAG,qCAAqC,YAAY;AAChD,UAAM,KAAK,MAAM;AAAA,MACb;AAAA;AAAA;AAAA,IAGJ;AAEA,UAAM,eAAe,EAAE;AAEvB,UAAM,OAAO,EAAE,EAAE,GAAG,GAAG,WAAW;AAElC,UAAM,UAAU,eAAe,EAAE;AACjC,UAAM,UAAU,eAAe,EAAE;AAEjC,WAAO,QAAQ,aAAa,KAAK,CAAC,EAAE,GAAG,MAAM,QAAQ,EAAE;AAAA,EAC3D,CAAC;AAED,KAAG,uCAAuC,YAAY;AAClD,UAAM,KAAK,MAAM,QAAgB;AAAA;AAAA,SAEhC;AACD,WAAO,GAAG,OAAO,EAAE,GAAG,GAAG;AAEzB,OAAG,MAAM;AACT,UAAM,eAAe,EAAE;AAEvB,WAAO,GAAG,OAAO,EAAE,GAAG,GAAG;AAAA,EAC7B,CAAC;AACL,CAAC;",
  "names": []
}
