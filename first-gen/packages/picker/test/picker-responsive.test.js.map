{
  "version": 3,
  "sources": ["picker-responsive.test.ts"],
  "sourcesContent": ["/**\n * Copyright 2025 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {\n    elementUpdated,\n    expect,\n    fixture,\n    html,\n    waitUntil,\n} from '@open-wc/testing';\nimport '@spectrum-web-components/field-label/sp-field-label.js';\nimport '@spectrum-web-components/menu/sp-menu-divider.js';\nimport '@spectrum-web-components/menu/sp-menu-item.js';\nimport { Picker } from '@spectrum-web-components/picker';\nimport '@spectrum-web-components/picker/sync/sp-picker.js';\nimport { spreadProps } from '../../../test/lit-helpers.js';\nimport { Popover } from '@spectrum-web-components/popover';\nimport { Tray } from '@spectrum-web-components/tray/src/Tray.js';\n\ndescribe('Picker, responsive', () => {\n    let el: Picker;\n    const pickerFixture = async (args?: {\n        forcePopover: boolean;\n    }): Promise<Picker> => {\n        const test = await fixture<HTMLDivElement>(html`\n            <div>\n                <sp-field-label for=\"picker\">Where do you live?</sp-field-label>\n                <sp-picker\n                    id=\"picker\"\n                    style=\"width: 200px; --spectrum-alias-ui-icon-chevron-size-100: 10px;\"\n                    ${spreadProps(args || {})}\n                >\n                    <sp-menu-item>Deselect</sp-menu-item>\n                    <sp-menu-item value=\"option-2\">Select Inverse</sp-menu-item>\n                    <sp-menu-item>Feather...</sp-menu-item>\n                    <sp-menu-item>Select and Mask...</sp-menu-item>\n                    <sp-menu-divider></sp-menu-divider>\n                    <sp-menu-item>Save Selection</sp-menu-item>\n                    <sp-menu-item disabled>Make Work Path</sp-menu-item>\n                </sp-picker>\n            </div>\n        `);\n\n        return test.querySelector('sp-picker') as Picker;\n    };\n\n    describe('container', () => {\n        beforeEach(async () => {\n            el = await pickerFixture();\n            await elementUpdated(el);\n        });\n\n        it('is a Tray in mobile', async () => {\n            /**\n             * This is a hack to set the `isMobile` property to true so that we can test the MobileController\n             */\n            el.isMobile.matches = true;\n            el.bindEvents();\n\n            el.open = true;\n\n            // in this test we only need to wait to see if a popover opens\n            let tray: Tray | null = null;\n            await waitUntil(\n                () => {\n                    tray = el.shadowRoot.querySelector('sp-tray') as Tray;\n                    return !!tray;\n                },\n                'tray appeared',\n                { timeout: 300 }\n            );\n\n            const popover = el.shadowRoot.querySelector('sp-popover');\n\n            expect(tray).to.not.be.null;\n            expect(popover).to.be.null;\n        });\n\n        it('is a Popover in desktop', async () => {\n            el.open = true;\n\n            // in this test we only need to wait to see if a popover opens\n            let popover: Popover | null = null;\n            await waitUntil(\n                () => {\n                    popover = el.shadowRoot.querySelector(\n                        'sp-popover'\n                    ) as Popover;\n                    return !!popover && popover.open;\n                },\n                'popover appeared',\n                { timeout: 300 }\n            );\n\n            const tray = el.shadowRoot.querySelector('sp-tray');\n\n            expect(popover, 'popover').to.not.be.null;\n            expect(tray, 'tray').to.be.null;\n        });\n    });\n\n    describe('forcePopover', () => {\n        beforeEach(async () => {\n            el = await pickerFixture({ forcePopover: true });\n            await elementUpdated(el);\n        });\n\n        it('is a Popover in mobile', async function () {\n            /**\n             * This is a hack to set the `isMobile` property to true so that we can test the MobileController\n             */\n            el.isMobile.matches = true;\n            el.bindEvents();\n            await elementUpdated(el);\n\n            // Wait until the element is fully updated after viewport change\n            await waitUntil(\n                () => el.offsetWidth > 0,\n                'Element should be visible'\n            );\n            await elementUpdated(el);\n\n            el.open = true;\n\n            // in this test we only need to wait to see if a popover opens\n            let popover: Popover | null = null;\n            await waitUntil(\n                () => {\n                    popover = el.shadowRoot.querySelector(\n                        'sp-popover'\n                    ) as Popover;\n                    return !!popover && popover.open;\n                },\n                'popover appeared',\n                { timeout: 300 }\n            );\n\n            const tray = el.shadowRoot.querySelector('sp-tray');\n\n            expect(popover, 'popover').to.not.be.null;\n            expect(tray, 'tray').to.be.null;\n        });\n\n        it('is a Popover in desktop', async () => {\n            el.open = true;\n\n            // in this test we only need to wait to see if a popover opens\n            let popover: Popover | null = null;\n            await waitUntil(\n                () => {\n                    popover = el.shadowRoot.querySelector(\n                        'sp-popover'\n                    ) as Popover;\n                    return !!popover && popover.open;\n                },\n                'popover appeared',\n                { timeout: 300 }\n            );\n\n            const tray = el.shadowRoot.querySelector('sp-tray');\n\n            expect(tray, 'tray').to.be.null;\n            expect(popover, 'popover').to.not.be.null;\n        });\n    });\n});\n"],
  "mappings": ";AAYA;AAAA,EACI;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,OACG;AACP,OAAO;AACP,OAAO;AACP,OAAO;AAEP,OAAO;AACP,SAAS,mBAAmB;AAI5B,SAAS,sBAAsB,MAAM;AACjC,MAAI;AACJ,QAAM,gBAAgB,OAAO,SAEN;AACnB,UAAM,OAAO,MAAM,QAAwB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAM7B,YAAY,QAAQ,CAAC,CAAC,CAAC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAWpC;AAED,WAAO,KAAK,cAAc,WAAW;AAAA,EACzC;AAEA,WAAS,aAAa,MAAM;AACxB,eAAW,YAAY;AACnB,WAAK,MAAM,cAAc;AACzB,YAAM,eAAe,EAAE;AAAA,IAC3B,CAAC;AAED,OAAG,uBAAuB,YAAY;AAIlC,SAAG,SAAS,UAAU;AACtB,SAAG,WAAW;AAEd,SAAG,OAAO;AAGV,UAAI,OAAoB;AACxB,YAAM;AAAA,QACF,MAAM;AACF,iBAAO,GAAG,WAAW,cAAc,SAAS;AAC5C,iBAAO,CAAC,CAAC;AAAA,QACb;AAAA,QACA;AAAA,QACA,EAAE,SAAS,IAAI;AAAA,MACnB;AAEA,YAAM,UAAU,GAAG,WAAW,cAAc,YAAY;AAExD,aAAO,IAAI,EAAE,GAAG,IAAI,GAAG;AACvB,aAAO,OAAO,EAAE,GAAG,GAAG;AAAA,IAC1B,CAAC;AAED,OAAG,2BAA2B,YAAY;AACtC,SAAG,OAAO;AAGV,UAAI,UAA0B;AAC9B,YAAM;AAAA,QACF,MAAM;AACF,oBAAU,GAAG,WAAW;AAAA,YACpB;AAAA,UACJ;AACA,iBAAO,CAAC,CAAC,WAAW,QAAQ;AAAA,QAChC;AAAA,QACA;AAAA,QACA,EAAE,SAAS,IAAI;AAAA,MACnB;AAEA,YAAM,OAAO,GAAG,WAAW,cAAc,SAAS;AAElD,aAAO,SAAS,SAAS,EAAE,GAAG,IAAI,GAAG;AACrC,aAAO,MAAM,MAAM,EAAE,GAAG,GAAG;AAAA,IAC/B,CAAC;AAAA,EACL,CAAC;AAED,WAAS,gBAAgB,MAAM;AAC3B,eAAW,YAAY;AACnB,WAAK,MAAM,cAAc,EAAE,cAAc,KAAK,CAAC;AAC/C,YAAM,eAAe,EAAE;AAAA,IAC3B,CAAC;AAED,OAAG,0BAA0B,iBAAkB;AAI3C,SAAG,SAAS,UAAU;AACtB,SAAG,WAAW;AACd,YAAM,eAAe,EAAE;AAGvB,YAAM;AAAA,QACF,MAAM,GAAG,cAAc;AAAA,QACvB;AAAA,MACJ;AACA,YAAM,eAAe,EAAE;AAEvB,SAAG,OAAO;AAGV,UAAI,UAA0B;AAC9B,YAAM;AAAA,QACF,MAAM;AACF,oBAAU,GAAG,WAAW;AAAA,YACpB;AAAA,UACJ;AACA,iBAAO,CAAC,CAAC,WAAW,QAAQ;AAAA,QAChC;AAAA,QACA;AAAA,QACA,EAAE,SAAS,IAAI;AAAA,MACnB;AAEA,YAAM,OAAO,GAAG,WAAW,cAAc,SAAS;AAElD,aAAO,SAAS,SAAS,EAAE,GAAG,IAAI,GAAG;AACrC,aAAO,MAAM,MAAM,EAAE,GAAG,GAAG;AAAA,IAC/B,CAAC;AAED,OAAG,2BAA2B,YAAY;AACtC,SAAG,OAAO;AAGV,UAAI,UAA0B;AAC9B,YAAM;AAAA,QACF,MAAM;AACF,oBAAU,GAAG,WAAW;AAAA,YACpB;AAAA,UACJ;AACA,iBAAO,CAAC,CAAC,WAAW,QAAQ;AAAA,QAChC;AAAA,QACA;AAAA,QACA,EAAE,SAAS,IAAI;AAAA,MACnB;AAEA,YAAM,OAAO,GAAG,WAAW,cAAc,SAAS;AAElD,aAAO,MAAM,MAAM,EAAE,GAAG,GAAG;AAC3B,aAAO,SAAS,SAAS,EAAE,GAAG,IAAI,GAAG;AAAA,IACzC,CAAC;AAAA,EACL,CAAC;AACL,CAAC;",
  "names": []
}
