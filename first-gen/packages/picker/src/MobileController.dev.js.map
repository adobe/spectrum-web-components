{
  "version": 3,
  "sources": ["MobileController.ts"],
  "sourcesContent": ["/**\n * Copyright 2025 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {\n    InteractionController,\n    InteractionTypes,\n    SAFARI_FOCUS_RING_CLASS,\n} from './InteractionController.dev.js'\nimport { isWebKit } from '@spectrum-web-components/shared';\n\nexport class MobileController extends InteractionController {\n    override type = InteractionTypes.mobile;\n\n    handleClick(): void {\n        if (this.host.disabled) {\n            return;\n        }\n        if (this.preventNextToggle == 'no') {\n\n            this.host.toggle();\n        }\n        this.preventNextToggle = 'no';\n    }\n\n    public override handlePointerdown(): void {\n        this.preventNextToggle = this.open ? 'yes' : 'no';\n        if (isWebKit()) {\n            this.target.classList.add(SAFARI_FOCUS_RING_CLASS);\n        }\n    }\n\n    private handleFocusOut(): void {\n        if (this.host.open) {\n            return;\n        }\n        if (\n            isWebKit() &&\n            this.target.classList.contains(SAFARI_FOCUS_RING_CLASS)\n        ) {\n            this.target.classList.remove(SAFARI_FOCUS_RING_CLASS);\n        }\n    }\n\n    override init(): void {\n        // Clean up listeners if they've already been bound\n        this.abortController?.abort();\n        this.abortController = new AbortController();\n        const { signal } = this.abortController;\n        this.target.addEventListener('click', () => this.handleClick(), {\n            signal,\n        });\n        this.target.addEventListener(\n            'pointerdown',\n            () => this.handlePointerdown(),\n            { signal }\n        );\n        this.target.addEventListener('focusout', () => this.handleFocusOut(), {\n            signal,\n        });\n    }\n}\n"],
  "mappings": ";AAYA;AAAA,EACI;AAAA,EACA;AAAA,EACA;AAAA,OACG;AACP,SAAS,gBAAgB;AAElB,aAAM,yBAAyB,sBAAsB;AAAA,EAArD;AAAA;AACH,SAAS,OAAO,iBAAiB;AAAA;AAAA,EAEjC,cAAoB;AAChB,QAAI,KAAK,KAAK,UAAU;AACpB;AAAA,IACJ;AACA,QAAI,KAAK,qBAAqB,MAAM;AAEhC,WAAK,KAAK,OAAO;AAAA,IACrB;AACA,SAAK,oBAAoB;AAAA,EAC7B;AAAA,EAEgB,oBAA0B;AACtC,SAAK,oBAAoB,KAAK,OAAO,QAAQ;AAC7C,QAAI,SAAS,GAAG;AACZ,WAAK,OAAO,UAAU,IAAI,uBAAuB;AAAA,IACrD;AAAA,EACJ;AAAA,EAEQ,iBAAuB;AAC3B,QAAI,KAAK,KAAK,MAAM;AAChB;AAAA,IACJ;AACA,QACI,SAAS,KACT,KAAK,OAAO,UAAU,SAAS,uBAAuB,GACxD;AACE,WAAK,OAAO,UAAU,OAAO,uBAAuB;AAAA,IACxD;AAAA,EACJ;AAAA,EAES,OAAa;AApD1B;AAsDQ,eAAK,oBAAL,mBAAsB;AACtB,SAAK,kBAAkB,IAAI,gBAAgB;AAC3C,UAAM,EAAE,OAAO,IAAI,KAAK;AACxB,SAAK,OAAO,iBAAiB,SAAS,MAAM,KAAK,YAAY,GAAG;AAAA,MAC5D;AAAA,IACJ,CAAC;AACD,SAAK,OAAO;AAAA,MACR;AAAA,MACA,MAAM,KAAK,kBAAkB;AAAA,MAC7B,EAAE,OAAO;AAAA,IACb;AACA,SAAK,OAAO,iBAAiB,YAAY,MAAM,KAAK,eAAe,GAAG;AAAA,MAClE;AAAA,IACJ,CAAC;AAAA,EACL;AACJ;",
  "names": []
}
