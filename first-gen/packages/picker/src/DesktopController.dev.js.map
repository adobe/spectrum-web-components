{
  "version": 3,
  "sources": ["DesktopController.ts"],
  "sourcesContent": ["/**\n * Copyright 2025 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {\n    InteractionController,\n    InteractionTypes,\n} from './InteractionController.dev.js'\n\nexport class DesktopController extends InteractionController {\n    override type = InteractionTypes.desktop;\n\n    public override handlePointerdown(event: PointerEvent): void {\n        if (event.button !== 0 || event.pointerType === 'touch') {\n            return;\n        }\n        this.pointerdownState = this.open;\n        this.preventNextToggle = 'maybe';\n        let cleanupAction = 0;\n        const cleanup = (): void => {\n            cancelAnimationFrame(cleanupAction);\n            cleanupAction = requestAnimationFrame(async () => {\n                document.removeEventListener('pointerup', cleanup);\n                document.removeEventListener('pointercancel', cleanup);\n                this.target.removeEventListener('click', cleanup);\n                requestAnimationFrame(() => {\n                    // Complete cleanup on the second animation frame so that `click` can go first.\n                    this.preventNextToggle = 'no';\n                });\n            });\n        };\n        // Ensure that however the pointer goes up we do `cleanup()`.\n        document.addEventListener('pointerup', cleanup);\n        document.addEventListener('pointercancel', cleanup);\n        this.target.addEventListener('click', cleanup);\n        this.handleActivate();\n    }\n\n    public override handleActivate(event?: Event): void {\n        if (this.enterKeydownOn && this.enterKeydownOn !== this.target) {\n            return;\n        }\n        if (this.preventNextToggle === 'yes') {\n            return;\n        }\n        if (event?.type === 'click' && this.open !== this.pointerdownState) {\n            // When activation comes from a `click` event ensure that the `pointerup`\n            // event didn't already toggle the Picker state before doing so.\n            return;\n        }\n        this.host.toggle();\n    }\n\n    override init(): void {\n        // Clean up listeners if they've already been bound\n        this.abortController?.abort();\n        this.abortController = new AbortController();\n        const { signal } = this.abortController;\n        this.target.addEventListener(\n            'click',\n            (event: Event) => this.handleActivate(event),\n            {\n                signal,\n            }\n        );\n        this.target.addEventListener(\n            'pointerdown',\n            (event: PointerEvent) => this.handlePointerdown(event),\n            { signal }\n        );\n        this.target.addEventListener(\n            'focus',\n            (event: FocusEvent) => this.handleButtonFocus(event),\n            {\n                signal,\n            }\n        );\n    }\n}\n"],
  "mappings": ";AAYA;AAAA,EACI;AAAA,EACA;AAAA,OACG;AAEA,aAAM,0BAA0B,sBAAsB;AAAA,EAAtD;AAAA;AACH,SAAS,OAAO,iBAAiB;AAAA;AAAA,EAEjB,kBAAkB,OAA2B;AACzD,QAAI,MAAM,WAAW,KAAK,MAAM,gBAAgB,SAAS;AACrD;AAAA,IACJ;AACA,SAAK,mBAAmB,KAAK;AAC7B,SAAK,oBAAoB;AACzB,QAAI,gBAAgB;AACpB,UAAM,UAAU,MAAY;AACxB,2BAAqB,aAAa;AAClC,sBAAgB,sBAAsB,YAAY;AAC9C,iBAAS,oBAAoB,aAAa,OAAO;AACjD,iBAAS,oBAAoB,iBAAiB,OAAO;AACrD,aAAK,OAAO,oBAAoB,SAAS,OAAO;AAChD,8BAAsB,MAAM;AAExB,eAAK,oBAAoB;AAAA,QAC7B,CAAC;AAAA,MACL,CAAC;AAAA,IACL;AAEA,aAAS,iBAAiB,aAAa,OAAO;AAC9C,aAAS,iBAAiB,iBAAiB,OAAO;AAClD,SAAK,OAAO,iBAAiB,SAAS,OAAO;AAC7C,SAAK,eAAe;AAAA,EACxB;AAAA,EAEgB,eAAe,OAAqB;AAChD,QAAI,KAAK,kBAAkB,KAAK,mBAAmB,KAAK,QAAQ;AAC5D;AAAA,IACJ;AACA,QAAI,KAAK,sBAAsB,OAAO;AAClC;AAAA,IACJ;AACA,SAAI,+BAAO,UAAS,WAAW,KAAK,SAAS,KAAK,kBAAkB;AAGhE;AAAA,IACJ;AACA,SAAK,KAAK,OAAO;AAAA,EACrB;AAAA,EAES,OAAa;AA7D1B;AA+DQ,eAAK,oBAAL,mBAAsB;AACtB,SAAK,kBAAkB,IAAI,gBAAgB;AAC3C,UAAM,EAAE,OAAO,IAAI,KAAK;AACxB,SAAK,OAAO;AAAA,MACR;AAAA,MACA,CAAC,UAAiB,KAAK,eAAe,KAAK;AAAA,MAC3C;AAAA,QACI;AAAA,MACJ;AAAA,IACJ;AACA,SAAK,OAAO;AAAA,MACR;AAAA,MACA,CAAC,UAAwB,KAAK,kBAAkB,KAAK;AAAA,MACrD,EAAE,OAAO;AAAA,IACb;AACA,SAAK,OAAO;AAAA,MACR;AAAA,MACA,CAAC,UAAsB,KAAK,kBAAkB,KAAK;AAAA,MACnD;AAAA,QACI;AAAA,MACJ;AAAA,IACJ;AAAA,EACJ;AACJ;",
  "names": []
}
