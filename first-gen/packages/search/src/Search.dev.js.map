{
  "version": 3,
  "sources": ["Search.ts"],
  "sourcesContent": ["/**\n * Copyright 2025 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {\n    CSSResultArray,\n    html,\n    nothing,\n    PropertyValues,\n    TemplateResult,\n} from '@spectrum-web-components/base';\nimport {\n    property,\n    query,\n} from '@spectrum-web-components/base/src/decorators.js';\nimport { ifDefined } from '@spectrum-web-components/base/src/directives.js';\n\nimport { Textfield } from '@spectrum-web-components/textfield';\nimport '@spectrum-web-components/button/sp-clear-button.js';\nimport '@spectrum-web-components/icons-workflow/icons/sp-icon-search.js';\n\nimport searchStyles from './search.css.js';\n\nconst stopPropagation = (event: Event): void => event.stopPropagation();\n\n/**\n * @element sp-search\n * @slot help-text - default or non-negative help text to associate to your form element\n * @slot negative-help-text - negative help text to associate to your form element when `invalid`\n *\n * @fires submit - The search form has been submitted.\n */\nexport class Search extends Textfield {\n    public static override get styles(): CSSResultArray {\n        return [...super.styles, searchStyles];\n    }\n\n    @property()\n    public action = '';\n\n    @property()\n    public override label = 'Search';\n\n    @property()\n    public method?: 'get' | 'post' | 'dialog';\n\n    @property()\n    public override placeholder = 'Search';\n\n    @property({ type: Boolean })\n    public holdValueOnEscape!: boolean;\n\n    @query('#form')\n    public form!: HTMLFormElement;\n\n    private handleSubmit(event: Event): void {\n        const applyDefault = this.dispatchEvent(\n            new Event('submit', {\n                cancelable: true,\n                bubbles: true,\n            })\n        );\n        if (!applyDefault) {\n            event.preventDefault();\n        }\n    }\n\n    private handleKeydown(event: KeyboardEvent): void {\n        const { code } = event;\n        if (code === 'Escape' && this.holdValueOnEscape) {\n            return;\n        }\n        if (!this.value || code !== 'Escape') {\n            return;\n        }\n        this.reset();\n    }\n\n    public async reset(): Promise<void> {\n        this.value = '';\n        await this.updateComplete;\n        this.focusElement.dispatchEvent(\n            new InputEvent('input', {\n                bubbles: true,\n                composed: true,\n            })\n        );\n        // The native `change` event on an `input` element is not composed,\n        // so this synthetic replication of a `change` event must not be\n        // either as the `Textfield` baseclass should only need to handle\n        // the native variant of this interaction.\n        this.focusElement.dispatchEvent(\n            new InputEvent('change', {\n                bubbles: true,\n            })\n        );\n    }\n\n    protected override renderField(): TemplateResult {\n        return html`\n            <form\n                action=${this.action}\n                id=\"form\"\n                method=${ifDefined(this.method)}\n                @submit=${this.handleSubmit}\n                @reset=${this.reset}\n                @keydown=${this.handleKeydown}\n            >\n                <sp-icon-search\n                    size=${this.size}\n                    class=\"icon magnifier icon-workflow icon-search\"\n                ></sp-icon-search>\n                ${super.renderField()}\n                ${this.value\n                    ? html`\n                          <sp-clear-button\n                              id=\"button\"\n                              label=\"Reset\"\n                              tabindex=\"-1\"\n                              type=\"reset\"\n                              size=${ifDefined(this.size)}\n                              @keydown=${stopPropagation}\n                          ></sp-clear-button>\n                      `\n                    : nothing}\n            </form>\n        `;\n    }\n\n    public override firstUpdated(changedProperties: PropertyValues): void {\n        super.firstUpdated(changedProperties);\n        // if holdValueOnEscape is not set, default to search type\n        if (!this.hasAttribute('holdValueOnEscape')) {\n            this.inputElement.setAttribute('type', 'search');\n        }\n    }\n\n    public override willUpdate(): void {\n        this.multiline = false;\n    }\n}\n"],
  "mappings": ";;;;;;;;;;;AAYA;AAAA,EAEI;AAAA,EACA;AAAA,OAGG;AACP;AAAA,EACI;AAAA,EACA;AAAA,OACG;AACP,SAAS,iBAAiB;AAE1B,SAAS,iBAAiB;AAC1B,OAAO;AACP,OAAO;AAEP,OAAO,kBAAkB;AAEzB,MAAM,kBAAkB,CAAC,UAAuB,MAAM,gBAAgB;AAS/D,aAAM,eAAe,UAAU;AAAA,EAA/B;AAAA;AAMH,SAAO,SAAS;AAGhB,SAAgB,QAAQ;AAMxB,SAAgB,cAAc;AAAA;AAAA,EAd9B,WAA2B,SAAyB;AAChD,WAAO,CAAC,GAAG,MAAM,QAAQ,YAAY;AAAA,EACzC;AAAA,EAoBQ,aAAa,OAAoB;AACrC,UAAM,eAAe,KAAK;AAAA,MACtB,IAAI,MAAM,UAAU;AAAA,QAChB,YAAY;AAAA,QACZ,SAAS;AAAA,MACb,CAAC;AAAA,IACL;AACA,QAAI,CAAC,cAAc;AACf,YAAM,eAAe;AAAA,IACzB;AAAA,EACJ;AAAA,EAEQ,cAAc,OAA4B;AAC9C,UAAM,EAAE,KAAK,IAAI;AACjB,QAAI,SAAS,YAAY,KAAK,mBAAmB;AAC7C;AAAA,IACJ;AACA,QAAI,CAAC,KAAK,SAAS,SAAS,UAAU;AAClC;AAAA,IACJ;AACA,SAAK,MAAM;AAAA,EACf;AAAA,EAEA,MAAa,QAAuB;AAChC,SAAK,QAAQ;AACb,UAAM,KAAK;AACX,SAAK,aAAa;AAAA,MACd,IAAI,WAAW,SAAS;AAAA,QACpB,SAAS;AAAA,QACT,UAAU;AAAA,MACd,CAAC;AAAA,IACL;AAKA,SAAK,aAAa;AAAA,MACd,IAAI,WAAW,UAAU;AAAA,QACrB,SAAS;AAAA,MACb,CAAC;AAAA,IACL;AAAA,EACJ;AAAA,EAEmB,cAA8B;AAC7C,WAAO;AAAA;AAAA,yBAEU,KAAK,MAAM;AAAA;AAAA,yBAEX,UAAU,KAAK,MAAM,CAAC;AAAA,0BACrB,KAAK,YAAY;AAAA,yBAClB,KAAK,KAAK;AAAA,2BACR,KAAK,aAAa;AAAA;AAAA;AAAA,2BAGlB,KAAK,IAAI;AAAA;AAAA;AAAA,kBAGlB,MAAM,YAAY,CAAC;AAAA,kBACnB,KAAK,QACD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qCAMe,UAAU,KAAK,IAAI,CAAC;AAAA,yCAChB,eAAe;AAAA;AAAA,0BAGlC,OAAO;AAAA;AAAA;AAAA,EAGzB;AAAA,EAEgB,aAAa,mBAAyC;AAClE,UAAM,aAAa,iBAAiB;AAEpC,QAAI,CAAC,KAAK,aAAa,mBAAmB,GAAG;AACzC,WAAK,aAAa,aAAa,QAAQ,QAAQ;AAAA,IACnD;AAAA,EACJ;AAAA,EAEgB,aAAmB;AAC/B,SAAK,YAAY;AAAA,EACrB;AACJ;AAtGW;AAAA,EADN,SAAS;AAAA,GALD,OAMF;AAGS;AAAA,EADf,SAAS;AAAA,GARD,OASO;AAGT;AAAA,EADN,SAAS;AAAA,GAXD,OAYF;AAGS;AAAA,EADf,SAAS;AAAA,GAdD,OAeO;AAGT;AAAA,EADN,SAAS,EAAE,MAAM,QAAQ,CAAC;AAAA,GAjBlB,OAkBF;AAGA;AAAA,EADN,MAAM,OAAO;AAAA,GApBL,OAqBF;",
  "names": []
}
