{
  "version": 3,
  "sources": ["color-wheel.test.ts"],
  "sourcesContent": ["/**\n * Copyright 2025 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport { elementUpdated, expect, fixture, html } from '@open-wc/testing';\nimport {\n    arrowDownEvent,\n    arrowDownKeyupEvent,\n    arrowLeftEvent,\n    arrowLeftKeyupEvent,\n    arrowRightEvent,\n    arrowRightKeyupEvent,\n    arrowUpEvent,\n    arrowUpKeyupEvent,\n    ignoreResizeObserverLoopError,\n    testForLitDevWarnings,\n} from '../../../test/testing-helpers.js';\n\nimport '@spectrum-web-components/color-wheel/sp-color-wheel.js';\nimport { ColorWheel } from '@spectrum-web-components/color-wheel';\nimport { ColorTypes } from '@spectrum-web-components/reactive-controllers/src/ColorController.js';\nimport { sendKeys } from '@web/test-runner-commands';\nimport { sendMouse } from '../../../test/plugins/browser.js';\nimport { spy } from 'sinon';\n\nignoreResizeObserverLoopError(before, after);\n\ndescribe('ColorWheel', () => {\n    testForLitDevWarnings(\n        async () =>\n            await fixture<ColorWheel>(html`\n                <sp-color-wheel></sp-color-wheel>\n            `)\n    );\n    it('loads default color-wheel accessibly', async () => {\n        const el = await fixture<ColorWheel>(html`\n            <sp-color-wheel></sp-color-wheel>\n        `);\n\n        await elementUpdated(el);\n\n        await expect(el).to.be.accessible();\n    });\n\n    it('manages a single tab stop', async () => {\n        const test = await fixture<HTMLDivElement>(html`\n            <div>\n                <input type=\"text\" id=\"test-input-1\" />\n                <sp-color-wheel></sp-color-wheel>\n                <input type=\"text\" id=\"test-input-2\" />\n            </div>\n        `);\n        const el = test.querySelector('sp-color-wheel') as ColorWheel;\n        const input1 = test.querySelector(\n            'input:nth-of-type(1)'\n        ) as HTMLInputElement;\n        const input2 = test.querySelector(\n            'input:nth-of-type(2)'\n        ) as HTMLInputElement;\n\n        await elementUpdated(el);\n\n        input1.focus();\n\n        expect(document.activeElement).to.equal(input1);\n\n        await sendKeys({\n            press: 'Tab',\n        });\n\n        expect(document.activeElement).to.equal(el);\n\n        let value = el.value;\n        await sendKeys({\n            press: 'ArrowRight',\n        });\n        expect(el.value).to.not.equal(value);\n        await sendKeys({\n            press: 'Tab',\n        });\n\n        expect(document.activeElement).to.equal(input2);\n\n        await sendKeys({\n            press: 'Shift+Tab',\n        });\n\n        expect(document.activeElement).to.equal(el);\n\n        value = el.value;\n        await sendKeys({\n            press: 'ArrowDown',\n        });\n        expect(el.value).to.not.equal(value);\n        await sendKeys({\n            press: 'Shift+Tab',\n        });\n\n        expect(document.activeElement).to.equal(input1);\n    });\n    it('manages [focused]', async () => {\n        const el = await fixture<ColorWheel>(html`\n            <sp-color-wheel></sp-color-wheel>\n        `);\n\n        await elementUpdated(el);\n\n        expect(el.focused).to.be.false;\n\n        await sendKeys({ press: 'Tab' });\n        await elementUpdated(el);\n\n        expect(el.focused).to.be.true;\n\n        el.blur();\n        await elementUpdated(el);\n\n        expect(el.focused).to.be.false;\n\n        el.dispatchEvent(new FocusEvent('focus'));\n        await elementUpdated(el);\n\n        expect(el.focused).to.be.true;\n\n        el.dispatchEvent(new FocusEvent('blur'));\n        await elementUpdated(el);\n\n        expect(el.focused).to.be.false;\n    });\n    it('dispatches input and change events in response to \"Arrow*\" keypresses', async () => {\n        const inputSpy = spy();\n        const changeSpy = spy();\n        const el = await fixture<ColorWheel>(html`\n            <sp-color-wheel\n                @change=${() => changeSpy()}\n                @input=${() => inputSpy()}\n            ></sp-color-wheel>\n        `);\n\n        await elementUpdated(el);\n        el.focus();\n\n        await sendKeys({ press: 'ArrowRight' });\n        expect(inputSpy.callCount).to.equal(1);\n        expect(changeSpy.callCount).to.equal(1);\n\n        await sendKeys({ press: 'ArrowLeft' });\n        expect(inputSpy.callCount).to.equal(2);\n        expect(changeSpy.callCount).to.equal(2);\n\n        await sendKeys({ press: 'ArrowUp' });\n        expect(inputSpy.callCount).to.equal(3);\n        expect(changeSpy.callCount).to.equal(3);\n\n        await sendKeys({ press: 'ArrowDown' });\n        expect(inputSpy.callCount).to.equal(4);\n        expect(changeSpy.callCount).to.equal(4);\n    });\n    it('responds to events on the internal input element', async () => {\n        // screen reader interactions dispatch events as found in the following test\n        const inputSpy = spy();\n        const changeSpy = spy();\n        const el = await fixture<ColorWheel>(html`\n            <sp-color-wheel\n                @change=${() => changeSpy()}\n                @input=${() => inputSpy()}\n            ></sp-color-wheel>\n        `);\n\n        await elementUpdated(el);\n\n        const input = el.focusElement;\n\n        el.focus();\n\n        input.dispatchEvent(\n            new Event('input', {\n                bubbles: true,\n                composed: true,\n            })\n        );\n        input.dispatchEvent(\n            new Event('change', {\n                bubbles: true,\n                composed: false, // native change events do not compose themselves by default\n            })\n        );\n\n        expect(inputSpy.callCount).to.equal(1);\n        expect(changeSpy.callCount).to.equal(1);\n    });\n    it('accepts \"Arrow*\" keypresses', async () => {\n        const el = await fixture<ColorWheel>(html`\n            <sp-color-wheel></sp-color-wheel>\n        `);\n\n        await elementUpdated(el);\n\n        expect(el.value).to.equal(0);\n\n        const input = el.focusElement;\n\n        input.dispatchEvent(arrowUpEvent());\n        input.dispatchEvent(arrowUpKeyupEvent());\n        input.dispatchEvent(arrowUpEvent());\n        input.dispatchEvent(arrowUpKeyupEvent());\n\n        await elementUpdated(el);\n\n        expect(el.value).to.equal(2);\n\n        input.dispatchEvent(arrowRightEvent());\n        input.dispatchEvent(arrowRightKeyupEvent());\n        input.dispatchEvent(arrowRightEvent());\n        input.dispatchEvent(arrowRightKeyupEvent());\n\n        await elementUpdated(el);\n\n        expect(el.value).to.equal(4);\n\n        input.dispatchEvent(arrowDownEvent());\n        input.dispatchEvent(arrowDownKeyupEvent());\n        input.dispatchEvent(arrowDownEvent());\n        input.dispatchEvent(arrowDownKeyupEvent());\n\n        await elementUpdated(el);\n\n        expect(el.value).to.equal(2);\n\n        input.dispatchEvent(arrowLeftEvent());\n        input.dispatchEvent(arrowLeftKeyupEvent());\n        input.dispatchEvent(arrowLeftEvent());\n        input.dispatchEvent(arrowLeftKeyupEvent());\n\n        await elementUpdated(el);\n\n        expect(el.value).to.equal(0);\n    });\n    it('accepts \"Arrow*\" keypresses in dir=\"rtl\"', async () => {\n        const el = await fixture<ColorWheel>(html`\n            <sp-color-wheel dir=\"rtl\"></sp-color-wheel>\n        `);\n\n        await elementUpdated(el);\n\n        expect(el.value).to.equal(0);\n\n        const input = el.focusElement;\n\n        input.dispatchEvent(arrowUpEvent());\n        input.dispatchEvent(arrowUpKeyupEvent());\n        input.dispatchEvent(arrowUpEvent());\n        input.dispatchEvent(arrowUpKeyupEvent());\n\n        await elementUpdated(el);\n\n        expect(el.value).to.equal(2);\n\n        input.dispatchEvent(arrowRightEvent());\n        input.dispatchEvent(arrowRightKeyupEvent());\n        input.dispatchEvent(arrowRightEvent());\n        input.dispatchEvent(arrowRightKeyupEvent());\n\n        await elementUpdated(el);\n\n        expect(el.value).to.equal(0);\n\n        input.dispatchEvent(arrowLeftEvent());\n        input.dispatchEvent(arrowLeftKeyupEvent());\n        input.dispatchEvent(arrowLeftEvent());\n        input.dispatchEvent(arrowLeftKeyupEvent());\n\n        await elementUpdated(el);\n\n        expect(el.value).to.equal(2);\n\n        input.dispatchEvent(arrowDownEvent());\n        input.dispatchEvent(arrowDownKeyupEvent());\n        input.dispatchEvent(arrowDownEvent());\n        input.dispatchEvent(arrowDownKeyupEvent());\n\n        await elementUpdated(el);\n\n        expect(el.value).to.equal(0);\n    });\n    it('accepts \"Arrow*\" keypresses with alteration', async () => {\n        const el = await fixture<ColorWheel>(html`\n            <sp-color-wheel></sp-color-wheel>\n        `);\n\n        await elementUpdated(el);\n        el.focus();\n        expect(el.value).to.equal(0);\n\n        await sendKeys({\n            down: 'Shift',\n        });\n        await sendKeys({\n            press: 'ArrowUp',\n        });\n        await sendKeys({\n            press: 'ArrowUp',\n        });\n\n        await elementUpdated(el);\n\n        expect(el.value).to.equal(20);\n\n        await sendKeys({\n            press: 'ArrowRight',\n        });\n        await sendKeys({\n            press: 'ArrowRight',\n        });\n\n        await elementUpdated(el);\n\n        expect(el.value).to.equal(40);\n\n        await sendKeys({\n            press: 'ArrowDown',\n        });\n        await sendKeys({\n            press: 'ArrowDown',\n        });\n\n        await elementUpdated(el);\n\n        expect(el.value).to.equal(20);\n\n        await sendKeys({\n            press: 'ArrowLeft',\n        });\n        await sendKeys({\n            press: 'ArrowLeft',\n        });\n        await sendKeys({\n            up: 'Shift',\n        });\n\n        await elementUpdated(el);\n\n        expect(el.value).to.equal(0);\n    });\n    it('accepts pointer events', async () => {\n        const color = { h: '0', s: '20%', l: '70%' };\n        const el = await fixture<ColorWheel>(html`\n            <sp-color-wheel\n                .color=${color}\n                style=\"--mod-colorwheel-width: 160px; --mod-colorwheel-height: 160px;\"\n            ></sp-color-wheel>\n        `);\n\n        await elementUpdated(el);\n\n        const { handle } = el as unknown as { handle: HTMLElement };\n\n        handle.setPointerCapture = () => {\n            return;\n        };\n        handle.releasePointerCapture = () => {\n            return;\n        };\n\n        expect(el.value).to.equal(0);\n        expect(\n            (el.color as { h: number; s: number; l: number; a: number }).s\n        ).to.be.within(0.19, 0.21);\n        expect(\n            (el.color as { h: number; s: number; l: number; a: number }).l\n        ).to.be.within(0.69, 0.71);\n\n        handle.dispatchEvent(\n            new PointerEvent('pointerdown', {\n                button: 1,\n                pointerId: 1,\n                clientX: 80,\n                clientY: 15,\n                bubbles: true,\n                composed: true,\n                cancelable: true,\n            })\n        );\n\n        await elementUpdated(el);\n\n        expect(el.value).to.equal(0);\n        expect(\n            (el.color as { h: number; s: number; l: number; a: number }).s\n        ).to.be.within(0.19, 0.21);\n        expect(\n            (el.color as { h: number; s: number; l: number; a: number }).l\n        ).to.be.within(0.69, 0.71);\n\n        const root = el.shadowRoot ? el.shadowRoot : el;\n        const gradient = root.querySelector('[name=\"gradient\"]') as HTMLElement;\n        gradient.dispatchEvent(\n            new PointerEvent('pointerdown', {\n                button: 1,\n                pointerId: 1,\n                clientX: 80,\n                clientY: 15,\n                bubbles: true,\n                composed: true,\n                cancelable: true,\n            })\n        );\n\n        await elementUpdated(el);\n\n        expect(el.value).to.equal(0);\n        expect(\n            (el.color as { h: number; s: number; l: number; a: number }).s\n        ).to.be.within(0.19, 0.21);\n        expect(\n            (el.color as { h: number; s: number; l: number; a: number }).l\n        ).to.be.within(0.69, 0.71);\n\n        gradient.dispatchEvent(\n            new PointerEvent('pointerdown', {\n                pointerId: 1,\n                clientX: 80,\n                clientY: 15,\n                bubbles: true,\n                composed: true,\n                cancelable: true,\n            })\n        );\n\n        await elementUpdated(el);\n\n        expect(el.value).to.equal(263.74596725608353);\n        expect(\n            (el.color as { h: number; s: number; l: number; a: number }).s\n        ).to.be.within(0.19, 0.21);\n        expect(\n            (el.color as { h: number; s: number; l: number; a: number }).l\n        ).to.be.within(0.69, 0.71);\n\n        handle.dispatchEvent(\n            new PointerEvent('pointermove', {\n                pointerId: 1,\n                clientX: 80,\n                clientY: 160,\n                bubbles: true,\n                composed: true,\n                cancelable: true,\n            })\n        );\n        handle.dispatchEvent(\n            new PointerEvent('pointerup', {\n                pointerId: 1,\n                clientX: 80,\n                clientY: 160,\n                bubbles: true,\n                composed: true,\n                cancelable: true,\n            })\n        );\n\n        await elementUpdated(el);\n\n        expect(el.value).to.equal(96.34019174590992);\n        expect(\n            (el.color as { h: number; s: number; l: number; a: number }).s\n        ).to.be.within(0.19, 0.21);\n        expect(\n            (el.color as { h: number; s: number; l: number; a: number }).l\n        ).to.be.within(0.69, 0.71);\n    });\n    it('can have `change` events prevented', async () => {\n        const color = { h: '0', s: '20%', l: '70%' };\n        const el = await fixture<ColorWheel>(html`\n            <sp-color-wheel\n                .color=${color}\n                @change=${(event: Event) => {\n                    event?.preventDefault();\n                }}\n                style=\"--spectrum-global-dimension-size-125: 10px;\"\n            ></sp-color-wheel>\n        `);\n\n        await elementUpdated(el);\n\n        expect(el.value).to.equal(0);\n\n        await sendMouse({\n            steps: [\n                {\n                    type: 'move',\n                    position: [80, 15],\n                },\n                {\n                    type: 'down',\n                },\n                {\n                    type: 'move',\n                    position: [80, 160],\n                },\n            ],\n        });\n\n        await elementUpdated(el);\n\n        await sendMouse({\n            steps: [\n                {\n                    type: 'up',\n                },\n            ],\n        });\n\n        await elementUpdated(el);\n        expect(el.value).to.equal(0);\n    });\n    const colorFormats: {\n        name: string;\n        color: ColorTypes;\n        test?: string;\n    }[] = [\n        //rgb\n        { name: 'RGB String', color: 'rgb(204, 51, 204)' },\n        { name: 'RGB', color: { r: 204, g: 51, b: 204, a: 1 } },\n        //prgb\n        { name: 'PRGB String', color: 'rgb(80%, 20%, 80%)' },\n        { name: 'PRGB', color: { r: '80%', g: '20%', b: '80%', a: 1 } },\n        // hex\n        { name: 'Hex', color: 'cc33cc' },\n        { name: 'Hex String', color: '#cc33cc' },\n        // hex8\n        { name: 'Hex8', color: 'cc33ccff' },\n        { name: 'Hex8 String', color: '#cc33ccff' },\n        // name\n        { name: 'string', color: 'red', test: 'ff0000' },\n        // hsl\n        { name: 'HSL String', color: 'hsl(300, 60%, 50%)' },\n        { name: 'HSL', color: { h: 300, s: 0.6000000000000001, l: 0.5, a: 1 } },\n        // hsv\n        { name: 'HSV String', color: 'hsv(300, 75%, 100%)' },\n        { name: 'HSV', color: { h: 300, s: 0.75, v: 1, a: 1 } },\n    ];\n    colorFormats.map((format) => {\n        it(`maintains \\`color\\` format as ${format.name}`, async () => {\n            const el = await fixture<ColorWheel>(html`\n                <sp-color-wheel></sp-color-wheel>\n            `);\n\n            if (typeof format.color === 'string') {\n                el.color = format.color;\n            } else {\n                el.color = { ...format.color } as ColorTypes;\n            }\n            if (format.name.startsWith('Hex')) {\n                expect(el.color).to.equal(format.color);\n            } else if (format.name === 'string') {\n                expect(el.color).to.equal(format.test);\n            } else expect(el.color).to.deep.equal(format.color);\n        });\n    });\n    it(`maintains hue value`, async () => {\n        const el = await fixture<ColorWheel>(html`\n            <sp-color-wheel></sp-color-wheel>\n        `);\n        const hue = 300;\n        const hsl = `hsl(${hue}, 60%, 56%)`;\n\n        el.color = hsl;\n        await elementUpdated(el);\n\n        expect(el.value).to.equal(hue);\n        expect(el.color).to.equal(hsl);\n\n        const hsla = `hsla(${hue}, 60%, 56%, 0.9)`;\n        el.color = hsla;\n        expect(el.value).to.equal(hue);\n        expect(el.color).to.equal(hsla);\n\n        const hsv = `hsv(${hue}, 60%, 56%)`;\n        el.color = hsv;\n        expect(el.value).to.equal(hue);\n        expect(el.color).to.equal(hsv);\n\n        const hsva = `hsva(${hue}, 60%, 56%, 0.9)`;\n        el.color = hsva;\n        expect(el.value).to.equal(hue);\n        expect(el.color).to.equal(hsva);\n    });\n    it('should flip orientation with dir=\"rtl\"', async () => {\n        const el = await fixture<ColorWheel>(html`\n            <sp-color-wheel></sp-color-wheel>\n        `);\n\n        await elementUpdated(el);\n\n        const root = el.shadowRoot ? el.shadowRoot : el;\n        expect(\n            getComputedStyle(root.querySelector('.wheel') as HTMLElement)\n                .transform\n        ).to.equal('none');\n\n        el.setAttribute('dir', 'rtl');\n\n        await elementUpdated(el);\n        expect(\n            getComputedStyle(root.querySelector('.wheel') as HTMLElement)\n                .transform\n        ).to.equal('matrix(-1, 0, 0, 1, 0, 0)');\n    });\n});\n"],
  "mappings": ";AAYA,SAAS,gBAAgB,QAAQ,SAAS,YAAY;AACtD;AAAA,EACI;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,OACG;AAEP,OAAO;AAGP,SAAS,gBAAgB;AACzB,SAAS,iBAAiB;AAC1B,SAAS,WAAW;AAEpB,8BAA8B,QAAQ,KAAK;AAE3C,SAAS,cAAc,MAAM;AACzB;AAAA,IACI,YACI,MAAM,QAAoB;AAAA;AAAA,aAEzB;AAAA,EACT;AACA,KAAG,wCAAwC,YAAY;AACnD,UAAM,KAAK,MAAM,QAAoB;AAAA;AAAA,SAEpC;AAED,UAAM,eAAe,EAAE;AAEvB,UAAM,OAAO,EAAE,EAAE,GAAG,GAAG,WAAW;AAAA,EACtC,CAAC;AAED,KAAG,6BAA6B,YAAY;AACxC,UAAM,OAAO,MAAM,QAAwB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAM1C;AACD,UAAM,KAAK,KAAK,cAAc,gBAAgB;AAC9C,UAAM,SAAS,KAAK;AAAA,MAChB;AAAA,IACJ;AACA,UAAM,SAAS,KAAK;AAAA,MAChB;AAAA,IACJ;AAEA,UAAM,eAAe,EAAE;AAEvB,WAAO,MAAM;AAEb,WAAO,SAAS,aAAa,EAAE,GAAG,MAAM,MAAM;AAE9C,UAAM,SAAS;AAAA,MACX,OAAO;AAAA,IACX,CAAC;AAED,WAAO,SAAS,aAAa,EAAE,GAAG,MAAM,EAAE;AAE1C,QAAI,QAAQ,GAAG;AACf,UAAM,SAAS;AAAA,MACX,OAAO;AAAA,IACX,CAAC;AACD,WAAO,GAAG,KAAK,EAAE,GAAG,IAAI,MAAM,KAAK;AACnC,UAAM,SAAS;AAAA,MACX,OAAO;AAAA,IACX,CAAC;AAED,WAAO,SAAS,aAAa,EAAE,GAAG,MAAM,MAAM;AAE9C,UAAM,SAAS;AAAA,MACX,OAAO;AAAA,IACX,CAAC;AAED,WAAO,SAAS,aAAa,EAAE,GAAG,MAAM,EAAE;AAE1C,YAAQ,GAAG;AACX,UAAM,SAAS;AAAA,MACX,OAAO;AAAA,IACX,CAAC;AACD,WAAO,GAAG,KAAK,EAAE,GAAG,IAAI,MAAM,KAAK;AACnC,UAAM,SAAS;AAAA,MACX,OAAO;AAAA,IACX,CAAC;AAED,WAAO,SAAS,aAAa,EAAE,GAAG,MAAM,MAAM;AAAA,EAClD,CAAC;AACD,KAAG,qBAAqB,YAAY;AAChC,UAAM,KAAK,MAAM,QAAoB;AAAA;AAAA,SAEpC;AAED,UAAM,eAAe,EAAE;AAEvB,WAAO,GAAG,OAAO,EAAE,GAAG,GAAG;AAEzB,UAAM,SAAS,EAAE,OAAO,MAAM,CAAC;AAC/B,UAAM,eAAe,EAAE;AAEvB,WAAO,GAAG,OAAO,EAAE,GAAG,GAAG;AAEzB,OAAG,KAAK;AACR,UAAM,eAAe,EAAE;AAEvB,WAAO,GAAG,OAAO,EAAE,GAAG,GAAG;AAEzB,OAAG,cAAc,IAAI,WAAW,OAAO,CAAC;AACxC,UAAM,eAAe,EAAE;AAEvB,WAAO,GAAG,OAAO,EAAE,GAAG,GAAG;AAEzB,OAAG,cAAc,IAAI,WAAW,MAAM,CAAC;AACvC,UAAM,eAAe,EAAE;AAEvB,WAAO,GAAG,OAAO,EAAE,GAAG,GAAG;AAAA,EAC7B,CAAC;AACD,KAAG,yEAAyE,YAAY;AACpF,UAAM,WAAW,IAAI;AACrB,UAAM,YAAY,IAAI;AACtB,UAAM,KAAK,MAAM,QAAoB;AAAA;AAAA,0BAEnB,MAAM,UAAU,CAAC;AAAA,yBAClB,MAAM,SAAS,CAAC;AAAA;AAAA,SAEhC;AAED,UAAM,eAAe,EAAE;AACvB,OAAG,MAAM;AAET,UAAM,SAAS,EAAE,OAAO,aAAa,CAAC;AACtC,WAAO,SAAS,SAAS,EAAE,GAAG,MAAM,CAAC;AACrC,WAAO,UAAU,SAAS,EAAE,GAAG,MAAM,CAAC;AAEtC,UAAM,SAAS,EAAE,OAAO,YAAY,CAAC;AACrC,WAAO,SAAS,SAAS,EAAE,GAAG,MAAM,CAAC;AACrC,WAAO,UAAU,SAAS,EAAE,GAAG,MAAM,CAAC;AAEtC,UAAM,SAAS,EAAE,OAAO,UAAU,CAAC;AACnC,WAAO,SAAS,SAAS,EAAE,GAAG,MAAM,CAAC;AACrC,WAAO,UAAU,SAAS,EAAE,GAAG,MAAM,CAAC;AAEtC,UAAM,SAAS,EAAE,OAAO,YAAY,CAAC;AACrC,WAAO,SAAS,SAAS,EAAE,GAAG,MAAM,CAAC;AACrC,WAAO,UAAU,SAAS,EAAE,GAAG,MAAM,CAAC;AAAA,EAC1C,CAAC;AACD,KAAG,oDAAoD,YAAY;AAE/D,UAAM,WAAW,IAAI;AACrB,UAAM,YAAY,IAAI;AACtB,UAAM,KAAK,MAAM,QAAoB;AAAA;AAAA,0BAEnB,MAAM,UAAU,CAAC;AAAA,yBAClB,MAAM,SAAS,CAAC;AAAA;AAAA,SAEhC;AAED,UAAM,eAAe,EAAE;AAEvB,UAAM,QAAQ,GAAG;AAEjB,OAAG,MAAM;AAET,UAAM;AAAA,MACF,IAAI,MAAM,SAAS;AAAA,QACf,SAAS;AAAA,QACT,UAAU;AAAA,MACd,CAAC;AAAA,IACL;AACA,UAAM;AAAA,MACF,IAAI,MAAM,UAAU;AAAA,QAChB,SAAS;AAAA,QACT,UAAU;AAAA;AAAA,MACd,CAAC;AAAA,IACL;AAEA,WAAO,SAAS,SAAS,EAAE,GAAG,MAAM,CAAC;AACrC,WAAO,UAAU,SAAS,EAAE,GAAG,MAAM,CAAC;AAAA,EAC1C,CAAC;AACD,KAAG,+BAA+B,YAAY;AAC1C,UAAM,KAAK,MAAM,QAAoB;AAAA;AAAA,SAEpC;AAED,UAAM,eAAe,EAAE;AAEvB,WAAO,GAAG,KAAK,EAAE,GAAG,MAAM,CAAC;AAE3B,UAAM,QAAQ,GAAG;AAEjB,UAAM,cAAc,aAAa,CAAC;AAClC,UAAM,cAAc,kBAAkB,CAAC;AACvC,UAAM,cAAc,aAAa,CAAC;AAClC,UAAM,cAAc,kBAAkB,CAAC;AAEvC,UAAM,eAAe,EAAE;AAEvB,WAAO,GAAG,KAAK,EAAE,GAAG,MAAM,CAAC;AAE3B,UAAM,cAAc,gBAAgB,CAAC;AACrC,UAAM,cAAc,qBAAqB,CAAC;AAC1C,UAAM,cAAc,gBAAgB,CAAC;AACrC,UAAM,cAAc,qBAAqB,CAAC;AAE1C,UAAM,eAAe,EAAE;AAEvB,WAAO,GAAG,KAAK,EAAE,GAAG,MAAM,CAAC;AAE3B,UAAM,cAAc,eAAe,CAAC;AACpC,UAAM,cAAc,oBAAoB,CAAC;AACzC,UAAM,cAAc,eAAe,CAAC;AACpC,UAAM,cAAc,oBAAoB,CAAC;AAEzC,UAAM,eAAe,EAAE;AAEvB,WAAO,GAAG,KAAK,EAAE,GAAG,MAAM,CAAC;AAE3B,UAAM,cAAc,eAAe,CAAC;AACpC,UAAM,cAAc,oBAAoB,CAAC;AACzC,UAAM,cAAc,eAAe,CAAC;AACpC,UAAM,cAAc,oBAAoB,CAAC;AAEzC,UAAM,eAAe,EAAE;AAEvB,WAAO,GAAG,KAAK,EAAE,GAAG,MAAM,CAAC;AAAA,EAC/B,CAAC;AACD,KAAG,4CAA4C,YAAY;AACvD,UAAM,KAAK,MAAM,QAAoB;AAAA;AAAA,SAEpC;AAED,UAAM,eAAe,EAAE;AAEvB,WAAO,GAAG,KAAK,EAAE,GAAG,MAAM,CAAC;AAE3B,UAAM,QAAQ,GAAG;AAEjB,UAAM,cAAc,aAAa,CAAC;AAClC,UAAM,cAAc,kBAAkB,CAAC;AACvC,UAAM,cAAc,aAAa,CAAC;AAClC,UAAM,cAAc,kBAAkB,CAAC;AAEvC,UAAM,eAAe,EAAE;AAEvB,WAAO,GAAG,KAAK,EAAE,GAAG,MAAM,CAAC;AAE3B,UAAM,cAAc,gBAAgB,CAAC;AACrC,UAAM,cAAc,qBAAqB,CAAC;AAC1C,UAAM,cAAc,gBAAgB,CAAC;AACrC,UAAM,cAAc,qBAAqB,CAAC;AAE1C,UAAM,eAAe,EAAE;AAEvB,WAAO,GAAG,KAAK,EAAE,GAAG,MAAM,CAAC;AAE3B,UAAM,cAAc,eAAe,CAAC;AACpC,UAAM,cAAc,oBAAoB,CAAC;AACzC,UAAM,cAAc,eAAe,CAAC;AACpC,UAAM,cAAc,oBAAoB,CAAC;AAEzC,UAAM,eAAe,EAAE;AAEvB,WAAO,GAAG,KAAK,EAAE,GAAG,MAAM,CAAC;AAE3B,UAAM,cAAc,eAAe,CAAC;AACpC,UAAM,cAAc,oBAAoB,CAAC;AACzC,UAAM,cAAc,eAAe,CAAC;AACpC,UAAM,cAAc,oBAAoB,CAAC;AAEzC,UAAM,eAAe,EAAE;AAEvB,WAAO,GAAG,KAAK,EAAE,GAAG,MAAM,CAAC;AAAA,EAC/B,CAAC;AACD,KAAG,+CAA+C,YAAY;AAC1D,UAAM,KAAK,MAAM,QAAoB;AAAA;AAAA,SAEpC;AAED,UAAM,eAAe,EAAE;AACvB,OAAG,MAAM;AACT,WAAO,GAAG,KAAK,EAAE,GAAG,MAAM,CAAC;AAE3B,UAAM,SAAS;AAAA,MACX,MAAM;AAAA,IACV,CAAC;AACD,UAAM,SAAS;AAAA,MACX,OAAO;AAAA,IACX,CAAC;AACD,UAAM,SAAS;AAAA,MACX,OAAO;AAAA,IACX,CAAC;AAED,UAAM,eAAe,EAAE;AAEvB,WAAO,GAAG,KAAK,EAAE,GAAG,MAAM,EAAE;AAE5B,UAAM,SAAS;AAAA,MACX,OAAO;AAAA,IACX,CAAC;AACD,UAAM,SAAS;AAAA,MACX,OAAO;AAAA,IACX,CAAC;AAED,UAAM,eAAe,EAAE;AAEvB,WAAO,GAAG,KAAK,EAAE,GAAG,MAAM,EAAE;AAE5B,UAAM,SAAS;AAAA,MACX,OAAO;AAAA,IACX,CAAC;AACD,UAAM,SAAS;AAAA,MACX,OAAO;AAAA,IACX,CAAC;AAED,UAAM,eAAe,EAAE;AAEvB,WAAO,GAAG,KAAK,EAAE,GAAG,MAAM,EAAE;AAE5B,UAAM,SAAS;AAAA,MACX,OAAO;AAAA,IACX,CAAC;AACD,UAAM,SAAS;AAAA,MACX,OAAO;AAAA,IACX,CAAC;AACD,UAAM,SAAS;AAAA,MACX,IAAI;AAAA,IACR,CAAC;AAED,UAAM,eAAe,EAAE;AAEvB,WAAO,GAAG,KAAK,EAAE,GAAG,MAAM,CAAC;AAAA,EAC/B,CAAC;AACD,KAAG,0BAA0B,YAAY;AACrC,UAAM,QAAQ,EAAE,GAAG,KAAK,GAAG,OAAO,GAAG,MAAM;AAC3C,UAAM,KAAK,MAAM,QAAoB;AAAA;AAAA,yBAEpB,KAAK;AAAA;AAAA;AAAA,SAGrB;AAED,UAAM,eAAe,EAAE;AAEvB,UAAM,EAAE,OAAO,IAAI;AAEnB,WAAO,oBAAoB,MAAM;AAC7B;AAAA,IACJ;AACA,WAAO,wBAAwB,MAAM;AACjC;AAAA,IACJ;AAEA,WAAO,GAAG,KAAK,EAAE,GAAG,MAAM,CAAC;AAC3B;AAAA,MACK,GAAG,MAAyD;AAAA,IACjE,EAAE,GAAG,GAAG,OAAO,MAAM,IAAI;AACzB;AAAA,MACK,GAAG,MAAyD;AAAA,IACjE,EAAE,GAAG,GAAG,OAAO,MAAM,IAAI;AAEzB,WAAO;AAAA,MACH,IAAI,aAAa,eAAe;AAAA,QAC5B,QAAQ;AAAA,QACR,WAAW;AAAA,QACX,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,UAAU;AAAA,QACV,YAAY;AAAA,MAChB,CAAC;AAAA,IACL;AAEA,UAAM,eAAe,EAAE;AAEvB,WAAO,GAAG,KAAK,EAAE,GAAG,MAAM,CAAC;AAC3B;AAAA,MACK,GAAG,MAAyD;AAAA,IACjE,EAAE,GAAG,GAAG,OAAO,MAAM,IAAI;AACzB;AAAA,MACK,GAAG,MAAyD;AAAA,IACjE,EAAE,GAAG,GAAG,OAAO,MAAM,IAAI;AAEzB,UAAM,OAAO,GAAG,aAAa,GAAG,aAAa;AAC7C,UAAM,WAAW,KAAK,cAAc,mBAAmB;AACvD,aAAS;AAAA,MACL,IAAI,aAAa,eAAe;AAAA,QAC5B,QAAQ;AAAA,QACR,WAAW;AAAA,QACX,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,UAAU;AAAA,QACV,YAAY;AAAA,MAChB,CAAC;AAAA,IACL;AAEA,UAAM,eAAe,EAAE;AAEvB,WAAO,GAAG,KAAK,EAAE,GAAG,MAAM,CAAC;AAC3B;AAAA,MACK,GAAG,MAAyD;AAAA,IACjE,EAAE,GAAG,GAAG,OAAO,MAAM,IAAI;AACzB;AAAA,MACK,GAAG,MAAyD;AAAA,IACjE,EAAE,GAAG,GAAG,OAAO,MAAM,IAAI;AAEzB,aAAS;AAAA,MACL,IAAI,aAAa,eAAe;AAAA,QAC5B,WAAW;AAAA,QACX,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,UAAU;AAAA,QACV,YAAY;AAAA,MAChB,CAAC;AAAA,IACL;AAEA,UAAM,eAAe,EAAE;AAEvB,WAAO,GAAG,KAAK,EAAE,GAAG,MAAM,kBAAkB;AAC5C;AAAA,MACK,GAAG,MAAyD;AAAA,IACjE,EAAE,GAAG,GAAG,OAAO,MAAM,IAAI;AACzB;AAAA,MACK,GAAG,MAAyD;AAAA,IACjE,EAAE,GAAG,GAAG,OAAO,MAAM,IAAI;AAEzB,WAAO;AAAA,MACH,IAAI,aAAa,eAAe;AAAA,QAC5B,WAAW;AAAA,QACX,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,UAAU;AAAA,QACV,YAAY;AAAA,MAChB,CAAC;AAAA,IACL;AACA,WAAO;AAAA,MACH,IAAI,aAAa,aAAa;AAAA,QAC1B,WAAW;AAAA,QACX,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,UAAU;AAAA,QACV,YAAY;AAAA,MAChB,CAAC;AAAA,IACL;AAEA,UAAM,eAAe,EAAE;AAEvB,WAAO,GAAG,KAAK,EAAE,GAAG,MAAM,iBAAiB;AAC3C;AAAA,MACK,GAAG,MAAyD;AAAA,IACjE,EAAE,GAAG,GAAG,OAAO,MAAM,IAAI;AACzB;AAAA,MACK,GAAG,MAAyD;AAAA,IACjE,EAAE,GAAG,GAAG,OAAO,MAAM,IAAI;AAAA,EAC7B,CAAC;AACD,KAAG,sCAAsC,YAAY;AACjD,UAAM,QAAQ,EAAE,GAAG,KAAK,GAAG,OAAO,GAAG,MAAM;AAC3C,UAAM,KAAK,MAAM,QAAoB;AAAA;AAAA,yBAEpB,KAAK;AAAA,0BACJ,CAAC,UAAiB;AACxB,qCAAO;AAAA,IACX,CAAC;AAAA;AAAA;AAAA,SAGR;AAED,UAAM,eAAe,EAAE;AAEvB,WAAO,GAAG,KAAK,EAAE,GAAG,MAAM,CAAC;AAE3B,UAAM,UAAU;AAAA,MACZ,OAAO;AAAA,QACH;AAAA,UACI,MAAM;AAAA,UACN,UAAU,CAAC,IAAI,EAAE;AAAA,QACrB;AAAA,QACA;AAAA,UACI,MAAM;AAAA,QACV;AAAA,QACA;AAAA,UACI,MAAM;AAAA,UACN,UAAU,CAAC,IAAI,GAAG;AAAA,QACtB;AAAA,MACJ;AAAA,IACJ,CAAC;AAED,UAAM,eAAe,EAAE;AAEvB,UAAM,UAAU;AAAA,MACZ,OAAO;AAAA,QACH;AAAA,UACI,MAAM;AAAA,QACV;AAAA,MACJ;AAAA,IACJ,CAAC;AAED,UAAM,eAAe,EAAE;AACvB,WAAO,GAAG,KAAK,EAAE,GAAG,MAAM,CAAC;AAAA,EAC/B,CAAC;AACD,QAAM,eAIA;AAAA;AAAA,IAEF,EAAE,MAAM,cAAc,OAAO,oBAAoB;AAAA,IACjD,EAAE,MAAM,OAAO,OAAO,EAAE,GAAG,KAAK,GAAG,IAAI,GAAG,KAAK,GAAG,EAAE,EAAE;AAAA;AAAA,IAEtD,EAAE,MAAM,eAAe,OAAO,qBAAqB;AAAA,IACnD,EAAE,MAAM,QAAQ,OAAO,EAAE,GAAG,OAAO,GAAG,OAAO,GAAG,OAAO,GAAG,EAAE,EAAE;AAAA;AAAA,IAE9D,EAAE,MAAM,OAAO,OAAO,SAAS;AAAA,IAC/B,EAAE,MAAM,cAAc,OAAO,UAAU;AAAA;AAAA,IAEvC,EAAE,MAAM,QAAQ,OAAO,WAAW;AAAA,IAClC,EAAE,MAAM,eAAe,OAAO,YAAY;AAAA;AAAA,IAE1C,EAAE,MAAM,UAAU,OAAO,OAAO,MAAM,SAAS;AAAA;AAAA,IAE/C,EAAE,MAAM,cAAc,OAAO,qBAAqB;AAAA,IAClD,EAAE,MAAM,OAAO,OAAO,EAAE,GAAG,KAAK,GAAG,oBAAoB,GAAG,KAAK,GAAG,EAAE,EAAE;AAAA;AAAA,IAEtE,EAAE,MAAM,cAAc,OAAO,sBAAsB;AAAA,IACnD,EAAE,MAAM,OAAO,OAAO,EAAE,GAAG,KAAK,GAAG,MAAM,GAAG,GAAG,GAAG,EAAE,EAAE;AAAA,EAC1D;AACA,eAAa,IAAI,CAAC,WAAW;AACzB,OAAG,iCAAiC,OAAO,IAAI,IAAI,YAAY;AAC3D,YAAM,KAAK,MAAM,QAAoB;AAAA;AAAA,aAEpC;AAED,UAAI,OAAO,OAAO,UAAU,UAAU;AAClC,WAAG,QAAQ,OAAO;AAAA,MACtB,OAAO;AACH,WAAG,QAAQ,EAAE,GAAG,OAAO,MAAM;AAAA,MACjC;AACA,UAAI,OAAO,KAAK,WAAW,KAAK,GAAG;AAC/B,eAAO,GAAG,KAAK,EAAE,GAAG,MAAM,OAAO,KAAK;AAAA,MAC1C,WAAW,OAAO,SAAS,UAAU;AACjC,eAAO,GAAG,KAAK,EAAE,GAAG,MAAM,OAAO,IAAI;AAAA,MACzC,MAAO,QAAO,GAAG,KAAK,EAAE,GAAG,KAAK,MAAM,OAAO,KAAK;AAAA,IACtD,CAAC;AAAA,EACL,CAAC;AACD,KAAG,uBAAuB,YAAY;AAClC,UAAM,KAAK,MAAM,QAAoB;AAAA;AAAA,SAEpC;AACD,UAAM,MAAM;AACZ,UAAM,MAAM,OAAO,GAAG;AAEtB,OAAG,QAAQ;AACX,UAAM,eAAe,EAAE;AAEvB,WAAO,GAAG,KAAK,EAAE,GAAG,MAAM,GAAG;AAC7B,WAAO,GAAG,KAAK,EAAE,GAAG,MAAM,GAAG;AAE7B,UAAM,OAAO,QAAQ,GAAG;AACxB,OAAG,QAAQ;AACX,WAAO,GAAG,KAAK,EAAE,GAAG,MAAM,GAAG;AAC7B,WAAO,GAAG,KAAK,EAAE,GAAG,MAAM,IAAI;AAE9B,UAAM,MAAM,OAAO,GAAG;AACtB,OAAG,QAAQ;AACX,WAAO,GAAG,KAAK,EAAE,GAAG,MAAM,GAAG;AAC7B,WAAO,GAAG,KAAK,EAAE,GAAG,MAAM,GAAG;AAE7B,UAAM,OAAO,QAAQ,GAAG;AACxB,OAAG,QAAQ;AACX,WAAO,GAAG,KAAK,EAAE,GAAG,MAAM,GAAG;AAC7B,WAAO,GAAG,KAAK,EAAE,GAAG,MAAM,IAAI;AAAA,EAClC,CAAC;AACD,KAAG,0CAA0C,YAAY;AACrD,UAAM,KAAK,MAAM,QAAoB;AAAA;AAAA,SAEpC;AAED,UAAM,eAAe,EAAE;AAEvB,UAAM,OAAO,GAAG,aAAa,GAAG,aAAa;AAC7C;AAAA,MACI,iBAAiB,KAAK,cAAc,QAAQ,CAAgB,EACvD;AAAA,IACT,EAAE,GAAG,MAAM,MAAM;AAEjB,OAAG,aAAa,OAAO,KAAK;AAE5B,UAAM,eAAe,EAAE;AACvB;AAAA,MACI,iBAAiB,KAAK,cAAc,QAAQ,CAAgB,EACvD;AAAA,IACT,EAAE,GAAG,MAAM,2BAA2B;AAAA,EAC1C,CAAC;AACL,CAAC;",
  "names": []
}
