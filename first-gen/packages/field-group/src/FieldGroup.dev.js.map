{
  "version": 3,
  "sources": ["FieldGroup.ts"],
  "sourcesContent": ["/**\n * Copyright 2025 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {\n    CSSResultArray,\n    html,\n    PropertyValues,\n    SpectrumElement,\n    TemplateResult,\n} from '@spectrum-web-components/base';\nimport { property } from '@spectrum-web-components/base/src/decorators.js';\nimport { ManageHelpText } from '@spectrum-web-components/help-text/src/manage-help-text.js';\n\nimport styles from './field-group.css.js';\n\n/**\n * @element sp-field-group\n * @slot - the form controls that make up the group\n * @slot help-text - default or non-negative help text to associate to your form element\n * @slot negative-help-text - negative help text to associate to your form element when `invalid`\n */\nexport class FieldGroup extends ManageHelpText(SpectrumElement, {\n    mode: 'external',\n}) {\n    public static override get styles(): CSSResultArray {\n        return [styles];\n    }\n\n    @property({ type: Boolean, reflect: true })\n    public horizontal = false;\n\n    @property({ type: Boolean, reflect: true })\n    public invalid = false;\n\n    @property()\n    public label = '';\n\n    @property({ type: Boolean, reflect: true })\n    public vertical = false;\n\n    protected handleSlotchange(): void {\n        // Surface this functionality for easy composition in extensions.\n        return;\n    }\n\n    protected override render(): TemplateResult {\n        return html`\n            <div class=\"group\" role=\"presentation\">\n                <slot @slotchange=${this.handleSlotchange}></slot>\n            </div>\n            ${this.renderHelpText(this.invalid)}\n        `;\n    }\n\n    protected override firstUpdated(changes: PropertyValues): void {\n        super.firstUpdated(changes);\n        if (!this.hasAttribute('role')) {\n            this.setAttribute('role', 'group');\n        }\n    }\n\n    protected override updated(changes: PropertyValues<this>): void {\n        super.updated(changes);\n        if (changes.has('label')) {\n            if (this.label) {\n                this.setAttribute('aria-label', this.label);\n            } else {\n                this.removeAttribute('aria-label');\n            }\n        }\n    }\n}\n"],
  "mappings": ";;;;;;;;;;;AAYA;AAAA,EAEI;AAAA,EAEA;AAAA,OAEG;AACP,SAAS,gBAAgB;AACzB,SAAS,sBAAsB;AAE/B,OAAO,YAAY;AAQZ,aAAM,mBAAmB,eAAe,iBAAiB;AAAA,EAC5D,MAAM;AACV,CAAC,EAAE;AAAA,EAFI;AAAA;AAQH,SAAO,aAAa;AAGpB,SAAO,UAAU;AAGjB,SAAO,QAAQ;AAGf,SAAO,WAAW;AAAA;AAAA,EAdlB,WAA2B,SAAyB;AAChD,WAAO,CAAC,MAAM;AAAA,EAClB;AAAA,EAcU,mBAAyB;AAE/B;AAAA,EACJ;AAAA,EAEmB,SAAyB;AACxC,WAAO;AAAA;AAAA,oCAEqB,KAAK,gBAAgB;AAAA;AAAA,cAE3C,KAAK,eAAe,KAAK,OAAO,CAAC;AAAA;AAAA,EAE3C;AAAA,EAEmB,aAAa,SAA+B;AAC3D,UAAM,aAAa,OAAO;AAC1B,QAAI,CAAC,KAAK,aAAa,MAAM,GAAG;AAC5B,WAAK,aAAa,QAAQ,OAAO;AAAA,IACrC;AAAA,EACJ;AAAA,EAEmB,QAAQ,SAAqC;AAC5D,UAAM,QAAQ,OAAO;AACrB,QAAI,QAAQ,IAAI,OAAO,GAAG;AACtB,UAAI,KAAK,OAAO;AACZ,aAAK,aAAa,cAAc,KAAK,KAAK;AAAA,MAC9C,OAAO;AACH,aAAK,gBAAgB,YAAY;AAAA,MACrC;AAAA,IACJ;AAAA,EACJ;AACJ;AA1CW;AAAA,EADN,SAAS,EAAE,MAAM,SAAS,SAAS,KAAK,CAAC;AAAA,GAPjC,WAQF;AAGA;AAAA,EADN,SAAS,EAAE,MAAM,SAAS,SAAS,KAAK,CAAC;AAAA,GAVjC,WAWF;AAGA;AAAA,EADN,SAAS;AAAA,GAbD,WAcF;AAGA;AAAA,EADN,SAAS,EAAE,MAAM,SAAS,SAAS,KAAK,CAAC;AAAA,GAhBjC,WAiBF;",
  "names": []
}
