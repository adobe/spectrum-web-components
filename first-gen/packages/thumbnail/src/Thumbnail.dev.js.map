{
  "version": 3,
  "sources": ["Thumbnail.ts"],
  "sourcesContent": ["/**\n * Copyright 2025 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {\n    CSSResultArray,\n    html,\n    PropertyValues,\n    SpectrumElement,\n    TemplateResult,\n} from '@spectrum-web-components/base';\nimport { property } from '@spectrum-web-components/base/src/decorators.js';\nimport opacityCheckerboardStyles from '@spectrum-web-components/opacity-checkerboard/src/opacity-checkerboard.css.js';\n\nimport styles from './thumbnail.css.js';\n\nconst validSizes = [\n    '50',\n    '75',\n    '100',\n    '200',\n    '300',\n    '400',\n    '500',\n    '600',\n    '700',\n    '800',\n    '900',\n    '1000',\n];\nexport type ThumbnailSize = (typeof validSizes)[number];\n\nconst defaultSize = validSizes[6];\n\n/**\n * @element sp-thumbnail\n *\n * @slot image - image element to present in the Thumbnail\n */\n\nexport class Thumbnail extends SpectrumElement {\n    public static override get styles(): CSSResultArray {\n        return [opacityCheckerboardStyles, styles];\n    }\n\n    @property({ type: String, reflect: true })\n    public background?: string;\n\n    @property({ type: Boolean, reflect: true })\n    public cover = false;\n\n    @property({ type: Boolean, reflect: true })\n    public layer = false;\n\n    @property({ type: String, reflect: true })\n    public get size(): ThumbnailSize {\n        return this._size;\n    }\n\n    public set size(value: ThumbnailSize) {\n        const size = (\n            validSizes.includes(value) ? value : defaultSize\n        ) as ThumbnailSize;\n        if (size) {\n            this.setAttribute('size', `${size}`);\n        }\n        if (this._size === size) {\n            return;\n        }\n        const oldSize = this._size;\n        this._size = size;\n        this.requestUpdate('size', oldSize);\n    }\n\n    private _size = defaultSize;\n\n    protected override update(changes: PropertyValues): void {\n        if (!this.hasAttribute('size')) {\n            this.setAttribute('size', this.size);\n        }\n        super.update(changes);\n    }\n\n    protected override render(): TemplateResult {\n        if (this.background) {\n            return html`\n                <div\n                    class=\"opacity-checkerboard background\"\n                    style=\"background: ${this.background}\"\n                >\n                    <div class=\"image-wrapper\">\n                        <slot></slot>\n                    </div>\n                </div>\n            `;\n        } else if (this.layer) {\n            return html`\n                <div class=\"opacity-checkerboard layer-inner\">\n                    <slot></slot>\n                </div>\n            `;\n        } else {\n            return html`\n                <div class=\"opacity-checkerboard image-wrapper\">\n                    <slot></slot>\n                </div>\n            `;\n        }\n    }\n}\n"],
  "mappings": ";;;;;;;;;;;AAYA;AAAA,EAEI;AAAA,EAEA;AAAA,OAEG;AACP,SAAS,gBAAgB;AACzB,OAAO,+BAA+B;AAEtC,OAAO,YAAY;AAEnB,MAAM,aAAa;AAAA,EACf;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AACJ;AAGA,MAAM,cAAc,WAAW,CAAC;AAQzB,aAAM,kBAAkB,gBAAgB;AAAA,EAAxC;AAAA;AASH,SAAO,QAAQ;AAGf,SAAO,QAAQ;AAsBf,SAAQ,QAAQ;AAAA;AAAA,EAjChB,WAA2B,SAAyB;AAChD,WAAO,CAAC,2BAA2B,MAAM;AAAA,EAC7C;AAAA,EAYA,IAAW,OAAsB;AAC7B,WAAO,KAAK;AAAA,EAChB;AAAA,EAEA,IAAW,KAAK,OAAsB;AAClC,UAAM,OACF,WAAW,SAAS,KAAK,IAAI,QAAQ;AAEzC,QAAI,MAAM;AACN,WAAK,aAAa,QAAQ,GAAG,IAAI,EAAE;AAAA,IACvC;AACA,QAAI,KAAK,UAAU,MAAM;AACrB;AAAA,IACJ;AACA,UAAM,UAAU,KAAK;AACrB,SAAK,QAAQ;AACb,SAAK,cAAc,QAAQ,OAAO;AAAA,EACtC;AAAA,EAImB,OAAO,SAA+B;AACrD,QAAI,CAAC,KAAK,aAAa,MAAM,GAAG;AAC5B,WAAK,aAAa,QAAQ,KAAK,IAAI;AAAA,IACvC;AACA,UAAM,OAAO,OAAO;AAAA,EACxB;AAAA,EAEmB,SAAyB;AACxC,QAAI,KAAK,YAAY;AACjB,aAAO;AAAA;AAAA;AAAA,yCAGsB,KAAK,UAAU;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAOhD,WAAW,KAAK,OAAO;AACnB,aAAO;AAAA;AAAA;AAAA;AAAA;AAAA,IAKX,OAAO;AACH,aAAO;AAAA;AAAA;AAAA;AAAA;AAAA,IAKX;AAAA,EACJ;AACJ;AA/DW;AAAA,EADN,SAAS,EAAE,MAAM,QAAQ,SAAS,KAAK,CAAC;AAAA,GALhC,UAMF;AAGA;AAAA,EADN,SAAS,EAAE,MAAM,SAAS,SAAS,KAAK,CAAC;AAAA,GARjC,UASF;AAGA;AAAA,EADN,SAAS,EAAE,MAAM,SAAS,SAAS,KAAK,CAAC;AAAA,GAXjC,UAYF;AAGI;AAAA,EADV,SAAS,EAAE,MAAM,QAAQ,SAAS,KAAK,CAAC;AAAA,GAdhC,UAeE;",
  "names": []
}
