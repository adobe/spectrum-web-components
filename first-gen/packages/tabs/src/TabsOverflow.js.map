{
  "version": 3,
  "sources": ["TabsOverflow.ts"],
  "sourcesContent": ["/**\n * Copyright 2025 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\nimport {\n    CSSResultArray,\n    html,\n    PropertyValueMap,\n    PropertyValues,\n    SizedMixin,\n    SpectrumElement,\n    TemplateResult,\n} from '@spectrum-web-components/base';\nimport {\n    property,\n    query,\n    queryAssignedElements,\n    state,\n} from '@spectrum-web-components/base/src/decorators.js';\nimport { classMap } from '@spectrum-web-components/base/src/directives.js';\nimport { ResizeController } from '@lit-labs/observers/resize-controller.js';\nimport { Tabs } from './Tabs.js';\nimport '@spectrum-web-components/action-button/sp-action-button.js';\nimport '@spectrum-web-components/icons-ui/icons/sp-icon-chevron100.js';\nimport chevronIconStyles from '@spectrum-web-components/icon/src/spectrum-icon-chevron.css.js';\nimport tabSizes from './tabs-sizes.css.js';\nimport styles from './tabs-overflow.css.js';\n\ninterface TabsOverflowState {\n    canScrollLeft: boolean;\n    canScrollRight: boolean;\n}\n/**\n * @element sp-tabs-overflow\n */\nexport class TabsOverflow extends SizedMixin(SpectrumElement) {\n    public static override get styles(): CSSResultArray {\n        return [styles, tabSizes, chevronIconStyles];\n    }\n\n    @property({ type: Boolean, reflect: true })\n    public compact = false;\n\n    @property({ type: String, attribute: 'label-previous' })\n    public labelPrevious = 'Scroll to previous tabs';\n\n    @property({ type: String, attribute: 'label-next' })\n    public labelNext = 'Scroll to next tabs';\n\n    @property({ reflect: true })\n    public override dir!: 'ltr' | 'rtl';\n\n    @state()\n    private overflowState: TabsOverflowState = {\n        canScrollLeft: false,\n        canScrollRight: false,\n    };\n\n    @queryAssignedElements({ selector: 'sp-tabs', flatten: true })\n    private tabs!: Tabs[];\n\n    @query('.tabs-overflow-container')\n    private overflowContainer!: HTMLDivElement;\n\n    resizeController!: ResizeController;\n\n    protected get scrollContent(): Tabs[] {\n        return this.tabs;\n    }\n\n    public constructor() {\n        super();\n        this.resizeController = new ResizeController(this, {\n            target: this,\n            callback: (): void => {\n                this._updateScrollState();\n            },\n        });\n    }\n\n    protected override firstUpdated(changes: PropertyValues): void {\n        super.firstUpdated(changes);\n        // enable scroll event\n        const [tabs] = this.scrollContent;\n        if (tabs) {\n            tabs.enableTabsScroll = true;\n        }\n        this.resizeController.observe(this.overflowContainer);\n    }\n\n    private async _handleSlotChange(): Promise<void> {\n        const [tabsElement] = this.scrollContent;\n        await tabsElement?.updateComplete;\n        this._updateScrollState();\n    }\n\n    private _updateScrollState(): void {\n        const { scrollContent, overflowState } = this;\n\n        if (scrollContent) {\n            const [tabsElement] = this.scrollContent;\n            const { canScrollLeft, canScrollRight } =\n                tabsElement?.scrollState || {\n                    canScrollLeft: false,\n                    canScrollRight: false,\n                };\n\n            this.overflowState = {\n                ...overflowState,\n                canScrollLeft,\n                canScrollRight,\n            };\n        }\n    }\n\n    private scrollFactor = 0.5;\n    private _handleScrollClick(event: MouseEvent): void {\n        const currentTarget = event.currentTarget as HTMLElement;\n        const [tabsElement] = this.scrollContent;\n\n        const dist = tabsElement.clientWidth * this.scrollFactor;\n        const left = currentTarget.classList.contains('left-scroll')\n            ? -dist\n            : dist;\n        tabsElement.scrollTabs(left, 'smooth');\n    }\n\n    protected override updated(\n        changedProperties: PropertyValueMap<this>\n    ): void {\n        super.updated(changedProperties);\n        if (changedProperties.has('dir')) {\n            this._updateScrollState();\n        }\n    }\n\n    protected override render(): TemplateResult {\n        const { canScrollRight, canScrollLeft } = this.overflowState;\n        const ariaLabelPrevious = this.labelPrevious;\n        const ariaLabelNext = this.labelNext;\n        return html`\n            <div\n                class=${classMap({\n                    'tabs-overflow-container': true,\n                    'left-shadow': canScrollLeft,\n                    'right-shadow': canScrollRight,\n                })}\n            >\n                <sp-action-button\n                    class=${classMap({\n                        'left-scroll': true,\n                        show: canScrollLeft,\n                    })}\n                    aria-label=${ariaLabelPrevious}\n                    quiet\n                    dir=\"rtl\"\n                    tabindex=\"-1\"\n                    @click=${this._handleScrollClick}\n                >\n                    <sp-icon-chevron100\n                        slot=\"icon\"\n                        class=\"spectrum-UIIcon-ChevronLeft300\"\n                    ></sp-icon-chevron100>\n                </sp-action-button>\n                <sp-action-button\n                    class=${classMap({\n                        'right-scroll': true,\n                        show: canScrollRight,\n                    })}\n                    aria-label=${ariaLabelNext}\n                    quiet\n                    tabindex=\"-1\"\n                    @click=${this._handleScrollClick}\n                >\n                    <sp-icon-chevron100\n                        slot=\"icon\"\n                        class=\"spectrum-UIIcon-ChevronRight300\"\n                    ></sp-icon-chevron100>\n                </sp-action-button>\n                <slot\n                    @slotchange=${this._handleSlotChange}\n                    @sp-tabs-scroll=${this._updateScrollState}\n                ></slot>\n            </div>\n        `;\n    }\n}\n"],
  "mappings": "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",
  "names": ["html", "SizedMixin", "SpectrumElement", "property", "query", "queryAssignedElements", "state", "classMap", "ResizeController", "chevronIconStyles", "tabSizes", "styles", "changes", "tabs", "tabsElement", "scrollContent", "overflowState", "canScrollLeft", "canScrollRight", "event", "currentTarget", "dist", "left", "changedProperties", "ariaLabelPrevious", "ariaLabelNext", "__decorateClass"]
}
