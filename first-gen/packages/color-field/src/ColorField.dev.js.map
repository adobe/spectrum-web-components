{
  "version": 3,
  "sources": ["ColorField.ts"],
  "sourcesContent": ["/**\n * Copyright 2025 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\nimport {\n    CSSResultArray,\n    html,\n    TemplateResult,\n} from '@spectrum-web-components/base';\n\nimport { property } from '@spectrum-web-components/base/src/decorators.js';\nimport { ColorController } from '@spectrum-web-components/reactive-controllers/src/ColorController.js';\nimport { TextfieldBase } from '@spectrum-web-components/textfield';\nimport styles from './color-field.css.js';\n/**\n * @element sp-color-field\n * @fires input - The value of the color-field has changed.\n * @fires change - An alteration to the value of the color-field has been committed by the user.\n */\nexport class ColorField extends TextfieldBase {\n    public static override get styles(): CSSResultArray {\n        return [...super.styles, styles];\n    }\n\n    @property({ type: Boolean, attribute: 'view-color' })\n    public viewColor = false;\n\n    private colorController: ColorController;\n    constructor() {\n        super();\n        this.colorController = new ColorController(this);\n    }\n\n    public override set value(value: string) {\n        if (value === this.value) {\n            return;\n        }\n        const oldValue = this._value;\n        this._value = value;\n        this.requestUpdate('value', oldValue);\n    }\n\n    public override get value(): string {\n        return this._value;\n    }\n\n    protected override _value = '';\n\n    private renderColorHandle(): TemplateResult {\n        return this.viewColor && this.valid\n            ? html`\n                  <sp-color-handle\n                      size=\"m\"\n                      color=\"${this.colorController\n                          .getColor('srgb')\n                          .toString()}\"\n                  ></sp-color-handle>\n              `\n            : html``;\n    }\n\n    public getColorValue(): string {\n        if (!this.valid) {\n            return '';\n        }\n        return this.colorController.getColor('srgb').toString();\n    }\n\n    protected override render(): TemplateResult {\n        if (this.viewColor) {\n            import('@spectrum-web-components/color-handle/sp-color-handle.js');\n        }\n        return html`\n            ${super.render()} ${this.renderColorHandle()}\n        `;\n    }\n\n    public override checkValidity(): boolean {\n        let validity = super.checkValidity();\n        if (this.value) {\n            this.valid = validity = this.colorController.validateColorString(\n                this.value\n            ).isValid;\n            this.invalid = !validity;\n            if (this.valid) {\n                this.colorController.color = this.value;\n            }\n        } else {\n            this.valid = this.invalid = false;\n        }\n\n        return validity;\n    }\n}\n"],
  "mappings": ";;;;;;;;;;;AAWA;AAAA,EAEI;AAAA,OAEG;AAEP,SAAS,gBAAgB;AACzB,SAAS,uBAAuB;AAChC,SAAS,qBAAqB;AAC9B,OAAO,YAAY;AAMZ,aAAM,mBAAmB,cAAc;AAAA,EAS1C,cAAc;AACV,UAAM;AAJV,SAAO,YAAY;AAqBnB,SAAmB,SAAS;AAhBxB,SAAK,kBAAkB,IAAI,gBAAgB,IAAI;AAAA,EACnD;AAAA,EAXA,WAA2B,SAAyB;AAChD,WAAO,CAAC,GAAG,MAAM,QAAQ,MAAM;AAAA,EACnC;AAAA,EAWA,IAAoB,MAAM,OAAe;AACrC,QAAI,UAAU,KAAK,OAAO;AACtB;AAAA,IACJ;AACA,UAAM,WAAW,KAAK;AACtB,SAAK,SAAS;AACd,SAAK,cAAc,SAAS,QAAQ;AAAA,EACxC;AAAA,EAEA,IAAoB,QAAgB;AAChC,WAAO,KAAK;AAAA,EAChB;AAAA,EAIQ,oBAAoC;AACxC,WAAO,KAAK,aAAa,KAAK,QACxB;AAAA;AAAA;AAAA,+BAGiB,KAAK,gBACT,SAAS,MAAM,EACf,SAAS,CAAC;AAAA;AAAA,kBAGvB;AAAA,EACV;AAAA,EAEO,gBAAwB;AAC3B,QAAI,CAAC,KAAK,OAAO;AACb,aAAO;AAAA,IACX;AACA,WAAO,KAAK,gBAAgB,SAAS,MAAM,EAAE,SAAS;AAAA,EAC1D;AAAA,EAEmB,SAAyB;AACxC,QAAI,KAAK,WAAW;AAChB,aAAO,0DAA0D;AAAA,IACrE;AACA,WAAO;AAAA,cACD,MAAM,OAAO,CAAC,IAAI,KAAK,kBAAkB,CAAC;AAAA;AAAA,EAEpD;AAAA,EAEgB,gBAAyB;AACrC,QAAI,WAAW,MAAM,cAAc;AACnC,QAAI,KAAK,OAAO;AACZ,WAAK,QAAQ,WAAW,KAAK,gBAAgB;AAAA,QACzC,KAAK;AAAA,MACT,EAAE;AACF,WAAK,UAAU,CAAC;AAChB,UAAI,KAAK,OAAO;AACZ,aAAK,gBAAgB,QAAQ,KAAK;AAAA,MACtC;AAAA,IACJ,OAAO;AACH,WAAK,QAAQ,KAAK,UAAU;AAAA,IAChC;AAEA,WAAO;AAAA,EACX;AACJ;AApEW;AAAA,EADN,SAAS,EAAE,MAAM,SAAS,WAAW,aAAa,CAAC;AAAA,GAL3C,WAMF;",
  "names": []
}
