{
  "version": 3,
  "sources": ["color-field.stories.ts"],
  "sourcesContent": ["/**\n * Copyright 2025 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\nimport { html, TemplateResult } from '@spectrum-web-components/base';\nimport '@spectrum-web-components/color-field/sp-color-field.js';\nimport { ColorFieldMarkup } from './template.js';\nimport { argTypes } from './args.js';\nimport { DEFAULT_COLOR, DEMO_COLORS } from './colors.js';\n\nexport default {\n    component: 'sp-color-field',\n    title: 'Color Field',\n    args: {\n        label: '',\n        size: 'm',\n    },\n    argTypes,\n};\n\ntype Properties = {\n    quiet?: boolean;\n    readonly?: boolean;\n    disabled?: boolean;\n    viewColor?: boolean;\n    value?: string;\n    label?: string;\n    size?: 's' | 'm' | 'l' | 'xl';\n};\n\nexport const Default = (args?: Properties): TemplateResult =>\n    ColorFieldMarkup(args);\n\nexport const Quiet = (args?: Properties): TemplateResult =>\n    ColorFieldMarkup(args);\nQuiet.args = {\n    quiet: true,\n};\n\nexport const ReadOnly = (args?: Properties): TemplateResult =>\n    ColorFieldMarkup(args);\nReadOnly.args = {\n    readonly: true,\n    value: 'rgb(255,255,255)',\n};\n\nexport const Disabled = (args?: Properties): TemplateResult =>\n    ColorFieldMarkup(args);\nDisabled.args = {\n    disabled: true,\n};\nexport const viewColor = (args?: Properties): TemplateResult =>\n    ColorFieldMarkup(args);\nviewColor.args = {\n    viewColor: true,\n    value: 'rgb(255,255,0)',\n};\nexport const Multiple = (args?: Properties): TemplateResult => {\n    return html`\n        <div\n            style=\"width: 20%; padding: 20px; margin: 10px; display: flex; flex-direction: column; gap: 16px; height: 200px; overflow-y: auto;\"\n        >\n            ${DEMO_COLORS.map((color, index) =>\n                ColorFieldMarkup({\n                    ...args,\n                    label: `Color ${index + 1}`,\n                    value: color,\n                    viewColor: true,\n                })\n            )}\n        </div>\n    `;\n};\n\nMultiple.args = {\n    viewColor: true,\n    value: DEFAULT_COLOR,\n};\n\nexport const WrongInput = (args?: Properties): TemplateResult =>\n    ColorFieldMarkup(args);\n\nWrongInput.args = {\n    value: 'apple',\n};\nexport const RightInput = (args?: Properties): TemplateResult =>\n    ColorFieldMarkup(args);\nRightInput.args = {\n    value: '#a8323a',\n};\n"],
  "mappings": ";AAWA,SAAS,YAA4B;AACrC,OAAO;AACP,SAAS,wBAAwB;AACjC,SAAS,gBAAgB;AACzB,SAAS,eAAe,mBAAmB;AAE3C,eAAe;AAAA,EACX,WAAW;AAAA,EACX,OAAO;AAAA,EACP,MAAM;AAAA,IACF,OAAO;AAAA,IACP,MAAM;AAAA,EACV;AAAA,EACA;AACJ;AAYO,aAAM,UAAU,CAAC,SACpB,iBAAiB,IAAI;AAElB,aAAM,QAAQ,CAAC,SAClB,iBAAiB,IAAI;AACzB,MAAM,OAAO;AAAA,EACT,OAAO;AACX;AAEO,aAAM,WAAW,CAAC,SACrB,iBAAiB,IAAI;AACzB,SAAS,OAAO;AAAA,EACZ,UAAU;AAAA,EACV,OAAO;AACX;AAEO,aAAM,WAAW,CAAC,SACrB,iBAAiB,IAAI;AACzB,SAAS,OAAO;AAAA,EACZ,UAAU;AACd;AACO,aAAM,YAAY,CAAC,SACtB,iBAAiB,IAAI;AACzB,UAAU,OAAO;AAAA,EACb,WAAW;AAAA,EACX,OAAO;AACX;AACO,aAAM,WAAW,CAAC,SAAsC;AAC3D,SAAO;AAAA;AAAA;AAAA;AAAA,cAIG,YAAY;AAAA,IAAI,CAAC,OAAO,UACtB,iBAAiB;AAAA,MACb,GAAG;AAAA,MACH,OAAO,SAAS,QAAQ,CAAC;AAAA,MACzB,OAAO;AAAA,MACP,WAAW;AAAA,IACf,CAAC;AAAA,EACL,CAAC;AAAA;AAAA;AAGb;AAEA,SAAS,OAAO;AAAA,EACZ,WAAW;AAAA,EACX,OAAO;AACX;AAEO,aAAM,aAAa,CAAC,SACvB,iBAAiB,IAAI;AAEzB,WAAW,OAAO;AAAA,EACd,OAAO;AACX;AACO,aAAM,aAAa,CAAC,SACvB,iBAAiB,IAAI;AACzB,WAAW,OAAO;AAAA,EACd,OAAO;AACX;",
  "names": []
}
