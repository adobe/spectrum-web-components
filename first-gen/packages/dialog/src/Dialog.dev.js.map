{
  "version": 3,
  "sources": ["Dialog.ts"],
  "sourcesContent": ["/**\n * Copyright 2025 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {\n    CSSResultArray,\n    html,\n    nothing,\n    PropertyValues,\n    TemplateResult,\n} from '@spectrum-web-components/base';\nimport {\n    property,\n    query,\n} from '@spectrum-web-components/base/src/decorators.js';\n\nimport '@spectrum-web-components/button-group/sp-button-group.js';\nimport '@spectrum-web-components/button/sp-close-button.js';\nimport '@spectrum-web-components/divider/sp-divider.js';\nimport '@spectrum-web-components/icons-workflow/icons/sp-icon-alert.js';\nimport { ObserveSlotPresence } from '@spectrum-web-components/shared';\n\nimport { AlertDialog } from '@spectrum-web-components/alert-dialog/src/AlertDialog.js';\nimport { classMap } from '@spectrum-web-components/base/src/directives.js';\nimport type { CloseButton } from '@spectrum-web-components/button';\nimport styles from './dialog.css.js';\n\n/**\n * @element sp-dialog\n *\n * @slot hero - Accepts a hero image to display at the top of the dialog\n * @slot heading - Acts as the heading of the dialog. This should be an actual heading tag `<h1-6 />`\n * @slot - Content not addressed to a specific slot will be interpreted as the main content of the dialog\n * @slot footer - Content addressed to the `footer` will be placed below the main content and to the side of any `[slot='button']` content\n * @slot button - Button elements addressed to this slot may be placed below the content when not delivered in a fullscreen mode\n * @fires close - Announces that the dialog has been closed.\n */\nexport class Dialog extends ObserveSlotPresence(AlertDialog, [\n    '[slot=\"hero\"]',\n    '[slot=\"footer\"]',\n    '[slot=\"button\"]',\n]) {\n    public static override get styles(): CSSResultArray {\n        return [styles];\n    }\n\n    @query('.close-button')\n    closeButton?: CloseButton;\n\n    @property({ type: Boolean, reflect: true })\n    public error = false;\n\n    @property({ type: Boolean, reflect: true })\n    public dismissable = false;\n\n    @property({ type: String, reflect: true, attribute: 'dismiss-label' })\n    public dismissLabel = 'Close';\n\n    protected get hasFooter(): boolean {\n        return this.getSlotContentPresence('[slot=\"footer\"]');\n    }\n\n    protected get hasButtons(): boolean {\n        return this.getSlotContentPresence('[slot=\"button\"]');\n    }\n\n    /* c8 ignore next 3 */\n    protected get hasHero(): boolean {\n        return this.getSlotContentPresence('[slot=\"hero\"]');\n    }\n\n    @property({ type: Boolean, reflect: true, attribute: 'no-divider' })\n    public noDivider = false;\n\n    @property({ type: String, reflect: true })\n    public mode?: 'fullscreen' | 'fullscreenTakeover';\n\n    @property({ type: String, reflect: true })\n    public size?: 's' | 'm' | 'l';\n\n    public close(): void {\n        this.dispatchEvent(\n            new Event('close', {\n                bubbles: true,\n                composed: true,\n                cancelable: true,\n            })\n        );\n    }\n\n    protected renderHero(): TemplateResult {\n        return html`\n            <slot name=\"hero\"></slot>\n        `;\n    }\n\n    protected renderFooter(): TemplateResult {\n        return html`\n            <div class=\"footer\">\n                <slot name=\"footer\"></slot>\n            </div>\n        `;\n    }\n\n    protected override renderButtons(): TemplateResult {\n        const classes = {\n            'button-group': true,\n            'button-group--noFooter': !this.hasFooter,\n        };\n        return html`\n            <sp-button-group class=${classMap(classes)}>\n                <slot name=\"button\"></slot>\n            </sp-button-group>\n        `;\n    }\n\n    protected renderDismiss(): TemplateResult {\n        return html`\n            <sp-close-button\n                class=\"close-button\"\n                label=${this.dismissLabel}\n                quiet\n                size=\"m\"\n                @click=${this.close}\n            ></sp-close-button>\n        `;\n    }\n\n    protected override render(): TemplateResult {\n        return html`\n            <div class=\"grid\">\n                ${this.renderHero()} ${this.renderHeading()}\n                ${this.error\n                    ? html`\n                          <sp-icon-alert class=\"type-icon\"></sp-icon-alert>\n                      `\n                    : nothing}\n                ${this.noDivider\n                    ? nothing\n                    : html`\n                          <sp-divider size=\"m\" class=\"divider\"></sp-divider>\n                      `}\n                ${this.renderContent()}\n                ${this.hasFooter ? this.renderFooter() : nothing}\n                ${this.hasButtons ? this.renderButtons() : nothing}\n                ${this.dismissable ? this.renderDismiss() : nothing}\n            </div>\n        `;\n    }\n\n    protected override shouldUpdate(changes: PropertyValues): boolean {\n        if (changes.has('mode') && !!this.mode) {\n            this.dismissable = false;\n        }\n        if (changes.has('dismissable') && this.dismissable) {\n            this.dismissable = !this.mode;\n        }\n        return super.shouldUpdate(changes);\n    }\n\n    protected override firstUpdated(changes: PropertyValues): void {\n        super.firstUpdated(changes);\n        this.setAttribute('role', 'dialog');\n    }\n\n    protected override updated(changes: PropertyValues): void {\n        super.updated(changes);\n    }\n}\n"],
  "mappings": "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",
  "names": []
}
