{
  "version": 3,
  "sources": ["AccordionItem.ts"],
  "sourcesContent": ["/**\n * Copyright 2025 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {\n    CSSResultArray,\n    html,\n    PropertyValues,\n    SizedMixin,\n    TemplateResult,\n} from '@spectrum-web-components/base';\nimport { property } from '@spectrum-web-components/base/src/decorators.js';\nimport { Focusable } from '@spectrum-web-components/shared/src/focusable.js';\nimport { when } from '@spectrum-web-components/base/src/directives.js';\nimport '@spectrum-web-components/icons-ui/icons/sp-icon-chevron100.js';\nimport chevronIconStyles from '@spectrum-web-components/icon/src/spectrum-icon-chevron.css.js';\n\nimport styles from './accordion-item.css.js';\n\nconst chevronIcon: Record<string, () => TemplateResult> = {\n    s: () => html`\n        <span class=\"iconContainer\">\n            <sp-icon-chevron100\n                class=\"indicator spectrum-UIIcon-ChevronRight75\"\n                slot=\"icon\"\n            ></sp-icon-chevron100>\n        </span>\n    `,\n    m: () => html`\n        <span class=\"iconContainer\">\n            <sp-icon-chevron100\n                class=\"indicator spectrum-UIIcon-ChevronRight100\"\n                slot=\"icon\"\n            ></sp-icon-chevron100>\n        </span>\n    `,\n    l: () => html`\n        <span class=\"iconContainer\">\n            <sp-icon-chevron100\n                class=\"indicator spectrum-UIIcon-ChevronRight200\"\n                slot=\"icon\"\n            ></sp-icon-chevron100>\n        </span>\n    `,\n    xl: () => html`\n        <span class=\"iconContainer\">\n            <sp-icon-chevron100\n                class=\"indicator spectrum-UIIcon-ChevronRight300\"\n                slot=\"icon\"\n            ></sp-icon-chevron100>\n        </span>\n    `,\n};\n\n/**\n * @element sp-accordion-item\n * @slot - The content of the item that is hidden when the item is not open\n * @fires sp-accordion-item-toggle - Announce that an accordion item has been toggled while allowing the event to be cancelled.\n */\nexport class AccordionItem extends SizedMixin(Focusable, {\n    noDefaultSize: true,\n}) {\n    public static override get styles(): CSSResultArray {\n        return [styles, chevronIconStyles];\n    }\n\n    @property({ type: Boolean, reflect: true })\n    public open = false;\n\n    @property({ type: String, reflect: true })\n    public label = '';\n\n    @property({ type: Boolean, reflect: true })\n    public override disabled = false;\n\n    public override get focusElement(): HTMLElement {\n        return this.shadowRoot.querySelector('#header') as HTMLElement;\n    }\n\n    private onClick(): void {\n        /* c8 ignore next 3 */\n        if (this.disabled) {\n            return;\n        }\n        this.toggle();\n    }\n\n    private toggle(): void {\n        this.open = !this.open;\n        const applyDefault = this.dispatchEvent(\n            new CustomEvent('sp-accordion-item-toggle', {\n                bubbles: true,\n                composed: true,\n                cancelable: true,\n            })\n        );\n        if (!applyDefault) {\n            this.open = !this.open;\n        }\n    }\n\n    protected renderChevronIcon = (): TemplateResult => {\n        return chevronIcon[this.size || 'm']();\n    };\n\n    protected override render(): TemplateResult {\n        return html`\n            <h3 id=\"heading\">\n                ${when(this.size, this.renderChevronIcon)}\n                <button\n                    id=\"header\"\n                    @click=${this.onClick}\n                    aria-expanded=${this.open}\n                    aria-controls=\"content\"\n                    ?disabled=${this.disabled}\n                >\n                    ${this.label}\n                </button>\n            </h3>\n            <div id=\"content\" role=\"region\" aria-labelledby=\"header\">\n                <slot></slot>\n            </div>\n        `;\n    }\n\n    protected override updated(changes: PropertyValues): void {\n        super.updated(changes);\n        if (changes.has('disabled')) {\n            if (this.disabled) {\n                this.setAttribute('aria-disabled', 'true');\n            } else {\n                this.removeAttribute('aria-disabled');\n            }\n        }\n    }\n}\n"],
  "mappings": ";;;;;;;;;;;AAYA;AAAA,EAEI;AAAA,EAEA;AAAA,OAEG;AACP,SAAS,gBAAgB;AACzB,SAAS,iBAAiB;AAC1B,SAAS,YAAY;AACrB,OAAO;AACP,OAAO,uBAAuB;AAE9B,OAAO,YAAY;AAEnB,MAAM,cAAoD;AAAA,EACtD,GAAG,MAAM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAQT,GAAG,MAAM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAQT,GAAG,MAAM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAQT,IAAI,MAAM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQd;AAOO,aAAM,sBAAsB,WAAW,WAAW;AAAA,EACrD,eAAe;AACnB,CAAC,EAAE;AAAA,EAFI;AAAA;AAQH,SAAO,OAAO;AAGd,SAAO,QAAQ;AAGf,SAAgB,WAAW;AA4B3B,SAAU,oBAAoB,MAAsB;AAChD,aAAO,YAAY,KAAK,QAAQ,GAAG,EAAE;AAAA,IACzC;AAAA;AAAA,EAzCA,WAA2B,SAAyB;AAChD,WAAO,CAAC,QAAQ,iBAAiB;AAAA,EACrC;AAAA,EAWA,IAAoB,eAA4B;AAC5C,WAAO,KAAK,WAAW,cAAc,SAAS;AAAA,EAClD;AAAA,EAEQ,UAAgB;AAEpB,QAAI,KAAK,UAAU;AACf;AAAA,IACJ;AACA,SAAK,OAAO;AAAA,EAChB;AAAA,EAEQ,SAAe;AACnB,SAAK,OAAO,CAAC,KAAK;AAClB,UAAM,eAAe,KAAK;AAAA,MACtB,IAAI,YAAY,4BAA4B;AAAA,QACxC,SAAS;AAAA,QACT,UAAU;AAAA,QACV,YAAY;AAAA,MAChB,CAAC;AAAA,IACL;AACA,QAAI,CAAC,cAAc;AACf,WAAK,OAAO,CAAC,KAAK;AAAA,IACtB;AAAA,EACJ;AAAA,EAMmB,SAAyB;AACxC,WAAO;AAAA;AAAA,kBAEG,KAAK,KAAK,MAAM,KAAK,iBAAiB,CAAC;AAAA;AAAA;AAAA,6BAG5B,KAAK,OAAO;AAAA,oCACL,KAAK,IAAI;AAAA;AAAA,gCAEb,KAAK,QAAQ;AAAA;AAAA,sBAEvB,KAAK,KAAK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAO5B;AAAA,EAEmB,QAAQ,SAA+B;AACtD,UAAM,QAAQ,OAAO;AACrB,QAAI,QAAQ,IAAI,UAAU,GAAG;AACzB,UAAI,KAAK,UAAU;AACf,aAAK,aAAa,iBAAiB,MAAM;AAAA,MAC7C,OAAO;AACH,aAAK,gBAAgB,eAAe;AAAA,MACxC;AAAA,IACJ;AAAA,EACJ;AACJ;AApEW;AAAA,EADN,SAAS,EAAE,MAAM,SAAS,SAAS,KAAK,CAAC;AAAA,GAPjC,cAQF;AAGA;AAAA,EADN,SAAS,EAAE,MAAM,QAAQ,SAAS,KAAK,CAAC;AAAA,GAVhC,cAWF;AAGS;AAAA,EADf,SAAS,EAAE,MAAM,SAAS,SAAS,KAAK,CAAC;AAAA,GAbjC,cAcO;",
  "names": []
}
