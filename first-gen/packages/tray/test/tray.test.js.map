{
  "version": 3,
  "sources": ["tray.test.ts"],
  "sourcesContent": ["/**\n * Copyright 2025 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {\n    elementUpdated,\n    expect,\n    fixture,\n    html,\n    nextFrame,\n    oneEvent,\n} from '@open-wc/testing';\n\nimport '@spectrum-web-components/tray/sp-tray.js';\nimport { Tray } from '@spectrum-web-components/tray';\nimport '@spectrum-web-components/theme/sp-theme.js';\nimport '@spectrum-web-components/theme/src/themes.js';\nimport { testForLitDevWarnings } from '../../../test/testing-helpers.js';\n\ndescribe('Tray', () => {\n    testForLitDevWarnings(\n        async () =>\n            await fixture<Tray>(html`\n                <sp-tray></sp-tray>\n            `)\n    );\n    it('loads default tray accessibly', async () => {\n        const el = await fixture<Tray>(html`\n            <sp-tray></sp-tray>\n        `);\n\n        await elementUpdated(el);\n\n        await expect(el).to.be.accessible();\n    });\n    it('focuses focusable light DOM element', async () => {\n        const el = await fixture<Tray>(html`\n            <sp-tray open>\n                <div>\n                    <a href=\"#\">Test element</a>\n                </div>\n            </sp-tray>\n        `);\n        const anchor = el.querySelector('a');\n        await elementUpdated(el);\n\n        el.focus();\n        await elementUpdated(el);\n\n        expect(document.activeElement).to.equal(anchor);\n    });\n    it('focuses \"tray\"', async () => {\n        const el = await fixture<Tray>(html`\n            <sp-tray open>\n                <div></div>\n            </sp-tray>\n        `);\n        await elementUpdated(el);\n\n        el.focus();\n        await elementUpdated(el);\n\n        expect(document.activeElement).to.equal(el);\n        expect(el.shadowRoot.activeElement).to.equal(\n            (el as unknown as { tray: HTMLDivElement }).tray\n        );\n    });\n    it('closes', async () => {\n        const test = await fixture<HTMLElement>(html`\n            <sp-theme system=\"spectrum\" scale=\"medium\" color=\"dark\">\n                <sp-tray></sp-tray>\n            </sp-theme>\n        `);\n\n        const el = test.querySelector('sp-tray') as Tray;\n        // Ensure closed styles are set before opening so that\n        // the `transitionend` event will be met below.\n        await nextFrame();\n        await nextFrame();\n        expect(el.open).to.be.false;\n\n        el.open = true;\n        await elementUpdated(el);\n\n        expect(el.open).to.be.true;\n        const closed = oneEvent(el, 'close');\n        const overlay = el.shadowRoot.querySelector(\n            'sp-underlay'\n        ) as HTMLElement;\n        overlay.click();\n        await closed;\n\n        expect(el.open).to.be.false;\n    });\n});\n"],
  "mappings": ";AAYA;AAAA,EACI;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,OACG;AAEP,OAAO;AAEP,OAAO;AACP,OAAO;AACP,SAAS,6BAA6B;AAEtC,SAAS,QAAQ,MAAM;AACnB;AAAA,IACI,YACI,MAAM,QAAc;AAAA;AAAA,aAEnB;AAAA,EACT;AACA,KAAG,iCAAiC,YAAY;AAC5C,UAAM,KAAK,MAAM,QAAc;AAAA;AAAA,SAE9B;AAED,UAAM,eAAe,EAAE;AAEvB,UAAM,OAAO,EAAE,EAAE,GAAG,GAAG,WAAW;AAAA,EACtC,CAAC;AACD,KAAG,uCAAuC,YAAY;AAClD,UAAM,KAAK,MAAM,QAAc;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAM9B;AACD,UAAM,SAAS,GAAG,cAAc,GAAG;AACnC,UAAM,eAAe,EAAE;AAEvB,OAAG,MAAM;AACT,UAAM,eAAe,EAAE;AAEvB,WAAO,SAAS,aAAa,EAAE,GAAG,MAAM,MAAM;AAAA,EAClD,CAAC;AACD,KAAG,kBAAkB,YAAY;AAC7B,UAAM,KAAK,MAAM,QAAc;AAAA;AAAA;AAAA;AAAA,SAI9B;AACD,UAAM,eAAe,EAAE;AAEvB,OAAG,MAAM;AACT,UAAM,eAAe,EAAE;AAEvB,WAAO,SAAS,aAAa,EAAE,GAAG,MAAM,EAAE;AAC1C,WAAO,GAAG,WAAW,aAAa,EAAE,GAAG;AAAA,MAClC,GAA2C;AAAA,IAChD;AAAA,EACJ,CAAC;AACD,KAAG,UAAU,YAAY;AACrB,UAAM,OAAO,MAAM,QAAqB;AAAA;AAAA;AAAA;AAAA,SAIvC;AAED,UAAM,KAAK,KAAK,cAAc,SAAS;AAGvC,UAAM,UAAU;AAChB,UAAM,UAAU;AAChB,WAAO,GAAG,IAAI,EAAE,GAAG,GAAG;AAEtB,OAAG,OAAO;AACV,UAAM,eAAe,EAAE;AAEvB,WAAO,GAAG,IAAI,EAAE,GAAG,GAAG;AACtB,UAAM,SAAS,SAAS,IAAI,OAAO;AACnC,UAAM,UAAU,GAAG,WAAW;AAAA,MAC1B;AAAA,IACJ;AACA,YAAQ,MAAM;AACd,UAAM;AAEN,WAAO,GAAG,IAAI,EAAE,GAAG,GAAG;AAAA,EAC1B,CAAC;AACL,CAAC;",
  "names": []
}
