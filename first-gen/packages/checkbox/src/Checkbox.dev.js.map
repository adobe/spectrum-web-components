{
  "version": 3,
  "sources": ["Checkbox.ts"],
  "sourcesContent": ["/**\n * Copyright 2025 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {\n    CSSResultArray,\n    DefaultElementSize,\n    html,\n    PropertyValues,\n    SizedMixin,\n    SpectrumElement,\n    TemplateResult,\n} from '@spectrum-web-components/base';\nimport { property } from '@spectrum-web-components/base/src/decorators.js';\nimport { CheckboxMixin } from './CheckboxMixin.dev.js'\nimport checkboxStyles from './checkbox.css.js';\nimport '@spectrum-web-components/icons-ui/icons/sp-icon-checkmark75.js';\nimport '@spectrum-web-components/icons-ui/icons/sp-icon-checkmark100.js';\nimport '@spectrum-web-components/icons-ui/icons/sp-icon-checkmark200.js';\nimport '@spectrum-web-components/icons-ui/icons/sp-icon-checkmark300.js';\nimport '@spectrum-web-components/icons-ui/icons/sp-icon-dash75.js';\nimport '@spectrum-web-components/icons-ui/icons/sp-icon-dash100.js';\nimport '@spectrum-web-components/icons-ui/icons/sp-icon-dash200.js';\nimport '@spectrum-web-components/icons-ui/icons/sp-icon-dash300.js';\nimport checkmarkSmallStyles from '@spectrum-web-components/icon/src/spectrum-icon-checkmark.css.js';\nimport dashSmallStyles from '@spectrum-web-components/icon/src/spectrum-icon-dash.css.js';\n\nconst checkmarkIcon = {\n    s: () => {\n        return html`\n            <sp-icon-checkmark75\n                id=\"checkmark\"\n                class=\"spectrum-Icon spectrum-UIIcon-Checkmark75\"\n            ></sp-icon-checkmark75>\n        `;\n    },\n    m: () => {\n        return html`\n            <sp-icon-checkmark100\n                id=\"checkmark\"\n                class=\"spectrum-Icon spectrum-UIIcon-Checkmark100\"\n            ></sp-icon-checkmark100>\n        `;\n    },\n    l: () => {\n        return html`\n            <sp-icon-checkmark200\n                id=\"checkmark\"\n                class=\"spectrum-Icon spectrum-UIIcon-Checkmark200\"\n            ></sp-icon-checkmark200>\n        `;\n    },\n    xl: () => {\n        return html`\n            <sp-icon-checkmark300\n                id=\"checkmark\"\n                class=\"spectrum-Icon spectrum-UIIcon-Checkmark300\"\n            ></sp-icon-checkmark300>\n        `;\n    },\n};\n\nconst dashIcon = {\n    s: () => {\n        return html`\n            <sp-icon-dash75\n                id=\"partialCheckmark\"\n                class=\"spectrum-Icon spectrum-UIIcon-Dash75\"\n            ></sp-icon-dash75>\n        `;\n    },\n    m: () => {\n        return html`\n            <sp-icon-dash100\n                id=\"partialCheckmark\"\n                class=\"spectrum-Icon spectrum-UIIcon-Dash100\"\n            ></sp-icon-dash100>\n        `;\n    },\n    l: () => {\n        return html`\n            <sp-icon-dash200\n                id=\"partialCheckmark\"\n                class=\"spectrum-Icon spectrum-UIIcon-Dash200\"\n            ></sp-icon-dash200>\n        `;\n    },\n    xl: () => {\n        return html`\n            <sp-icon-dash300\n                id=\"partialCheckmark\"\n                class=\"spectrum-Icon spectrum-UIIcon-Dash300\"\n            ></sp-icon-dash300>\n        `;\n    },\n};\n\n/**\n * @element sp-checkbox\n * @slot - content to display as the label for the Checkbox\n * @fires change - Announces a change in the `checked` property of a Checkbox\n */\nexport class Checkbox extends SizedMixin(CheckboxMixin(SpectrumElement), {\n    noDefaultSize: true,\n}) {\n    static override shadowRootOptions = {\n        ...SpectrumElement.shadowRootOptions,\n        delegatesFocus: true,\n    };\n\n    /**\n     * Disable this control. It will not receive focus or events\n     */\n    @property({ type: Boolean, reflect: true })\n    public disabled = false;\n\n    @property({ type: Boolean, reflect: true })\n    public indeterminate = false;\n\n    @property({ type: Boolean, reflect: true })\n    public invalid = false;\n\n    @property({ type: Boolean, reflect: true })\n    public emphasized = false;\n\n    @property({ reflect: true, type: Number, attribute: 'tabindex' })\n    public override tabIndex = 0;\n\n    public override connectedCallback(): void {\n        super.connectedCallback();\n        if (this.hasAttribute('autofocus')) {\n            this.updateComplete.then(() => {\n                this.focus();\n            });\n        }\n    }\n\n    public static override get styles(): CSSResultArray {\n        return [checkboxStyles, checkmarkSmallStyles, dashSmallStyles];\n    }\n\n    public override click(): void {\n        if (this.disabled) {\n            return;\n        }\n\n        this.inputElement?.click();\n    }\n\n    public override handleChange(): void {\n        this.indeterminate = false;\n        super.handleChange();\n    }\n\n    protected override render(): TemplateResult {\n        return html`\n            ${super.render()}\n            <span id=\"box\">\n                ${this.checked\n                    ? checkmarkIcon[this.size as DefaultElementSize]()\n                    : html``}\n                ${this.indeterminate\n                    ? dashIcon[this.size as DefaultElementSize]()\n                    : html``}\n            </span>\n            <label id=\"label\" for=\"input\"><slot></slot></label>\n        `;\n    }\n\n    protected override updated(changes: PropertyValues): void {\n        super.updated(changes);\n        if (\n            changes.has('disabled') &&\n            (typeof changes.get('disabled') !== 'undefined' || this.disabled)\n        ) {\n            if (this.disabled) {\n                this.inputElement.tabIndex = this.tabIndex;\n                this.tabIndex = -1;\n            } else {\n                this.tabIndex = this.inputElement.tabIndex;\n                this.inputElement.removeAttribute('tabindex');\n            }\n            this.inputElement.disabled = this.disabled;\n        }\n        if (changes.has('indeterminate')) {\n            this.inputElement.indeterminate = this.indeterminate;\n        }\n        if (changes.has('invalid')) {\n            if (this.invalid) {\n                this.inputElement.setAttribute('aria-invalid', 'true');\n            } else {\n                this.inputElement.removeAttribute('aria-invalid');\n            }\n        }\n    }\n}\n"],
  "mappings": "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",
  "names": []
}
