{
  "version": 3,
  "sources": ["menu.stories.ts"],
  "sourcesContent": ["/**\n * Copyright 2025 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\nimport {\n    html,\n    LitElement,\n    TemplateResult,\n} from '@spectrum-web-components/base';\n\nimport type { Menu, MenuItem } from '@spectrum-web-components/menu';\nimport '@spectrum-web-components/menu/sp-menu.js';\nimport '@spectrum-web-components/popover/sp-popover.js';\nimport '@spectrum-web-components/action-menu/sp-action-menu.js';\nimport '@spectrum-web-components/menu/sp-menu-item.js';\nimport '@spectrum-web-components/menu/sp-menu-divider.js';\nimport '@spectrum-web-components/menu/sp-menu-group.js';\nimport '@spectrum-web-components/icon/sp-icon.js';\nimport '@spectrum-web-components/icons-workflow/icons/sp-icon-checkmark-circle.js';\nimport '@spectrum-web-components/icons-workflow/icons/sp-icon-export.js';\nimport '@spectrum-web-components/icons-workflow/icons/sp-icon-folder-open.js';\nimport '@spectrum-web-components/icons-workflow/icons/sp-icon-share.js';\nimport '@spectrum-web-components/icons-workflow/icons/sp-icon-show-menu.js';\n\nexport default {\n    component: 'sp-menu',\n    title: 'Menu',\n};\n\nexport const Default = (): TemplateResult => {\n    return html`\n        <sp-menu>\n            <sp-menu-item>Deselect</sp-menu-item>\n            <sp-menu-item>Select Inverse</sp-menu-item>\n            <sp-menu-item>Feather...</sp-menu-item>\n            <sp-menu-item>Select and Mask...</sp-menu-item>\n            <sp-menu-divider></sp-menu-divider>\n            <sp-menu-item>Save Selection</sp-menu-item>\n            <sp-menu-item disabled>Make Work Path</sp-menu-item>\n        </sp-menu>\n\n        <sp-popover open>\n            <sp-menu>\n                <sp-menu-item>Deselect</sp-menu-item>\n                <sp-menu-item>Select Inverse</sp-menu-item>\n                <sp-menu-item>Feather...</sp-menu-item>\n                <sp-menu-item>Select and Mask...</sp-menu-item>\n                <sp-menu-divider></sp-menu-divider>\n                <sp-menu-item>Save Selection</sp-menu-item>\n                <sp-menu-item disabled>Make Work Path</sp-menu-item>\n            </sp-menu>\n        </sp-popover>\n    `;\n};\n\nexport const singleSelect = (): TemplateResult => {\n    return html`\n        <sp-menu\n            selects=\"single\"\n            @change=${({\n                target: { value },\n            }: Event & { target: Menu }): void => {\n                navigator.clipboard.writeText(value);\n            }}\n        >\n            <sp-menu-item selected>Deselect</sp-menu-item>\n            <sp-menu-item>Select Inverse</sp-menu-item>\n            <sp-menu-item>Feather...</sp-menu-item>\n            <sp-menu-item>Select and Mask...</sp-menu-item>\n            <sp-menu-divider></sp-menu-divider>\n            <sp-menu-item>Save Selection</sp-menu-item>\n            <sp-menu-item disabled>Make Work Path</sp-menu-item>\n        </sp-menu>\n\n        <sp-popover open>\n            <sp-menu\n                selects=\"single\"\n                @change=${({\n                    target: { value },\n                }: Event & { target: Menu }): void => {\n                    navigator.clipboard.writeText(value);\n                }}\n            >\n                <sp-menu-item>Deselect</sp-menu-item>\n                <sp-menu-item>Select Inverse</sp-menu-item>\n                <sp-menu-item selected>Feather...</sp-menu-item>\n                <sp-menu-item>Select and Mask...</sp-menu-item>\n                <sp-menu-divider></sp-menu-divider>\n                <sp-menu-item>Save Selection</sp-menu-item>\n                <sp-menu-item disabled>Make Work Path</sp-menu-item>\n            </sp-menu>\n        </sp-popover>\n    `;\n};\n\nexport const multipleSelect = (): TemplateResult => {\n    return html`\n        <sp-menu selects=\"multiple\">\n            <sp-menu-item>Deselect</sp-menu-item>\n            <sp-menu-item>Select Inverse</sp-menu-item>\n            <sp-menu-item selected>Feather...</sp-menu-item>\n            <sp-menu-item>Select and Mask...</sp-menu-item>\n            <sp-menu-divider></sp-menu-divider>\n            <sp-menu-item selected>Save Selection</sp-menu-item>\n            <sp-menu-item disabled>Make Work Path</sp-menu-item>\n        </sp-menu>\n\n        <sp-popover open>\n            <sp-menu selects=\"multiple\">\n                <sp-menu-item>Deselect</sp-menu-item>\n                <sp-menu-item selected>Select Inverse</sp-menu-item>\n                <sp-menu-item>Feather...</sp-menu-item>\n                <sp-menu-item selected>Select and Mask...</sp-menu-item>\n                <sp-menu-divider></sp-menu-divider>\n                <sp-menu-item>Save Selection</sp-menu-item>\n                <sp-menu-item disabled>Make Work Path</sp-menu-item>\n            </sp-menu>\n        </sp-popover>\n    `;\n};\n\nexport const controlled = (): TemplateResult => {\n    const forceSelection = (event: Event & { target: Menu }): void => {\n        event.target.updateComplete.then(() => {\n            event.target.selected = ['Select and Mask...'];\n        });\n    };\n    return html`\n        <p>\n            This Menu will default to a\n            <code>selected</code>\n            value of\n            <code>[ 'Feather...', 'Save Selection' ]</code>\n            but then on any subsequent interaction be forced to a\n            <code>selected</code>\n            value of\n            <code>[ 'Select and Mask...' ]</code>\n            .\n        </p>\n        <sp-menu selects=\"multiple\" @change=${forceSelection}>\n            <sp-menu-item>Deselect</sp-menu-item>\n            <sp-menu-item>Select Inverse</sp-menu-item>\n            <sp-menu-item selected>Feather...</sp-menu-item>\n            <sp-menu-item>Select and Mask...</sp-menu-item>\n            <sp-menu-divider></sp-menu-divider>\n            <sp-menu-item selected>Save Selection</sp-menu-item>\n            <sp-menu-item disabled>Make Work Path</sp-menu-item>\n        </sp-menu>\n    `;\n};\ncontrolled.swc_vrt = {\n    skip: true,\n};\n\ncontrolled.parameters = {\n    // Disables Chromatic's snapshotting on a global level\n    chromatic: { disableSnapshot: true },\n};\n\nclass MenuItemWithDescription extends LitElement {\n    public overriderender(): TemplateResult {\n        return html`\n            <sp-menu>\n                <sp-menu-item>\n                    <sp-icon-export slot=\"icon\"></sp-icon-export>\n                    Quick export\n                    <span slot=\"description\">Share a snapshot</span>\n                </sp-menu-item>\n                <sp-menu-item>\n                    <sp-icon-folder-open slot=\"icon\"></sp-icon-folder-open>\n                    Open a copy\n                    <span slot=\"description\">Illustrator for iPad</span>\n                </sp-menu-item>\n                <sp-menu-item disabled>\n                    <sp-icon-share slot=\"icon\"></sp-icon-share>\n                    Share link\n                    <span slot=\"description\">Enable comments and download</span>\n                </sp-menu-item>\n            </sp-menu>\n\n            <sp-popover open>\n                <sp-menu selects=\"multiple\">\n                    <sp-menu-item>Deselect</sp-menu-item>\n                    <sp-menu-item selected>\n                        Select Inverse\n                        <span slot=\"description\">Enable inverse selection</span>\n                    </sp-menu-item>\n                    <sp-menu-item>Feather...</sp-menu-item>\n                    <sp-menu-item selected>Select and Mask...</sp-menu-item>\n                    <sp-menu-divider></sp-menu-divider>\n                    <sp-menu-item>Save Selection</sp-menu-item>\n                    <sp-menu-item disabled>\n                        Make Work Path\n                        <span slot=\"description\">\n                            Create a reusable work path\n                        </span>\n                    </sp-menu-item>\n                </sp-menu>\n            </sp-popover>\n        `;\n    }\n}\n\ncustomElements.define('menu-item-with-description', MenuItemWithDescription);\n\nexport const menuItemWithDescription = (): TemplateResult => html`\n    <menu-item-with-description></menu-item-with-description>\n`;\n\nclass WithIcons extends LitElement {\n    public override render(): TemplateResult {\n        return html`\n            <sp-popover open>\n                <sp-menu selects=\"single\">\n                    <sp-menu-item>\n                        <sp-icon-export slot=\"icon\"></sp-icon-export>\n                        Quick export\n                    </sp-menu-item>\n                    <sp-menu-item selected>\n                        <sp-icon-folder-open slot=\"icon\"></sp-icon-folder-open>\n                        Open a copy\n                    </sp-menu-item>\n                    <sp-menu-item>\n                        <sp-icon-share slot=\"icon\"></sp-icon-share>\n                        Share link\n                        <span slot=\"description\">\n                            Enable comments and download\n                        </span>\n                    </sp-menu-item>\n                </sp-menu>\n            </sp-popover>\n        `;\n    }\n}\n\ncustomElements.define('menu-with-icons', WithIcons);\n\nexport const SelectsWithIcons = (): TemplateResult => html`\n    <menu-with-icons></menu-with-icons>\n`;\n\nclass HeadersAndIcons extends LitElement {\n    public override render(): TemplateResult {\n        return html`\n            <sp-popover open>\n                <sp-menu selects=\"single\">\n                    <sp-menu-group>\n                        <span slot=\"header\">Section Heading</span>\n                        <sp-menu-item>Action 1</sp-menu-item>\n                        <sp-menu-item>Action 2</sp-menu-item>\n                        <sp-menu-item>Action 3</sp-menu-item>\n                    </sp-menu-group>\n                    <sp-menu-divider></sp-menu-divider>\n                    <sp-menu-group>\n                        <span slot=\"header\">Section Heading</span>\n                        <sp-menu-item>\n                            <sp-icon-checkmark-circle\n                                slot=\"icon\"\n                            ></sp-icon-checkmark-circle>\n                            Save\n                        </sp-menu-item>\n                        <sp-menu-item disabled>\n                            <sp-icon-checkmark-circle\n                                slot=\"icon\"\n                            ></sp-icon-checkmark-circle>\n                            Download\n                        </sp-menu-item>\n                        <sp-menu-item disabled>\n                            <sp-icon-checkmark-circle\n                                slot=\"icon\"\n                            ></sp-icon-checkmark-circle>\n                            Share link\n                            <span slot=\"description\">Enable comments</span>\n                        </sp-menu-item>\n                    </sp-menu-group>\n                </sp-menu>\n            </sp-popover>\n        `;\n    }\n}\n\ncustomElements.define('headers-and-icons', HeadersAndIcons);\n\nexport const headersAndIcons = (): TemplateResult => html`\n    <headers-and-icons></headers-and-icons>\n`;\n\nheadersAndIcons.storyName = 'Headers and Icons';\n\nexport const Selected = (): TemplateResult => {\n    return html`\n        <sp-popover open style=\"width: 200px;\">\n            <sp-menu>\n                <sp-menu-group>\n                    <span slot=\"header\">San Francisco</span>\n                    <sp-menu-item>Financial District</sp-menu-item>\n                    <sp-menu-item>South of Market</sp-menu-item>\n                    <sp-menu-item>North Beach</sp-menu-item>\n                </sp-menu-group>\n                <sp-menu-divider></sp-menu-divider>\n                <sp-menu-group selects=\"single\">\n                    <span slot=\"header\">Oakland</span>\n                    <sp-menu-item>City Center</sp-menu-item>\n                    <sp-menu-item disabled>Jack London Square</sp-menu-item>\n                    <sp-menu-item selected>\n                        My best friend's mom's house in the burbs just off\n                        Silverado street\n                    </sp-menu-item>\n                </sp-menu-group>\n            </sp-menu>\n        </sp-popover>\n    `;\n};\n\nexport const MenuGroupSelects = (): TemplateResult => {\n    return html`\n        <sp-popover open style=\"width: 200px;\">\n            <sp-menu selects=\"single\">\n                <sp-menu-group selects=\"inherit\">\n                    <span slot=\"header\">One of these</span>\n                    <sp-menu-item>Camden</sp-menu-item>\n                    <sp-menu-item>Cedar Riverside</sp-menu-item>\n                    <sp-menu-item>Downtown</sp-menu-item>\n                    <sp-menu-item>Northeast Arts District</sp-menu-item>\n                    <sp-menu-item selected>Uptown</sp-menu-item>\n                </sp-menu-group>\n                <sp-menu-group selects=\"inherit\">\n                    <span slot=\"header\">Or of these</span>\n                    <sp-menu-item>Lowertown</sp-menu-item>\n                    <sp-menu-item>Grand Ave</sp-menu-item>\n                </sp-menu-group>\n                <sp-menu-group selects=\"multiple\">\n                    <span slot=\"header\">Many of these</span>\n                    <sp-menu-item>Financial District</sp-menu-item>\n                    <sp-menu-item selected>South of Market</sp-menu-item>\n                    <sp-menu-item selected>North Beach</sp-menu-item>\n                </sp-menu-group>\n                <sp-menu-divider></sp-menu-divider>\n                <sp-menu-group selects=\"single\">\n                    <span slot=\"header\">One of these</span>\n                    <sp-menu-item>City Center</sp-menu-item>\n                    <sp-menu-item disabled>Jack London Square</sp-menu-item>\n                    <sp-menu-item selected>\n                        My best friend's mom's house in the burbs just off\n                        Silverado street\n                    </sp-menu-item>\n                </sp-menu-group>\n            </sp-menu>\n        </sp-popover>\n    `;\n};\n\nexport const selectedOffPage = (): TemplateResult => {\n    return html`\n        <p style=\"height: 100vh; padding-bottom: 50px;\">\n            In this example the \\`&lt;sp-menu-item selected&gt;\\` element is off\n            the visible page by default, but does not alter the page scroll on\n            load.\n        </p>\n        <sp-menu>\n            <sp-menu-item selected style=\"padding-bottom: 50px;\">\n                My best friend's mom's house in the burbs just off Silverado\n                street\n            </sp-menu-item>\n        </sp-menu>\n    `;\n};\n\nexport const MenuGroupSelectsMultiple = (): TemplateResult => {\n    return html`\n        <sp-popover open style=\"width: 200px;\">\n            <sp-menu selects=\"multiple\">\n                <sp-menu-group selects=\"inherit\">\n                    <span slot=\"header\">Many of these</span>\n                    <sp-menu-item>Camden</sp-menu-item>\n                    <sp-menu-item selected>Cedar Riverside</sp-menu-item>\n                    <sp-menu-item selected>Downtown</sp-menu-item>\n                    <sp-menu-item>Northeast Arts District</sp-menu-item>\n                    <sp-menu-item>Uptown</sp-menu-item>\n                </sp-menu-group>\n                <sp-menu-group selects=\"inherit\">\n                    <span slot=\"header\">And these, too</span>\n                    <sp-menu-item>Lowertown</sp-menu-item>\n                    <sp-menu-item selected>Grand Ave</sp-menu-item>\n                </sp-menu-group>\n                <sp-menu-group>\n                    <span slot=\"header\">None of these</span>\n                    <sp-menu-item>Financial District</sp-menu-item>\n                    <sp-menu-item>South of Market</sp-menu-item>\n                    <sp-menu-item>North Beach</sp-menu-item>\n                </sp-menu-group>\n                <sp-menu-divider></sp-menu-divider>\n                <sp-menu-group selects=\"single\">\n                    <span slot=\"header\">One of these</span>\n                    <sp-menu-item>City Center</sp-menu-item>\n                    <sp-menu-item disabled>Jack London Square</sp-menu-item>\n                    <sp-menu-item selected>\n                        My best friend's mom's house in the burbs just off\n                        Silverado street\n                    </sp-menu-item>\n                </sp-menu-group>\n            </sp-menu>\n        </sp-popover>\n    `;\n};\n\nexport const menuWithValueSlots = (): TemplateResult => {\n    return html`\n        <sp-menu style=\"width: 150px\">\n            <sp-menu-item>\n                Undo\n                <span slot=\"value\">\u2318\u200BZ</span>\n            </sp-menu-item>\n            <sp-menu-item disabled>\n                Redo\n                <span slot=\"value\">\u21E7\u2318\u200BZ</span>\n            </sp-menu-item>\n            <sp-menu-divider></sp-menu-divider>\n            <sp-menu-item>\n                Cut\n                <span slot=\"value\">\u2318\u200BX</span>\n            </sp-menu-item>\n            <sp-menu-item>\n                Copy\n                <span slot=\"value\">\u2318\u200BS</span>\n            </sp-menu-item>\n            <sp-menu-item disabled>\n                Paste\n                <span slot=\"value\">\u2318\u200BP</span>\n            </sp-menu-item>\n        </sp-menu>\n        <sp-popover open style=\"width: 150px\">\n            <sp-menu>\n                <sp-menu-item>\n                    Undo\n                    <span slot=\"value\">\u2318\u200BZ</span>\n                </sp-menu-item>\n                <sp-menu-item disabled>\n                    Redo\n                    <span slot=\"value\">\u21E7\u2318\u200BZ</span>\n                </sp-menu-item>\n                <sp-menu-divider></sp-menu-divider>\n                <sp-menu-item>\n                    Cut\n                    <span slot=\"value\">\u2318\u200BX</span>\n                </sp-menu-item>\n                <sp-menu-item>\n                    Copy\n                    <span slot=\"value\">\u2318\u200BS</span>\n                </sp-menu-item>\n                <sp-menu-item disabled>\n                    Paste\n                    <span slot=\"value\">\u2318\u200BP</span>\n                </sp-menu-item>\n            </sp-menu>\n        </sp-popover>\n    `;\n};\n\nheadersAndIcons.storyName = 'Dynamic MenuItems';\n\nexport const dynamicRemoval = (): TemplateResult => {\n    const removeItem = async function (event: FocusEvent) {\n        await (event.target as MenuItem)?.updateComplete;\n        (event.target as MenuItem)?.remove();\n    };\n    return html`\n        <sp-menu id=\"casey\" selects=\"single\">\n            <sp-menu-item>Deselect</sp-menu-item>\n            <sp-menu-item>Select Inverse</sp-menu-item>\n            <sp-menu-item id=\"nikkimk\" @focus=${removeItem}>\n                Feather...\n            </sp-menu-item>\n            <sp-menu-item selected>Select and Mask...</sp-menu-item>\n            <sp-menu-item>Save Selection</sp-menu-item>\n            <sp-menu-item disabled>Make Work Path</sp-menu-item>\n        </sp-menu>\n    `;\n};\n"],
  "mappings": "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",
  "names": []
}
