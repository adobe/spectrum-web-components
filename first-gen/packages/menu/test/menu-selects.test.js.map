{
  "version": 3,
  "sources": ["menu-selects.test.ts"],
  "sourcesContent": ["/**\n * Copyright 2025 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\nimport '@spectrum-web-components/menu/sp-menu.js';\nimport '@spectrum-web-components/menu/sp-menu-group.js';\nimport '@spectrum-web-components/menu/sp-menu-item.js';\nimport { Menu, MenuGroup, MenuItem } from '@spectrum-web-components/menu';\nimport {\n    elementUpdated,\n    expect,\n    html,\n    nextFrame,\n    oneEvent,\n} from '@open-wc/testing';\nimport { sendKeys } from '@web/test-runner-commands';\nimport { spy } from 'sinon';\nimport { fixture } from '../../../test/testing-helpers.js';\nimport { sendMouse } from '../../../test/plugins/browser.js';\n\ndescribe('Menu [selects]', () => {\n    let el!: Menu;\n    let options!: MenuItem[];\n    beforeEach(async () => {\n        el = await fixture<Menu>(html`\n            <sp-menu selects=\"single\">\n                <sp-menu-item value=\"1\">Option 1</sp-menu-item>\n                <sp-menu-item value=\"2\">Option 2</sp-menu-item>\n                <sp-menu-item value=\"3\">Option 3</sp-menu-item>\n            </sp-menu>\n        `);\n        options = [...el.querySelectorAll('sp-menu-item')] as MenuItem[];\n        await Promise.all(options.map((option) => option.updateComplete));\n        await nextFrame();\n        await nextFrame();\n    });\n    describe('fires `change` events', async () => {\n        it('on browser clicks', async () => {\n            const item1 = options[0];\n            const boundingRect = item1.getBoundingClientRect();\n            const change = oneEvent(el, 'change');\n            await sendMouse({\n                steps: [\n                    {\n                        type: 'click',\n                        position: [\n                            boundingRect.x + boundingRect.width / 2,\n                            boundingRect.y + boundingRect.height / 2,\n                        ],\n                    },\n                ],\n            });\n            await change;\n            expect(el.value).to.equal('1');\n        });\n        it('on JS clicks', async () => {\n            const item1 = options[0];\n            const change = oneEvent(el, 'change');\n            item1.click();\n            await change;\n            expect(el.value).to.equal('1');\n        });\n    });\n    it('manages a single selection when [selects=\"single\"]', async () => {\n        expect(el.value).to.equal('');\n\n        let change = oneEvent(el, 'change');\n        options[0].click();\n        await change;\n\n        expect(el.value).to.equal('1');\n\n        change = oneEvent(el, 'change');\n        options[1].click();\n        await change;\n\n        await elementUpdated(el);\n\n        expect(el.value).to.equal('2');\n\n        change = oneEvent(el, 'change');\n        options[2].click();\n        await change;\n\n        await elementUpdated(el);\n\n        expect(el.value).to.equal('3');\n    });\n    it('manages multiple selections when [selects=\"multiple\"]', async () => {\n        el.selects = 'multiple';\n\n        await elementUpdated(el);\n\n        expect(el.value).to.equal('');\n\n        let change = oneEvent(el, 'change');\n        options[0].click();\n        await change;\n        expect(el.value).to.equal('1');\n\n        change = oneEvent(el, 'change');\n        options[1].click();\n        await change;\n\n        await elementUpdated(el);\n\n        expect(el.value).to.equal('1,2');\n\n        change = oneEvent(el, 'change');\n        options[2].click();\n        await change;\n\n        await elementUpdated(el);\n\n        expect(el.value).to.equal('1,2,3');\n\n        change = oneEvent(el, 'change');\n        options[0].click();\n        await change;\n\n        expect(el.value).to.equal('2,3');\n\n        change = oneEvent(el, 'change');\n        options[1].click();\n        await change;\n\n        await elementUpdated(el);\n\n        expect(el.value).to.equal('3');\n\n        change = oneEvent(el, 'change');\n        options[2].click();\n        await change;\n\n        await elementUpdated(el);\n\n        expect(el.value).to.equal('');\n    });\n});\n\ndescribe('Menu [selects] w/ group', () => {\n    let el!: Menu;\n    let options!: MenuItem[];\n    beforeEach(async () => {\n        el = await fixture<Menu>(html`\n            <sp-menu selects=\"single\">\n                <sp-menu-group selects=\"inherit\">\n                    <sp-menu-item value=\"1\">Option 1</sp-menu-item>\n                    <sp-menu-item value=\"2\">Option 2</sp-menu-item>\n                    <sp-menu-item value=\"3\">Option 3</sp-menu-item>\n                </sp-menu-group>\n            </sp-menu>\n        `);\n        options = [...el.querySelectorAll('sp-menu-item')] as MenuItem[];\n        await Promise.all(options.map((option) => option.updateComplete));\n        await nextFrame();\n        await nextFrame();\n    });\n    describe('fires `change` events', async () => {\n        it('on browser clicks', async () => {\n            const item1 = options[0];\n            const boundingRect = item1.getBoundingClientRect();\n            const change = oneEvent(el, 'change');\n            await sendMouse({\n                steps: [\n                    {\n                        type: 'click',\n                        position: [\n                            boundingRect.x + boundingRect.width / 2,\n                            boundingRect.y + boundingRect.height / 2,\n                        ],\n                    },\n                ],\n            });\n            await change;\n            expect(el.value).to.equal('1');\n        });\n        it('on JS clicks', async () => {\n            const item1 = options[0];\n            const change = oneEvent(el, 'change');\n            item1.click();\n            await change;\n            expect(el.value).to.equal('1');\n        });\n    });\n    it('manages a single selection when [selects=\"single\"]', async () => {\n        expect(el.value).to.equal('');\n        let change = oneEvent(el, 'change');\n        options[0].click();\n        await change;\n\n        expect(el.value).to.equal('1');\n\n        change = oneEvent(el, 'change');\n        options[1].click();\n        await change;\n\n        await elementUpdated(el);\n\n        expect(el.value).to.equal('2');\n\n        change = oneEvent(el, 'change');\n        options[2].click();\n        await change;\n\n        await elementUpdated(el);\n\n        expect(el.value).to.equal('3');\n    });\n    it('manages multiple selections when [selects=\"multiple\"]', async () => {\n        el.selects = 'multiple';\n\n        await elementUpdated(el);\n\n        expect(el.value).to.equal('');\n\n        let change = oneEvent(el, 'change');\n        options[0].click();\n        await change;\n        expect(el.value).to.equal('1');\n\n        change = oneEvent(el, 'change');\n        options[1].click();\n        await change;\n\n        await elementUpdated(el);\n\n        expect(el.value).to.equal('1,2');\n\n        change = oneEvent(el, 'change');\n        options[2].click();\n        await change;\n\n        await elementUpdated(el);\n\n        expect(el.value).to.equal('1,2,3');\n\n        change = oneEvent(el, 'change');\n        options[0].click();\n        await change;\n\n        expect(el.value).to.equal('2,3');\n\n        change = oneEvent(el, 'change');\n        options[1].click();\n        await change;\n\n        await elementUpdated(el);\n\n        expect(el.value).to.equal('3');\n\n        change = oneEvent(el, 'change');\n        options[2].click();\n        await change;\n\n        await elementUpdated(el);\n\n        expect(el.value).to.equal('');\n    });\n});\n\ndescribe('Menu w/ group [selects]', () => {\n    let el!: Menu;\n    let group!: MenuGroup;\n    let options!: MenuItem[];\n    beforeEach(async () => {\n        el = await fixture<Menu>(html`\n            <sp-menu>\n                <sp-menu-group selects=\"single\">\n                    <sp-menu-item value=\"1\">Option 1</sp-menu-item>\n                    <sp-menu-item value=\"2\">Option 2</sp-menu-item>\n                    <sp-menu-item value=\"3\">Option 3</sp-menu-item>\n                </sp-menu-group>\n            </sp-menu>\n        `);\n        group = el.querySelector('sp-menu-group') as MenuGroup;\n        options = [...el.querySelectorAll('sp-menu-item')] as MenuItem[];\n        await Promise.all(options.map((option) => option.updateComplete));\n        await nextFrame();\n        await nextFrame();\n    });\n    describe('fires `change` events', async () => {\n        it('on browser clicks', async () => {\n            const item1 = options[0];\n            const boundingRect = item1.getBoundingClientRect();\n            const change = oneEvent(group, 'change');\n            await sendMouse({\n                steps: [\n                    {\n                        type: 'click',\n                        position: [\n                            boundingRect.x + boundingRect.width / 2,\n                            boundingRect.y + boundingRect.height / 2,\n                        ],\n                    },\n                ],\n            });\n            await change;\n            expect(group.value).to.equal('1');\n        });\n        it('on JS clicks', async () => {\n            const item1 = options[0];\n            const change = oneEvent(group, 'change');\n            item1.click();\n            await change;\n            expect(group.value).to.equal('1');\n        });\n    });\n\n    it('manages a single selection when [selects=\"single\"]', async () => {\n        expect(group.value).to.equal('');\n\n        let change = oneEvent(el, 'change');\n        options[0].click();\n        await change;\n\n        expect(group.value).to.equal('1');\n\n        change = oneEvent(el, 'change');\n        options[1].click();\n        await change;\n\n        await elementUpdated(el);\n\n        expect(group.value).to.equal('2');\n\n        change = oneEvent(el, 'change');\n        options[2].click();\n        await change;\n\n        await elementUpdated(el);\n\n        expect(group.value).to.equal('3');\n    });\n    it('manages multiple selections when [selects=\"multiple\"]', async () => {\n        group.selects = 'multiple';\n\n        await elementUpdated(group);\n\n        expect(group.value).to.equal('');\n\n        let change = oneEvent(el, 'change');\n        options[0].click();\n        await change;\n        expect(group.value).to.equal('1');\n\n        change = oneEvent(el, 'change');\n        options[1].click();\n        await change;\n\n        await elementUpdated(el);\n\n        expect(group.value).to.equal('1,2');\n\n        change = oneEvent(el, 'change');\n        options[2].click();\n        await change;\n\n        await elementUpdated(el);\n\n        expect(group.value).to.equal('1,2,3');\n\n        change = oneEvent(el, 'change');\n        options[0].click();\n        await change;\n\n        expect(group.value).to.equal('2,3');\n\n        change = oneEvent(el, 'change');\n        options[1].click();\n        await change;\n\n        await elementUpdated(el);\n\n        expect(group.value).to.equal('3');\n\n        change = oneEvent(el, 'change');\n        options[2].click();\n        await change;\n\n        await elementUpdated(el);\n\n        expect(group.value).to.equal('');\n    });\n});\n\ndescribe('Menu w/ groups [selects]', () => {\n    let el!: Menu;\n    let groupA!: MenuGroup;\n    let groupB!: MenuGroup;\n    let options!: MenuItem[];\n    beforeEach(async () => {\n        el = await fixture<Menu>(html`\n            <sp-menu>\n                <sp-menu-group selects=\"single\" id=\"group-1\">\n                    <sp-menu-item value=\"1a\">Option 1a</sp-menu-item>\n                    <sp-menu-item value=\"2a\">Option 2a</sp-menu-item>\n                    <sp-menu-item value=\"3a\">Option 3a</sp-menu-item>\n                </sp-menu-group>\n                <sp-menu-group selects=\"single\" id=\"group-2\">\n                    <sp-menu-item value=\"1b\">Option 1b</sp-menu-item>\n                    <sp-menu-item value=\"2b\">Option 2b</sp-menu-item>\n                    <sp-menu-item value=\"3b\">Option 3b</sp-menu-item>\n                </sp-menu-group>\n            </sp-menu>\n        `);\n        groupA = el.querySelector('sp-menu-group:first-child') as MenuGroup;\n        groupB = el.querySelector('sp-menu-group:last-child') as MenuGroup;\n        options = [...el.querySelectorAll('sp-menu-item')] as MenuItem[];\n        await Promise.all(options.map((option) => option.updateComplete));\n        await nextFrame();\n        await nextFrame();\n    });\n    describe('fires `change` events', async () => {\n        it('on browser clicks', async () => {\n            const item1a = options[0];\n            const item1b = options[3];\n            const boundingRectA = item1a.getBoundingClientRect();\n            expect(groupA.value).to.equal('');\n            expect(groupB.value).to.equal('');\n            let change = oneEvent(el, 'change');\n            await sendMouse({\n                steps: [\n                    {\n                        type: 'click',\n                        position: [\n                            boundingRectA.x + boundingRectA.width / 2,\n                            boundingRectA.y + boundingRectA.height / 2,\n                        ],\n                    },\n                ],\n            });\n            await change;\n            await elementUpdated(item1a);\n            expect(groupA.value).to.equal('1a');\n            expect(groupB.value).to.equal('');\n            change = oneEvent(el, 'change');\n            const boundingRectB = item1b.getBoundingClientRect();\n            await sendMouse({\n                steps: [\n                    {\n                        type: 'click',\n                        position: [\n                            boundingRectB.x + boundingRectB.width / 2,\n                            boundingRectB.y + boundingRectB.height / 2,\n                        ],\n                    },\n                ],\n            });\n            await change;\n            expect(groupA.value).to.equal('1a');\n            expect(groupB.value).to.equal('1b');\n        });\n        it('on JS clicks', async () => {\n            const item1a = options[0];\n            const item1b = options[3];\n            let change = oneEvent(el, 'change');\n            item1a.click();\n            await change;\n            expect(groupA.value).to.equal('1a');\n            change = oneEvent(el, 'change');\n            item1b.click();\n            await change;\n            expect(groupB.value).to.equal('1b');\n        });\n        it('can have them `preventDefault()`ed', async () => {\n            const preventSpy = spy();\n            expect(groupA.value).to.equal('');\n            expect(groupB.value).to.equal('');\n            const item1a = options[0];\n            const item1b = options[3];\n            groupA.addEventListener('change', (event: Event) => {\n                event.preventDefault();\n                preventSpy();\n            });\n            let change = oneEvent(el, 'change');\n            item1a.click();\n            await change;\n            change = oneEvent(el, 'change');\n            item1b.click();\n            await change;\n            expect(preventSpy.callCount).to.equal(1);\n            expect(groupA.value).to.equal('');\n            expect(groupB.value).to.equal('1b');\n        });\n    });\n\n    it('manages a single selection when [selects=\"single\"]', async () => {\n        expect(groupA.value).to.equal('');\n        expect(groupB.value).to.equal('');\n\n        let change = oneEvent(el, 'change');\n        options[0].click();\n        await change;\n\n        expect(groupA.value).to.equal('1a');\n\n        change = oneEvent(el, 'change');\n        options[3].click();\n        await change;\n\n        expect(groupB.value).to.equal('1b');\n\n        change = oneEvent(el, 'change');\n        options[1].click();\n        await change;\n\n        expect(groupA.value).to.equal('2a');\n\n        change = oneEvent(el, 'change');\n        options[4].click();\n        await change;\n\n        expect(groupB.value).to.equal('2b');\n\n        change = oneEvent(el, 'change');\n        options[2].click();\n        await change;\n\n        expect(groupA.value).to.equal('3a');\n\n        change = oneEvent(el, 'change');\n        options[5].click();\n        await change;\n\n        expect(groupB.value).to.equal('3b');\n    });\n    it('manages multiple selections when [selects=\"multiple\"]', async () => {\n        groupA.selects = 'multiple';\n        groupB.selects = 'multiple';\n\n        await elementUpdated(groupA);\n        await elementUpdated(groupB);\n\n        expect(groupA.value).to.equal('');\n        expect(groupB.value).to.equal('');\n\n        let change = oneEvent(el, 'change');\n        options[0].click();\n        await change;\n        expect(groupA.value).to.equal('1a');\n        expect(groupB.value).to.equal('');\n\n        change = oneEvent(el, 'change');\n        options[3].click();\n        await change;\n        expect(groupA.value).to.equal('1a');\n        expect(groupB.value).to.equal('1b');\n\n        change = oneEvent(el, 'change');\n        options[1].click();\n        await change;\n\n        expect(groupA.value).to.equal('1a,2a');\n        expect(groupB.value).to.equal('1b');\n\n        change = oneEvent(el, 'change');\n        options[4].click();\n        await change;\n\n        expect(groupA.value).to.equal('1a,2a');\n        expect(groupB.value).to.equal('1b,2b');\n\n        change = oneEvent(el, 'change');\n        options[2].click();\n        await change;\n\n        expect(groupA.value).to.equal('1a,2a,3a');\n        expect(groupB.value).to.equal('1b,2b');\n\n        change = oneEvent(el, 'change');\n        options[5].click();\n        await change;\n\n        expect(groupA.value).to.equal('1a,2a,3a');\n        expect(groupB.value).to.equal('1b,2b,3b');\n\n        change = oneEvent(el, 'change');\n        options[0].click();\n        await change;\n\n        expect(groupA.value).to.equal('2a,3a');\n        expect(groupB.value).to.equal('1b,2b,3b');\n\n        change = oneEvent(el, 'change');\n        options[3].click();\n        await change;\n\n        expect(groupA.value).to.equal('2a,3a');\n        expect(groupB.value).to.equal('2b,3b');\n\n        change = oneEvent(el, 'change');\n        options[1].click();\n        await change;\n\n        expect(groupA.value).to.equal('3a');\n        expect(groupB.value).to.equal('2b,3b');\n\n        change = oneEvent(el, 'change');\n        options[4].click();\n        await change;\n\n        expect(groupA.value).to.equal('3a');\n        expect(groupB.value).to.equal('3b');\n\n        change = oneEvent(el, 'change');\n        options[2].click();\n        await change;\n\n        expect(groupA.value).to.equal('');\n        expect(groupB.value).to.equal('3b');\n\n        change = oneEvent(el, 'change');\n        options[5].click();\n        await change;\n\n        expect(groupA.value).to.equal('');\n        expect(groupB.value).to.equal('');\n    });\n    it('manages focus', async function () {\n        await elementUpdated(groupA);\n        await elementUpdated(groupB);\n        const input = document.createElement('input');\n        el.insertAdjacentElement('afterend', input);\n        input.focus();\n        expect(document.activeElement === input).to.be.true;\n        await sendKeys({ press: 'Shift+Tab' });\n        expect(document.activeElement === options[0]).to.be.true;\n        await sendKeys({ press: 'ArrowDown' });\n        expect(document.activeElement === options[1]).to.be.true;\n        await sendKeys({ press: 'ArrowUp' });\n\n        await elementUpdated(el);\n        let optionCount = 0;\n        for (const option of options) {\n            const parentElement = option.parentElement as Menu;\n            expect(document.activeElement === option, 'option focused').to.be\n                .true;\n            expect(option.focused, `option ${optionCount} visually focused`).to\n                .be.true;\n            await sendKeys({ press: 'Space' });\n            expect(parentElement.value).to.equal(option.value);\n            await sendKeys({ press: 'ArrowDown' });\n            optionCount += 1;\n        }\n    });\n});\n"],
  "mappings": "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",
  "names": []
}
