{
  "version": 3,
  "sources": ["action-group-tooltip.stories.ts"],
  "sourcesContent": ["/**\n * Copyright 2025 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {\n    html,\n    nothing,\n    SpectrumElement,\n    TemplateResult,\n} from '@spectrum-web-components/base';\nimport { state } from '@spectrum-web-components/base/src/decorators.js';\nimport { spreadProps } from '../../../test/lit-helpers.js';\n\nimport '@spectrum-web-components/action-group/sp-action-group.js';\nimport '@spectrum-web-components/action-button/sp-action-button.js';\nimport '@spectrum-web-components/overlay/overlay-trigger.js';\nimport '@spectrum-web-components/tooltip/sp-tooltip.js';\nimport '@spectrum-web-components/icons-workflow/icons/sp-icon-properties.js';\nimport '@spectrum-web-components/icons-workflow/icons/sp-icon-info.js';\nimport '@spectrum-web-components/icons-workflow/icons/sp-icon-view-all-tags.js';\nimport { ActionGroup } from '@spectrum-web-components/action-group/src/ActionGroup.js';\n\nexport default {\n    title: 'Action Group/Tooltips',\n    component: 'sp-action-group',\n    args: {\n        compact: false,\n        emphasized: false,\n        justified: false,\n        quiet: false,\n        vertical: false,\n        selects: 'none',\n        size: 'm',\n    },\n    argTypes: {\n        compact: {\n            name: 'compact',\n            description:\n                'Visually joins the buttons together to clarify their relationship to one another.',\n            type: { name: 'boolean', required: false },\n            table: {\n                type: { summary: 'boolean' },\n                defaultValue: { summary: false },\n            },\n            control: {\n                type: 'boolean',\n            },\n        },\n        emphasized: {\n            name: 'emphasized',\n            type: { name: 'boolean', required: false },\n            table: {\n                type: { summary: 'boolean' },\n                defaultValue: { summary: false },\n            },\n            control: {\n                type: 'boolean',\n            },\n        },\n        justified: {\n            name: 'justified',\n            description:\n                'Aligns the action group items to use all the available space on that line.',\n            type: { name: 'boolean', required: false },\n            table: {\n                type: { summary: 'boolean' },\n                defaultValue: { summary: false },\n            },\n            control: {\n                type: 'boolean',\n            },\n        },\n        quiet: {\n            name: 'quiet',\n            type: { name: 'boolean', required: false },\n            table: {\n                type: { summary: 'boolean' },\n                defaultValue: { summary: false },\n            },\n            control: {\n                type: 'boolean',\n            },\n        },\n        vertical: {\n            name: 'vertical',\n            description: 'Changes the orientation of the action group.',\n            type: { name: 'boolean', required: false },\n            table: {\n                type: { summary: 'boolean' },\n                defaultValue: { summary: false },\n            },\n            control: {\n                type: 'boolean',\n            },\n        },\n        selects: {\n            name: 'selects',\n            description:\n                'Whether the elements selects its children and how many it can select at a time.',\n            table: {\n                defaultValue: { summary: '' },\n            },\n            control: {\n                type: 'inline-radio',\n                options: ['none', 'single', 'multiple'],\n            },\n        },\n        size: {\n            name: 'size',\n            description: 'The size at which to display the action group.',\n            type: { name: 'string', required: true },\n            table: {\n                type: { summary: '\"s\" | \"m\" | \"l\" | \"xl\"' },\n                defaultValue: { summary: 'm' },\n            },\n            control: {\n                type: 'select',\n                options: ['s', 'm', 'l', 'xl'],\n            },\n        },\n    },\n};\n\ninterface Properties {\n    compact?: boolean;\n    emphasized?: boolean;\n    justified?: boolean;\n    quiet?: boolean;\n    vertical?: boolean;\n    selects?: 'none' | 'single' | 'multiple';\n    size?: 's' | 'm' | 'l' | 'xl';\n    [prop: string]: unknown;\n}\n\nconst template = (args: Properties): TemplateResult => {\n    requestAnimationFrame(() => {\n        const group = document.querySelector('sp-action-group') as ActionGroup;\n        const selectedDiv = group.nextElementSibling;\n        if (selectedDiv) {\n            selectedDiv.textContent = `Selected: ${JSON.stringify(\n                group.selected\n            )}`;\n        }\n    });\n    return html`\n        <sp-action-group\n            label=\"Favorite Color\"\n            ...=${spreadProps(args)}\n            @change=${({ target }: Event & { target: ActionGroup }) => {\n                const next = target.nextElementSibling as HTMLDivElement;\n                next.textContent = `Selected: ${JSON.stringify(\n                    target.selected\n                )}`;\n            }}\n        >\n            <overlay-trigger>\n                <sp-action-button slot=\"trigger\">Red</sp-action-button>\n                <sp-tooltip slot=\"hover-content\">\n                    This is a cool color.\n                </sp-tooltip>\n            </overlay-trigger>\n            <overlay-trigger>\n                <sp-action-button slot=\"trigger\">Green</sp-action-button>\n                <sp-tooltip slot=\"hover-content\">\n                    You wouldn't be wrong.\n                </sp-tooltip>\n            </overlay-trigger>\n            <overlay-trigger>\n                <sp-action-button slot=\"trigger\" value=\"blue\" selected>\n                    Blue\n                </sp-action-button>\n                <sp-tooltip slot=\"hover-content\">The sky in spring.</sp-tooltip>\n            </overlay-trigger>\n            <overlay-trigger>\n                <sp-action-button slot=\"trigger\">Yellow</sp-action-button>\n                <sp-tooltip slot=\"hover-content\">The sun at noon.</sp-tooltip>\n            </overlay-trigger>\n        </sp-action-group>\n        ${!!args.selects\n            ? html`\n                  <div>Selected:</div>\n              `\n            : nothing}\n    `;\n};\n\nexport const selectsSingle = (args: Properties): TemplateResult =>\n    template(args);\nselectsSingle.args = {\n    compact: true,\n    emphasized: true,\n    selects: 'single',\n};\n\nexport const selectsMultiple = (args: Properties): TemplateResult =>\n    template(args);\nselectsMultiple.args = {\n    compact: true,\n    emphasized: true,\n    selects: 'multiple',\n};\n\nexport const justified = (args: Properties): TemplateResult => template(args);\njustified.args = {\n    compact: true,\n    emphasized: true,\n    justified: true,\n    selects: undefined,\n};\n\nexport const vertical = (args: Properties): TemplateResult => template(args);\nvertical.args = {\n    compact: true,\n    emphasized: true,\n    vertical: true,\n    selects: undefined,\n};\n\nclass ActionGroupTooltips extends SpectrumElement {\n    @state()\n    alignment = 'left';\n\n    protected override render(): TemplateResult {\n        return html`\n            <sp-action-group quiet>\n                <sp-action-button\n                    quiet\n                    value=\"left\"\n                    ?selected=${this.alignment === 'left'}\n                    @click=${() => {\n                        this.alignment = 'left';\n                    }}\n                >\n                    <sp-icon slot=\"icon\">\n                        <svg\n                            role=\"img\"\n                            fill=\"currentColor\"\n                            viewBox=\"0 0 18 18\"\n                            id=\"STextAlignLeft18N-icon\"\n                            width=\"18\"\n                            height=\"18\"\n                            aria-hidden=\"true\"\n                            focusable=\"false\"\n                        >\n                            <rect\n                                fill-rule=\"evenodd\"\n                                x=\"2\"\n                                y=\"14\"\n                                width=\"12\"\n                                height=\"2\"\n                                rx=\"0.5\"\n                            ></rect>\n                            <rect\n                                fill-rule=\"evenodd\"\n                                x=\"2\"\n                                y=\"2\"\n                                width=\"15\"\n                                height=\"2\"\n                                rx=\"0.5\"\n                            ></rect>\n                            <rect\n                                fill-rule=\"evenodd\"\n                                x=\"2\"\n                                y=\"6\"\n                                width=\"12\"\n                                height=\"2\"\n                                rx=\"0.5\"\n                            ></rect>\n                            <rect\n                                fill-rule=\"evenodd\"\n                                x=\"2\"\n                                y=\"10\"\n                                width=\"15\"\n                                height=\"2\"\n                                rx=\"0.5\"\n                            ></rect>\n                        </svg>\n                    </sp-icon>\n                    <sp-tooltip self-managed placement=\"bottom\">\n                        Left align\n                    </sp-tooltip>\n                </sp-action-button>\n                <sp-action-button\n                    quiet\n                    value=\"center\"\n                    ?selected=${this.alignment === 'center'}\n                    @click=${() => {\n                        this.alignment = 'center';\n                    }}\n                >\n                    <sp-icon slot=\"icon\">\n                        <svg\n                            role=\"img\"\n                            fill=\"currentColor\"\n                            viewBox=\"0 0 18 18\"\n                            id=\"STextAlignCenter18N-icon\"\n                            width=\"18\"\n                            height=\"18\"\n                            aria-hidden=\"true\"\n                            focusable=\"false\"\n                        >\n                            <rect\n                                fill-rule=\"evenodd\"\n                                x=\"4\"\n                                y=\"14\"\n                                width=\"10\"\n                                height=\"2\"\n                                rx=\"0.5\"\n                            ></rect>\n                            <rect\n                                fill-rule=\"evenodd\"\n                                x=\"1\"\n                                y=\"10\"\n                                width=\"16\"\n                                height=\"2\"\n                                rx=\"0.5\"\n                            ></rect>\n                            <rect\n                                fill-rule=\"evenodd\"\n                                x=\"1\"\n                                y=\"2\"\n                                width=\"16\"\n                                height=\"2\"\n                                rx=\"0.5\"\n                            ></rect>\n                            <rect\n                                fill-rule=\"evenodd\"\n                                x=\"4\"\n                                y=\"6\"\n                                width=\"10\"\n                                height=\"2\"\n                                rx=\"0.5\"\n                            ></rect>\n                        </svg>\n                    </sp-icon>\n                    <sp-tooltip self-managed placement=\"bottom\">\n                        Center align\n                    </sp-tooltip>\n                </sp-action-button>\n                <sp-action-button\n                    quiet\n                    value=\"right\"\n                    ?selected=${this.alignment === 'right'}\n                    @click=${() => {\n                        this.alignment = 'right';\n                    }}\n                >\n                    <sp-icon slot=\"icon\">\n                        <svg\n                            role=\"img\"\n                            fill=\"currentColor\"\n                            viewBox=\"0 0 18 18\"\n                            id=\"STextAlignRight18N-icon\"\n                            width=\"18\"\n                            height=\"18\"\n                            aria-hidden=\"true\"\n                            focusable=\"false\"\n                        >\n                            <rect\n                                fill-rule=\"evenodd\"\n                                x=\"4\"\n                                y=\"14\"\n                                width=\"12\"\n                                height=\"2\"\n                                rx=\"0.5\"\n                            ></rect>\n                            <rect\n                                fill-rule=\"evenodd\"\n                                x=\"1\"\n                                y=\"2\"\n                                width=\"15\"\n                                height=\"2\"\n                                rx=\"0.5\"\n                            ></rect>\n                            <rect\n                                fill-rule=\"evenodd\"\n                                x=\"4\"\n                                y=\"6\"\n                                width=\"12\"\n                                height=\"2\"\n                                rx=\"0.5\"\n                            ></rect>\n                            <rect\n                                fill-rule=\"evenodd\"\n                                x=\"1\"\n                                y=\"10\"\n                                width=\"15\"\n                                height=\"2\"\n                                rx=\"0.5\"\n                            ></rect>\n                        </svg>\n                    </sp-icon>\n                    <sp-tooltip self-managed placement=\"bottom\">\n                        Right align\n                    </sp-tooltip>\n                </sp-action-button>\n            </sp-action-group>\n        `;\n    }\n}\n\ncustomElements.define('action-group-tooltips', ActionGroupTooltips);\n\nexport const controlled = (): TemplateResult => html`\n    <action-group-tooltips></action-group-tooltips>\n`;\n"],
  "mappings": ";;;;;;;;;;;AAYA;AAAA,EACI;AAAA,EACA;AAAA,EACA;AAAA,OAEG;AACP,SAAS,aAAa;AACtB,SAAS,mBAAmB;AAE5B,OAAO;AACP,OAAO;AACP,OAAO;AACP,OAAO;AACP,OAAO;AACP,OAAO;AACP,OAAO;AAGP,eAAe;AAAA,EACX,OAAO;AAAA,EACP,WAAW;AAAA,EACX,MAAM;AAAA,IACF,SAAS;AAAA,IACT,YAAY;AAAA,IACZ,WAAW;AAAA,IACX,OAAO;AAAA,IACP,UAAU;AAAA,IACV,SAAS;AAAA,IACT,MAAM;AAAA,EACV;AAAA,EACA,UAAU;AAAA,IACN,SAAS;AAAA,MACL,MAAM;AAAA,MACN,aACI;AAAA,MACJ,MAAM,EAAE,MAAM,WAAW,UAAU,MAAM;AAAA,MACzC,OAAO;AAAA,QACH,MAAM,EAAE,SAAS,UAAU;AAAA,QAC3B,cAAc,EAAE,SAAS,MAAM;AAAA,MACnC;AAAA,MACA,SAAS;AAAA,QACL,MAAM;AAAA,MACV;AAAA,IACJ;AAAA,IACA,YAAY;AAAA,MACR,MAAM;AAAA,MACN,MAAM,EAAE,MAAM,WAAW,UAAU,MAAM;AAAA,MACzC,OAAO;AAAA,QACH,MAAM,EAAE,SAAS,UAAU;AAAA,QAC3B,cAAc,EAAE,SAAS,MAAM;AAAA,MACnC;AAAA,MACA,SAAS;AAAA,QACL,MAAM;AAAA,MACV;AAAA,IACJ;AAAA,IACA,WAAW;AAAA,MACP,MAAM;AAAA,MACN,aACI;AAAA,MACJ,MAAM,EAAE,MAAM,WAAW,UAAU,MAAM;AAAA,MACzC,OAAO;AAAA,QACH,MAAM,EAAE,SAAS,UAAU;AAAA,QAC3B,cAAc,EAAE,SAAS,MAAM;AAAA,MACnC;AAAA,MACA,SAAS;AAAA,QACL,MAAM;AAAA,MACV;AAAA,IACJ;AAAA,IACA,OAAO;AAAA,MACH,MAAM;AAAA,MACN,MAAM,EAAE,MAAM,WAAW,UAAU,MAAM;AAAA,MACzC,OAAO;AAAA,QACH,MAAM,EAAE,SAAS,UAAU;AAAA,QAC3B,cAAc,EAAE,SAAS,MAAM;AAAA,MACnC;AAAA,MACA,SAAS;AAAA,QACL,MAAM;AAAA,MACV;AAAA,IACJ;AAAA,IACA,UAAU;AAAA,MACN,MAAM;AAAA,MACN,aAAa;AAAA,MACb,MAAM,EAAE,MAAM,WAAW,UAAU,MAAM;AAAA,MACzC,OAAO;AAAA,QACH,MAAM,EAAE,SAAS,UAAU;AAAA,QAC3B,cAAc,EAAE,SAAS,MAAM;AAAA,MACnC;AAAA,MACA,SAAS;AAAA,QACL,MAAM;AAAA,MACV;AAAA,IACJ;AAAA,IACA,SAAS;AAAA,MACL,MAAM;AAAA,MACN,aACI;AAAA,MACJ,OAAO;AAAA,QACH,cAAc,EAAE,SAAS,GAAG;AAAA,MAChC;AAAA,MACA,SAAS;AAAA,QACL,MAAM;AAAA,QACN,SAAS,CAAC,QAAQ,UAAU,UAAU;AAAA,MAC1C;AAAA,IACJ;AAAA,IACA,MAAM;AAAA,MACF,MAAM;AAAA,MACN,aAAa;AAAA,MACb,MAAM,EAAE,MAAM,UAAU,UAAU,KAAK;AAAA,MACvC,OAAO;AAAA,QACH,MAAM,EAAE,SAAS,yBAAyB;AAAA,QAC1C,cAAc,EAAE,SAAS,IAAI;AAAA,MACjC;AAAA,MACA,SAAS;AAAA,QACL,MAAM;AAAA,QACN,SAAS,CAAC,KAAK,KAAK,KAAK,IAAI;AAAA,MACjC;AAAA,IACJ;AAAA,EACJ;AACJ;AAaA,MAAM,WAAW,CAAC,SAAqC;AACnD,wBAAsB,MAAM;AACxB,UAAM,QAAQ,SAAS,cAAc,iBAAiB;AACtD,UAAM,cAAc,MAAM;AAC1B,QAAI,aAAa;AACb,kBAAY,cAAc,aAAa,KAAK;AAAA,QACxC,MAAM;AAAA,MACV,CAAC;AAAA,IACL;AAAA,EACJ,CAAC;AACD,SAAO;AAAA;AAAA;AAAA,kBAGO,YAAY,IAAI,CAAC;AAAA,sBACb,CAAC,EAAE,OAAO,MAAuC;AACvD,UAAM,OAAO,OAAO;AACpB,SAAK,cAAc,aAAa,KAAK;AAAA,MACjC,OAAO;AAAA,IACX,CAAC;AAAA,EACL,CAAC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAyBH,CAAC,CAAC,KAAK,UACH;AAAA;AAAA,kBAGA,OAAO;AAAA;AAErB;AAEO,aAAM,gBAAgB,CAAC,SAC1B,SAAS,IAAI;AACjB,cAAc,OAAO;AAAA,EACjB,SAAS;AAAA,EACT,YAAY;AAAA,EACZ,SAAS;AACb;AAEO,aAAM,kBAAkB,CAAC,SAC5B,SAAS,IAAI;AACjB,gBAAgB,OAAO;AAAA,EACnB,SAAS;AAAA,EACT,YAAY;AAAA,EACZ,SAAS;AACb;AAEO,aAAM,YAAY,CAAC,SAAqC,SAAS,IAAI;AAC5E,UAAU,OAAO;AAAA,EACb,SAAS;AAAA,EACT,YAAY;AAAA,EACZ,WAAW;AAAA,EACX,SAAS;AACb;AAEO,aAAM,WAAW,CAAC,SAAqC,SAAS,IAAI;AAC3E,SAAS,OAAO;AAAA,EACZ,SAAS;AAAA,EACT,YAAY;AAAA,EACZ,UAAU;AAAA,EACV,SAAS;AACb;AAEA,MAAM,4BAA4B,gBAAgB;AAAA,EAAlD;AAAA;AAEI,qBAAY;AAAA;AAAA,EAEO,SAAyB;AACxC,WAAO;AAAA;AAAA;AAAA;AAAA;AAAA,gCAKiB,KAAK,cAAc,MAAM;AAAA,6BAC5B,MAAM;AACX,WAAK,YAAY;AAAA,IACrB,CAAC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gCAsDW,KAAK,cAAc,QAAQ;AAAA,6BAC9B,MAAM;AACX,WAAK,YAAY;AAAA,IACrB,CAAC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gCAsDW,KAAK,cAAc,OAAO;AAAA,6BAC7B,MAAM;AACX,WAAK,YAAY;AAAA,IACrB,CAAC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAqDjB;AACJ;AAnLI;AAAA,EADC,MAAM;AAAA,GADL,oBAEF;AAqLJ,eAAe,OAAO,yBAAyB,mBAAmB;AAE3D,aAAM,aAAa,MAAsB;AAAA;AAAA;",
  "names": []
}
