{
  "version": 3,
  "sources": ["PickerButton.ts"],
  "sourcesContent": ["/**\n * Copyright 2025 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\nimport {\n    CSSResultArray,\n    DefaultElementSize,\n    html,\n    SizedMixin,\n    TemplateResult,\n} from '@spectrum-web-components/base';\nimport { classMap } from '@spectrum-web-components/base/src/directives.js';\nimport { property } from '@spectrum-web-components/base/src/decorators.js';\nimport { ButtonBase } from '@spectrum-web-components/button/src/ButtonBase.js';\nimport '@spectrum-web-components/icons-ui/icons/sp-icon-chevron100.js';\nimport { ObserveSlotPresence } from '@spectrum-web-components/shared/src/observe-slot-presence.js';\n\nimport styles from './picker-button.css.js';\nimport chevronStyles from '@spectrum-web-components/icon/src/spectrum-icon-chevron.css.js';\n\nconst chevronClass = {\n    s: 'spectrum-UIIcon-ChevronDown75',\n    m: 'spectrum-UIIcon-ChevronDown100',\n    l: 'spectrum-UIIcon-ChevronDown200',\n    xl: 'spectrum-UIIcon-ChevronDown300',\n};\n\n/**\n * @element sp-picker-button\n */\nexport class PickerButton extends SizedMixin(\n    ObserveSlotPresence(ButtonBase, '[slot=\"label\"]')\n) {\n    public static override get styles(): CSSResultArray {\n        return [styles, chevronStyles];\n    }\n\n    @property({ type: Boolean, reflect: true })\n    invalid = false;\n\n    @property({ reflect: true })\n    position: 'left' | 'right' = 'right';\n\n    protected get hasText(): boolean {\n        return this.slotContentIsPresent;\n    }\n\n    protected override render(): TemplateResult {\n        const rootClasses = {\n            root: true,\n            uiicononly: !this.hasText,\n            textuiicon: this.hasText,\n        };\n        return html`\n            <div class=${classMap(rootClasses)}>\n                <div class=\"spectrum-PickerButton-fill\">\n                    <span\n                        class=\"spectrum-PickerButton-label is-placeholder\"\n                        ?hidden=${!this.hasText}\n                    >\n                        <slot name=\"label\"></slot>\n                    </span>\n                    <slot name=\"icon\">\n                        <sp-icon-chevron100\n                            class=\"spectrum-PickerButton-icon spectrum-Icon ${chevronClass[\n                                this.size as DefaultElementSize\n                            ]}\"\n                        ></sp-icon-chevron100>\n                    </slot>\n                </div>\n            </div>\n        `;\n    }\n}\n"],
  "mappings": ";;;;;;;;;;;AAWA;AAAA,EAGI;AAAA,EACA;AAAA,OAEG;AACP,SAAS,gBAAgB;AACzB,SAAS,gBAAgB;AACzB,SAAS,kBAAkB;AAC3B,OAAO;AACP,SAAS,2BAA2B;AAEpC,OAAO,YAAY;AACnB,OAAO,mBAAmB;AAE1B,MAAM,eAAe;AAAA,EACjB,GAAG;AAAA,EACH,GAAG;AAAA,EACH,GAAG;AAAA,EACH,IAAI;AACR;AAKO,aAAM,qBAAqB;AAAA,EAC9B,oBAAoB,YAAY,gBAAgB;AACpD,EAAE;AAAA,EAFK;AAAA;AAQH,mBAAU;AAGV,oBAA6B;AAAA;AAAA,EAR7B,WAA2B,SAAyB;AAChD,WAAO,CAAC,QAAQ,aAAa;AAAA,EACjC;AAAA,EAQA,IAAc,UAAmB;AAC7B,WAAO,KAAK;AAAA,EAChB;AAAA,EAEmB,SAAyB;AACxC,UAAM,cAAc;AAAA,MAChB,MAAM;AAAA,MACN,YAAY,CAAC,KAAK;AAAA,MAClB,YAAY,KAAK;AAAA,IACrB;AACA,WAAO;AAAA,yBACU,SAAS,WAAW,CAAC;AAAA;AAAA;AAAA;AAAA,kCAIZ,CAAC,KAAK,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8EAM+B,aAC9C,KAAK,IACT,CAAC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAMzB;AACJ;AAnCI;AAAA,EADC,SAAS,EAAE,MAAM,SAAS,SAAS,KAAK,CAAC;AAAA,GAPjC,aAQT;AAGA;AAAA,EADC,SAAS,EAAE,SAAS,KAAK,CAAC;AAAA,GAVlB,aAWT;",
  "names": []
}
