{
  "version": 3,
  "sources": ["clear-button.test.ts"],
  "sourcesContent": ["/**\n * Copyright 2025 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport '@spectrum-web-components/button/sp-clear-button.js';\nimport { ClearButton } from '@spectrum-web-components/button';\nimport { ElementSize } from '@spectrum-web-components/base';\nimport { elementUpdated, expect, fixture, html } from '@open-wc/testing';\nimport { testForLitDevWarnings } from '../../../test/testing-helpers';\nimport { SinonStub, stub } from 'sinon';\n\ndescribe('Clear Button', () => {\n    testForLitDevWarnings(async () =>\n        fixture<ClearButton>(html`\n            <sp-clear-button size=\"m\" label=\"Clear\"></sp-clear-button>\n        `)\n    );\n    (['s', 'm', 'l', 'xl'] as ElementSize[]).map((size) => {\n        it(`loads - ${size}`, async () => {\n            const el = await fixture<ClearButton>(html`\n                <sp-clear-button size=${size} label=\"Clear\"></sp-clear-button>\n            `);\n\n            await expect(el).to.be.accessible();\n        });\n    });\n    it(`loads static-color=\"white\" when variant=\"overBackground\"`, async () => {\n        const el = await fixture<ClearButton>(html`\n            <sp-clear-button\n                label=\"Clear\"\n                variant=\"overBackground\"\n            ></sp-clear-button>\n        `);\n\n        await elementUpdated(el);\n\n        // Check that the staticColor is set to white\n        expect(el.staticColor).to.equal('white');\n        expect(el.hasAttribute('static-color')).to.be.true;\n        expect(el.getAttribute('static-color')).to.equal('white');\n    });\n\n    describe('dev mode', () => {\n        let consoleStub: SinonStub;\n        before(() => {\n            window.__swc.verbose = true;\n            consoleStub = stub(console, 'warn');\n        });\n\n        after(() => {\n            window.__swc.verbose = false;\n            consoleStub.restore();\n        });\n\n        it('should log dev warning when overBackground variant is used', async () => {\n            const el = await fixture<ClearButton>(html`\n                <sp-clear-button\n                    label=\"Clear\"\n                    variant=\"overBackground\"\n                ></sp-clear-button>\n            `);\n\n            await elementUpdated(el);\n\n            const warning = consoleStub.getCall(0).args.at(0);\n            const expectedContent =\n                'The overBackground variant is deprecated. Please use `static-color=\"white\"` instead.';\n\n            expect(consoleStub).to.be.calledOnce;\n            expect(warning.includes(expectedContent)).to.be.true;\n        });\n    });\n});\n"],
  "mappings": ";AAYA,OAAO;AAGP,SAAS,gBAAgB,QAAQ,SAAS,YAAY;AACtD,SAAS,6BAA6B;AACtC,SAAoB,YAAY;AAEhC,SAAS,gBAAgB,MAAM;AAC3B;AAAA,IAAsB,YAClB,QAAqB;AAAA;AAAA,SAEpB;AAAA,EACL;AACA,EAAC,CAAC,KAAK,KAAK,KAAK,IAAI,EAAoB,IAAI,CAAC,SAAS;AACnD,OAAG,WAAW,IAAI,IAAI,YAAY;AAC9B,YAAM,KAAK,MAAM,QAAqB;AAAA,wCACV,IAAI;AAAA,aAC/B;AAED,YAAM,OAAO,EAAE,EAAE,GAAG,GAAG,WAAW;AAAA,IACtC,CAAC;AAAA,EACL,CAAC;AACD,KAAG,4DAA4D,YAAY;AACvE,UAAM,KAAK,MAAM,QAAqB;AAAA;AAAA;AAAA;AAAA;AAAA,SAKrC;AAED,UAAM,eAAe,EAAE;AAGvB,WAAO,GAAG,WAAW,EAAE,GAAG,MAAM,OAAO;AACvC,WAAO,GAAG,aAAa,cAAc,CAAC,EAAE,GAAG,GAAG;AAC9C,WAAO,GAAG,aAAa,cAAc,CAAC,EAAE,GAAG,MAAM,OAAO;AAAA,EAC5D,CAAC;AAED,WAAS,YAAY,MAAM;AACvB,QAAI;AACJ,WAAO,MAAM;AACT,aAAO,MAAM,UAAU;AACvB,oBAAc,KAAK,SAAS,MAAM;AAAA,IACtC,CAAC;AAED,UAAM,MAAM;AACR,aAAO,MAAM,UAAU;AACvB,kBAAY,QAAQ;AAAA,IACxB,CAAC;AAED,OAAG,8DAA8D,YAAY;AACzE,YAAM,KAAK,MAAM,QAAqB;AAAA;AAAA;AAAA;AAAA;AAAA,aAKrC;AAED,YAAM,eAAe,EAAE;AAEvB,YAAM,UAAU,YAAY,QAAQ,CAAC,EAAE,KAAK,GAAG,CAAC;AAChD,YAAM,kBACF;AAEJ,aAAO,WAAW,EAAE,GAAG,GAAG;AAC1B,aAAO,QAAQ,SAAS,eAAe,CAAC,EAAE,GAAG,GAAG;AAAA,IACpD,CAAC;AAAA,EACL,CAAC;AACL,CAAC;",
  "names": []
}
