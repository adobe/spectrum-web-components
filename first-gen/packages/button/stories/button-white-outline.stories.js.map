{
  "version": 3,
  "sources": ["button-white-outline.stories.ts"],
  "sourcesContent": ["/**\n * Copyright 2025 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\nimport { TemplateResult } from '@spectrum-web-components/base';\nimport {\n    makeOverBackground,\n    renderButtonSet,\n    renderLink,\n    renderLinkWithTarget,\n    renderMinWidthButton,\n    renderWithIcon,\n    renderWithIconOnly,\n} from './index.js';\nimport '@spectrum-web-components/icons-workflow/icons/sp-icon-help.js';\nimport type { Properties } from './index.js';\nimport { args, argTypes } from './index.js';\n\nconst staticColor = 'white';\nconst treatment = 'outline';\n\nexport default {\n    component: 'sp-button',\n    title: 'Button/White/Outline',\n    decorators: [makeOverBackground(staticColor)],\n    args: {\n        ...args,\n        staticColor,\n        treatment,\n    },\n    argTypes,\n};\n\nexport const Default = (props: Properties): TemplateResult =>\n    renderButtonSet(props);\n\nexport const Primary = (props: Properties): TemplateResult =>\n    renderButtonSet(props);\n\nPrimary.args = {\n    variant: 'primary',\n};\n\nexport const Secondary = (props: Properties): TemplateResult =>\n    renderButtonSet(props);\n\nSecondary.args = {\n    variant: 'secondary',\n};\n\nexport const withIcon = (props: Properties): TemplateResult =>\n    renderWithIcon(props);\n\nexport const withIconOnly = (props: Properties): TemplateResult =>\n    renderWithIconOnly(props);\n\nexport const minWidthButton = (props: Properties): TemplateResult =>\n    renderMinWidthButton(props);\n\nminWidthButton.storyName = 'min-width';\n\nexport const link = (props: Properties): TemplateResult => renderLink(props);\n\nlink.storyName = 'href';\n\nexport const linkWithTarget = (props: Properties): TemplateResult =>\n    renderLinkWithTarget(props);\n\nlinkWithTarget.storyName = 'href with target=\"_blank\"';\n"],
  "mappings": ";AAYA;AAAA,EACI;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,OACG;AACP,OAAO;AAEP,SAAS,MAAM,gBAAgB;AAE/B,MAAM,cAAc;AACpB,MAAM,YAAY;AAElB,eAAe;AAAA,EACX,WAAW;AAAA,EACX,OAAO;AAAA,EACP,YAAY,CAAC,mBAAmB,WAAW,CAAC;AAAA,EAC5C,MAAM;AAAA,IACF,GAAG;AAAA,IACH;AAAA,IACA;AAAA,EACJ;AAAA,EACA;AACJ;AAEO,aAAM,UAAU,CAAC,UACpB,gBAAgB,KAAK;AAElB,aAAM,UAAU,CAAC,UACpB,gBAAgB,KAAK;AAEzB,QAAQ,OAAO;AAAA,EACX,SAAS;AACb;AAEO,aAAM,YAAY,CAAC,UACtB,gBAAgB,KAAK;AAEzB,UAAU,OAAO;AAAA,EACb,SAAS;AACb;AAEO,aAAM,WAAW,CAAC,UACrB,eAAe,KAAK;AAEjB,aAAM,eAAe,CAAC,UACzB,mBAAmB,KAAK;AAErB,aAAM,iBAAiB,CAAC,UAC3B,qBAAqB,KAAK;AAE9B,eAAe,YAAY;AAEpB,aAAM,OAAO,CAAC,UAAsC,WAAW,KAAK;AAE3E,KAAK,YAAY;AAEV,aAAM,iBAAiB,CAAC,UAC3B,qBAAqB,KAAK;AAE9B,eAAe,YAAY;",
  "names": []
}
