{
  "version": 3,
  "sources": ["index.ts"],
  "sourcesContent": ["/**\n * Copyright 2025 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\nimport { html, TemplateResult } from '@spectrum-web-components/base';\nimport { ifDefined } from '@spectrum-web-components/base/src/directives.js';\n\nimport '@spectrum-web-components/button/sp-button.js';\nimport '@spectrum-web-components/icon/sp-icon.js';\nimport '@spectrum-web-components/icons-workflow/icons/sp-icon-help.js';\n\nimport type { Properties } from './template.js';\nexport type { Properties };\n\nexport const args = {\n    disabled: false,\n    variant: 'cta',\n    pending: false,\n};\n\nexport const argTypes = {\n    disabled: {\n        name: 'disabled',\n        type: { name: 'boolean', required: false },\n        description:\n            'Disable this control. It will not receive focus or events.',\n        table: {\n            type: { summary: 'boolean' },\n            defaultValue: { summary: false },\n        },\n        control: {\n            type: 'boolean',\n        },\n    },\n    variant: {\n        name: 'variant',\n        type: { name: 'string', required: false },\n        description: 'The visual variant to apply to the button.',\n        table: {\n            type: { summary: 'string' },\n            defaultValue: { summary: 'cta' },\n        },\n        control: {\n            type: 'inline-radio',\n            options: [\n                'cta',\n                'accent',\n                'primary',\n                'secondary',\n                'negative',\n                'overBackground',\n                'black',\n                'white',\n            ],\n        },\n    },\n    treatment: {\n        name: 'treatment',\n        type: { name: 'string', required: false },\n        description: 'The visual treatment to apply to the button.',\n        table: {\n            type: { summary: 'string' },\n            defaultValue: { summary: 'fill' },\n        },\n        control: {\n            type: 'inline-radio',\n            options: ['fill', 'outline'],\n        },\n    },\n    pending: {\n        name: 'pending',\n        type: { name: 'boolean', required: false },\n        description: 'Shows the pending state of the button.',\n        table: {\n            type: { summary: 'boolean' },\n            defaultValue: { summary: false },\n        },\n        control: {\n            type: 'boolean',\n        },\n    },\n};\n\nexport const makeOverBackground =\n    (staticColor?: 'white' | 'black') =>\n    (story: () => TemplateResult): TemplateResult => {\n        const color =\n            staticColor === 'black'\n                ? 'var(--spectrum-docs-static-black-background-color)'\n                : 'var(--spectrum-docs-static-white-background-color)';\n        return html`\n            <div\n                style=\"\n                    background-color: ${color};\n                    padding: calc(var(--swc-scale-factor) * 14px) calc(var(--swc-scale-factor) * 20px);\n                    display: inline-block;\n                \"\n            >\n                ${story()}\n            </div>\n        `;\n    };\n\nexport function renderButton(properties: Properties): TemplateResult {\n    return html`\n        <sp-button\n            ?disabled=${!!properties.disabled}\n            href=${ifDefined(properties.href)}\n            ?icon-only=${properties.iconOnly}\n            ?pending=${!!properties.pending}\n            ?quiet=\"${!!properties.quiet}\"\n            ?no-wrap=\"${!!properties.noWrap}\"\n            size=${ifDefined(properties.size)}\n            target=${ifDefined(properties.target)}\n            treatment=${ifDefined(properties.treatment)}\n            variant=${ifDefined(properties.variant)}\n            static-color=${ifDefined(properties.staticColor)}\n        >\n            ${properties.content || 'Click Me'}\n        </sp-button>\n    `;\n}\n\nexport function renderButtonSet(properties: Properties): TemplateResult {\n    const disabled = Object.assign({}, properties, { disabled: true });\n    const icon = Object.assign({}, properties, {\n        content: html`\n            <sp-icon-help slot=\"icon\"></sp-icon-help>\n            Click Me\n        `,\n    });\n    return html`\n        ${renderButton(properties)} ${renderButton(disabled)}\n        ${renderButton(icon)}\n    `;\n}\n\nexport function renderIconButtonSet(properties: Properties): TemplateResult {\n    const disabled = Object.assign({}, properties, {\n        iconOnly: true,\n        disabled: true,\n    });\n    const iconOnly = Object.assign({}, properties, {\n        iconOnly: true,\n        content: html`\n            <sp-icon-help slot=\"icon\"></sp-icon-help>\n        `,\n    });\n    return html`\n        ${renderButton(iconOnly)} ${renderButton(disabled)}\n    `;\n}\n\nexport const bellIcon = html`\n    <svg slot=\"icon\" viewBox=\"0 0 36 36\" focusable=\"false\" aria-hidden=\"true\">\n        <path\n            d=\"M16 36a4.407 4.407 0 0 0 4-4h-8a4.407 4.407 0 0 0 4 4zm9.143-24.615c0-3.437-3.206-4.891-7.143-5.268V3a1.079 1.079 0 0 0-1.143-1h-1.714A1.079 1.079 0 0 0 14 3v3.117c-3.937.377-7.143 1.831-7.143 5.268C6.857 26.8 2 26.111 2 28.154V30h28v-1.846C30 26 25.143 26.8 25.143 11.385z\"\n        ></path>\n    </svg>\n`;\n\nexport const renderWithIcon = (props: Properties): TemplateResult => {\n    return html`\n        <style>\n            .row {\n                padding: 10px;\n            }\n        </style>\n        <div class=\"row\">\n            ${renderButtonSet({\n                ...props,\n                content: html`\n                    <sp-icon-help slot=\"icon\"></sp-icon-help>\n                    Help\n                `,\n            })}\n        </div>\n        <div class=\"row\">\n            ${renderButtonSet({\n                ...props,\n                content: html`\n                    ${bellIcon} Custom SVG\n                `,\n            })}\n        </div>\n    `;\n};\n\nexport const renderWithIconOnly = (props: Properties): TemplateResult => {\n    return html`\n        ${renderIconButtonSet({\n            ...props,\n            content: html`\n                <sp-icon-help slot=\"icon\"></sp-icon-help>\n            `,\n        })}\n    `;\n};\n\nexport const renderMinWidthButton = (props: Properties): TemplateResult => {\n    return html`\n        <style>\n            sp-button {\n                min-width: 300px;\n            }\n        </style>\n        ${renderButtonSet(props)}\n    `;\n};\n\nconst href = 'https://github.com/adobe/spectrum-web-components';\n\nexport const renderLink = (props: Properties): TemplateResult =>\n    renderButtonSet({\n        ...props,\n        href,\n    });\n\nexport const renderLinkWithTarget = (props: Properties): TemplateResult =>\n    renderButtonSet({\n        ...props,\n        href,\n        target: '_blank',\n    });\n"],
  "mappings": "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",
  "names": []
}
