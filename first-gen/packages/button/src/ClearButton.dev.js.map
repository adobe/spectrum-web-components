{
  "version": 3,
  "sources": ["ClearButton.ts"],
  "sourcesContent": ["/**\n * Copyright 2025 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {\n    CSSResultArray,\n    html,\n    SizedMixin,\n    TemplateResult,\n} from '@spectrum-web-components/base';\nimport { property } from '@spectrum-web-components/base/src/decorators.js';\nimport { StyledButton } from './StyledButton.dev.js'\nimport buttonStyles from '@spectrum-web-components/clear-button/src/clear-button.css.js';\nimport '@spectrum-web-components/icons-ui/icons/sp-icon-cross75.js';\nimport '@spectrum-web-components/icons-ui/icons/sp-icon-cross100.js';\nimport '@spectrum-web-components/icons-ui/icons/sp-icon-cross200.js';\nimport '@spectrum-web-components/icons-ui/icons/sp-icon-cross300.js';\nimport crossMediumStyles from '@spectrum-web-components/icon/src/spectrum-icon-cross.css.js';\n\nconst crossIcon: Record<string, () => TemplateResult> = {\n    s: () => html`\n        <sp-icon-cross75\n            slot=\"icon\"\n            class=\"icon spectrum-UIIcon-Cross75\"\n        ></sp-icon-cross75>\n    `,\n    m: () => html`\n        <sp-icon-cross100\n            slot=\"icon\"\n            class=\"icon spectrum-UIIcon-Cross100\"\n        ></sp-icon-cross100>\n    `,\n    l: () => html`\n        <sp-icon-cross200\n            slot=\"icon\"\n            class=\"icon spectrum-UIIcon-Cross200\"\n        ></sp-icon-cross200>\n    `,\n    xl: () => html`\n        <sp-icon-cross300\n            slot=\"icon\"\n            class=\"icon spectrum-UIIcon-Cross300\"\n        ></sp-icon-cross300>\n    `,\n};\n\n/**\n * @element sp-clear-button\n *\n * @slot - text label of the Clear Button\n */\nexport class ClearButton extends SizedMixin(StyledButton, {\n    noDefaultSize: true,\n}) {\n    public static override get styles(): CSSResultArray {\n        return [...super.styles, buttonStyles, crossMediumStyles];\n    }\n\n    @property({ type: Boolean, reflect: true })\n    public quiet = false;\n\n    /**\n     * The visual variant to apply to this button.\n     * @deprecated Use `static-color='white'` instead.\n     */\n    @property({ reflect: true })\n    public set variant(variant: 'overBackground' | undefined) {\n        const oldValue = this._variant;\n        const oldStaticColor = this.staticColor;\n        if (variant !== 'overBackground') {\n            this.removeAttribute('variant');\n            this._variant = undefined;\n            this.staticColor = undefined;\n            return;\n        }\n\n        this.setAttribute('variant', variant);\n        this._variant = variant;\n        // Set staticColor to white to reflect the updated and expected attribute\n        this.staticColor = 'white';\n\n        if (window.__swc.DEBUG) {\n            window.__swc.warn(\n                this,\n                'The overBackground variant is deprecated. Please use `static-color=\"white\"` instead.',\n                'https://opensource.adobe.com/spectrum-web-components/components/clear-button/',\n                { level: 'deprecation' }\n            );\n        }\n\n        this.requestUpdate('variant', oldValue);\n        this.requestUpdate('staticColor', oldStaticColor);\n    }\n\n    public get variant(): 'overBackground' | undefined {\n        return this._variant;\n    }\n\n    private _variant: 'overBackground' | undefined;\n\n    /**\n     * The visual variant to apply to this button.\n     */\n    @property({ reflect: true, attribute: 'static-color' })\n    public staticColor: 'white' | undefined;\n\n    protected override get buttonContent(): TemplateResult[] {\n        return [crossIcon[this.size]()];\n    }\n\n    protected override render(): TemplateResult {\n        return html`\n            <div class=\"fill\">${super.render()}</div>\n        `;\n    }\n}\n"],
  "mappings": ";;;;;;;;;;;AAYA;AAAA,EAEI;AAAA,EACA;AAAA,OAEG;AACP,SAAS,gBAAgB;AACzB,SAAS,oBAAoB;AAC7B,OAAO,kBAAkB;AACzB,OAAO;AACP,OAAO;AACP,OAAO;AACP,OAAO;AACP,OAAO,uBAAuB;AAE9B,MAAM,YAAkD;AAAA,EACpD,GAAG,MAAM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAMT,GAAG,MAAM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAMT,GAAG,MAAM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAMT,IAAI,MAAM;AAAA;AAAA;AAAA;AAAA;AAAA;AAMd;AAOO,aAAM,oBAAoB,WAAW,cAAc;AAAA,EACtD,eAAe;AACnB,CAAC,EAAE;AAAA,EAFI;AAAA;AAQH,SAAO,QAAQ;AAAA;AAAA,EALf,WAA2B,SAAyB;AAChD,WAAO,CAAC,GAAG,MAAM,QAAQ,cAAc,iBAAiB;AAAA,EAC5D;AAAA,EAUA,IAAW,QAAQ,SAAuC;AACtD,UAAM,WAAW,KAAK;AACtB,UAAM,iBAAiB,KAAK;AAC5B,QAAI,YAAY,kBAAkB;AAC9B,WAAK,gBAAgB,SAAS;AAC9B,WAAK,WAAW;AAChB,WAAK,cAAc;AACnB;AAAA,IACJ;AAEA,SAAK,aAAa,WAAW,OAAO;AACpC,SAAK,WAAW;AAEhB,SAAK,cAAc;AAEnB,QAAI,MAAoB;AACpB,aAAO,MAAM;AAAA,QACT;AAAA,QACA;AAAA,QACA;AAAA,QACA,EAAE,OAAO,cAAc;AAAA,MAC3B;AAAA,IACJ;AAEA,SAAK,cAAc,WAAW,QAAQ;AACtC,SAAK,cAAc,eAAe,cAAc;AAAA,EACpD;AAAA,EAEA,IAAW,UAAwC;AAC/C,WAAO,KAAK;AAAA,EAChB;AAAA,EAUA,IAAuB,gBAAkC;AACrD,WAAO,CAAC,UAAU,KAAK,IAAI,EAAE,CAAC;AAAA,EAClC;AAAA,EAEmB,SAAyB;AACxC,WAAO;AAAA,gCACiB,MAAM,OAAO,CAAC;AAAA;AAAA,EAE1C;AACJ;AAxDW;AAAA,EADN,SAAS,EAAE,MAAM,SAAS,SAAS,KAAK,CAAC;AAAA,GAPjC,YAQF;AAOI;AAAA,EADV,SAAS,EAAE,SAAS,KAAK,CAAC;AAAA,GAdlB,YAeE;AAsCJ;AAAA,EADN,SAAS,EAAE,SAAS,MAAM,WAAW,eAAe,CAAC;AAAA,GApD7C,YAqDF;",
  "names": []
}
