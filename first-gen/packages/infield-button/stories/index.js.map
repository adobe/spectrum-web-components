{
  "version": 3,
  "sources": ["index.ts"],
  "sourcesContent": ["/**\n * Copyright 2025 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\nimport { html, TemplateResult } from '@spectrum-web-components/base';\n\nimport '@spectrum-web-components/infield-button/sp-infield-button.js';\nimport '@spectrum-web-components/icons-workflow/icons/sp-icon-add.js';\nimport '@spectrum-web-components/icons-ui/icons/sp-icon-chevron75.js';\nimport { ifDefined } from '@spectrum-web-components/base/src/directives.js';\nimport chevronStyles from '@spectrum-web-components/icon/src/spectrum-icon-chevron.css.js';\n\ndocument.adoptedStyleSheets = [\n    ...document.adoptedStyleSheets,\n    chevronStyles.styleSheet as CSSStyleSheet,\n];\n\nexport type StoryArgs = {\n    block?: 'start' | 'end';\n    content?: () => TemplateResult;\n    disabled?: boolean;\n    inline?: 'start' | 'end';\n    label?: string;\n    size?: 's' | 'm' | 'l' | 'xl';\n    quiet?: boolean;\n};\n\nexport const args = {\n    block: undefined,\n    disabled: false,\n    inline: undefined,\n    label: 'Add',\n    size: undefined,\n    quiet: false,\n} as StoryArgs;\n\nexport const argTypes = {\n    block: {\n        name: 'block',\n        type: { name: 'text', required: false },\n        description: 'Where to place the button along the block axis.',\n        table: {\n            type: { summary: '\"start\" | \"end\"' },\n            defaultValue: { summary: '' },\n        },\n        control: 'select',\n        options: ['none', 'start', 'end'],\n    },\n    disabled: {\n        name: 'disabled',\n        type: { name: 'boolean', required: false },\n        description: 'Whether the button is disabled or not.',\n        table: {\n            type: { summary: 'boolean' },\n            defaultValue: { summary: false },\n        },\n        control: {\n            type: 'boolean',\n        },\n    },\n    inline: {\n        name: 'inline',\n        type: { name: 'text', required: false },\n        description: 'Where to place the button along the inline axis.',\n        table: {\n            type: { summary: '\"start\" | \"end\"' },\n            defaultValue: { summary: '' },\n        },\n        control: 'select',\n        options: ['none', 'start', 'end'],\n    },\n    size: {\n        name: 'size',\n        type: { name: 'text', required: false },\n        description: 'The t-shit size of the button.',\n        table: {\n            type: { summary: '\"s\" | \"m\" | \"l\" | \"xl\"' },\n            defaultValue: { summary: '' },\n        },\n        control: 'select',\n        options: ['s', 'm', 'l', 'xl'],\n    },\n    quiet: {\n        name: 'quiet',\n        type: { name: 'boolean', required: false },\n        description: 'Whether the button is quiet or not.',\n        table: {\n            type: { summary: 'boolean' },\n            defaultValue: { summary: false },\n        },\n        control: {\n            type: 'boolean',\n        },\n    },\n};\n\nexport const Template = ({\n    block,\n    content,\n    disabled,\n    inline,\n    label,\n    size,\n    quiet,\n}: StoryArgs): TemplateResult => {\n    return html`\n        <sp-infield-button\n            block=${ifDefined(block)}\n            ?disabled=${disabled}\n            inline=${ifDefined(inline)}\n            label=${ifDefined(label)}\n            size=${ifDefined(size)}\n            ?quiet=${quiet}\n        >\n            ${content\n                ? content()\n                : html`\n                      <sp-icon-add></sp-icon-add>\n                  `}\n        </sp-infield-button>\n    `;\n};\n\nexport const chevronUp = (): TemplateResult => html`\n    <sp-icon-chevron75 class=\"spectrum-UIIcon-ChevronUp75\"></sp-icon-chevron75>\n`;\nexport const chevronDown = (): TemplateResult => html`\n    <sp-icon-chevron75\n        class=\"spectrum-UIIcon-ChevronDown75\"\n    ></sp-icon-chevron75>\n`;\n"],
  "mappings": ";AAWA,SAAS,YAA4B;AAErC,OAAO;AACP,OAAO;AACP,OAAO;AACP,SAAS,iBAAiB;AAC1B,OAAO,mBAAmB;AAE1B,SAAS,qBAAqB;AAAA,EAC1B,GAAG,SAAS;AAAA,EACZ,cAAc;AAClB;AAYO,aAAM,OAAO;AAAA,EAChB,OAAO;AAAA,EACP,UAAU;AAAA,EACV,QAAQ;AAAA,EACR,OAAO;AAAA,EACP,MAAM;AAAA,EACN,OAAO;AACX;AAEO,aAAM,WAAW;AAAA,EACpB,OAAO;AAAA,IACH,MAAM;AAAA,IACN,MAAM,EAAE,MAAM,QAAQ,UAAU,MAAM;AAAA,IACtC,aAAa;AAAA,IACb,OAAO;AAAA,MACH,MAAM,EAAE,SAAS,kBAAkB;AAAA,MACnC,cAAc,EAAE,SAAS,GAAG;AAAA,IAChC;AAAA,IACA,SAAS;AAAA,IACT,SAAS,CAAC,QAAQ,SAAS,KAAK;AAAA,EACpC;AAAA,EACA,UAAU;AAAA,IACN,MAAM;AAAA,IACN,MAAM,EAAE,MAAM,WAAW,UAAU,MAAM;AAAA,IACzC,aAAa;AAAA,IACb,OAAO;AAAA,MACH,MAAM,EAAE,SAAS,UAAU;AAAA,MAC3B,cAAc,EAAE,SAAS,MAAM;AAAA,IACnC;AAAA,IACA,SAAS;AAAA,MACL,MAAM;AAAA,IACV;AAAA,EACJ;AAAA,EACA,QAAQ;AAAA,IACJ,MAAM;AAAA,IACN,MAAM,EAAE,MAAM,QAAQ,UAAU,MAAM;AAAA,IACtC,aAAa;AAAA,IACb,OAAO;AAAA,MACH,MAAM,EAAE,SAAS,kBAAkB;AAAA,MACnC,cAAc,EAAE,SAAS,GAAG;AAAA,IAChC;AAAA,IACA,SAAS;AAAA,IACT,SAAS,CAAC,QAAQ,SAAS,KAAK;AAAA,EACpC;AAAA,EACA,MAAM;AAAA,IACF,MAAM;AAAA,IACN,MAAM,EAAE,MAAM,QAAQ,UAAU,MAAM;AAAA,IACtC,aAAa;AAAA,IACb,OAAO;AAAA,MACH,MAAM,EAAE,SAAS,yBAAyB;AAAA,MAC1C,cAAc,EAAE,SAAS,GAAG;AAAA,IAChC;AAAA,IACA,SAAS;AAAA,IACT,SAAS,CAAC,KAAK,KAAK,KAAK,IAAI;AAAA,EACjC;AAAA,EACA,OAAO;AAAA,IACH,MAAM;AAAA,IACN,MAAM,EAAE,MAAM,WAAW,UAAU,MAAM;AAAA,IACzC,aAAa;AAAA,IACb,OAAO;AAAA,MACH,MAAM,EAAE,SAAS,UAAU;AAAA,MAC3B,cAAc,EAAE,SAAS,MAAM;AAAA,IACnC;AAAA,IACA,SAAS;AAAA,MACL,MAAM;AAAA,IACV;AAAA,EACJ;AACJ;AAEO,aAAM,WAAW,CAAC;AAAA,EACrB;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AACJ,MAAiC;AAC7B,SAAO;AAAA;AAAA,oBAES,UAAU,KAAK,CAAC;AAAA,wBACZ,QAAQ;AAAA,qBACX,UAAU,MAAM,CAAC;AAAA,oBAClB,UAAU,KAAK,CAAC;AAAA,mBACjB,UAAU,IAAI,CAAC;AAAA,qBACb,KAAK;AAAA;AAAA,cAEZ,UACI,QAAQ,IACR;AAAA;AAAA,mBAEC;AAAA;AAAA;AAGnB;AAEO,aAAM,YAAY,MAAsB;AAAA;AAAA;AAGxC,aAAM,cAAc,MAAsB;AAAA;AAAA;AAAA;AAAA;",
  "names": []
}
