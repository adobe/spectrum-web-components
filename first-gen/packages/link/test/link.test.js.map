{
  "version": 3,
  "sources": ["link.test.ts"],
  "sourcesContent": ["/**\n * Copyright 2025 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport '@spectrum-web-components/link/sp-link.js';\nimport { Link } from '@spectrum-web-components/link';\nimport { elementUpdated, expect, fixture, html } from '@open-wc/testing';\nimport { testForLitDevWarnings } from '../../../test/testing-helpers.js';\nimport { spy } from 'sinon';\n\ndescribe('Link', () => {\n    testForLitDevWarnings(\n        async () =>\n            await fixture<Link>(html`\n                <sp-link href=\"test_url\">Default Link</sp-link>\n            `)\n    );\n    it('loads', async () => {\n        const el = await fixture<Link>(html`\n            <sp-link href=\"test_url\">Default Link</sp-link>\n        `);\n\n        await elementUpdated(el);\n        expect(el).to.not.be.undefined;\n        expect(el.textContent).to.include('Default Link');\n\n        await expect(el).to.be.accessible();\n    });\n\n    it('loads[download]', async () => {\n        const el = await fixture<Link>(html`\n            <sp-link href=\"test_url\" download=\"somefile.txt\">\n                Default Link\n            </sp-link>\n        `);\n\n        await elementUpdated(el);\n        expect(el).to.not.be.undefined;\n        expect(el.textContent).to.include('Default Link');\n\n        await expect(el).to.be.accessible();\n    });\n\n    it('loads[rel]', async () => {\n        const el = await fixture<Link>(html`\n            <sp-link href=\"test_url\" rel=\"external\">Default Link</sp-link>\n        `);\n\n        await elementUpdated(el);\n        expect(el).to.not.be.undefined;\n        expect(el.focusElement.getAttribute('rel')).to.eq('external');\n\n        await expect(el).to.be.accessible();\n    });\n\n    it('no click triggers for disabled link', async () => {\n        const clickSpy = spy();\n        const el = await fixture<Link>(html`\n            <sp-link href=\"#\" disabled @click=${() => clickSpy()}>\n                Disabled Link\n            </sp-link>\n        `);\n\n        await elementUpdated(el);\n        expect(el).to.not.be.undefined;\n        expect(el.disabled).to.eq(true);\n        await expect(el).to.be.accessible();\n        el.click();\n        expect(clickSpy.callCount).to.equal(0);\n    });\n});\n"],
  "mappings": ";AAYA,OAAO;AAEP,SAAS,gBAAgB,QAAQ,SAAS,YAAY;AACtD,SAAS,6BAA6B;AACtC,SAAS,WAAW;AAEpB,SAAS,QAAQ,MAAM;AACnB;AAAA,IACI,YACI,MAAM,QAAc;AAAA;AAAA,aAEnB;AAAA,EACT;AACA,KAAG,SAAS,YAAY;AACpB,UAAM,KAAK,MAAM,QAAc;AAAA;AAAA,SAE9B;AAED,UAAM,eAAe,EAAE;AACvB,WAAO,EAAE,EAAE,GAAG,IAAI,GAAG;AACrB,WAAO,GAAG,WAAW,EAAE,GAAG,QAAQ,cAAc;AAEhD,UAAM,OAAO,EAAE,EAAE,GAAG,GAAG,WAAW;AAAA,EACtC,CAAC;AAED,KAAG,mBAAmB,YAAY;AAC9B,UAAM,KAAK,MAAM,QAAc;AAAA;AAAA;AAAA;AAAA,SAI9B;AAED,UAAM,eAAe,EAAE;AACvB,WAAO,EAAE,EAAE,GAAG,IAAI,GAAG;AACrB,WAAO,GAAG,WAAW,EAAE,GAAG,QAAQ,cAAc;AAEhD,UAAM,OAAO,EAAE,EAAE,GAAG,GAAG,WAAW;AAAA,EACtC,CAAC;AAED,KAAG,cAAc,YAAY;AACzB,UAAM,KAAK,MAAM,QAAc;AAAA;AAAA,SAE9B;AAED,UAAM,eAAe,EAAE;AACvB,WAAO,EAAE,EAAE,GAAG,IAAI,GAAG;AACrB,WAAO,GAAG,aAAa,aAAa,KAAK,CAAC,EAAE,GAAG,GAAG,UAAU;AAE5D,UAAM,OAAO,EAAE,EAAE,GAAG,GAAG,WAAW;AAAA,EACtC,CAAC;AAED,KAAG,uCAAuC,YAAY;AAClD,UAAM,WAAW,IAAI;AACrB,UAAM,KAAK,MAAM,QAAc;AAAA,gDACS,MAAM,SAAS,CAAC;AAAA;AAAA;AAAA,SAGvD;AAED,UAAM,eAAe,EAAE;AACvB,WAAO,EAAE,EAAE,GAAG,IAAI,GAAG;AACrB,WAAO,GAAG,QAAQ,EAAE,GAAG,GAAG,IAAI;AAC9B,UAAM,OAAO,EAAE,EAAE,GAAG,GAAG,WAAW;AAClC,OAAG,MAAM;AACT,WAAO,SAAS,SAAS,EAAE,GAAG,MAAM,CAAC;AAAA,EACzC,CAAC;AACL,CAAC;",
  "names": []
}
