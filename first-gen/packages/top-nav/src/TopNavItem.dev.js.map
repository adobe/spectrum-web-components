{
  "version": 3,
  "sources": ["TopNavItem.ts"],
  "sourcesContent": ["/**\n * Copyright 2025 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {\n    CSSResultArray,\n    html,\n    PropertyValues,\n    TemplateResult,\n} from '@spectrum-web-components/base';\nimport { ifDefined } from '@spectrum-web-components/base/src/directives.js';\nimport {\n    property,\n    query,\n} from '@spectrum-web-components/base/src/decorators.js';\nimport { Focusable, LikeAnchor } from '@spectrum-web-components/shared';\n\nimport itemStyles from '@spectrum-web-components/tabs/src/tab.css.js';\nimport topNavItemStyles from './top-nav-item.css.js';\n\n/**\n * @element sp-top-nav-item\n *\n * @slot - text label of the Top Nav Item\n */\n\nexport class TopNavItem extends LikeAnchor(Focusable) {\n    public static override get styles(): CSSResultArray {\n        return [itemStyles, topNavItemStyles];\n    }\n\n    @query('a')\n    private anchor!: HTMLAnchorElement;\n\n    @property({ type: Boolean, reflect: true })\n    public selected = false;\n\n    public value = '';\n\n    public override get focusElement(): HTMLAnchorElement {\n        return this.anchor;\n    }\n\n    public override click(): void {\n        this.anchor.click();\n    }\n\n    protected override render(): TemplateResult {\n        return html`\n            <a\n                id=\"item-label\"\n                href=${ifDefined(this.href)}\n                download=${ifDefined(this.download)}\n                target=${ifDefined(this.target)}\n                aria-label=${ifDefined(this.label)}\n                aria-current=${ifDefined(\n                    this.selected && this.href ? 'page' : undefined\n                )}\n                rel=${ifDefined(this.rel)}\n            >\n                <slot></slot>\n            </a>\n        `;\n    }\n\n    protected override updated(changes: PropertyValues): void {\n        super.updated(changes);\n        this.value = this.anchor.href;\n    }\n}\n"],
  "mappings": ";;;;;;;;;;;AAYA;AAAA,EAEI;AAAA,OAGG;AACP,SAAS,iBAAiB;AAC1B;AAAA,EACI;AAAA,EACA;AAAA,OACG;AACP,SAAS,WAAW,kBAAkB;AAEtC,OAAO,gBAAgB;AACvB,OAAO,sBAAsB;AAQtB,aAAM,mBAAmB,WAAW,SAAS,EAAE;AAAA,EAA/C;AAAA;AASH,SAAO,WAAW;AAElB,SAAO,QAAQ;AAAA;AAAA,EAVf,WAA2B,SAAyB;AAChD,WAAO,CAAC,YAAY,gBAAgB;AAAA,EACxC;AAAA,EAUA,IAAoB,eAAkC;AAClD,WAAO,KAAK;AAAA,EAChB;AAAA,EAEgB,QAAc;AAC1B,SAAK,OAAO,MAAM;AAAA,EACtB;AAAA,EAEmB,SAAyB;AACxC,WAAO;AAAA;AAAA;AAAA,uBAGQ,UAAU,KAAK,IAAI,CAAC;AAAA,2BAChB,UAAU,KAAK,QAAQ,CAAC;AAAA,yBAC1B,UAAU,KAAK,MAAM,CAAC;AAAA,6BAClB,UAAU,KAAK,KAAK,CAAC;AAAA,+BACnB;AAAA,MACX,KAAK,YAAY,KAAK,OAAO,SAAS;AAAA,IAC1C,CAAC;AAAA,sBACK,UAAU,KAAK,GAAG,CAAC;AAAA;AAAA;AAAA;AAAA;AAAA,EAKrC;AAAA,EAEmB,QAAQ,SAA+B;AACtD,UAAM,QAAQ,OAAO;AACrB,SAAK,QAAQ,KAAK,OAAO;AAAA,EAC7B;AACJ;AArCY;AAAA,EADP,MAAM,GAAG;AAAA,GALD,WAMD;AAGD;AAAA,EADN,SAAS,EAAE,MAAM,SAAS,SAAS,KAAK,CAAC;AAAA,GARjC,WASF;",
  "names": []
}
