{
  "version": 3,
  "sources": ["SidenavItem.ts"],
  "sourcesContent": ["/**\n * Copyright 2025 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {\n    CSSResultArray,\n    html,\n    nothing,\n    PropertyValues,\n    TemplateResult,\n} from '@spectrum-web-components/base';\nimport { property } from '@spectrum-web-components/base/src/decorators.js';\nimport { ifDefined } from '@spectrum-web-components/base/src/directives.js';\nimport { LikeAnchor } from '@spectrum-web-components/shared/src/like-anchor.js';\nimport { Focusable } from '@spectrum-web-components/shared/src/focusable.js';\n\nimport { SideNav, SidenavSelectDetail } from './Sidenav.dev.js'\n\nimport sidenavItemStyles from './sidenav-item.css.js';\n\n/**\n * @element sp-sidenav-item\n *\n * @slot - the Sidenav Items to display as children of this item\n */\nexport class SideNavItem extends LikeAnchor(Focusable) {\n    public static override get styles(): CSSResultArray {\n        return [sidenavItemStyles];\n    }\n\n    @property()\n    public value: string | undefined = undefined;\n\n    @property({ type: Boolean, reflect: true })\n    public selected = false;\n\n    @property({ type: Boolean, reflect: true })\n    public expanded = false;\n\n    protected get parentSideNav(): SideNav | undefined {\n        if (!this._parentSidenav) {\n            this._parentSidenav = this.closest('sp-sidenav') as\n                | SideNav\n                | undefined;\n        }\n        return this._parentSidenav;\n    }\n\n    protected _parentSidenav?: SideNav;\n\n    protected get hasChildren(): boolean {\n        return !!this.querySelector('sp-sidenav-item');\n    }\n\n    protected get depth(): number {\n        let depth = 0;\n        let element = this.parentElement;\n        while (element instanceof SideNavItem) {\n            depth++;\n            element = element.parentElement;\n        }\n        return depth;\n    }\n\n    public handleSideNavSelect(event: Event): void {\n        this.selected = event.target === this;\n    }\n\n    protected handleClick(event?: Event): void {\n        if (!this.href && event) {\n            event.preventDefault();\n        }\n        // With an `href` this click will change the page contents, not toggle its children or become \"selected\".\n        if (!this.disabled && (!this.href || event?.defaultPrevented)) {\n            if (this.hasChildren) {\n                this.expanded = !this.expanded;\n            } else if (this.value) {\n                this.announceSelected(this.value);\n            }\n        }\n    }\n\n    private announceSelected(value: string): void {\n        const selectDetail: SidenavSelectDetail = {\n            value,\n        };\n\n        const selectionEvent = new CustomEvent('sidenav-select', {\n            bubbles: true,\n            composed: true,\n            detail: selectDetail,\n        });\n\n        this.dispatchEvent(selectionEvent);\n    }\n\n    public override click(): void {\n        this.handleClick();\n    }\n\n    public override get focusElement(): HTMLElement {\n        return this.shadowRoot.querySelector('#item-link') as HTMLElement;\n    }\n\n    protected override update(changes: PropertyValues): void {\n        if (!this.hasAttribute('slot')) {\n            this.slot = 'descendant';\n        }\n        super.update(changes);\n    }\n\n    protected override render(): TemplateResult {\n        return html`\n            <a\n                href=${this.href || '#'}\n                target=${ifDefined(this.target)}\n                download=${ifDefined(this.download)}\n                rel=${ifDefined(this.rel)}\n                data-level=\"${this.depth}\"\n                @click=\"${this.handleClick}\"\n                id=\"item-link\"\n                aria-current=${ifDefined(\n                    this.selected && this.href ? 'page' : undefined\n                )}\n                aria-expanded=${ifDefined(\n                    this.hasChildren ? this.expanded : undefined\n                )}\n                aria-controls=${ifDefined(\n                    this.hasChildren && this.expanded ? 'list' : undefined\n                )}\n            >\n                <slot name=\"icon\"></slot>\n                <span id=\"link-text\">\n                    ${this.label}\n                    <slot></slot>\n                </span>\n            </a>\n            ${this.expanded\n                ? html`\n                      <div id=\"list\" aria-labelledby=\"item-link\" role=\"list\">\n                          <slot name=\"descendant\"></slot>\n                      </div>\n                  `\n                : nothing}\n        `;\n    }\n\n    protected override updated(changes: PropertyValues): void {\n        if (\n            this.hasChildren &&\n            this.expanded &&\n            !this.selected &&\n            this.parentSideNav?.manageTabIndex\n        ) {\n            this.focusElement.tabIndex = -1;\n        } else {\n            this.focusElement.removeAttribute('tabindex');\n        }\n        super.updated(changes);\n    }\n\n    public override connectedCallback(): void {\n        super.connectedCallback();\n        this.startTrackingSelection();\n    }\n\n    public override disconnectedCallback(): void {\n        this.stopTrackingSelection();\n        super.disconnectedCallback();\n    }\n\n    private async startTrackingSelection(): Promise<void> {\n        const parentSideNav = this.parentSideNav;\n        if (parentSideNav) {\n            await parentSideNav.updateComplete;\n            parentSideNav.startTrackingSelectionForItem(this);\n            this.selected =\n                this.value != null && this.value === parentSideNav.value;\n            if (\n                this.selected === true &&\n                parentSideNav.variant === 'multilevel'\n            ) {\n                let element = this.parentElement;\n                while (element instanceof SideNavItem) {\n                    element.expanded = true;\n                    element = element.parentElement;\n                }\n            }\n        }\n    }\n\n    private stopTrackingSelection(): void {\n        const parentSideNav = this.parentSideNav;\n        if (parentSideNav) {\n            parentSideNav.stopTrackingSelectionForItem(this);\n        }\n        this._parentSidenav = undefined;\n    }\n\n    protected override firstUpdated(changed: PropertyValues<this>): void {\n        super.firstUpdated(changed);\n        this.setAttribute('role', 'listitem');\n    }\n}\n"],
  "mappings": "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",
  "names": []
}
