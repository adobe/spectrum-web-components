"use strict";var o=Object.defineProperty;var u=Object.getOwnPropertyDescriptor;var r=(d,l,e,t)=>{for(var a=t>1?void 0:t?u(l,e):l,i=d.length-1,s;i>=0;i--)(s=d[i])&&(a=(t?s(l,e,a):s(a))||a);return t&&a&&o(l,e,a),a};import{html as v}from"@spectrum-web-components/base";import{property as n}from"@spectrum-web-components/base/src/decorators.js";import{RovingTabindexController as c}from"@spectrum-web-components/reactive-controllers/src/RovingTabindex.js";import m from"./sidenav.css.js";import{Focusable as p}from"@spectrum-web-components/shared";import{SideNavItem as h}from"./SidenavItem.js";import{SideNavHeading as b}from"./SidenavHeading.js";import{ifDefined as f}from"@spectrum-web-components/base/src/directives.js";export class SideNav extends p{constructor(){super(...arguments);this.items=new Set;this.rovingTabindexController=new c(this,{focusInIndex:e=>{let t,a=e.findIndex(i=>(i.value===this.value&&this.isDisabledChild(i)&&(t=i.closest("sp-sidenav-item:not([expanded])")),this.value?!i.disabled&&!this.isDisabledChild(i)&&i.value===this.value:!i.disabled&&!this.isDisabledChild(i)));return a===-1&&t&&(a=e.findIndex(i=>i===t)),a},direction:"vertical",elements:()=>[...this.querySelectorAll("sp-sidenav-item")],isFocusableElement:e=>!e.disabled&&!this.isDisabledChild(e)});this.manageTabIndex=!1;this.value=void 0;this.variant=void 0;this.label=void 0}static get styles(){return[m]}startTrackingSelectionForItem(e){this.items.add(e),this.rovingTabindexController.clearElementCache()}stopTrackingSelectionForItem(e){this.items.delete(e),this.rovingTabindexController.clearElementCache()}handleSelect(e){if(e.stopPropagation(),this.value===e.detail.value)return;const t=this.value;this.value=e.detail.value,this.dispatchEvent(new Event("change",{bubbles:!0,composed:!0,cancelable:!0}))?this.items.forEach(i=>i.handleSideNavSelect(e)):(this.value=t,e.target.selected=!1,e.preventDefault())}focus(){this.rovingTabindexController.focus()}blur(){this.focusElement!==this&&super.blur()}click(){this.focusElement!==this&&super.click()}get focusElement(){return this.rovingTabindexController.focusInElement||this}isDisabledChild(e){if(e.disabled)return!0;let t=e.parentElement;for(;t instanceof b||!t.disabled&&t instanceof h&&t.expanded;)t=t.parentElement;return t!==this}handleSlotchange(){this.manageTabIndex?this.rovingTabindexController.manage():this.rovingTabindexController.unmanage()}render(){return v`
            <nav
                @sidenav-select=${this.handleSelect}
                aria-label=${f(this.label)}
            >
                <div role="list">
                    <slot
                        name="descendant"
                        @slotchange=${this.handleSlotchange}
                    ></slot>
                </div>
            </nav>
        `}willUpdate(){if(!this.hasUpdated){const e=this.querySelector("[selected]");e&&(this.value=e.value)}}updated(e){super.updated(e),e.has("manageTabIndex")&&(this.manageTabIndex?this.rovingTabindexController.manage():this.rovingTabindexController.unmanage())}}r([n({type:Boolean,reflect:!0,attribute:"manage-tab-index"})],SideNav.prototype,"manageTabIndex",2),r([n({reflect:!0})],SideNav.prototype,"value",2),r([n({reflect:!0})],SideNav.prototype,"variant",2),r([n({reflect:!0})],SideNav.prototype,"label",2);
//# sourceMappingURL=Sidenav.js.map
