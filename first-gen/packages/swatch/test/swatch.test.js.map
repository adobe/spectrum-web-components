{
  "version": 3,
  "sources": ["swatch.test.ts"],
  "sourcesContent": ["/**\n * Copyright 2025 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\nimport { elementUpdated, expect, fixture, html } from '@open-wc/testing';\nimport { spy } from 'sinon';\nimport { sendKeys } from '@web/test-runner-commands';\n\nimport '@spectrum-web-components/swatch/sp-swatch.js';\nimport { Swatch } from '../src/Swatch.js';\nimport { ElementSize } from '@spectrum-web-components/base';\nimport { testForLitDevWarnings } from '../../../test/testing-helpers.js';\n\ndescribe('Swatch', () => {\n    let el: Swatch;\n    beforeEach(async () => {\n        el = await fixture<Swatch>(html`\n            <sp-swatch color=\"red\" label=\"Red\"></sp-swatch>\n        `);\n\n        await elementUpdated(el);\n    });\n    testForLitDevWarnings(\n        async () =>\n            await fixture<Swatch>(html`\n                <sp-swatch color=\"red\" label=\"Red\"></sp-swatch>\n            `)\n    );\n    it(`loads default swatch accessibly`, async () => {\n        await expect(el).to.be.accessible();\n    });\n    it('loads [mixed-value] swatch accessibly', async () => {\n        el.mixedValue = true;\n        await expect(el).to.be.accessible();\n\n        // The provided label takes precedence over any default label.\n        expect(el.getAttribute('aria-label')).to.equal('Red');\n\n        el.removeAttribute('label');\n        await elementUpdated(el);\n\n        // The color takes precedence over the \"mixed\" label.\n        expect(el.getAttribute('aria-label')).to.equal('red');\n\n        el.removeAttribute('color');\n        await elementUpdated(el);\n\n        // No label + no color => the default label for the current state is used.\n        expect(el.getAttribute('aria-label')).to.equal('Mixed');\n    });\n    it('loads [nothing] swatch accessibly', async () => {\n        el.nothing = true;\n        el.removeAttribute('color');\n        el.label = 'Transparent';\n\n        await expect(el).to.be.accessible();\n        expect(el.getAttribute('aria-label')).to.equal('Transparent');\n    });\n    (['xs', 's', 'm', 'l'] as ElementSize[]).map((size) => {\n        it(`loads [mixed-value] swatch accessibly as [size=${size}]`, async () => {\n            el.mixedValue = true;\n            el.removeAttribute('color');\n            el.label = 'Mixed Value';\n            el.size = size;\n\n            await expect(el).to.be.accessible();\n            expect(el.getAttribute('aria-label')).to.equal('Mixed Value');\n        });\n    });\n    it('toggles on `click`', async () => {\n        expect(el.selected).to.be.false;\n\n        el.click();\n\n        expect(el.selected).to.be.true;\n        await expect(el).to.be.accessible();\n    });\n    it('toggles on `click` as [role=\"checkbox\"]', async () => {\n        el.role = 'checkbox';\n        await elementUpdated(el);\n\n        expect(el.selected).to.be.false;\n        await expect(el).to.be.accessible();\n\n        el.click();\n\n        expect(el.selected).to.be.true;\n        await expect(el).to.be.accessible();\n    });\n    it('toggles on `Space`', async () => {\n        expect(el.selected).to.be.false;\n\n        el.focus();\n        await sendKeys({\n            press: 'Space',\n        });\n\n        expect(el.selected).to.be.true;\n    });\n    it('toggles on `Enter`', async () => {\n        expect(el.selected).to.be.false;\n\n        el.focus();\n        await sendKeys({\n            press: 'Enter',\n        });\n\n        expect(el.selected).to.be.true;\n\n        await sendKeys({\n            press: 'NumpadEnter',\n        });\n\n        expect(el.selected).to.be.false;\n    });\n    it('dispatches `change`', async () => {\n        const changeSpy = spy();\n\n        el.addEventListener('change', () => changeSpy());\n\n        el.click();\n\n        expect(changeSpy.calledOnce).to.be.true;\n    });\n    it('does not dispatch `change` when [disabled]', async () => {\n        const changeSpy = spy();\n\n        el.addEventListener('change', () => changeSpy());\n        el.disabled = true;\n        await elementUpdated(el);\n\n        el.click();\n\n        expect(changeSpy.calledOnce).to.be.false;\n    });\n    it('does not dispatch `change` when [mixed-value]', async () => {\n        const changeSpy = spy();\n\n        el.addEventListener('change', () => changeSpy());\n        el.mixedValue = true;\n        await elementUpdated(el);\n\n        el.click();\n\n        expect(changeSpy.calledOnce).to.be.false;\n    });\n    it('can have `change` prevented', async () => {\n        el.addEventListener('change', (event: Event) => {\n            event.preventDefault();\n        });\n\n        expect(el.selected).to.false;\n\n        el.click();\n\n        expect(el.selected).to.false;\n    });\n    it('is in the tab order', async () => {\n        const inputBefore = document.createElement('input');\n        const inputAfter = document.createElement('input');\n        el.insertAdjacentElement('beforebegin', inputBefore);\n        el.insertAdjacentElement('afterend', inputAfter);\n        inputBefore.focus();\n        expect(document.activeElement === el).to.be.false;\n        await sendKeys({\n            press: 'Tab',\n        });\n        expect(document.activeElement === el).to.be.true;\n        await sendKeys({\n            press: 'Tab',\n        });\n        expect(document.activeElement === el).to.be.false;\n        await sendKeys({\n            press: 'Shift+Tab',\n        });\n        expect(document.activeElement === el).to.be.true;\n    });\n    it('is not in the tab order when [disabled]', async () => {\n        const inputBefore = document.createElement('input');\n        const inputAfter = document.createElement('input');\n        el.insertAdjacentElement('beforebegin', inputBefore);\n        el.insertAdjacentElement('afterend', inputAfter);\n        inputBefore.focus();\n        el.disabled = true;\n        await elementUpdated(el);\n\n        expect(document.activeElement === el).to.be.false;\n        await sendKeys({\n            press: 'Tab',\n        });\n        expect(document.activeElement === el).to.be.false;\n        await sendKeys({\n            press: 'Shift+Tab',\n        });\n        expect(document.activeElement === el).to.be.false;\n    });\n});\n"],
  "mappings": "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",
  "names": []
}
