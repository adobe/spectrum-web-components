{
  "version": 3,
  "sources": ["combobox.test.ts"],
  "sourcesContent": ["/**\n * Copyright 2025 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport { elementUpdated, expect, oneEvent } from '@open-wc/testing';\n\nimport '@spectrum-web-components/combobox/sp-combobox.js';\nimport {\n    arrowDownEvent,\n    arrowLeftEvent,\n    arrowUpEvent,\n    endEvent,\n    enterEvent,\n    escapeEvent,\n    fixture,\n    homeEvent,\n} from '../../../test/testing-helpers.js';\nimport {\n    executeServerCommand,\n    sendKeys,\n    setViewport,\n} from '@web/test-runner-commands';\nimport { PickerButton } from '@spectrum-web-components/picker-button';\nimport {\n    comboboxFixture,\n    longComboboxFixture,\n    TestableCombobox,\n    testActiveElement,\n    withDisabledItemsFixture,\n} from './helpers.js';\nimport { sendMouse } from '../../../test/plugins/browser.js';\nimport { withTooltip } from '../stories/combobox.stories.js';\nimport type { Tooltip } from '@spectrum-web-components/tooltip';\nimport { MenuItem } from '@spectrum-web-components/menu';\nimport { countries } from '../stories/index.js';\n\ndescribe('Combobox', () => {\n    describe('manages focus', () => {\n        it('responds to focus()', async () => {\n            const el = await comboboxFixture();\n\n            await elementUpdated(el);\n\n            el.focus();\n\n            await elementUpdated(el);\n            expect(el.shadowRoot.activeElement).to.equal(el.focusElement);\n        });\n        it('responds to click()', async () => {\n            const el = await comboboxFixture();\n\n            await elementUpdated(el);\n            expect(el.open).to.be.false;\n\n            el.click();\n\n            await elementUpdated(el);\n            expect(el.shadowRoot.activeElement).to.equal(el.focusElement);\n            expect(el.open).to.be.true;\n\n            el.click();\n\n            await elementUpdated(el);\n            expect(el.shadowRoot.activeElement).to.equal(el.focusElement);\n            expect(el.open).to.be.false;\n        });\n    });\n    describe('keyboard events', () => {\n        it('opens on ArrowDown', async () => {\n            const el = await comboboxFixture();\n            await elementUpdated(el);\n\n            el.focusElement.focus();\n\n            el.focusElement.dispatchEvent(arrowDownEvent());\n\n            await elementUpdated(el);\n            expect(el.open).to.be.true;\n            expect(el.activeDescendant).to.not.be.undefined;\n        });\n        it('opens on Alt+ArrowDown', async () => {\n            const el = await comboboxFixture();\n            await elementUpdated(el);\n\n            el.focusElement.focus();\n\n            await executeServerCommand('send-keys', {\n                press: 'Alt+ArrowDown',\n            });\n\n            await elementUpdated(el);\n            expect(el.open).to.be.true;\n            expect(el.activeDescendant).to.be.undefined;\n        });\n        it('opens on ArrowUp', async () => {\n            const el = await comboboxFixture();\n\n            await elementUpdated(el);\n\n            el.focusElement.focus();\n\n            el.focusElement.dispatchEvent(arrowUpEvent());\n\n            await elementUpdated(el);\n            expect(el.open).to.be.true;\n        });\n        it('does not open on ArrowLeft', async () => {\n            const el = await comboboxFixture();\n\n            await elementUpdated(el);\n\n            el.focusElement.focus();\n\n            el.focusElement.dispatchEvent(arrowLeftEvent());\n\n            await elementUpdated(el);\n            expect(el.open).to.be.false;\n        });\n        it('does not close on ArrowLeft', async () => {\n            const el = await comboboxFixture();\n\n            await elementUpdated(el);\n\n            el.open = true;\n\n            el.focusElement.focus();\n\n            el.focusElement.dispatchEvent(arrowLeftEvent());\n\n            await elementUpdated(el);\n            expect(el.open).to.be.true;\n        });\n        it('moves the carat/removes activeDescendant on ArrowLeft', async () => {\n            const el = await comboboxFixture();\n\n            await elementUpdated(el);\n\n            el.open = true;\n            el.value = 'Apple';\n            await elementUpdated(el);\n\n            el.focusElement.setSelectionRange(4, 4);\n            el.focusElement.focus();\n            expect(el.focusElement.selectionStart).to.equal(4);\n\n            el.focusElement.dispatchEvent(arrowDownEvent());\n            await elementUpdated(el);\n\n            testActiveElement(el, 'apple');\n            expect(el.open).to.be.true;\n\n            await executeServerCommand('send-keys', {\n                press: 'ArrowLeft',\n            });\n\n            await elementUpdated(el);\n            expect(el.focusElement.selectionStart).to.equal(3);\n            expect(el.activeDescendant).to.be.undefined;\n            expect(el.open).to.be.true;\n        });\n        it('moves the carat/removes activeDescendant on ArrowRight', async () => {\n            const el = await comboboxFixture();\n\n            await elementUpdated(el);\n\n            el.open = true;\n            el.value = 'Apple';\n            await elementUpdated(el);\n\n            el.focusElement.setSelectionRange(1, 1);\n            el.focusElement.focus();\n            expect(el.focusElement.selectionStart).to.equal(1);\n\n            el.focusElement.dispatchEvent(arrowDownEvent());\n            await elementUpdated(el);\n\n            testActiveElement(el, 'apple');\n            expect(el.open).to.be.true;\n\n            await executeServerCommand('send-keys', {\n                press: 'ArrowRight',\n            });\n\n            await elementUpdated(el);\n            expect(el.focusElement.selectionStart).to.equal(2);\n            expect(el.activeDescendant).to.be.undefined;\n            expect(el.open).to.be.true;\n        });\n        it('moves carat to 0 with Home key', async () => {\n            const el = await comboboxFixture();\n\n            await elementUpdated(el);\n\n            el.open = true;\n            el.value = 'Apple';\n\n            await elementUpdated(el);\n            el.focusElement.focus();\n            el.focusElement.setSelectionRange(4, 4);\n            await elementUpdated(el);\n            expect(el.focusElement.selectionStart, 'start 1').to.equal(4);\n            expect(el.focusElement.selectionEnd, 'end 1').to.equal(4);\n\n            el.focusElement.dispatchEvent(arrowDownEvent());\n            await elementUpdated(el);\n\n            testActiveElement(el, 'apple');\n            expect(el.open).to.be.true;\n\n            el.focusElement.dispatchEvent(homeEvent());\n            await elementUpdated(el);\n            expect(el.focusElement.selectionStart, 'start 2').to.equal(0);\n            expect(el.focusElement.selectionEnd, 'end 2').to.equal(0);\n            expect(el.activeDescendant).to.be.undefined;\n            expect(el.shadowRoot.querySelector('[aria-selected=\"true\"]')).to.be\n                .null;\n            expect(el.open).to.be.true;\n        });\n        it('moves carat to end with End key', async () => {\n            const el = await comboboxFixture();\n\n            await elementUpdated(el);\n\n            el.open = true;\n            el.value = 'Apple';\n            await elementUpdated(el);\n\n            el.focusElement.focus();\n            el.focusElement.setSelectionRange(1, 1);\n            await elementUpdated(el);\n            expect(el.focusElement.selectionStart, 'start 1').to.equal(1);\n            expect(el.focusElement.selectionEnd, 'end 1').to.equal(1);\n\n            el.focusElement.dispatchEvent(arrowDownEvent());\n            await elementUpdated(el);\n\n            expect(el.activeDescendant.value).to.equal('apple');\n            expect(el.open).to.be.true;\n\n            el.focusElement.dispatchEvent(endEvent());\n            await elementUpdated(el);\n            expect(el.focusElement.selectionStart, 'start 2').to.equal(5);\n            expect(el.focusElement.selectionEnd, 'end 2').to.equal(5);\n            expect(el.activeDescendant).to.be.undefined;\n            expect(el.open).to.be.true;\n        });\n        it('closes on Escape', async () => {\n            const el = await comboboxFixture();\n\n            await elementUpdated(el);\n\n            el.open = true;\n\n            el.focusElement.focus();\n\n            el.focusElement.dispatchEvent(escapeEvent());\n\n            await elementUpdated(el);\n            expect(el.open).to.be.false;\n        });\n        it('clears on Escape', async () => {\n            const el = await comboboxFixture();\n\n            await elementUpdated(el);\n\n            el.value = 'Test';\n\n            el.focusElement.focus();\n\n            el.focusElement.dispatchEvent(escapeEvent());\n\n            await elementUpdated(el);\n            expect(el.open).to.be.false;\n            expect(el.value).to.equal('');\n        });\n    });\n    describe('mouse events', () => {\n        it('opens on input click', async () => {\n            const el = await comboboxFixture();\n\n            await elementUpdated(el);\n\n            const opened = oneEvent(el.focusElement, 'sp-opened');\n            el.focusElement.click();\n            await opened;\n\n            expect(el.open).to.be.true;\n            await elementUpdated(el);\n            expect(el.open).to.be.true;\n        });\n        it('closes on input click', async () => {\n            const el = await comboboxFixture();\n\n            await elementUpdated(el);\n\n            const opened = oneEvent(el.focusElement, 'sp-opened');\n            el.open = true;\n            await opened;\n            expect(el.open).to.be.true;\n\n            const closed = oneEvent(el.focusElement, 'sp-closed');\n            el.focusElement.click();\n            await closed;\n\n            await elementUpdated(el);\n            expect(el.open).to.be.false;\n        });\n        it('opens on button click', async () => {\n            const el = await comboboxFixture();\n\n            const button = el.shadowRoot.querySelector(\n                'sp-picker-button'\n            ) as PickerButton;\n\n            await elementUpdated(el);\n\n            const opened = oneEvent(el.focusElement, 'sp-opened');\n            button.click();\n            await opened;\n\n            await elementUpdated(el);\n            expect(el.open).to.be.true;\n        });\n        it('closes on button click', async () => {\n            const el = await comboboxFixture();\n\n            const button = el.shadowRoot.querySelector(\n                'sp-picker-button'\n            ) as PickerButton;\n\n            await elementUpdated(el);\n\n            const input = el.shadowRoot.querySelector(\n                'input'\n            ) as HTMLInputElement;\n            expect(el.shadowRoot.activeElement).to.not.equal(input);\n\n            const opened = oneEvent(el.focusElement, 'sp-opened');\n            el.open = true;\n            await opened;\n            expect(el.open).to.be.true;\n            expect(el.shadowRoot.activeElement).to.equal(input);\n\n            const closed = oneEvent(el.focusElement, 'sp-closed');\n            const rect = button.getBoundingClientRect();\n            // required to test that focus remains with the <input>,\n            // since button.click() doesn't allow the button to steal focus\n            await sendMouse({\n                steps: [\n                    {\n                        position: [\n                            rect.left + rect.width / 2,\n                            rect.top + rect.height / 2,\n                        ],\n                        type: 'click',\n                    },\n                ],\n            });\n            await closed;\n\n            await elementUpdated(el);\n            expect(el.open).to.be.false;\n\n            // closing the popup menu should leave the textfield's input focused\n            expect(el.shadowRoot.activeElement).to.equal(input);\n        });\n    });\n    describe('manage active descendent', () => {\n        it('sets activeDescendant to first descendent on ArrowDown', async () => {\n            const el = await comboboxFixture();\n\n            await elementUpdated(el);\n            expect(el.activeDescendant).to.be.undefined;\n\n            el.focusElement.focus();\n            el.focusElement.dispatchEvent(arrowDownEvent());\n\n            await elementUpdated(el);\n            testActiveElement(el, 'apple');\n        });\n        it('updates activeDescendant on ArrowDown', async () => {\n            const el = await comboboxFixture();\n\n            await elementUpdated(el);\n            expect(el.activeDescendant).to.be.undefined;\n\n            el.focusElement.focus();\n            el.focusElement.dispatchEvent(arrowDownEvent());\n\n            await elementUpdated(el);\n            testActiveElement(el, 'apple');\n            el.focusElement.dispatchEvent(arrowDownEvent());\n\n            await elementUpdated(el);\n            testActiveElement(el, 'banana');\n        });\n        it('cycles activeDescendant on ArrowDown', async () => {\n            const el = await comboboxFixture();\n\n            await elementUpdated(el);\n            expect(el.activeDescendant).to.be.undefined;\n\n            el.focusElement.focus();\n            el.focusElement.dispatchEvent(arrowDownEvent());\n\n            await elementUpdated(el);\n            testActiveElement(el, 'apple');\n            el.focusElement.dispatchEvent(arrowDownEvent());\n\n            await elementUpdated(el);\n            el.focusElement.dispatchEvent(arrowDownEvent());\n\n            await elementUpdated(el);\n            el.focusElement.dispatchEvent(arrowDownEvent());\n\n            await elementUpdated(el);\n            el.focusElement.dispatchEvent(arrowDownEvent());\n\n            await elementUpdated(el);\n            testActiveElement(el, 'durian');\n        });\n        it('sets activeDescendant to last descendent on ArrowUp', async () => {\n            const el = await comboboxFixture();\n\n            await elementUpdated(el);\n            expect(el.activeDescendant).to.be.undefined;\n\n            el.focusElement.focus();\n            el.focusElement.dispatchEvent(arrowUpEvent());\n\n            await elementUpdated(el);\n            testActiveElement(el, 'persimmon');\n        });\n        it('updates activeDescendant on ArrowUp', async () => {\n            const el = await comboboxFixture();\n\n            await elementUpdated(el);\n            expect(el.activeDescendant).to.be.undefined;\n\n            el.focusElement.focus();\n            el.focusElement.dispatchEvent(arrowUpEvent());\n\n            await elementUpdated(el);\n            testActiveElement(el, 'persimmon');\n            el.focusElement.dispatchEvent(arrowUpEvent());\n\n            await elementUpdated(el);\n            testActiveElement(el, 'pear');\n        });\n        it('cycles activeDescendant on ArrowUp', async () => {\n            const el = await comboboxFixture();\n\n            await elementUpdated(el);\n            expect(el.activeDescendant).to.be.undefined;\n\n            el.focusElement.focus();\n            el.focusElement.dispatchEvent(arrowUpEvent());\n\n            await elementUpdated(el);\n            testActiveElement(el, 'persimmon');\n            el.focusElement.dispatchEvent(arrowUpEvent());\n\n            await elementUpdated(el);\n            el.focusElement.dispatchEvent(arrowUpEvent());\n\n            await elementUpdated(el);\n            el.focusElement.dispatchEvent(arrowUpEvent());\n\n            await elementUpdated(el);\n            el.focusElement.dispatchEvent(arrowUpEvent());\n\n            await elementUpdated(el);\n            testActiveElement(el, 'mango');\n        });\n    });\n    describe('item selection', () => {\n        it('sets the value when descendent is active and `enter` is pressed', async () => {\n            const el = await comboboxFixture();\n\n            await elementUpdated(el);\n            expect(el.value).to.equal('');\n            expect(el.activeDescendant).to.be.undefined;\n            expect(el.open, 'open?').to.be.false;\n\n            el.focusElement.focus();\n            const opened = oneEvent(el, 'sp-opened');\n            el.focusElement.dispatchEvent(arrowDownEvent());\n            await opened;\n\n            expect(el.open, 'open?').to.be.true;\n            await elementUpdated(el);\n            expect(\n                el.activeDescendant?.value,\n                'activeDescendant after open?'\n            ).to.equal('apple');\n            const changed = oneEvent(el, 'change');\n            el.focusElement.dispatchEvent(enterEvent());\n            await changed;\n\n            await elementUpdated(el);\n            expect(el.open, 'open?').to.be.false;\n            expect(el.activeDescendant, 'activeDescendant after Enter?').to.be\n                .undefined;\n            expect(el.value, 'value after enter').to.equal('Apple');\n            expect(\n                el.shadowRoot.querySelector(\n                    'sp-menu-item[aria-selected=\"true\"]'\n                )?.id,\n                'aria-selected'\n            ).to.equal('apple');\n            expect(el.focusElement.value, 'focusElement after enter').to.equal(\n                el.value\n            );\n        });\n        it('does not set the value when `enter` is pressed and no active descendent', async () => {\n            const el = await comboboxFixture();\n\n            await elementUpdated(el);\n            expect(el.value).to.equal('');\n            expect(el.activeDescendant).to.be.undefined;\n            expect(el.open).to.be.false;\n\n            const opened = oneEvent(el, 'sp-opened');\n            el.focusElement.click();\n            await opened;\n\n            expect(el.open).to.be.true;\n            expect(el.activeDescendant).to.be.undefined;\n\n            el.focusElement.dispatchEvent(enterEvent());\n\n            await elementUpdated(el);\n            expect(el.open).to.be.false;\n            expect(el.activeDescendant).to.be.undefined;\n            expect(el.value).to.equal('');\n            expect(el.focusElement.value).to.equal(el.value);\n        });\n        it('sets the value when an item is clicked', async () => {\n            const el = await comboboxFixture();\n\n            await elementUpdated(el);\n\n            expect(el.value, 'initial value').to.equal('');\n            expect(el.activeDescendant, 'initial activeDescendant').to.be\n                .undefined;\n            expect(el.open, 'initially open?').to.be.false;\n\n            const opened = oneEvent(el, 'sp-opened');\n            el.focusElement.click();\n            await opened;\n\n            const item = el.shadowRoot.querySelector('#cherry') as HTMLElement;\n            await elementUpdated(item);\n\n            expect(el.open, 'open after click?').to.be.true;\n\n            const itemValue = (item.textContent as string).trim();\n            const rect = item.getBoundingClientRect();\n\n            await sendMouse({\n                steps: [\n                    {\n                        position: [\n                            rect.left + rect.width / 2,\n                            rect.top + rect.height / 2,\n                        ],\n                        type: 'click',\n                    },\n                ],\n            });\n            await elementUpdated(el);\n\n            expect(el.value, 'value after item click?').to.equal(itemValue);\n            expect(el.open, 'open after item click?').to.be.false;\n            expect(el.activeDescendant, 'activeDescendant after item click').to\n                .be.undefined;\n        });\n        it('reflects the selected value in menu on reopening', async () => {\n            const el = await comboboxFixture();\n\n            await elementUpdated(el);\n\n            expect(el.value).to.equal('');\n            expect(el.activeDescendant).to.be.undefined;\n            expect(el.open).to.be.false;\n\n            let opened = oneEvent(el, 'sp-opened');\n            el.focusElement.click();\n            await opened;\n\n            const item = el.shadowRoot.querySelector(\n                '[value=\"banana\"]'\n            ) as MenuItem;\n            await elementUpdated(item);\n\n            expect(el.open).to.be.true;\n\n            const itemValue = item.itemText;\n            const rect = item.getBoundingClientRect();\n            const closed = oneEvent(el, 'sp-closed');\n            await sendMouse({\n                steps: [\n                    {\n                        position: [\n                            rect.left + rect.width / 2,\n                            rect.top + rect.height / 2,\n                        ],\n                        type: 'click',\n                    },\n                ],\n            });\n            await closed;\n\n            expect(el.value).to.equal(itemValue);\n            expect(el.open).to.be.false;\n            expect(el.activeDescendant).to.be.undefined;\n\n            opened = oneEvent(el, 'sp-opened');\n            el.focusElement.click();\n            await opened;\n\n            await elementUpdated(el);\n            await elementUpdated(item);\n\n            expect(el.open).to.be.true;\n\n            // item should be selected\n            expect(\n                el.shadowRoot\n                    .querySelector('sp-menu')\n                    ?.querySelector('[selected]')?.textContent\n            ).to.equal(item.textContent);\n        });\n        it('sets the value when an item is clicked programmatically', async () => {\n            const el = await comboboxFixture();\n\n            await elementUpdated(el);\n\n            expect(el.value).to.equal('');\n            expect(el.activeDescendant).to.be.undefined;\n            expect(el.open).to.be.false;\n\n            const opened = oneEvent(el, 'sp-opened');\n            el.focusElement.click();\n            await opened;\n\n            const item = el.shadowRoot.querySelector(\n                '[value=\"cherry\"]'\n            ) as MenuItem;\n            await elementUpdated(item);\n\n            expect(el.open).to.be.true;\n\n            const itemValue = item.itemText;\n\n            const closed = oneEvent(el, 'sp-closed');\n            item.click();\n            await closed;\n            await elementUpdated(el);\n\n            expect(el.value).to.equal(itemValue);\n            expect(el.open).to.be.false;\n            expect(el.activeDescendant).to.be.undefined;\n        });\n    });\n    describe('responds to value changes', () => {\n        it('applies a visible selection based on `itemText`', async () => {\n            const el = await comboboxFixture();\n            el.autocomplete = 'none';\n            el.options = countries;\n            await elementUpdated(el);\n\n            let selected = el.shadowRoot.querySelector('[selected]');\n            expect(selected).to.be.null;\n\n            el.value = 'af';\n            await elementUpdated(el);\n\n            const opened = oneEvent(el, 'sp-opened');\n            el.open = true;\n            await opened;\n\n            selected = el.shadowRoot.querySelector('[selected]');\n            expect(selected).to.be.null;\n\n            el.value = 'Algeria';\n            await elementUpdated(el);\n\n            selected = el.shadowRoot.querySelector('[selected]');\n            expect(selected).to.not.be.null;\n        });\n        it('sets the value when descendent is active and `enter` is pressed', async () => {\n            const el = await comboboxFixture();\n\n            await elementUpdated(el);\n            expect(el.value).to.equal('');\n            expect(el.activeDescendant).to.be.undefined;\n            expect(el.open).to.be.false;\n\n            el.focus();\n\n            const opened = oneEvent(el, 'sp-opened');\n            executeServerCommand('send-keys', {\n                press: 'g',\n            });\n            await opened;\n\n            expect(el.open).to.be.true;\n            expect(el.focusElement.value, '<input> has value').to.equal('g');\n            expect(el.value, 'el has value').to.equal('g');\n\n            await executeServerCommand('send-keys', {\n                press: 'r',\n            });\n\n            expect(el.open).to.be.true;\n            expect(el.focusElement.value, '<input> has value').to.equal('gr');\n            expect(el.value, 'el has value').to.equal('gr');\n        });\n        it('filters options when the value changes and is not found', async () => {\n            const el = await comboboxFixture();\n\n            await elementUpdated(el);\n            expect(el.value).to.equal('');\n            expect(el.activeDescendant).to.be.undefined;\n            expect(el.open).to.be.false;\n            expect(el.availableOptions.length).equal(12);\n\n            const opened = oneEvent(el, 'sp-opened');\n            el.click();\n            await opened;\n\n            await executeServerCommand('send-keys', {\n                press: 'z',\n            });\n\n            expect(el.open).to.be.true;\n            expect(el.availableOptions.length).equal(0);\n            const options = [...el.shadowRoot.querySelectorAll('sp-menu-item')];\n            expect(options.length).to.equal(0);\n        });\n        it('filters options when the value typed and is found', async () => {\n            const el = await comboboxFixture();\n\n            await elementUpdated(el);\n            expect(el.value).to.equal('');\n            expect(el.activeDescendant).to.be.undefined;\n            expect(el.open).to.be.false;\n            expect(el.availableOptions.length).equal(12);\n            expect(el.options?.length).equal(12);\n\n            const opened = oneEvent(el, 'sp-opened');\n            el.click();\n            await opened;\n\n            let items = [\n                ...el.shadowRoot.querySelectorAll('#listbox sp-menu-item'),\n            ];\n            expect(items.length).to.equal(12);\n            await Promise.all(items.map((item) => elementUpdated(item)));\n\n            await executeServerCommand('send-keys', {\n                press: 'C',\n            });\n\n            await elementUpdated(el);\n            expect(el.open).to.be.true;\n            expect(el.value).to.equal('C');\n            expect(el.availableOptions.length).equal(2);\n            expect(el.options?.length).equal(12);\n            items = [\n                ...el.shadowRoot.querySelectorAll('#listbox sp-menu-item'),\n            ];\n            expect(items.length).to.equal(2);\n\n            await executeServerCommand('send-keys', {\n                press: 'O',\n            });\n\n            await elementUpdated(el);\n            expect(el.open).to.be.true;\n            expect(el.value).to.equal('CO');\n            expect(el.availableOptions.length).equal(1);\n            items = [\n                ...el.shadowRoot.querySelectorAll('#listbox sp-menu-item'),\n            ];\n            expect(items.length).to.equal(1);\n        });\n        it('filters options when the value is applied and is found', async () => {\n            const el = await comboboxFixture();\n\n            await elementUpdated(el);\n            expect(el.value).to.equal('');\n            expect(el.activeDescendant).to.be.undefined;\n            expect(el.open).to.be.false;\n            expect(el.availableOptions.length).equal(12);\n\n            const opened = oneEvent(el, 'sp-opened');\n            el.click();\n            await opened;\n\n            el.value = 'L';\n\n            await elementUpdated(el);\n            expect(el.open).to.be.true;\n            expect(el.availableOptions.length).equal(2);\n\n            el.value = 'Le';\n\n            await elementUpdated(el);\n            expect(el.open).to.be.true;\n            expect(el.availableOptions.length).equal(1);\n        });\n        it('filtered items only can be accessed by ArrowUp/Down events', async () => {\n            const el = await comboboxFixture();\n\n            await elementUpdated(el);\n            el.value = 'Banana';\n            await elementUpdated(el);\n\n            expect(el.activeDescendant).to.be.undefined;\n            expect(el.open).to.be.false;\n            expect(el.availableOptions.length).equal(1);\n\n            el.focus();\n            const opened = oneEvent(el, 'sp-opened');\n            el.focusElement.dispatchEvent(arrowDownEvent());\n            await opened;\n            await elementUpdated(el);\n\n            expect(el.activeDescendant?.itemText).to.equal(el.value);\n        });\n        it('deactives descendent on input', async () => {\n            const el = await comboboxFixture();\n\n            await elementUpdated(el);\n            expect(el.value).to.equal('');\n            expect(el.activeDescendant).to.be.undefined;\n            expect(el.open).to.be.false;\n\n            el.focus();\n            await elementUpdated(el);\n\n            const opened = oneEvent(el, 'sp-opened');\n            executeServerCommand('send-keys', {\n                press: 'B',\n            });\n            await opened;\n            await elementUpdated(el);\n\n            expect(el.value).to.equal('B');\n            expect(el.activeDescendant).to.be.undefined;\n            expect(el.open).to.be.true;\n\n            el.focusElement.dispatchEvent(arrowDownEvent());\n            await elementUpdated(el);\n            el.focusElement.dispatchEvent(arrowDownEvent());\n            await elementUpdated(el);\n\n            expect(el.value).to.equal('B');\n            testActiveElement(el, 'banana');\n            expect(el.open).to.be.true;\n\n            await executeServerCommand('send-keys', {\n                press: 'o',\n            });\n            await elementUpdated(el);\n\n            expect(el.value).to.equal('Bo');\n            expect(el.activeDescendant).to.be.undefined;\n            expect(el.open).to.be.true;\n        });\n    });\n    describe('pending state', () => {\n        it('renders a progress circle', async () => {\n            const el = await comboboxFixture();\n            el.pending = true;\n            await elementUpdated(el);\n\n            expect(el.shadowRoot.querySelector('sp-progress-circle')).to.exist;\n        });\n        it('receives focus', async () => {\n            const el = await comboboxFixture();\n            el.pending = true;\n            await elementUpdated(el);\n\n            el.focus();\n\n            await elementUpdated(el);\n            expect(el.shadowRoot.activeElement).to.equal(el.focusElement);\n        });\n        it('does not open the dropdown on mouse events', async () => {\n            const el = await comboboxFixture();\n            el.pending = true;\n            await elementUpdated(el);\n\n            el.click();\n\n            await elementUpdated(el);\n            expect(el.open).to.be.false;\n        });\n        it('does not open the dropdown on keyboard events', async () => {\n            const el = await comboboxFixture();\n            el.pending = true;\n            await elementUpdated(el);\n\n            el.focusElement.focus();\n            await sendKeys({\n                press: 'ArrowDown',\n            });\n\n            await elementUpdated(el);\n\n            const typed = oneEvent(el, 'input');\n            await sendKeys({\n                press: 'g',\n            });\n            await typed;\n\n            expect(el.focusElement.value, '<input> has value').to.equal('g');\n            expect(el.value, 'el has value').to.equal('g');\n            expect(el.open).to.be.false;\n        });\n    });\n\n    describe('disabled items', () => {\n        let el: TestableCombobox;\n\n        beforeEach(async () => {\n            el = await withDisabledItemsFixture();\n            await elementUpdated(el);\n        });\n        afterEach(async () => {\n            if (el.open) {\n                const closed = oneEvent(el, 'sp-closed');\n                el.open = false;\n                await closed;\n            }\n        });\n\n        it('disabled items should be disabled', async () => {\n            const opened = oneEvent(el, 'sp-opened');\n            el.click();\n            await opened;\n\n            const menuItems = el.shadowRoot.querySelectorAll('sp-menu-item');\n            expect(menuItems[2].disabled).to.be.true;\n        });\n        it('disabled items should not be focusable using keyboard', async () => {\n            const opened = oneEvent(el, 'sp-opened');\n            el.click();\n            await opened;\n\n            // let's press arrow down 3 times and check if we are on Algeria (the next to disabled item)\n            await sendKeys({\n                press: 'ArrowDown',\n            });\n            await sendKeys({\n                press: 'ArrowDown',\n            });\n            await sendKeys({\n                press: 'ArrowDown',\n            });\n            await elementUpdated(el);\n            expect(el.activeDescendant?.itemText).to.equal('Algeria');\n        });\n        it('disabled items should not be focusable using mouse', async () => {\n            const opened = oneEvent(el, 'sp-opened');\n            el.click();\n            await opened;\n\n            const menuItems = el.shadowRoot.querySelectorAll('sp-menu-item');\n            const disabledItem = menuItems[2];\n\n            const bounds = disabledItem.getBoundingClientRect();\n            sendMouse({\n                steps: [\n                    {\n                        type: 'click',\n                        position: [\n                            bounds.x + bounds.width / 2,\n                            bounds.y + bounds.height / 2,\n                        ],\n                    },\n                ],\n            });\n            await elementUpdated(el);\n\n            // active descendant should be undefined\n            expect(el.activeDescendant).to.be.undefined;\n        });\n        it('disabled items cannot be programmatically clicked', async () => {\n            const opened = oneEvent(el, 'sp-opened');\n            el.click();\n            await opened;\n\n            const menuItems = el.shadowRoot.querySelectorAll('sp-menu-item');\n            const disabledItem = menuItems[2];\n\n            disabledItem.click();\n            await elementUpdated(el);\n\n            expect(el.activeDescendant).to.be.undefined;\n        });\n    });\n\n    it('closes tooltip on button blur', async () => {\n        const el = await fixture<TestableCombobox>(withTooltip());\n        await elementUpdated(el);\n        const input1 = document.createElement('input');\n        const input2 = document.createElement('input');\n        const tooltipEl = el.querySelector('sp-tooltip') as Tooltip;\n        el.insertAdjacentElement('beforebegin', input1);\n        el.insertAdjacentElement('afterend', input2);\n        input1.focus();\n        expect(document.activeElement === input1).to.be.true;\n        const tooltipOpened = oneEvent(el, 'sp-opened');\n        await sendKeys({\n            press: 'Tab',\n        });\n        await tooltipOpened;\n        expect(\n            document.activeElement === el,\n            `Actually, ${document.activeElement?.localName}`\n        ).to.be.true;\n        expect(tooltipEl.open).to.be.true;\n        expect(el.open).to.be.false;\n        expect(el.focused).to.be.true;\n\n        const menuOpen = oneEvent(el, 'sp-opened');\n        const tooltipClosed = oneEvent(el, 'sp-closed');\n        await sendKeys({\n            press: 'ArrowDown',\n        });\n        await menuOpen;\n        await tooltipClosed;\n        expect(document.activeElement === el).to.be.true;\n        expect(tooltipEl.open).to.be.false;\n        expect(el.open).to.be.true;\n\n        const menuClosed = oneEvent(el, 'sp-closed');\n        await sendKeys({\n            press: 'Tab',\n        });\n        await menuClosed;\n        expect(document.activeElement === el).to.be.false;\n        expect(tooltipEl.open).to.be.false;\n        expect(el.open).to.be.false;\n    });\n\n    it('scrolls to fit window', async () => {\n        await setViewport({ width: 360, height: 640 });\n        const el = await longComboboxFixture();\n\n        await elementUpdated(el);\n\n        expect(el.value).to.equal('');\n        expect(el.activeDescendant).to.be.undefined;\n        expect(el.open).to.be.false;\n\n        const opened = oneEvent(el, 'sp-opened');\n        el.focusElement.click();\n        await opened;\n        expect(el.open).to.be.true;\n\n        const menu = el.shadowRoot.querySelector(\n            '[role=\"listbox\"]'\n        ) as HTMLElement;\n        await elementUpdated(menu);\n\n        expect(menu.scrollHeight > window.innerHeight).to.be.true;\n    });\n});\n"],
  "mappings": "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",
  "names": []
}
