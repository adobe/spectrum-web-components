{
  "version": 3,
  "sources": ["combobox.stories.ts"],
  "sourcesContent": ["/**\n * Copyright 2025 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {\n    html,\n    LitElement,\n    TemplateResult,\n} from '@spectrum-web-components/base';\n\nimport '@spectrum-web-components/combobox/sp-combobox.js';\nimport '@spectrum-web-components/field-label/sp-field-label.js';\nimport '@spectrum-web-components/help-text/sp-help-text.js';\nimport '@spectrum-web-components/tooltip/sp-tooltip.js';\nimport '@spectrum-web-components/menu/sp-menu-item.js';\nimport { Combobox, ComboboxOption } from '../src/Combobox.js';\nimport { defineElement } from '@spectrum-web-components/base/src/define-element.js';\nimport { query, state } from '@spectrum-web-components/base/src/decorators.js';\nimport { live } from '@spectrum-web-components/base/src/directives.js';\nimport { countries, fruits, StoryArgs } from './index.js';\nimport { Template } from './template.js';\nimport { argTypes } from './args.js';\n\nexport default {\n    title: 'Combobox',\n    component: 'sp-combobox',\n    args: {\n        open: false,\n        disabled: false,\n        invalid: false,\n        pending: false,\n        readonly: false,\n        quiet: false,\n    },\n    argTypes,\n};\n\nexport const Default = (args: StoryArgs): TemplateResult => Template(args);\n\nexport const disabled = (args: StoryArgs): TemplateResult => Template(args);\ndisabled.args = {\n    disabled: true,\n    value: 'Azerbaijan',\n};\n\nexport const invalid = (args: StoryArgs): TemplateResult => Template(args);\ninvalid.args = {\n    invalid: true,\n};\n\nexport const pending = (args: StoryArgs): TemplateResult => Template(args);\npending.args = {\n    pending: true,\n};\n\nexport const quiet = (args: StoryArgs): TemplateResult => Template(args);\nquiet.args = {\n    quiet: true,\n};\n\nexport const readonly = (args: StoryArgs): TemplateResult => Template(args);\nreadonly.args = {\n    readonly: true,\n    value: 'Solomon Islands',\n};\n\nexport const hasDisabledItems = (args: StoryArgs): TemplateResult => {\n    // let's create a new array from countries and set the disabled property to true if the value is in args.disabledItems\n    const countriesWithDisabledItems = countries.map((country) => ({\n        ...country,\n        disabled: args.disabledItems?.includes(country.itemText),\n    }));\n\n    return html`\n        <sp-field-label side-aligned=\"start\" for=\"combobox-disabled-items\">\n            Some fruits are disabled (light DOM)\n        </sp-field-label>\n        <sp-combobox\n            id=\"combobox-disabled-items\"\n            style=\"min-width: 80px;--spectrum-textfield-m-min-width:0; width:160px;\"\n        >\n            ${fruits.map(\n                (fruit) => html`\n                    <sp-menu-item\n                        id=${fruit.value}\n                        value=${fruit.value}\n                        ?disabled=${args.disabledItems?.includes(fruit.value)}\n                    >\n                        ${fruit.itemText}\n                    </sp-menu-item>\n                `\n            )}\n        </sp-combobox>\n        <sp-field-label side-aligned=\"start\" for=\"combobox-disabled-countries\">\n            Some countries are disabled (shadow DOM)\n        </sp-field-label>\n        <sp-combobox\n            id=\"combobox-disabled-countries\"\n            .options=${countriesWithDisabledItems}\n            .value=${args.value || ''}\n        ></sp-combobox>\n    `;\n};\nhasDisabledItems.args = {\n    disabledItems: [\n        'banana',\n        'lemon',\n        'pear',\n        'Albania',\n        'Azerbaijan',\n        'Solomon Islands',\n    ],\n};\nhasDisabledItems.swc_vrt = {\n    skip: true,\n};\n\nexport const listAutocomplete = (args: StoryArgs): TemplateResult =>\n    Template(args);\nlistAutocomplete.args = {\n    autocomplete: 'list',\n};\n\nexport const noAutocomplete = (): TemplateResult => {\n    return html`\n        <sp-field-label side-aligned=\"start\" for=\"combobox-3\">\n            Fruit\n        </sp-field-label>\n        <sp-combobox\n            id=\"combobox-3\"\n            .options=${fruits}\n            style=\"min-width: 80px;--spectrum-textfield-m-min-width:0;width:100px;\"\n        ></sp-combobox>\n        <sp-field-label side-aligned=\"start\" for=\"combobox-4\">\n            Countries\n        </sp-field-label>\n        <sp-combobox\n            id=\"combobox-4\"\n            .options=${countries}\n            style=\"min-width: 80px;--spectrum-textfield-m-min-width:0;width:100px;\"\n        ></sp-combobox>\n    `;\n};\n\nexport const lightDOM = (): TemplateResult => {\n    return html`\n        <sp-field-label side-aligned=\"start\" for=\"combobox-5\">\n            Fruit\n        </sp-field-label>\n        <sp-combobox\n            id=\"combobox-5\"\n            style=\"min-width: 80px;--spectrum-textfield-m-min-width:0;width:100px;\"\n        >\n            ${fruits.map(\n                (fruit) => html`\n                    <sp-menu-item id=${fruit.value} value=${fruit.value}>\n                        ${fruit.itemText}\n                    </sp-menu-item>\n                `\n            )}\n        </sp-combobox>\n        <sp-field-label side-aligned=\"start\" for=\"combobox-6\">\n            Countries\n        </sp-field-label>\n        <sp-combobox\n            id=\"combobox-6\"\n            style=\"min-width: 80px;--spectrum-textfield-m-min-width:0;width:100px;\"\n        >\n            ${countries.map(\n                (country) => html`\n                    <sp-menu-item id=${country.value} value=${country.value}>\n                        ${country.itemText}\n                    </sp-menu-item>\n                `\n            )}\n        </sp-combobox>\n    `;\n};\n\nexport const withTooltip = (): TemplateResult => {\n    return html`\n        <sp-combobox\n            id=\"combobox-6\"\n            label=\"Combobox with tooltip\"\n            style=\"min-width: 80px;--spectrum-textfield-m-min-width:0;width:100px;\"\n        >\n            ${countries.map(\n                (option) => html`\n                    <sp-menu-item id=${option.value} value=${option.value}>\n                        ${option.itemText}\n                    </sp-menu-item>\n                `\n            )}\n            <sp-tooltip slot=\"tooltip\" self-managed placement=\"right\" open>\n                This combobox has a tooltip.\n            </sp-tooltip>\n        </sp-combobox>\n    `;\n};\n\nexport const withFieldLabel = (): TemplateResult => {\n    return html`\n        <sp-field-label for=\"combobox-7\">Pick something</sp-field-label>\n        <sp-combobox id=\"combobox-7\" .options=${fruits}></sp-combobox>\n    `;\n};\n\nexport const withLabelAttribute = (): TemplateResult => {\n    return html`\n        <sp-combobox\n            id=\"combobox-7\"\n            label=\"Pick something\"\n            .options=${fruits}\n        ></sp-combobox>\n    `;\n};\n\nexport const withHelpText = (): TemplateResult => {\n    return html`\n        <sp-combobox id=\"combobox-7\" label=\"Pick something\" .options=${fruits}>\n            <sp-help-text slot=\"help-text\">\n                These are fruits found in the game \"Animal Crossing: New Leaf\".\n            </sp-help-text>\n        </sp-combobox>\n    `;\n};\n\nclass ControlledCombo extends LitElement {\n    static ages: ComboboxOption[] = Array.from({ length: 76 - 55 }, (_, n) => {\n        const age = `${n + 55}`;\n        return { value: age, itemText: age };\n    });\n\n    @state()\n    private value = {\n        raw: '',\n        validated: `${ControlledCombo.ages[0].itemText}`,\n    };\n\n    @query('#age')\n    private combobox!: Combobox;\n\n    override render(): TemplateResult {\n        return html`\n            <sp-field-label for=\"age\">\n                Retirement age (try entering a non-number)\n            </sp-field-label>\n            <sp-combobox\n                id=\"age\"\n                .options=${ControlledCombo.ages}\n                .value=${live(this.value.validated)}\n                @change=${this.onChange}\n            ></sp-combobox>\n        `;\n    }\n\n    private onChange(): void {\n        this.value = {\n            raw: this.combobox.value,\n            validated: this.combobox.value.replace(/\\D/g, '') || '55',\n        };\n    }\n}\ndefineElement('controlled-combo', ControlledCombo);\n\nexport const controlled = (): TemplateResult => {\n    return html`\n        <controlled-combo></controlled-combo>\n    `;\n};\ncontrolled.swc_vrt = {\n    skip: true,\n};\n\ncontrolled.parameters = {\n    // Disables Chromatic's snapshotting on a global level\n    chromatic: { disableSnapshot: true },\n};\n"],
  "mappings": "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",
  "names": []
}
