{
  "version": 3,
  "sources": ["SystemContextResolution.ts"],
  "sourcesContent": ["/**\n * Copyright 2025 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\nimport type { ReactiveController, ReactiveElement } from 'lit';\nimport type { SystemVariant } from '@spectrum-web-components/theme';\n\nexport const systemResolverUpdatedSymbol = Symbol('system resolver updated');\n\nexport type ProvideSystem = {\n    callback: (system: SystemVariant, unsubscribe: () => void) => void;\n};\n\nexport class SystemResolutionController implements ReactiveController {\n    private host: ReactiveElement;\n    public system: SystemVariant = 'spectrum';\n    private unsubscribe?: () => void;\n\n    constructor(host: ReactiveElement) {\n        this.host = host;\n        this.host.addController(this);\n    }\n\n    public hostConnected(): void {\n        this.resolveSystem();\n    }\n\n    public hostDisconnected(): void {\n        this.unsubscribe?.();\n    }\n\n    private resolveSystem(): void {\n        const querySystemEvent = new CustomEvent<ProvideSystem>(\n            'sp-system-context',\n            {\n                bubbles: true,\n                composed: true,\n                detail: {\n                    callback: (\n                        system: SystemVariant,\n                        unsubscribe: () => void\n                    ) => {\n                        const previous = this.system;\n                        this.system = system;\n                        this.unsubscribe = unsubscribe;\n                        this.host.requestUpdate(\n                            systemResolverUpdatedSymbol,\n                            previous\n                        );\n                    },\n                },\n                cancelable: true,\n            }\n        );\n        this.host.dispatchEvent(querySystemEvent);\n    }\n}\n"],
  "mappings": ";AAcO,aAAM,8BAA8B,OAAO,yBAAyB;AAMpE,aAAM,2BAAyD;AAAA,EAKlE,YAAY,MAAuB;AAHnC,SAAO,SAAwB;AAI3B,SAAK,OAAO;AACZ,SAAK,KAAK,cAAc,IAAI;AAAA,EAChC;AAAA,EAEO,gBAAsB;AACzB,SAAK,cAAc;AAAA,EACvB;AAAA,EAEO,mBAAyB;AAlCpC;AAmCQ,eAAK,gBAAL;AAAA,EACJ;AAAA,EAEQ,gBAAsB;AAC1B,UAAM,mBAAmB,IAAI;AAAA,MACzB;AAAA,MACA;AAAA,QACI,SAAS;AAAA,QACT,UAAU;AAAA,QACV,QAAQ;AAAA,UACJ,UAAU,CACN,QACA,gBACC;AACD,kBAAM,WAAW,KAAK;AACtB,iBAAK,SAAS;AACd,iBAAK,cAAc;AACnB,iBAAK,KAAK;AAAA,cACN;AAAA,cACA;AAAA,YACJ;AAAA,UACJ;AAAA,QACJ;AAAA,QACA,YAAY;AAAA,MAChB;AAAA,IACJ;AACA,SAAK,KAAK,cAAc,gBAAgB;AAAA,EAC5C;AACJ;",
  "names": []
}
