{
  "version": 3,
  "sources": ["SystemContextResolution.ts"],
  "sourcesContent": ["/**\n * Copyright 2025 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\nimport type { ReactiveController, ReactiveElement } from 'lit';\nimport type { SystemVariant } from '@spectrum-web-components/theme';\n\nexport const systemResolverUpdatedSymbol = Symbol('system resolver updated');\n\nexport type ProvideSystem = {\n    callback: (system: SystemVariant, unsubscribe: () => void) => void;\n};\n\nexport class SystemResolutionController implements ReactiveController {\n    private host: ReactiveElement;\n    public system: SystemVariant = 'spectrum';\n    private unsubscribe?: () => void;\n\n    constructor(host: ReactiveElement) {\n        this.host = host;\n        this.host.addController(this);\n    }\n\n    public hostConnected(): void {\n        this.resolveSystem();\n    }\n\n    public hostDisconnected(): void {\n        this.unsubscribe?.();\n    }\n\n    private resolveSystem(): void {\n        const querySystemEvent = new CustomEvent<ProvideSystem>(\n            'sp-system-context',\n            {\n                bubbles: true,\n                composed: true,\n                detail: {\n                    callback: (\n                        system: SystemVariant,\n                        unsubscribe: () => void\n                    ) => {\n                        const previous = this.system;\n                        this.system = system;\n                        this.unsubscribe = unsubscribe;\n                        this.host.requestUpdate(\n                            systemResolverUpdatedSymbol,\n                            previous\n                        );\n                    },\n                },\n                cancelable: true,\n            }\n        );\n        this.host.dispatchEvent(querySystemEvent);\n    }\n}\n"],
  "mappings": "aAcO,aAAM,4BAA8B,OAAO,yBAAyB,EAMpE,aAAM,0BAAyD,CAKlE,YAAYA,EAAuB,CAHnC,KAAO,OAAwB,WAI3B,KAAK,KAAOA,EACZ,KAAK,KAAK,cAAc,IAAI,CAChC,CAEO,eAAsB,CACzB,KAAK,cAAc,CACvB,CAEO,kBAAyB,CAlCpC,IAAAC,GAmCQA,EAAA,KAAK,cAAL,MAAAA,EAAA,UACJ,CAEQ,eAAsB,CAC1B,MAAMC,EAAmB,IAAI,YACzB,oBACA,CACI,QAAS,GACT,SAAU,GACV,OAAQ,CACJ,SAAU,CACNC,EACAC,IACC,CACD,MAAMC,EAAW,KAAK,OACtB,KAAK,OAASF,EACd,KAAK,YAAcC,EACnB,KAAK,KAAK,cACN,4BACAC,CACJ,CACJ,CACJ,EACA,WAAY,EAChB,CACJ,EACA,KAAK,KAAK,cAAcH,CAAgB,CAC5C,CACJ",
  "names": ["host", "_a", "querySystemEvent", "system", "unsubscribe", "previous"]
}
