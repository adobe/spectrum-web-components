{
  "version": 3,
  "sources": ["PendingState.ts"],
  "sourcesContent": ["/**\n * Copyright 2025 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport { html, LitElement, ReactiveController, TemplateResult } from 'lit';\nimport '@spectrum-web-components/progress-circle/sp-progress-circle.js';\n\n/**\n * Represents a host element with pending state.\n */\nexport interface HostWithPendingState extends LitElement {\n    pendingLabel?: string;\n    pending: boolean;\n    disabled: boolean;\n    pendingStateController: PendingStateController<HostWithPendingState>;\n}\n\n/**\n * Represents a controller for managing the pending state of a reactive element.\n *\n * @template T - The type of the reactive element.\n */\nexport class PendingStateController<T extends HostWithPendingState>\n    implements ReactiveController\n{\n    /**\n     * The host element that this controller is attached to.\n     */\n    public host: T;\n\n    /**\n     * Creates an instance of PendingStateController.\n     * @param host - The host element that this controller is attached to.\n     */\n    constructor(host: T) {\n        this.host = host;\n        this.host.addController(this);\n    }\n\n    public cachedAriaLabel: string | null = null;\n    /**\n     * Renders the pending state UI.\n     * @returns A TemplateResult representing the pending state UI.\n     */\n    public renderPendingState(): TemplateResult {\n        const pendingLabel = this.host.pendingLabel || 'Pending';\n        return this.host.pending\n            ? html`\n                  <sp-progress-circle\n                      id=\"loader\"\n                      size=\"s\"\n                      indeterminate\n                      aria-valuetext=${pendingLabel}\n                      class=\"progress-circle\"\n                  ></sp-progress-circle>\n              `\n            : html``;\n    }\n\n    /**\n     * Updates the ARIA label of the host element based on the pending state.\n     * Manages Cached Aria Label\n     */\n    private updateAriaLabel(): void {\n        const { pending, disabled, pendingLabel } = this.host;\n        const currentAriaLabel = this.host.getAttribute('aria-label');\n\n        if (pending && !disabled && currentAriaLabel !== pendingLabel) {\n            // Cache the current `aria-label` to be restored when no longer `pending`\n            this.cachedAriaLabel = currentAriaLabel;\n            // Since it is pending, we set the aria-label to `pendingLabel` or \"Pending\"\n            this.host.setAttribute('aria-label', pendingLabel || 'Pending');\n        } else if (!pending || disabled) {\n            // Restore the cached `aria-label` if it exists\n            if (this.cachedAriaLabel) {\n                this.host.setAttribute('aria-label', this.cachedAriaLabel);\n            } else if (!pending) {\n                // If no cached `aria-label` and not `pending`, remove the `aria-label`\n                this.host.removeAttribute('aria-label');\n            }\n        }\n    }\n\n    hostConnected(): void {\n        if (!this.cachedAriaLabel)\n            this.cachedAriaLabel = this.host.getAttribute('aria-label');\n        this.updateAriaLabel();\n    }\n\n    hostUpdated(): void {\n        this.updateAriaLabel();\n    }\n}\n"],
  "mappings": ";AAYA,SAAS,YAA4D;AACrE,OAAO;AAiBA,aAAM,uBAEb;AAAA;AAAA;AAAA;AAAA;AAAA,EAUI,YAAY,MAAS;AAKrB,SAAO,kBAAiC;AAJpC,SAAK,OAAO;AACZ,SAAK,KAAK,cAAc,IAAI;AAAA,EAChC;AAAA;AAAA;AAAA;AAAA;AAAA,EAOO,qBAAqC;AACxC,UAAM,eAAe,KAAK,KAAK,gBAAgB;AAC/C,WAAO,KAAK,KAAK,UACX;AAAA;AAAA;AAAA;AAAA;AAAA,uCAKyB,YAAY;AAAA;AAAA;AAAA,kBAIrC;AAAA,EACV;AAAA;AAAA;AAAA;AAAA;AAAA,EAMQ,kBAAwB;AAC5B,UAAM,EAAE,SAAS,UAAU,aAAa,IAAI,KAAK;AACjD,UAAM,mBAAmB,KAAK,KAAK,aAAa,YAAY;AAE5D,QAAI,WAAW,CAAC,YAAY,qBAAqB,cAAc;AAE3D,WAAK,kBAAkB;AAEvB,WAAK,KAAK,aAAa,cAAc,gBAAgB,SAAS;AAAA,IAClE,WAAW,CAAC,WAAW,UAAU;AAE7B,UAAI,KAAK,iBAAiB;AACtB,aAAK,KAAK,aAAa,cAAc,KAAK,eAAe;AAAA,MAC7D,WAAW,CAAC,SAAS;AAEjB,aAAK,KAAK,gBAAgB,YAAY;AAAA,MAC1C;AAAA,IACJ;AAAA,EACJ;AAAA,EAEA,gBAAsB;AAClB,QAAI,CAAC,KAAK;AACN,WAAK,kBAAkB,KAAK,KAAK,aAAa,YAAY;AAC9D,SAAK,gBAAgB;AAAA,EACzB;AAAA,EAEA,cAAoB;AAChB,SAAK,gBAAgB;AAAA,EACzB;AACJ;",
  "names": []
}
