{
  "version": 3,
  "sources": ["roving-tabindex-integration.test.ts"],
  "sourcesContent": ["/**\n * Copyright 2025 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\nimport '@spectrum-web-components/action-button/sp-action-button.js';\nimport { ActionButton } from '@spectrum-web-components/action-button';\nimport '@spectrum-web-components/action-group/sp-action-group.js';\nimport { ActionGroup } from '@spectrum-web-components/action-group';\nimport { ActionMenu } from '@spectrum-web-components/action-menu';\nimport '@spectrum-web-components/tabs/sp-tab-panel.js';\nimport '@spectrum-web-components/tabs/sp-tab.js';\nimport '@spectrum-web-components/tabs/sp-tabs.js';\nimport '@spectrum-web-components/action-menu/sp-action-menu.js';\nimport '@spectrum-web-components/menu/sp-menu.js';\nimport '@spectrum-web-components/menu/sp-menu-item.js';\nimport { Tab, TabPanel, Tabs } from '@spectrum-web-components/tabs';\nimport { elementUpdated, expect, fixture, nextFrame } from '@open-wc/testing';\nimport { html } from '@spectrum-web-components/base';\nimport { sendKeys } from '@web/test-runner-commands';\nimport { sendMouse } from '../../../test/plugins/browser.js';\n\nconst createTabs = async (): Promise<Tabs> => {\n    const tabs = await fixture<Tabs>(html`\n        <sp-tabs selected=\"second\">\n            <sp-tab label=\"Tab 1\" value=\"first\"></sp-tab>\n            <sp-tab label=\"Tab 2\" value=\"second\"></sp-tab>\n            <sp-tab label=\"Tab 3\" value=\"third\"></sp-tab>\n            <sp-tab-panel value=\"first\">\n                <sp-action-group selects=\"single\">\n                    <sp-action-button selected value=\"1\">\n                        Single Button 1\n                    </sp-action-button>\n                    <sp-action-button value=\"2\">\n                        Single Button 2\n                    </sp-action-button>\n                    <sp-action-button value=\"3\">\n                        Single Button 3\n                    </sp-action-button>\n                </sp-action-group>\n            </sp-tab-panel>\n            <sp-tab-panel value=\"second\">\n                <sp-action-group selects=\"multiple\">\n                    <sp-action-button value=\"1\">\n                        Multiple Button 1\n                    </sp-action-button>\n                    <sp-action-button selected value=\"2\">\n                        Multiple Button 2\n                    </sp-action-button>\n                    <sp-action-button selected value=\"3\">\n                        Multiple Button 3\n                    </sp-action-button>\n                </sp-action-group>\n            </sp-tab-panel>\n            <sp-tab-panel value=\"third\">\n                <sp-action-group>\n                    <sp-action-button value=\"1\">None Button 1</sp-action-button>\n                    <sp-action-button value=\"2\">None Button 2</sp-action-button>\n                    <sp-action-button selected value=\"3\">\n                        None Button 3\n                    </sp-action-button>\n                </sp-action-group>\n            </sp-tab-panel>\n        </sp-tabs>\n    `);\n    await elementUpdated(tabs);\n    return tabs;\n};\n\nconst createGroup = async (): Promise<ActionGroup> => {\n    const group = await fixture<ActionGroup>(html`\n        <sp-action-group>\n            <sp-action-button>Button 1</sp-action-button>\n            <sp-action-button>Longer Button 2</sp-action-button>\n            <sp-action-button>Short 3</sp-action-button>\n            <sp-action-menu label=\"More Actions\">\n                <sp-menu-item>One</sp-menu-item>\n                <sp-menu-item>Two</sp-menu-item>\n                <sp-menu-item>Three</sp-menu-item>\n                <sp-menu-item>\n                    Select some items\n                    <sp-menu slot=\"submenu\" selects=\"multiple\">\n                        <sp-menu-item>A</sp-menu-item>\n                        <sp-menu-item selected>B</sp-menu-item>\n                        <sp-menu-item>C</sp-menu-item>\n                    </sp-menu>\n                </sp-menu-item>\n            </sp-action-menu>\n        </sp-action-group>\n    `);\n    await elementUpdated(group);\n    return group;\n};\n\ndescribe('Action Group inside of Tabs', () => {\n    it('accurately navigates the desired element', async () => {\n        const el = await createTabs();\n        const tab1 = el.querySelector('sp-tab[value=\"first\"]') as Tab;\n        const tab2 = el.querySelector('sp-tab[value=\"second\"]');\n        const tab3 = el.querySelector('sp-tab[value=\"third\"]') as Tab;\n        const tabPanel1 = el.querySelector(\n            'sp-tab-panel[value=\"first\"]'\n        ) as TabPanel;\n        const tabPanel2 = el.querySelector(\n            'sp-tab-panel[value=\"second\"]'\n        ) as TabPanel;\n        const tabPanel3 = el.querySelector(\n            'sp-tab-panel[value=\"third\"]'\n        ) as TabPanel;\n        const actionGroup1 = tabPanel1.querySelector(\n            'sp-action-group'\n        ) as ActionGroup;\n        const actionGroup2 = tabPanel2.querySelector(\n            'sp-action-group'\n        ) as ActionGroup;\n        const actionGroup3 = tabPanel3.querySelector(\n            'sp-action-group'\n        ) as ActionGroup;\n        const actionButton1 = actionGroup1.querySelector(\n            '[selected]'\n        ) as ActionButton;\n        const actionButton2 = actionGroup2.querySelector(\n            '[selected]'\n        ) as ActionButton;\n        const actionButton3 = actionGroup3.querySelector(\n            '[selected]'\n        ) as ActionButton;\n\n        el.focus();\n        expect(el.contains(document.activeElement)).to.be.true;\n        expect(document.activeElement === tab2).to.be.true;\n\n        actionGroup2.focus();\n        expect(document.activeElement === actionButton2).to.be.true;\n\n        await nextFrame();\n        await sendKeys({\n            press: 'ArrowLeft',\n        });\n\n        expect(document.activeElement === tab1).to.be.false;\n        expect(actionGroup2.contains(document.activeElement)).to.be.true;\n\n        el.focus();\n        expect(document.activeElement === tab2).to.be.true;\n\n        await sendKeys({\n            press: 'ArrowRight',\n        });\n\n        expect(document.activeElement === tab3).to.be.true;\n\n        await sendKeys({\n            press: 'Enter',\n        });\n\n        expect(document.activeElement === tab3).to.be.true;\n\n        actionGroup3.focus();\n        expect(document.activeElement === actionButton3).to.be.true;\n\n        await sendKeys({\n            press: 'ArrowLeft',\n        });\n\n        expect(document.activeElement === tab2).to.be.false;\n        expect(actionGroup3.contains(document.activeElement)).to.be.true;\n\n        const boundingRect = tab1.getBoundingClientRect();\n        // tab1.click() doesn't current reach into the focus management here.\n        await sendMouse({\n            steps: [\n                {\n                    type: 'click',\n                    position: [\n                        boundingRect.left + boundingRect.width / 2,\n                        boundingRect.top + boundingRect.height / 2,\n                    ],\n                },\n            ],\n        });\n        expect(document.activeElement === tab1).to.be.true;\n\n        actionGroup1.focus();\n        expect(document.activeElement === actionButton1).to.be.true;\n\n        await sendKeys({\n            press: 'ArrowRight',\n        });\n\n        expect(document.activeElement === tab2).to.be.false;\n        expect(actionGroup1.contains(document.activeElement)).to.be.true;\n    });\n});\n\ndescribe('Action Menu inside of Action Group', () => {\n    it('accurately manages the tabindex of all the elements', async () => {\n        const el = await createGroup();\n        const actionButton1 = el.querySelector(\n            'sp-action-button:nth-child(1)'\n        ) as ActionButton;\n        const actionButton2 = el.querySelector(\n            'sp-action-button:nth-child(2)'\n        ) as ActionButton;\n        const actionButton3 = el.querySelector(\n            'sp-action-button:nth-child(3)'\n        ) as ActionButton;\n        const actionMenu = el.querySelector('sp-action-menu') as ActionMenu;\n\n        el.focus();\n        expect(document.activeElement === actionButton1).to.be.true;\n\n        await sendKeys({\n            press: 'ArrowRight',\n        });\n\n        expect(document.activeElement === actionButton2).to.be.true;\n\n        // expect the focused element to have a tabindex of 0 and everyone else to be -1\n        expect(actionButton2.tabIndex).to.equal(0);\n        expect(actionButton1.tabIndex).to.equal(-1);\n        expect(actionButton3.tabIndex).to.equal(-1);\n        expect(actionMenu.tabIndex).to.equal(-1);\n\n        await sendKeys({\n            press: 'ArrowRight',\n        });\n\n        expect(document.activeElement === actionButton3).to.be.true;\n\n        // expect the focused element to have a tabindex of 0 and everyone else to be -1\n        expect(actionButton3.tabIndex).to.equal(0);\n        expect(actionButton2.tabIndex).to.equal(-1);\n        expect(actionButton1.tabIndex).to.equal(-1);\n        expect(actionMenu.tabIndex).to.equal(-1);\n\n        await sendKeys({\n            press: 'ArrowRight',\n        });\n\n        expect(document.activeElement === actionMenu).to.be.true;\n\n        // expect the action-button inside of the shadow root of the action-menu to have a tabindex of 0 and everyone else to be -1\n        expect(actionButton3.tabIndex).to.equal(-1);\n        expect(actionButton2.tabIndex).to.equal(-1);\n        expect(actionButton1.tabIndex).to.equal(-1);\n        expect(actionMenu.shadowRoot?.querySelector('sp-action-button')).to\n            .exist;\n        expect(\n            (\n                actionMenu.shadowRoot?.querySelector(\n                    'sp-action-button'\n                ) as ActionButton\n            ).tabIndex\n        ).to.equal(0);\n    });\n});\n\ndescribe('tabIndex is cached properly', () => {\n    it('cache is managed properly', async () => {\n        const menuEl = await fixture<ActionMenu>(html`\n            <sp-action-menu label=\"More Actions\">\n                <sp-menu-item>One</sp-menu-item>\n                <sp-menu-item>Two</sp-menu-item>\n                <sp-menu-item>Three</sp-menu-item>\n            </sp-action-menu>\n        `);\n\n        expect(\n            menuEl.focusElement?.tabIndex,\n            'button tabindex before disabling'\n        ).to.equal(0);\n\n        menuEl.disabled = true;\n\n        await elementUpdated(menuEl);\n\n        expect(\n            menuEl.focusElement?.tabIndex,\n            'button tabindex after disabling'\n        ).to.equal(-1);\n\n        menuEl.disabled = false;\n\n        await elementUpdated(menuEl);\n\n        expect(\n            menuEl.focusElement?.tabIndex,\n            'button tabindex after setting to 0'\n        ).to.equal(0);\n    });\n});\n"],
  "mappings": "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",
  "names": []
}
