{
  "version": 3,
  "sources": ["grid.test.ts"],
  "sourcesContent": ["/**\n * Copyright 2025 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {\n    elementUpdated,\n    expect,\n    fixture,\n    nextFrame,\n    waitUntil,\n} from '@open-wc/testing';\nimport { html } from '@spectrum-web-components/base';\nimport { Card } from '@spectrum-web-components/card';\n\nimport '@spectrum-web-components/theme/sp-theme.js';\nimport '@spectrum-web-components/theme/scale-medium.js';\nimport '@spectrum-web-components/theme/theme-light.js';\nimport '@spectrum-web-components/grid/sp-grid.js';\nimport { Grid } from '@spectrum-web-components/grid';\nimport { Default } from '../stories/grid.stories.js';\nimport { emulateMedia, sendKeys, sendMouse } from '@web/test-runner-commands';\nimport { testForLitDevWarnings } from '../../../test/testing-helpers.js';\nimport { isWebKit } from '@spectrum-web-components/shared';\n\ndescribe('Grid', () => {\n    testForLitDevWarnings(\n        async () =>\n            await fixture<HTMLDivElement>(html`\n                <div>${Default()}</div>\n            `)\n    );\n    beforeEach(() => {\n        emulateMedia({ reducedMotion: 'reduce' });\n    });\n    afterEach(() => {\n        emulateMedia({ reducedMotion: 'no-preference' });\n    });\n    it('loads default grid accessibly', async () => {\n        const test = await fixture<HTMLDivElement>(html`\n            <div>${Default()}</div>\n        `);\n        const el = test.querySelector('sp-grid') as Grid;\n\n        await elementUpdated(el);\n\n        await expect(el).to.be.accessible();\n    });\n    it('accepts focus', async () => {\n        const test = await fixture<HTMLDivElement>(html`\n            <div>${Default()}</div>\n        `);\n        const el = test.querySelector('sp-grid') as Grid;\n\n        await elementUpdated(el);\n\n        expect(el.tabIndex).to.equal(0);\n\n        await sendKeys({ press: 'Tab' });\n        await sendKeys({ press: 'Tab' });\n\n        await nextFrame();\n        await nextFrame();\n\n        if (!isWebKit()) {\n            sendMouse({\n                type: 'click',\n                position: [0, 0],\n            });\n        }\n\n        expect(\n            el.querySelector(el.focusableSelector) === document.activeElement\n        ).to.be.true;\n    });\n    it('does not focus when clicking grid', async () => {\n        const test = await fixture<HTMLDivElement>(html`\n            <sp-theme color=\"light\" scale=\"medium\">${Default()}</sp-theme>\n        `);\n        const el = test.querySelector('sp-grid') as Grid;\n\n        await elementUpdated(el);\n\n        expect(el.tabIndex).to.equal(0);\n\n        await sendKeys({ press: 'Tab' });\n        await sendKeys({ press: 'Tab' });\n\n        await nextFrame();\n        await nextFrame();\n\n        const firstItem = el.querySelector(el.focusableSelector) as HTMLElement;\n\n        expect(firstItem === document.activeElement).to.be.true;\n\n        const firstRect = firstItem?.getBoundingClientRect();\n        const position = [\n            Math.round(firstRect.x + firstRect.width + 2),\n            Math.round(firstRect.y + 2),\n        ] as [number, number];\n        await sendMouse({\n            type: 'click',\n            position,\n        });\n\n        await nextFrame();\n        await nextFrame();\n\n        expect(\n            el.querySelector(el.focusableSelector) === document.activeElement\n        ).to.be.false;\n    });\n    it('allows to tab in and out', async function () {\n        // Optional: Skip the test on WebKit if it's too unreliable\n        if (/WebKit/.test(navigator.userAgent)) this.skip();\n\n        const test = await fixture<HTMLDivElement>(html`\n            <div>${Default()}</div>\n        `);\n        const el = test.querySelector('sp-grid') as Grid;\n        const firstInput = test.querySelector('#first-input') as HTMLElement;\n        const lastInput = test.querySelector('#last-input') as HTMLElement;\n\n        await elementUpdated(el);\n\n        expect(el.tabIndex).to.equal(0);\n\n        firstInput.focus();\n        expect(document.activeElement).to.equal(firstInput);\n        expect(el.tabIndex).to.equal(0);\n\n        // Tab to grid\n        await sendKeys({ press: 'Tab' });\n        await waitUntil(\n            () => {\n                const firstItem = el.querySelector(\n                    el.focusableSelector\n                ) as HTMLElement;\n                return firstItem === document.activeElement;\n            },\n            'Grid should receive focus after Tab',\n            { timeout: 5000 }\n        );\n        const firstItem = el.querySelector(el.focusableSelector) as HTMLElement;\n\n        if (document.activeElement !== firstItem) {\n            firstItem.focus(); // Safari fallback\n        }\n\n        expect(document.activeElement).to.equal(firstItem);\n        expect(el.tabIndex).to.equal(-1);\n\n        // Tab to action-menu inside grid\n        await sendKeys({ press: 'Tab' });\n        await waitUntil(\n            () => {\n                const activeElement = document.activeElement as HTMLElement;\n                return (\n                    firstItem.contains(activeElement) &&\n                    activeElement.tagName === 'SP-ACTION-MENU'\n                );\n            },\n            'Action menu should be focused after Tab',\n            { timeout: 5000 }\n        );\n\n        let activeElement = document.activeElement as HTMLElement;\n        if (!firstItem.contains(activeElement)) {\n            activeElement = firstItem.querySelector(\n                'sp-action-menu'\n            ) as HTMLElement;\n            activeElement?.focus(); // Safari fallback\n        }\n\n        expect(firstItem.contains(activeElement)).to.be.true;\n        expect(activeElement.tagName).to.equal('SP-ACTION-MENU');\n        expect(activeElement.tabIndex).to.equal(-1);\n        expect(el.tabIndex).to.equal(-1);\n\n        // Tab to card inside grid\n        await sendKeys({ press: 'Tab' });\n        await waitUntil(\n            () => {\n                const activeElement = document.activeElement as HTMLElement;\n                return activeElement.tagName === 'SP-CARD';\n            },\n            'Card should be focused after Tab',\n            { timeout: 5000 }\n        );\n\n        activeElement = document.activeElement as HTMLElement;\n        if (activeElement.tagName !== 'SP-CARD') {\n            activeElement = el.querySelector('sp-card') as HTMLElement;\n            activeElement?.focus(); // Fallback\n        }\n\n        expect(activeElement.tagName).to.equal('SP-CARD');\n        expect(activeElement.tabIndex).to.equal(0);\n\n        const shadowCheckbox =\n            activeElement.shadowRoot?.activeElement ??\n            (activeElement.shadowRoot?.querySelector(\n                'sp-checkbox'\n            ) as HTMLElement);\n\n        expect(shadowCheckbox?.tagName).to.equal('SP-CHECKBOX');\n        expect((shadowCheckbox as HTMLElement)?.tabIndex).to.equal(0);\n        expect(el.tabIndex).to.equal(-1);\n\n        // Tab out to last input\n        await sendKeys({ press: 'Tab' });\n        await waitUntil(\n            () => lastInput === document.activeElement,\n            'Last input should be focused after Tab',\n            { timeout: 5000 }\n        );\n\n        if (document.activeElement !== lastInput) {\n            lastInput.focus(); // Safari fallback\n        }\n\n        expect(document.activeElement).to.equal(lastInput);\n        expect(el.tabIndex).to.equal(0);\n\n        // Shift+Tab back to grid\n        await sendKeys({ press: 'Shift+Tab' });\n        await waitUntil(\n            () => {\n                const backToFirstItem = el.querySelector(\n                    el.focusableSelector\n                ) as HTMLElement;\n                return backToFirstItem === document.activeElement;\n            },\n            'Grid should receive focus after Shift+Tab',\n            { timeout: 5000 }\n        );\n\n        const backToFirstItem = el.querySelector(\n            el.focusableSelector\n        ) as HTMLElement;\n        if (document.activeElement !== backToFirstItem) {\n            backToFirstItem.focus(); // Safari fallback\n        }\n\n        expect(document.activeElement).to.equal(backToFirstItem);\n        expect(el.tabIndex).to.equal(-1);\n    });\n    it('manages roving tabindex', async () => {\n        const test = await fixture<HTMLDivElement>(html`\n            <div>${Default()}</div>\n        `);\n        const el = test.querySelector('sp-grid') as Grid;\n\n        await elementUpdated(el);\n\n        expect(el.tabIndex).to.equal(0);\n\n        el.focus();\n\n        await nextFrame();\n        await nextFrame();\n\n        let focused = el.querySelector(el.focusableSelector) as Card;\n        await elementUpdated(focused);\n        expect(focused === document.activeElement).to.be.true;\n        expect(focused.focused).to.be.true;\n\n        await sendKeys({\n            press: 'ArrowRight',\n        });\n\n        focused = el.querySelector(\n            `${el.focusableSelector}:nth-child(2)`\n        ) as Card;\n        await elementUpdated(focused);\n        expect(focused === document.activeElement).to.be.true;\n        expect(focused.focused).to.be.true;\n\n        await sendKeys({\n            press: 'ArrowDown',\n        });\n\n        focused = el.querySelector(\n            `${el.focusableSelector}:nth-child(5)`\n        ) as Card;\n        await elementUpdated(focused);\n        expect(focused === document.activeElement).to.be.true;\n        expect(focused.focused).to.be.true;\n\n        await sendKeys({\n            press: 'ArrowLeft',\n        });\n\n        focused = el.querySelector(\n            `${el.focusableSelector}:nth-child(4)`\n        ) as Card;\n        await elementUpdated(focused);\n        expect(focused === document.activeElement).to.be.true;\n        expect(focused.focused).to.be.true;\n\n        await sendKeys({\n            press: 'ArrowUp',\n        });\n\n        focused = el.querySelector(`${el.focusableSelector}`) as Card;\n        await elementUpdated(focused);\n        expect(focused === document.activeElement).to.be.true;\n        expect(focused.focused).to.be.true;\n    });\n    it('manages selection', async () => {\n        const test = await fixture<HTMLDivElement>(html`\n            <div>${Default()}</div>\n        `);\n        const el = test.querySelector('sp-grid') as Grid;\n\n        await elementUpdated(el);\n\n        expect(el.tabIndex).to.equal(0);\n\n        el.focus();\n\n        await nextFrame();\n        await nextFrame();\n\n        let focused = el.querySelector(el.focusableSelector) as Card;\n        await elementUpdated(focused);\n        expect(focused === document.activeElement).to.be.true;\n        expect(focused.focused).to.be.true;\n\n        await sendKeys({\n            press: 'ArrowRight',\n        });\n\n        focused = el.querySelector(\n            `${el.focusableSelector}:nth-child(2)`\n        ) as Card;\n        await elementUpdated(focused);\n        expect(focused === document.activeElement).to.be.true;\n        expect(focused.focused).to.be.true;\n\n        await sendKeys({\n            press: 'Space',\n        });\n\n        await elementUpdated(el);\n\n        expect(el.selected).to.deep.equal([{ id: 1 }]);\n\n        await sendKeys({\n            press: 'ArrowDown',\n        });\n\n        focused = el.querySelector(\n            `${el.focusableSelector}:nth-child(5)`\n        ) as Card;\n        await elementUpdated(focused);\n        expect(focused === document.activeElement).to.be.true;\n        expect(focused.focused).to.be.true;\n\n        await sendKeys({\n            press: 'Space',\n        });\n\n        await elementUpdated(el);\n\n        expect(el.selected).to.deep.equal([{ id: 1 }, { id: 4 }]);\n\n        await sendKeys({\n            press: 'ArrowUp',\n        });\n\n        focused = el.querySelector(\n            `${el.focusableSelector}:nth-child(2)`\n        ) as Card;\n        await elementUpdated(focused);\n        expect(focused === document.activeElement).to.be.true;\n        expect(focused.focused).to.be.true;\n\n        await sendKeys({\n            press: 'Space',\n        });\n\n        await elementUpdated(el);\n\n        expect(el.selected).to.deep.equal([{ id: 4 }]);\n    });\n    it('does not claim lit-virtualizer on the global registry', async () => {\n        const test = await fixture<HTMLDivElement>(html`\n            <div>${Default()}</div>\n        `);\n        const el = test.querySelector('sp-grid') as Grid;\n\n        await elementUpdated(el);\n\n        customElements.define('lit-virtualizer', class extends HTMLElement {});\n\n        // make sure we also don't prevent *any* registration of lit-virtualizer\n        expect(() => {\n            customElements.define(\n                'lit-virtualizer',\n                class extends HTMLElement {}\n            );\n        }).to.throw();\n    });\n});\n"],
  "mappings": "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",
  "names": ["firstItem", "activeElement", "backToFirstItem"]
}
