{
  "version": 3,
  "sources": ["Theme.ts"],
  "sourcesContent": ["/**\n * Copyright 2025 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport { CSSResult, CSSResultGroup } from '@spectrum-web-components/base';\nimport { version } from '@spectrum-web-components/base/src/version.js';\nimport {\n    Color,\n    COLOR_VALUES,\n    FragmentMap,\n    FragmentName,\n    FragmentType,\n    ProvideLang,\n    Scale,\n    SCALE_VALUES,\n    SettableFragmentTypes,\n    ShadowRootWithAdoptedStyleSheets,\n    SYSTEM_VARIANT_VALUES,\n    SystemContextCallback,\n    SystemVariant,\n    ThemeFragmentMap,\n    ThemeKindProvider,\n} from './theme-interfaces.dev.js'\nexport type { ProvideLang, ThemeFragmentMap, Color, Scale, SystemVariant };\n/**\n * @element sp-theme\n * @attr {string} [lang=\"\"] - The language of the content scoped to this `sp-theme` element, see: <a href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/lang\" target=\"_blank\">MDN reference</a>.\n *\n * @slot - Content on which to apply the CSS Custom Properties defined by the current theme configuration\n */\nexport class Theme extends HTMLElement implements ThemeKindProvider {\n    private static themeFragmentsByKind: ThemeFragmentMap = new Map();\n    private static defaultFragments: Set<FragmentName> = new Set(['spectrum']);\n    private static templateElement?: HTMLTemplateElement;\n    private static instances: Set<Theme> = new Set();\n    static VERSION = version;\n\n    static get observedAttributes(): string[] {\n        return ['color', 'scale', 'lang', 'dir', 'system'];\n    }\n\n    _dir: 'ltr' | 'rtl' | '' = '';\n\n    override set dir(dir: 'ltr' | 'rtl' | '') {\n        if (dir === this.dir) return;\n        this.setAttribute('dir', dir);\n        this._dir = dir;\n        const targetDir = dir === 'rtl' ? dir : 'ltr';\n        /* c8 ignore next 3 */\n        this.trackedChildren.forEach((el) => {\n            el.setAttribute('dir', targetDir);\n        });\n    }\n\n    /**\n     * Reading direction of the content scoped to this `sp-theme` element.\n     * @type {\"ltr\" | \"rtl\" | \"\"}\n     * @attr\n     */\n    override get dir(): 'ltr' | 'rtl' | '' {\n        return this._dir;\n    }\n\n    protected attributeChangedCallback(\n        attrName: SettableFragmentTypes | 'lang' | 'dir',\n        old: string | null,\n        value: string | null\n    ): void {\n        if (old === value) {\n            return;\n        }\n        if (attrName === 'color') {\n            this.color = value as Color;\n        } else if (attrName === 'scale') {\n            this.scale = value as Scale;\n        } else if (attrName === 'lang' && !!value) {\n            this.lang = value;\n            this._provideContext();\n        } else if (attrName === 'system') {\n            this.system = value as SystemVariant;\n            this._provideSystemContext();\n        } else if (attrName === 'dir') {\n            this.dir = value as 'ltr' | 'rtl' | '';\n        }\n    }\n    private requestUpdate(): void {\n        this.shouldAdoptStyles();\n    }\n\n    public override shadowRoot!: ShadowRootWithAdoptedStyleSheets;\n\n    private _system: SystemVariant | '' = 'spectrum';\n    /**\n     * The Spectrum system that is applied to the content scoped to this `sp-theme` element.\n     *\n     * A value is requried.\n     * @type {\"spectrum\" | \"express\" }\n     * @attr\n     */\n    get system(): SystemVariant | '' {\n        const systemFragments = Theme.themeFragmentsByKind.get('system');\n        const { name } =\n            (systemFragments && systemFragments.get('default')) || {};\n        return this._system || (name as SystemVariant) || '';\n    }\n\n    set system(newValue: SystemVariant | '') {\n        if (newValue === this._system) return;\n        const system =\n            !!newValue && SYSTEM_VARIANT_VALUES.includes(newValue)\n                ? newValue\n                : this.system;\n        if (system !== this._system) {\n            this._system = system;\n            this.requestUpdate();\n        }\n        if (system) {\n            this.setAttribute('system', system);\n            /* c8 ignore next 3 */\n        } else {\n            this.removeAttribute('system');\n        }\n    }\n\n    private _color: Color | '' = '';\n\n    /**\n     * The Spectrum color stops to apply to content scoped by this `sp-theme` element.\n     *\n     * A value is requried.\n     * @type {\"lightest\" | \"light\" | \"dark\" | \"darkest\" | \"\"}\n     * @attr\n     */\n    get color(): Color | '' {\n        const themeFragments = Theme.themeFragmentsByKind.get('color');\n        const { name } =\n            (themeFragments && themeFragments.get('default')) || {};\n        return this._color || (name as Color) || '';\n    }\n\n    set color(newValue: Color | '') {\n        if (newValue === this._color) return;\n        const color =\n            !!newValue && COLOR_VALUES.includes(newValue)\n                ? newValue\n                : this.color;\n        if (color !== this._color) {\n            this._color = color;\n            this.requestUpdate();\n        }\n        if (color) {\n            this.setAttribute('color', color);\n        } else {\n            this.removeAttribute('color');\n        }\n    }\n\n    private _scale: Scale | '' = '';\n\n    /**\n     * The Spectrum platform scale to apply to content scoped by this `sp-theme` element.\n     *\n     * A value is requried.\n     * @type {\"medium\" | \"large\" | \"\"}\n     * @attr\n     */\n    get scale(): Scale | '' {\n        const themeFragments = Theme.themeFragmentsByKind.get('scale');\n        const { name } =\n            (themeFragments && themeFragments.get('default')) || {};\n        return this._scale || (name as Scale) || '';\n    }\n\n    set scale(newValue: Scale | '') {\n        if (newValue === this._scale) return;\n        const scale =\n            !!newValue && SCALE_VALUES.includes(newValue)\n                ? newValue\n                : this.scale;\n        if (scale !== this._scale) {\n            this._scale = scale;\n            this.requestUpdate();\n        }\n        if (scale) {\n            this.setAttribute('scale', scale);\n            /* c8 ignore next 3 */\n        } else {\n            this.removeAttribute('scale');\n        }\n    }\n\n    private get styles(): CSSResultGroup[] {\n        const themeKinds: FragmentType[] = [\n            ...Theme.themeFragmentsByKind.keys(),\n        ];\n        const getStyle = (\n            fragments: FragmentMap,\n            name: FragmentName,\n            kind?: FragmentType\n        ): CSSResultGroup | undefined => {\n            const currentStyles =\n                kind && kind !== 'system' && this.system !== 'spectrum'\n                    ? fragments.get(`${name}-${this.system}`)\n                    : fragments.get(name);\n            // system=\"spectrum\" is available by default and doesn't need to be applied.\n            const isAppliedFragment =\n                name === 'spectrum' || !kind || this.hasAttribute(kind);\n            if (currentStyles && isAppliedFragment) {\n                return currentStyles.styles;\n            }\n            return;\n        };\n        const styles = themeKinds.reduce((acc, kind) => {\n            const kindFragments = Theme.themeFragmentsByKind.get(\n                kind\n            ) as FragmentMap;\n            let style: CSSResultGroup | undefined;\n            if (kind === 'app' || kind === 'core') {\n                style = getStyle(kindFragments, kind);\n            } else {\n                const { [kind]: name } = this;\n                style = getStyle(kindFragments, <FragmentName>name, kind);\n            }\n            if (style) {\n                acc.push(style);\n            }\n            return acc;\n        }, [] as CSSResultGroup[]);\n        const themeFragmentsByKind = Theme.themeFragmentsByKind;\n\n        checkForIssues(\n            this,\n            this.system,\n            this.color,\n            this.scale,\n            themeFragmentsByKind\n        );\n\n        return [...styles];\n    }\n\n    private static get template(): HTMLTemplateElement {\n        if (!this.templateElement) {\n            this.templateElement = document.createElement('template');\n            this.templateElement.innerHTML = '<slot></slot>';\n        }\n        return this.templateElement;\n    }\n\n    constructor() {\n        super();\n        this.attachShadow({ mode: 'open' });\n        const node = document.importNode(Theme.template.content, true);\n        this.shadowRoot.appendChild(node);\n        this.shouldAdoptStyles();\n        this.addEventListener(\n            'sp-language-context',\n            this._handleContextPresence as EventListener\n        );\n        this.addEventListener(\n            'sp-system-context',\n            this._handleSystemContext as EventListener\n        );\n\n        this.updateComplete = this.__createDeferredPromise();\n    }\n\n    private _systemContextConsumers = new Map<\n        HTMLElement,\n        [SystemContextCallback, () => void]\n    >();\n\n    private _handleSystemContext(\n        event: CustomEvent<{ callback: SystemContextCallback }>\n    ): void {\n        event.stopPropagation();\n\n        const target = event.composedPath()[0] as HTMLElement;\n\n        // Avoid duplicate registrations\n        if (this._systemContextConsumers.has(target)) {\n            return;\n        }\n\n        // Create an unsubscribe function\n        const unsubscribe: () => void = () =>\n            this._systemContextConsumers.delete(target);\n\n        // Store the callback and unsubscribe function\n        this._systemContextConsumers.set(target, [\n            event.detail.callback,\n            unsubscribe,\n        ]);\n\n        // Provide the context data\n        const [callback] = this._systemContextConsumers.get(target) || [];\n        if (callback) {\n            callback(this.system, unsubscribe);\n        }\n    }\n\n    public updateComplete!: Promise<boolean>;\n    private __resolve!: (compelted: boolean) => void;\n\n    private __createDeferredPromise(): Promise<boolean> {\n        return new Promise((resolve) => {\n            this.__resolve = resolve;\n        });\n    }\n\n    protected connectedCallback(): void {\n        // Note, first update/render handles styleElement so we only call this if\n        // connected after first update.\n        this.shouldAdoptStyles();\n\n        // Add `this` to the instances array.\n        Theme.instances.add(this);\n        if (!this.hasAttribute('dir')) {\n            let dirParent = ((this as HTMLElement).assignedSlot ||\n                this.parentNode) as HTMLElement | DocumentFragment | ShadowRoot;\n            while (\n                dirParent !== document.documentElement &&\n                !(dirParent instanceof Theme)\n            ) {\n                dirParent = ((dirParent as HTMLElement).assignedSlot || // step into the shadow DOM of the parent of a slotted node\n                    dirParent.parentNode || // DOM Element detected\n                    (dirParent as ShadowRoot).host) as\n                    | HTMLElement\n                    | DocumentFragment\n                    | ShadowRoot;\n            }\n            this.dir = dirParent.dir === 'rtl' ? dirParent.dir : 'ltr';\n        }\n    }\n\n    protected disconnectedCallback(): void {\n        // Remove `this` to the instances array.\n        Theme.instances.delete(this);\n    }\n\n    public startManagingContentDirection(el: HTMLElement): void {\n        this.trackedChildren.add(el);\n    }\n\n    public stopManagingContentDirection(el: HTMLElement): void {\n        this.trackedChildren.delete(el);\n    }\n\n    private trackedChildren: Set<HTMLElement> = new Set();\n\n    private _updateRequested = false;\n\n    private async shouldAdoptStyles(): Promise<void> {\n        if (!this._updateRequested) {\n            this.updateComplete = this.__createDeferredPromise();\n            this._updateRequested = true;\n            this._updateRequested = await false;\n            this.adoptStyles();\n            this.__resolve(true);\n        }\n    }\n\n    protected adoptStyles(): void {\n        const styles = this.styles;\n        const styleSheets: CSSStyleSheet[] = [];\n        for (const style of styles) {\n            styleSheets.push((style as CSSResult).styleSheet!);\n        }\n        this.shadowRoot.adoptedStyleSheets = styleSheets;\n    }\n\n    static registerThemeFragment(\n        name: FragmentName,\n        kind: FragmentType,\n        styles: CSSResultGroup\n    ): void {\n        const fragmentMap = Theme.themeFragmentsByKind.get(kind) || new Map();\n        if (fragmentMap.size === 0) {\n            Theme.themeFragmentsByKind.set(kind, fragmentMap);\n            // we're adding our first fragment for this kind, set as default\n            fragmentMap.set('default', { name, styles });\n            Theme.defaultFragments.add(name);\n        }\n        fragmentMap.set(name, { name, styles });\n        Theme.instances.forEach((instance) => instance.shouldAdoptStyles());\n    }\n\n    private _contextConsumers = new Map<\n        HTMLElement,\n        [ProvideLang['callback'], () => void]\n    >();\n\n    /* c8 ignore next 5 */\n    private _provideContext(): void {\n        this._contextConsumers.forEach(([callback, unsubscribe]) =>\n            callback(this.lang, unsubscribe)\n        );\n    }\n\n    private _provideSystemContext(): void {\n        this._systemContextConsumers.forEach(([callback, unsubscribe]) =>\n            callback(this.system, unsubscribe)\n        );\n    }\n\n    private _handleContextPresence(event: CustomEvent<ProvideLang>): void {\n        event.stopPropagation();\n        const target = event.composedPath()[0] as HTMLElement;\n        /* c8 ignore next 3 */\n        if (this._contextConsumers.has(target)) {\n            return;\n        }\n        this._contextConsumers.set(target, [\n            event.detail.callback,\n            () => this._contextConsumers.delete(target),\n        ]);\n        const [callback, unsubscribe] =\n            this._contextConsumers.get(target) || [];\n        if (callback && unsubscribe) {\n            callback(\n                this.lang ||\n                    document.documentElement.lang ||\n                    navigator.language,\n                unsubscribe\n            );\n        }\n    }\n}\n\nfunction checkForIssues(\n    instance: Theme,\n    system: SystemVariant | '',\n    color: Color | '',\n    scale: Scale | '',\n    themeFragmentsByKind: ThemeFragmentMap\n): void {\n    if (window.__swc.DEBUG) {\n        const issues: string[] = [];\n        const checkForAttribute = (\n            name: 'system' | 'color' | 'scale',\n            resolvedValue: string,\n            actualValue: string | null\n        ): void => {\n            const systemModifier =\n                system && system !== 'spectrum' ? `-${system}` : '';\n            if (!resolvedValue) {\n                issues.push(\n                    `You have not explicitly set the \"${name}\" attribute and there is no default value on which to fallback.`\n                );\n            } else if (!actualValue) {\n                issues.push(\n                    `You have not explicitly set the \"${name}\" attribute, the default value (\"${resolvedValue}\") is being used as a fallback.`\n                );\n            } else if (\n                !themeFragmentsByKind\n                    .get(name)\n                    ?.get(\n                        resolvedValue +\n                            (name === 'system' ? '' : systemModifier)\n                    )\n            ) {\n                issues.push(\n                    `You have set \"${name}='${resolvedValue}'\" but the associated system fragment has not been loaded.`\n                );\n            }\n        };\n\n        if (['lightest', 'darkest'].includes(color || '')) {\n            issues.push(\n                `DEPRECATION NOTICE: Color \"lightest\" and \"darkest\" are deprecated. For more information, see: https://opensource.adobe.com/spectrum-web-components/tools/theme/`\n            );\n        }\n        checkForAttribute('system', system, instance.getAttribute('system'));\n        checkForAttribute('color', color, instance.getAttribute('color'));\n        checkForAttribute('scale', scale, instance.getAttribute('scale'));\n\n        if (issues.length) {\n            window.__swc.warn(\n                instance,\n                'You are leveraging an <sp-theme> element and the following issues may disrupt your theme delivery:',\n                'https://opensource.adobe.com/spectrum-web-components/components/theme/#example',\n                { issues }\n            );\n        }\n    }\n}\n"],
  "mappings": "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",
  "names": []
}
