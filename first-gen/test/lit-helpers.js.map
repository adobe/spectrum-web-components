{
  "version": 3,
  "sources": ["lit-helpers.ts"],
  "sourcesContent": ["/**\n * Copyright 2025 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\nimport { ElementPart, Part } from 'lit';\nimport { nothing } from 'lit/html.js';\nimport { AsyncDirective, directive } from 'lit/async-directive.js';\n\ntype EventListenerWithOptions = EventListenerOrEventListenerObject &\n    Partial<AddEventListenerOptions>;\n\n/**\n * Usage:\n *    import { html, render } from 'lit-html';\n *    import { spread } from '@open-wc/lit-helpers';\n *\n *    render(\n *      html`\n *        <div\n *          ${spread({\n *            'my-attribute': 'foo',\n *            '?my-boolean-attribute': true,\n *            '.myProperty': { foo: 'bar' },\n *            '@my-event': () => console.log('my-event fired'),\n *          })}\n *        ></div>\n *      `,\n *      document.body,\n *    );\n *\n * @TODO: replace this with a lit-native directive once one is released: https://github.com/lit/lit/pull/1960\n */\nclass SpreadDirective extends AsyncDirective {\n    host!: EventTarget | object | Element;\n    element!: Element;\n    prevData: { [key: string]: unknown } = {};\n\n    render(_spreadData: { [key: string]: unknown }) {\n        return nothing;\n    }\n    override update(part: Part, [spreadData]: Parameters<this['render']>) {\n        if (this.element !== (part as ElementPart).element) {\n            this.element = (part as ElementPart).element;\n        }\n        this.host = part.options?.host || this.element;\n        this.apply(spreadData);\n        this.groom(spreadData);\n        this.prevData = spreadData;\n    }\n\n    apply(data: { [key: string]: unknown }) {\n        if (!data) return;\n        const { prevData, element } = this;\n        for (const key in data) {\n            const value = data[key];\n            if (value === prevData[key]) {\n                continue;\n            }\n            const name = key.slice(1);\n            switch (key[0]) {\n                case '@': // event listener\n                    const prevHandler = prevData[key];\n                    if (prevHandler) {\n                        element.removeEventListener(\n                            name,\n                            this,\n                            value as EventListenerWithOptions\n                        );\n                    }\n                    element.addEventListener(\n                        name,\n                        this,\n                        value as EventListenerWithOptions\n                    );\n                    break;\n                case '.': // property\n                    // @ts-ignore\n                    element[name] = value;\n                    break;\n                case '?': // boolean attribute\n                    if (value) {\n                        element.setAttribute(name, '');\n                    } else {\n                        element.removeAttribute(name);\n                    }\n                    break;\n                default:\n                    // standard attribute\n                    if (value != null) {\n                        element.setAttribute(key, String(value));\n                    } else {\n                        element.removeAttribute(key);\n                    }\n                    break;\n            }\n        }\n    }\n\n    groom(data: { [key: string]: unknown }) {\n        const { prevData, element } = this;\n        if (!prevData) return;\n        for (const key in prevData) {\n            if (!data || !(key in data)) {\n                switch (key[0]) {\n                    case '@': // event listener\n                        const value = prevData[key];\n                        element.removeEventListener(\n                            key.slice(1),\n                            this,\n                            value as EventListenerWithOptions\n                        );\n                        break;\n                    case '.': // property\n                        // @ts-ignore\n                        element[key.slice(1)] = undefined;\n                        break;\n                    case '?': // boolean attribute\n                        element.removeAttribute(key.slice(1));\n                        break;\n                    default:\n                        // standard attribute\n                        element.removeAttribute(key);\n                        break;\n                }\n            }\n        }\n    }\n\n    handleEvent(event: Event) {\n        const value: Function | EventListenerObject = this.prevData[\n            `@${event.type}`\n        ] as Function | EventListenerObject;\n        if (typeof value === 'function') {\n            (value as Function).call(this.host, event);\n        } else {\n            (value as EventListenerObject).handleEvent(event);\n        }\n    }\n\n    override disconnected() {\n        const { prevData, element } = this;\n        for (const key in prevData) {\n            if (key[0] !== '@') continue;\n            // event listener\n            const value = prevData[key];\n            element.removeEventListener(\n                key.slice(1),\n                this,\n                value as EventListenerWithOptions\n            );\n        }\n    }\n\n    override reconnected() {\n        const { prevData, element } = this;\n        for (const key in prevData) {\n            if (key[0] !== '@') continue;\n            // event listener\n            const value = prevData[key];\n            element.addEventListener(\n                key.slice(1),\n                this,\n                value as EventListenerWithOptions\n            );\n        }\n    }\n}\n\nexport const spread = directive(SpreadDirective);\n\nclass SpreadPropsDirective extends AsyncDirective {\n    host!: EventTarget | object | Element;\n    element!: Element;\n    prevData: { [key: string]: unknown } = {};\n\n    render(_spreadData: { [key: string]: unknown }) {\n        return nothing;\n    }\n    override update(part: Part, [spreadData]: Parameters<this['render']>) {\n        if (this.element !== (part as ElementPart).element) {\n            this.element = (part as ElementPart).element;\n        }\n        this.host = part.options?.host || this.element;\n        this.apply(spreadData);\n        this.groom(spreadData);\n        this.prevData = spreadData;\n    }\n\n    apply(data: { [key: string]: unknown }) {\n        if (!data) return;\n        const { prevData, element } = this;\n        for (const key in data) {\n            const value = data[key];\n            if (value === prevData[key]) {\n                continue;\n            }\n            // @ts-ignore\n            element[key] = value;\n        }\n    }\n\n    groom(data: { [key: string]: unknown }) {\n        const { prevData, element } = this;\n        if (!prevData) return;\n        for (const key in prevData) {\n            if (!data || !(key in data)) {\n                // @ts-ignore\n                element[key] = undefined;\n            }\n        }\n    }\n}\n\nexport const spreadProps = directive(SpreadPropsDirective);\n"],
  "mappings": "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",
  "names": []
}
