{
  "version": 3,
  "sources": ["testing-helpers-a11y.ts"],
  "sourcesContent": ["/**\n * Copyright 2025 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport { expect, nextFrame } from '@open-wc/testing';\nimport { a11ySnapshot, findAccessibilityNode } from '@web/test-runner-commands';\nimport { isWebKit } from '@spectrum-web-components/shared';\n\nexport type DescribedNode = {\n    name: string;\n    description: string;\n};\n\nexport const findDescribedNode = async (\n    name: string,\n    description: string,\n    debug?: boolean\n): Promise<void> => {\n    await nextFrame();\n\n    const snapshot = (await a11ySnapshot({})) as unknown as DescribedNode & {\n        children: DescribedNode[];\n    };\n\n    if (debug) {\n        // eslint-disable-next-line no-console\n        console.log(JSON.stringify(snapshot, undefined, '  '));\n    }\n\n    // WebKit doesn't currently associate the `aria-describedby` element to the attribute\n    // host in the accessibility tree. Give it an escape hatch for now.\n    const node = findAccessibilityNode(\n        snapshot,\n        (node) =>\n            node.name === name &&\n            (node.description === description || isWebKit())\n    );\n\n    expect(node).to.not.be.null;\n\n    if (isWebKit()) {\n        // Retest WebKit without the escape hatch, expecting it to fail.\n        // This way we get notified when the results are as expected, again.\n        const iOSNode = findAccessibilityNode(\n            snapshot,\n            (node) => node.name === name && node.description === description\n        );\n        expect(iOSNode).to.be.null;\n    }\n};\n"],
  "mappings": ";AAYA,SAAS,QAAQ,iBAAiB;AAClC,SAAS,cAAc,6BAA6B;AACpD,SAAS,gBAAgB;AAOlB,aAAM,oBAAoB,OAC7B,MACA,aACA,UACgB;AAChB,QAAM,UAAU;AAEhB,QAAM,WAAY,MAAM,aAAa,CAAC,CAAC;AAIvC,MAAI,OAAO;AAEP,YAAQ,IAAI,KAAK,UAAU,UAAU,QAAW,IAAI,CAAC;AAAA,EACzD;AAIA,QAAM,OAAO;AAAA,IACT;AAAA,IACA,CAACA,UACGA,MAAK,SAAS,SACbA,MAAK,gBAAgB,eAAe,SAAS;AAAA,EACtD;AAEA,SAAO,IAAI,EAAE,GAAG,IAAI,GAAG;AAEvB,MAAI,SAAS,GAAG;AAGZ,UAAM,UAAU;AAAA,MACZ;AAAA,MACA,CAACA,UAASA,MAAK,SAAS,QAAQA,MAAK,gBAAgB;AAAA,IACzD;AACA,WAAO,OAAO,EAAE,GAAG,GAAG;AAAA,EAC1B;AACJ;",
  "names": ["node"]
}
