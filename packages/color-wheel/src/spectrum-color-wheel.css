/* THIS FILE IS MACHINE GENERATED. DO NOT EDIT */
:host {
    --spectrum-colorwheel-inline-size: var(--spectrum-color-wheel-width);
    --spectrum-colorwheel-block-size: var(--spectrum-color-wheel-width);
    --spectrum-colorwheel-min-inline-size: var(--spectrum-color-wheel-minimum-width);
    --spectrum-colorwheel-border-color-rgb: var(--spectrum-gray-1000-rgb);
    --spectrum-colorwheel-border-opacity: var(--spectrum-color-wheel-border-opacity);
    --spectrum-colorwheel-border-color: rgba(var(--spectrum-colorwheel-border-color-rgb), var(--spectrum-colorwheel-border-opacity));
    --spectrum-colorwheel-border-width: var(--spectrum-border-width-100);
    --spectrum-colorwheel-track-width: var(--spectrum-color-control-track-width);
    --spectrum-colorwheel-fill-color-disabled: var(--spectrum-disabled-background-color);
    --_track-width: var(--mod-colorwheel-track-width, var(--spectrum-colorwheel-track-width));
    --_border-width: var(--spectrum-colorwheel-border-width);
    min-inline-size: var(--mod-colorwheel-min-inline-size, var(--spectrum-colorwheel-min-inline-size));
    inline-size: var(--mod-colorwheel-inline-size, var(--spectrum-colorwheel-inline-size));
    block-size: var(--mod-colorwheel-block-size, var(--spectrum-colorwheel-block-size));
    -webkit-user-select: none;
    user-select: none;
    cursor: default;
    display: block;
    position: relative;
}

:host:before {
    inline-size: calc(var(--mod-colorwheel-inline-size, var(--spectrum-colorwheel-inline-size)) - var(--spectrum-colorwheel-border-width) * 4);
    block-size: calc(var(--mod-colorwheel-inline-size, var(--spectrum-colorwheel-inline-size)) - var(--spectrum-colorwheel-border-width) * 4);
    inset: var(--spectrum-colorwheel-border-width);
}

:host:after,
:host:before {
    content: '';
    border-width: var(--spectrum-colorwheel-border-width);
    border-style: solid;
    border-color: var(--mod-colorwheel-border-color, var(--spectrum-colorwheel-border-color));
    z-index: 1;
    border-radius: 100%;
    position: absolute;
}

:host:after {
    inset: calc(var(--mod-colorwheel-track-width, var(--spectrum-colorwheel-track-width)) - var(--spectrum-colorwheel-border-width) * 2);
}

:host([focused]) {
    z-index: 2;
}

:host([disabled]) {
    pointer-events: none;
}

:host([disabled]) .inner:before,
:host([disabled]):after,
:host([disabled]):before {
    border-color: #0000;
    border-color: var(--highcontrast-colorwheel-border-color-disabled, transparent);
}

:host([dragged]) {
    z-index: 2;
}

.inner {
    inline-size: var(--mod-colorwheel-colorarea-container-size, var(--spectrum-colorwheel-colorarea-container-size));
    block-size: var(--mod-colorwheel-colorarea-container-size, var(--spectrum-colorwheel-colorarea-container-size));
    margin: auto;
    display: flex;
    position: absolute;
    inset-block: 0;
    inset-inline: 0;
}

.colorarea-container {
    block-size: auto;
    inline-size: 100%;
    justify-content: center;
    align-items: center;
    display: flex;
}

.slider {
    opacity: 0;
    inline-size: 100%;
    block-size: 100%;
    z-index: 0;
    pointer-events: none;
    margin: 0;
    position: absolute;
    inset-block-start: 0;
    inset-inline-start: 0;
}

.handle {
    transform: translate(calc(var(--mod-colorwheel-inline-size, var(--spectrum-colorwheel-inline-size)) / 2 - var(--mod-colorwheel-track-width, var(--mod-colorwheel-track-width, var(--spectrum-colorwheel-track-width))) / 2));
    inset-block-start: 50%;
    inset-inline: 50%;
}

.wheel {
    inset-block: var(--spectrum-colorwheel-border-width);
    inset-inline: var(--spectrum-colorwheel-border-width);
    clip-path: path(evenodd, var(--mod-colorwheel-path, var(--spectrum-colorwheel-path)));
    background: conic-gradient(from 90deg, red, #ff8000, #ff0, #80ff00, #0f0, #00ff80, #0ff, #0080ff, #00f, #8000ff, #f0f, #ff0080, red);
    position: absolute;
}

:host([disabled]) .wheel {
    pointer-events: none;
    background: var(--highcontrast-colorwheel-fill-color-disabled, var(--mod-colorwheel-fill-color-disabled, var(--spectrum-colorwheel-fill-color-disabled)));
}

@media (forced-colors: active) {
    :host {
        --highcontrast-colorwheel-border-color-disabled: GrayText;
        --highcontrast-colorwheel-fill-color-disabled: Canvas;
        forced-color-adjust: none;
    }
}
