/*
Copyright 2022 Adobe. All rights reserved.
This file is licensed to you under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License. You may obtain a copy
of the License at http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software distributed under
the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS
OF ANY KIND, either express or implied. See the License for the specific language
governing permissions and limitations under the License.
*/

/* THIS FILE IS MACHINE GENERATED. DO NOT EDIT */
:host {
    --spectrum-avatar-opacity-disabled: 0.3; /* .spectrum-Tag */
    --spectrum-tag-animation-duration: var(--spectrum-animation-duration-100);
    --spectrum-tag-border-width: var(--spectrum-border-width-100);
    --spectrum-tag-focus-ring-thickness: var(
        --spectrum-focus-indicator-thickness
    );
    --spectrum-tag-focus-ring-gap: var(--spectrum-focus-indicator-gap);
    --spectrum-tag-focus-ring-color: var(--spectrum-focus-indicator-color);
    --spectrum-tag-label-line-height: var(--spectrum-line-height-100);
    --spectrum-tag-label-spacing-inline-end: var(
        --spectrum-component-edge-to-text-100
    );
    --spectrum-tag-content-color-selected: var(--spectrum-white);
    --spectrum-tag-border-color-invalid: var(--spectrum-negative-color-900);
    --spectrum-tag-border-color-invalid-hover: var(
        --spectrum-negative-color-1000
    );
    --spectrum-tag-border-color-invalid-active: var(
        --spectrum-negative-color-1100
    );
    --spectrum-tag-border-color-invalid-focus: var(
        --spectrum-negative-color-1000
    );
    --spectrum-tag-content-color-invalid: var(
        --spectrum-negative-content-color-default
    );
    --spectrum-tag-content-color-invalid-hover: var(
        --spectrum-negative-content-color-hover
    );
    --spectrum-tag-content-color-invalid-active: var(
        --spectrum-negative-content-color-down
    );
    --spectrum-tag-content-color-invalid-focus: var(
        --spectrum-negative-content-color-key-focus
    );
    --spectrum-tag-border-color-invalid-selected: var(
        --spectrum-negative-background-color-default
    );
    --spectrum-tag-border-color-invalid-selected-hover: var(
        --spectrum-negative-background-color-hover
    );
    --spectrum-tag-border-color-invalid-selected-focus: var(
        --spectrum-negative-background-color-down
    );
    --spectrum-tag-border-color-invalid-selected-active: var(
        --spectrum-negative-background-color-key-focus
    );
    --spectrum-tag-background-color-invalid-selected: var(
        --spectrum-negative-background-color-default
    );
    --spectrum-tag-background-color-invalid-selected-hover: var(
        --spectrum-negative-background-color-hover
    );
    --spectrum-tag-background-color-invalid-selected-active: var(
        --spectrum-negative-background-color-down
    );
    --spectrum-tag-background-color-invalid-selected-focus: var(
        --spectrum-negative-background-color-key-focus
    );
    --spectrum-tag-content-color-invalid-selected: var(--spectrum-white);
    --spectrum-tag-border-color-emphasized: var(
        --spectrum-accent-background-color-default
    );
    --spectrum-tag-border-color-emphasized-hover: var(
        --spectrum-accent-background-color-hover
    );
    --spectrum-tag-border-color-emphasized-active: var(
        --spectrum-accent-background-color-down
    );
    --spectrum-tag-border-color-emphasized-focus: var(
        --spectrum-accent-background-color-key-focus
    );
    --spectrum-tag-background-color-emphasized: var(
        --spectrum-accent-background-color-default
    );
    --spectrum-tag-background-color-emphasized-hover: var(
        --spectrum-accent-background-color-hover
    );
    --spectrum-tag-background-color-emphasized-active: var(
        --spectrum-accent-background-color-down
    );
    --spectrum-tag-background-color-emphasized-focus: var(
        --spectrum-accent-background-color-key-focus
    );
    --spectrum-tag-content-color-emphasized: var(--spectrum-white);
    --spectrum-tag-content-color-disabled: var(
        --spectrum-disabled-content-color
    );
    --spectrum-tag-avatar-spacing-block-start: var(
        --spectrum-tag-top-to-avatar-medium
    );
    --spectrum-tag-avatar-spacing-block-end: var(
        --spectrum-tag-top-to-avatar-medium
    );
    --spectrum-tag-label-spacing-block: var(
        --spectrum-component-top-to-text-100
    );
    --spectrum-tag-clear-button-spacing-inline-start: var(
        --spectrum-text-to-visual-100
    );
    --spectrum-tag-height: var(--spectrum-component-height-100);
    --spectrum-tag-font-size: var(--spectrum-font-size-100);
    --spectrum-tag-icon-size: var(--spectrum-workflow-icon-size-100);
    --spectrum-tag-icon-spacing-block-start: var(
        --spectrum-component-top-to-workflow-icon-100
    );
    --spectrum-tag-icon-spacing-block-end: var(
        --spectrum-component-top-to-workflow-icon-100
    );
    --spectrum-tag-clear-button-spacing-block: var(
        --spectrum-tag-top-to-cross-icon-medium
    );
}
:host([size='s']) {
    --spectrum-tag-height: var(
        --spectrum-component-height-75
    ); /* .spectrum-Tag--sizeS */
    --spectrum-tag-font-size: var(--spectrum-font-size-75);
    --spectrum-tag-icon-size: var(--spectrum-workflow-icon-size-75);
    --spectrum-tag-clear-button-spacing-inline-start: var(
        --spectrum-text-to-visual-75
    );
    --spectrum-tag-clear-button-spacing-block: var(
        --spectrum-tag-top-to-cross-icon-small
    );
    --spectrum-tag-icon-spacing-block-start: var(
        --spectrum-component-top-to-workflow-icon-75
    );
    --spectrum-tag-icon-spacing-block-end: var(
        --spectrum-component-top-to-workflow-icon-75
    );
    --spectrum-tag-avatar-spacing-block-start: var(
        --spectrum-tag-top-to-avatar-small
    );
    --spectrum-tag-avatar-spacing-block-end: var(
        --spectrum-tag-top-to-avatar-small
    );
    --spectrum-tag-label-spacing-block: var(
        --spectrum-component-top-to-text-75
    );
}
:host([size='m']) {
    --spectrum-tag-height: var(
        --spectrum-component-height-100
    ); /* .spectrum-Tag--sizeM */
    --spectrum-tag-font-size: var(--spectrum-font-size-100);
    --spectrum-tag-icon-size: var(--spectrum-workflow-icon-size-100);
    --spectrum-tag-clear-button-spacing-inline-start: var(
        --spectrum-text-to-visual-100
    );
    --spectrum-tag-clear-button-spacing-block: var(
        --spectrum-tag-top-to-cross-icon-medium
    );
    --spectrum-tag-icon-spacing-block-start: var(
        --spectrum-component-top-to-workflow-icon-100
    );
    --spectrum-tag-icon-spacing-block-end: var(
        --spectrum-component-top-to-workflow-icon-100
    );
    --spectrum-tag-avatar-spacing-block-start: var(
        --spectrum-tag-top-to-avatar-medium
    );
    --spectrum-tag-avatar-spacing-block-end: var(
        --spectrum-tag-top-to-avatar-medium
    );
    --spectrum-tag-label-spacing-block: var(
        --spectrum-component-top-to-text-100
    );
}
:host([size='l']) {
    --spectrum-tag-height: var(
        --spectrum-component-height-200
    ); /* .spectrum-Tag--sizeL */
    --spectrum-tag-font-size: var(--spectrum-font-size-200);
    --spectrum-tag-icon-size: var(--spectrum-workflow-icon-size-200);
    --spectrum-tag-clear-button-spacing-inline-start: var(
        --spectrum-text-to-visual-200
    );
    --spectrum-tag-clear-button-spacing-block: var(
        --spectrum-tag-top-to-cross-icon-large
    );
    --spectrum-tag-icon-spacing-block-start: var(
        --spectrum-component-top-to-workflow-icon-200
    );
    --spectrum-tag-icon-spacing-block-end: var(
        --spectrum-component-top-to-workflow-icon-200
    );
    --spectrum-tag-avatar-spacing-block-start: var(
        --spectrum-tag-top-to-avatar-large
    );
    --spectrum-tag-avatar-spacing-block-end: var(
        --spectrum-tag-top-to-avatar-large
    );
    --spectrum-tag-label-spacing-block: var(
        --spectrum-component-top-to-text-200
    );
}
@media (forced-colors: active) {
    :host {
        forced-color-adjust: none;
    }
    :host([invalid]) {
        --spectrum-tag-border-color-invalid: Highlight;
        --spectrum-tag-border-color-invalid-hover: Highlight;
        --spectrum-tag-border-color-invalid-active: Highlight;
        --spectrum-tag-border-color-invalid-focus: Highlight;
        --spectrum-tag-content-color-invalid: CanvasText;
        --spectrum-tag-content-color-invalid-hover: CanvasText;
        --spectrum-tag-content-color-invalid-active: CanvasText;
        --spectrum-tag-content-color-invalid-focus: CanvasText;
    }
    :host([invalid][selected]) {
        --spectrum-tag-border-color-invalid-selected: Highlight;
        --spectrum-tag-border-color-invalid-selected-hover: Highlight;
        --spectrum-tag-border-color-invalid-selected-focus: Highlight;
        --spectrum-tag-border-color-invalid-selected-active: Highlight;
        --spectrum-tag-background-color-invalid-selected: Highlight;
        --spectrum-tag-background-color-invalid-selected-hover: Highlight;
        --spectrum-tag-background-color-invalid-selected-active: Highlight;
        --spectrum-tag-background-color-invalid-selected-focus: Highlight;
        --spectrum-tag-content-color-invalid-selected: HighlightText;
    }
    :host(.is-emphasized) {
        --spectrum-tag-border-color-emphasized: Highlight;
        --spectrum-tag-border-color-emphasized-hover: Highlight;
        --spectrum-tag-border-color-emphasized-active: Highlight;
        --spectrum-tag-border-color-emphasized-focus: Highlight;
        --spectrum-tag-background-color-emphasized: ButtonFace;
        --spectrum-tag-background-color-emphasized-hover: ButtonFace;
        --spectrum-tag-background-color-emphasized-active: ButtonFace;
        --spectrum-tag-background-color-emphasized-focus: ButtonFace;
        --spectrum-tag-content-color-emphasized: CanvasText;
    }
}
:host {
    background-color: var(
        --highcontrast-tag-background-color,
        var(--mod-tag-background-color, var(--spectrum-tag-background-color))
    );
    block-size: var(--mod-tag-height, var(--spectrum-tag-height));
    border-color: var(
        --highcontrast-tag-border-color,
        var(--mod-tag-border-color, var(--spectrum-tag-border-color))
    ); /* .spectrum-Tag */
    border-radius: var(
        --mod-tag-corner-radius,
        var(--spectrum-tag-corner-radius)
    );
    border-style: solid;
    border-width: var(--mod-tag-border-width, var(--spectrum-tag-border-width));
    box-sizing: border-box;
    color: var(
        --highcontrast-tag-content-color,
        var(--mod-tag-content-color, var(--spectrum-tag-content-color))
    );
    display: inline-flex;
    max-inline-size: 100%;
    outline: none;
    padding-inline-start: var(
        --mod-tag-spacing-inline-start,
        var(--spectrum-tag-spacing-inline-start)
    );
    position: relative;
    transition: border-color
            var(
                --mod-tag-animation-duration,
                var(--spectrum-tag-animation-duration)
            )
            ease-in-out,
        color
            var(
                --mod-tag-animation-duration,
                var(--spectrum-tag-animation-duration)
            )
            ease-in-out,
        box-shadow
            var(
                --mod-tag-animation-duration,
                var(--spectrum-tag-animation-duration)
            )
            ease-in-out,
        background-color
            var(
                --mod-tag-animation-duration,
                var(--spectrum-tag-animation-duration)
            )
            ease-in-out;
    -webkit-user-select: none;
    user-select: none;
    vertical-align: bottom;
}
:host > .spectrum-Tag-label {
    cursor: default;
    flex: 1 1 auto;
    font-size: var(--mod-tag-font-size, var(--spectrum-tag-font-size));
    font-weight: 400;
    line-height: var(
        --mod-tag-label-line-height,
        var(--spectrum-tag-label-line-height)
    ); /* .spectrum-Tag>.spectrum-Tag-label */
    margin-block-start: calc(
        var(
                --mod-tag-label-spacing-block,
                var(--spectrum-tag-label-spacing-block)
            ) - var(--mod-tag-border-width, var(--spectrum-tag-border-width))
    );
    margin-inline-end: calc(
        var(
                --mod-tag-label-spacing-inline-end,
                var(--spectrum-tag-label-spacing-inline-end)
            ) - var(--mod-tag-border-width, var(--spectrum-tag-border-width))
    );
    overflow: hidden;
    text-overflow: ellipsis;
    white-space: nowrap;
}
:host > ::slotted([slot='avatar']),
:host > ::slotted([slot='icon']) {
    margin-inline-end: var(
        --mod-tag-clear-button-spacing-inline-start,
        var(--spectrum-tag-clear-button-spacing-inline-start)
    ); /* .spectrum-Tag>.spectrum-Icon,
   * .spectrum-Tag>.spectrum-Avatar */
}
:host > ::slotted([slot='icon']) {
    block-size: var(
        --mod-tag-icon-size,
        var(--spectrum-tag-icon-size)
    ); /* .spectrum-Tag>.spectrum-Icon */
    inline-size: var(--mod-tag-icon-size, var(--spectrum-tag-icon-size));
    margin-block-end: calc(
        var(
                --mod-tag-icon-spacing-block-end,
                var(--spectrum-tag-icon-spacing-block-end)
            ) - var(--mod-tag-border-width, var(--spectrum-tag-border-width))
    );
    margin-block-start: calc(
        var(
                --mod-tag-icon-spacing-block-start,
                var(--spectrum-tag-icon-spacing-block-start)
            ) - var(--mod-tag-border-width, var(--spectrum-tag-border-width))
    );
}
:host > ::slotted([slot='avatar']) {
    margin-block-end: calc(
        var(
                --mod-tag-avatar-spacing-block-end,
                var(--spectrum-tag-avatar-spacing-block-end)
            ) - var(--mod-tag-border-width, var(--spectrum-tag-border-width))
    );
    margin-block-start: var(
        --mod-tag-avatar-spacing-block-start,
        var(--spectrum-tag-avatar-spacing-block-start)
    ); /* .spectrum-Tag>.spectrum-Avatar */
    margin-block-start: calc(
        var(
                --mod-tag-avatar-spacing-block-start,
                var(--spectrum-tag-avatar-spacing-block-start)
            ) - var(--mod-tag-border-width, var(--spectrum-tag-border-width))
    );
}
.clear-button {
    color: currentcolor;
    margin-block-end: calc(
        var(
                --mod-tag-clear-button-spacing-block,
                var(--spectrum-tag-clear-button-spacing-block)
            ) - var(--mod-tag-border-width, var(--spectrum-tag-border-width))
    );
    margin-block-start: calc(
        var(
                --mod-tag-clear-button-spacing-block,
                var(--spectrum-tag-clear-button-spacing-block)
            ) - var(--mod-tag-border-width, var(--spectrum-tag-border-width))
    ); /* .spectrum-Tag .spectrum-Tag-clearButton */
    margin-inline-end: var(
        --mod-tag-clear-button-spacing-inline-end,
        var(--spectrum-tag-clear-button-spacing-inline-end)
    );
    margin-inline-start: calc(
        var(
                --mod-tag-clear-button-spacing-inline-start,
                var(--spectrum-tag-clear-button-spacing-inline-start)
            ) +
            var(
                --mod-tag-label-spacing-inline-end,
                var(--spectrum-tag-label-spacing-inline-end)
            ) * -1
    );
}
.clear-button .spectrum-ClearButton-fill {
    background-color: transparent;
    width: auto; /* .spectrum-Tag .spectrum-Tag-clearButton .spectrum-ClearButton-fill */
}
:host(:hover) {
    background-color: var(
        --highcontrast-tag-background-color-hover,
        var(
            --mod-tag-background-color-hover,
            var(--spectrum-tag-background-color-hover)
        )
    );
    border-color: var(
        --highcontrast-tag-border-color-hover,
        var(
            --mod-tag-border-color-hover,
            var(--spectrum-tag-border-color-hover)
        )
    ); /* .spectrum-Tag:hover */
    color: var(
        --highcontrast-tag-content-color-hover,
        var(
            --mod-tag-content-color-hover,
            var(--spectrum-tag-content-color-hover)
        )
    );
}
:host(:active) {
    background-color: var(
        --highcontrast-tag-background-color-active,
        var(
            --mod-tag-background-color-active,
            var(--spectrum-tag-background-color-active)
        )
    );
    border-color: var(
        --highcontrast-tag-border-color-active,
        var(
            --mod-tag-border-color-active,
            var(--spectrum-tag-border-color-active)
        )
    ); /* .spectrum-Tag:active */
    color: var(
        --highcontrast-tag-content-color-active,
        var(
            --mod-tag-content-color-active,
            var(--spectrum-tag-content-color-active)
        )
    );
}
:host(.focus-visible),
:host(.is-focused) {
    background-color: var(
        --highcontrast-tag-background-color-focus,
        var(
            --mod-tag-background-color-focus,
            var(--spectrum-tag-background-color-focus)
        )
    );
    border-color: var(
        --highcontrast-tag-border-color-focus,
        var(
            --mod-tag-border-color-focus,
            var(--spectrum-tag-border-color-focus)
        )
    ); /* .spectrum-Tag:focus-visible,
   * .spectrum-Tag.is-focused */
    color: var(
        --highcontrast-tag-content-color-focus,
        var(
            --mod-tag-content-color-focus,
            var(--spectrum-tag-content-color-focus)
        )
    );
}
:host(.is-focused),
:host(:focus-visible) {
    background-color: var(
        --highcontrast-tag-background-color-focus,
        var(
            --mod-tag-background-color-focus,
            var(--spectrum-tag-background-color-focus)
        )
    );
    border-color: var(
        --highcontrast-tag-border-color-focus,
        var(
            --mod-tag-border-color-focus,
            var(--spectrum-tag-border-color-focus)
        )
    ); /* .spectrum-Tag:focus-visible,
   * .spectrum-Tag.is-focused */
    color: var(
        --highcontrast-tag-content-color-focus,
        var(
            --mod-tag-content-color-focus,
            var(--spectrum-tag-content-color-focus)
        )
    );
}
:host(.focus-visible):after,
:host(.is-focused):after {
    block-size: calc(
        100% + var(--mod-tag-focus-ring-gap, var(--spectrum-tag-focus-ring-gap)) *
            2 + var(--mod-tag-border-width, var(--spectrum-tag-border-width)) *
            2
    );
    border-color: var(
        --highcontrast-tag-focus-ring-color,
        var(--mod-tag-focus-ring-color, var(--spectrum-tag-focus-ring-color))
    );
    border-radius: calc(
        var(--mod-tag-corner-radius, var(--spectrum-tag-corner-radius)) +
            var(--mod-tag-focus-ring-gap, var(--spectrum-tag-focus-ring-gap)) +
            var(--mod-tag-border-width, var(--spectrum-tag-border-width))
    );
    border-style: solid;
    border-width: var(
        --mod-tag-focus-ring-thickness,
        var(--spectrum-tag-focus-ring-thickness)
    );
    bottom: 0;
    content: ''; /* .spectrum-Tag:focus-visible:after,
   * .spectrum-Tag.is-focused::after */
    display: inline-block;
    inline-size: calc(
        100% + var(--mod-tag-focus-ring-gap, var(--spectrum-tag-focus-ring-gap)) *
            2 + var(--mod-tag-border-width, var(--spectrum-tag-border-width)) *
            2
    );
    left: 0;
    margin: auto;
    margin-block-start: calc(
        (
                var(
                        --mod-tag-focus-ring-gap,
                        var(--spectrum-tag-focus-ring-gap)
                    ) +
                    var(
                        --mod-tag-border-width,
                        var(--spectrum-tag-border-width)
                    ) +
                    var(
                        --mod-tag-focus-ring-thickness,
                        var(--spectrum-tag-focus-ring-thickness)
                    )
            ) * -1
    );
    margin-inline-start: calc(
        (
                var(
                        --mod-tag-focus-ring-gap,
                        var(--spectrum-tag-focus-ring-gap)
                    ) +
                    var(
                        --mod-tag-border-width,
                        var(--spectrum-tag-border-width)
                    ) +
                    var(
                        --mod-tag-focus-ring-thickness,
                        var(--spectrum-tag-focus-ring-thickness)
                    )
            ) * -1
    );
    position: absolute;
    right: 0;
    top: 0;
}
:host(.is-focused):after,
:host(:focus-visible):after {
    block-size: calc(
        100% + var(--mod-tag-focus-ring-gap, var(--spectrum-tag-focus-ring-gap)) *
            2 + var(--mod-tag-border-width, var(--spectrum-tag-border-width)) *
            2
    );
    border-color: var(
        --highcontrast-tag-focus-ring-color,
        var(--mod-tag-focus-ring-color, var(--spectrum-tag-focus-ring-color))
    );
    border-radius: calc(
        var(--mod-tag-corner-radius, var(--spectrum-tag-corner-radius)) +
            var(--mod-tag-focus-ring-gap, var(--spectrum-tag-focus-ring-gap)) +
            var(--mod-tag-border-width, var(--spectrum-tag-border-width))
    );
    border-style: solid;
    border-width: var(
        --mod-tag-focus-ring-thickness,
        var(--spectrum-tag-focus-ring-thickness)
    );
    bottom: 0;
    content: ''; /* .spectrum-Tag:focus-visible:after,
   * .spectrum-Tag.is-focused::after */
    display: inline-block;
    inline-size: calc(
        100% + var(--mod-tag-focus-ring-gap, var(--spectrum-tag-focus-ring-gap)) *
            2 + var(--mod-tag-border-width, var(--spectrum-tag-border-width)) *
            2
    );
    left: 0;
    margin: auto;
    margin-block-start: calc(
        (
                var(
                        --mod-tag-focus-ring-gap,
                        var(--spectrum-tag-focus-ring-gap)
                    ) +
                    var(
                        --mod-tag-border-width,
                        var(--spectrum-tag-border-width)
                    ) +
                    var(
                        --mod-tag-focus-ring-thickness,
                        var(--spectrum-tag-focus-ring-thickness)
                    )
            ) * -1
    );
    margin-inline-start: calc(
        (
                var(
                        --mod-tag-focus-ring-gap,
                        var(--spectrum-tag-focus-ring-gap)
                    ) +
                    var(
                        --mod-tag-border-width,
                        var(--spectrum-tag-border-width)
                    ) +
                    var(
                        --mod-tag-focus-ring-thickness,
                        var(--spectrum-tag-focus-ring-thickness)
                    )
            ) * -1
    );
    position: absolute;
    right: 0;
    top: 0;
}
:host([selected]) {
    background-color: var(
        --highcontrast-tag-background-color-selected,
        var(
            --mod-tag-background-color-selected,
            var(--spectrum-tag-background-color-selected)
        )
    );
    border-color: var(
        --highcontrast-tag-border-color-selected,
        var(
            --mod-tag-border-color-selected,
            var(--spectrum-tag-border-color-selected)
        )
    ); /* .spectrum-Tag.is-selected */
    color: var(
        --highcontrast-tag-content-color-selected,
        var(
            --mod-tag-content-color-selected,
            var(--spectrum-tag-content-color-selected)
        )
    );
}
:host([selected]:hover) {
    background-color: var(
        --highcontrast-tag-background-color-selected-hover,
        var(
            --mod-tag-background-color-selected-hover,
            var(--spectrum-tag-background-color-selected-hover)
        )
    );
    border-color: var(
        --highcontrast-tag-border-color-selected-hover,
        var(
            --mod-tag-border-color-selected-hover,
            var(--spectrum-tag-border-color-selected-hover)
        )
    ); /* .spectrum-Tag.is-selected:hover */
}
:host([selected]:active) {
    background-color: var(
        --highcontrast-tag-background-color-selected-active,
        var(
            --mod-tag-background-color-selected-active,
            var(--spectrum-tag-background-color-selected-active)
        )
    );
    border-color: var(
        --highcontrast-tag-border-color-selected-active,
        var(
            --mod-tag-border-color-selected-active,
            var(--spectrum-tag-border-color-selected-active)
        )
    ); /* .spectrum-Tag.is-selected:active */
}
:host([selected].focus-visible),
:host([selected].is-focused) {
    background-color: var(
        --highcontrast-tag-background-color-selected-focus,
        var(
            --mod-tag-background-color-selected-focus,
            var(--spectrum-tag-background-color-selected-focus)
        )
    );
    border-color: var(
        --highcontrast-tag-border-color-selected-focus,
        var(
            --mod-tag-border-color-selected-focus,
            var(--spectrum-tag-border-color-selected-focus)
        )
    ); /* .spectrum-Tag.is-selected:focus-visible,
   * .spectrum-Tag.is-selected.is-focused */
}
:host([selected].is-focused),
:host([selected]:focus-visible) {
    background-color: var(
        --highcontrast-tag-background-color-selected-focus,
        var(
            --mod-tag-background-color-selected-focus,
            var(--spectrum-tag-background-color-selected-focus)
        )
    );
    border-color: var(
        --highcontrast-tag-border-color-selected-focus,
        var(
            --mod-tag-border-color-selected-focus,
            var(--spectrum-tag-border-color-selected-focus)
        )
    ); /* .spectrum-Tag.is-selected:focus-visible,
   * .spectrum-Tag.is-selected.is-focused */
}
:host([invalid]) {
    border-color: var(
        --highcontrast-tag-border-color-invalid,
        var(
            --mod-tag-border-color-invalid,
            var(--spectrum-tag-border-color-invalid)
        )
    ); /* .spectrum-Tag.is-invalid */
    color: var(
        --highcontrast-tag-content-color-invalid,
        var(
            --mod-tag-content-color-invalid,
            var(--spectrum-tag-content-color-invalid)
        )
    );
}
:host([invalid]:hover) {
    border-color: var(
        --highcontrast-tag-border-color-invalid-hover,
        var(
            --mod-tag-border-color-invalid-hover,
            var(--spectrum-tag-border-color-invalid-hover)
        )
    ); /* .spectrum-Tag.is-invalid:hover */
    color: var(
        --highcontrast-tag-content-color-invalid-hover,
        var(
            --mod-tag-content-color-invalid-hover,
            var(--spectrum-tag-content-color-invalid-hover)
        )
    );
}
:host([invalid]:active) {
    border-color: var(
        --highcontrast-tag-border-color-invalid-active,
        var(
            --mod-tag-border-color-invalid-active,
            var(--spectrum-tag-border-color-invalid-active)
        )
    ); /* .spectrum-Tag.is-invalid:active */
    color: var(
        --highcontrast-tag-content-color-invalid-active,
        var(
            --mod-tag-content-color-invalid-active,
            var(--spectrum-tag-content-color-invalid-active)
        )
    );
}
:host([invalid].focus-visible),
:host([invalid].is-focused) {
    border-color: var(
        --highcontrast-tag-border-color-invalid-focus,
        var(
            --mod-tag-border-color-invalid-focus,
            var(--spectrum-tag-border-color-invalid-focus)
        )
    ); /* .spectrum-Tag.is-invalid:focus-visible,
   * .spectrum-Tag.is-invalid.is-focused */
    color: var(
        --highcontrast-tag-content-color-invalid-focus,
        var(
            --mod-tag-content-color-invalid-focus,
            var(--spectrum-tag-content-color-invalid-focus)
        )
    );
}
:host([invalid].is-focused),
:host([invalid]:focus-visible) {
    border-color: var(
        --highcontrast-tag-border-color-invalid-focus,
        var(
            --mod-tag-border-color-invalid-focus,
            var(--spectrum-tag-border-color-invalid-focus)
        )
    ); /* .spectrum-Tag.is-invalid:focus-visible,
   * .spectrum-Tag.is-invalid.is-focused */
    color: var(
        --highcontrast-tag-content-color-invalid-focus,
        var(
            --mod-tag-content-color-invalid-focus,
            var(--spectrum-tag-content-color-invalid-focus)
        )
    );
}
:host([invalid][selected]) {
    background-color: var(
        --highcontrast-tag-background-color-invalid-selected,
        var(
            --mod-tag-background-color-invalid-selected,
            var(--spectrum-tag-background-color-invalid-selected)
        )
    );
    border-color: var(
        --highcontrast-tag-border-color-invalid-selected,
        var(
            --mod-tag-border-color-invalid-selected,
            var(--spectrum-tag-border-color-invalid-selected)
        )
    ); /* .spectrum-Tag.is-invalid.is-selected */
    color: var(
        --highcontrast-tag-content-color-invalid-selected,
        var(
            --mod-tag-content-color-invalid-selected,
            var(--spectrum-tag-content-color-invalid-selected)
        )
    );
}
:host([invalid][selected]:hover) {
    background-color: var(
        --highcontrast-tag-background-color-invalid-selected-hover,
        var(
            --mod-tag-background-color-invalid-selected-hover,
            var(--spectrum-tag-background-color-invalid-selected-hover)
        )
    );
    border-color: var(
        --highcontrast-tag-border-color-invalid-selected-hover,
        var(
            --mod-tag-border-color-invalid-selected-hover,
            var(--spectrum-tag-border-color-invalid-selected-hover)
        )
    ); /* .spectrum-Tag.is-invalid.is-selected:hover */
}
:host([invalid][selected]:active) {
    background-color: var(
        --highcontrast-tag-background-color-invalid-selected-active,
        var(
            --mod-tag-background-color-invalid-selected-active,
            var(--spectrum-tag-background-color-invalid-selected-active)
        )
    );
    border-color: var(
        --highcontrast-tag-border-color-invalid-selected-active,
        var(
            --mod-tag-border-color-invalid-selected-active,
            var(--spectrum-tag-border-color-invalid-selected-active)
        )
    ); /* .spectrum-Tag.is-invalid.is-selected:active */
}
:host([invalid][selected].focus-visible),
:host([invalid][selected].is-focused) {
    background-color: var(
        --highcontrast-tag-background-color-invalid-selected-focus,
        var(
            --mod-tag-background-color-invalid-selected-focus,
            var(--spectrum-tag-background-color-invalid-selected-focus)
        )
    );
    border-color: var(
        --highcontrast-tag-border-color-invalid-selected-focus,
        var(
            --mod-tag-border-color-invalid-selected-focus,
            var(--spectrum-tag-border-color-invalid-selected-focus)
        )
    ); /* .spectrum-Tag.is-invalid.is-selected:focus-visible,
   * .spectrum-Tag.is-invalid.is-selected.is-focused */
}
:host([invalid][selected].is-focused),
:host([invalid][selected]:focus-visible) {
    background-color: var(
        --highcontrast-tag-background-color-invalid-selected-focus,
        var(
            --mod-tag-background-color-invalid-selected-focus,
            var(--spectrum-tag-background-color-invalid-selected-focus)
        )
    );
    border-color: var(
        --highcontrast-tag-border-color-invalid-selected-focus,
        var(
            --mod-tag-border-color-invalid-selected-focus,
            var(--spectrum-tag-border-color-invalid-selected-focus)
        )
    ); /* .spectrum-Tag.is-invalid.is-selected:focus-visible,
   * .spectrum-Tag.is-invalid.is-selected.is-focused */
}
:host(.is-emphasized) {
    background-color: var(
        --highcontrast-tag-background-color-emphasized,
        var(
            --mod-tag-background-color-emphasized,
            var(--spectrum-tag-background-color-emphasized)
        )
    );
    border-color: var(
        --highcontrast-tag-border-color-emphasized,
        var(
            --mod-tag-border-color-emphasized,
            var(--spectrum-tag-border-color-emphasized)
        )
    ); /* .spectrum-Tag.is-emphasized */
    color: var(
        --highcontrast-tag-content-color-emphasized,
        var(
            --mod-tag-content-color-emphasized,
            var(--spectrum-tag-content-color-emphasized)
        )
    );
}
:host(.is-emphasized:hover) {
    background-color: var(
        --highcontrast-tag-background-color-emphasized-hover,
        var(
            --mod-tag-background-color-emphasized-hover,
            var(--spectrum-tag-background-color-emphasized-hover)
        )
    );
    border-color: var(
        --highcontrast-tag-border-color-emphasized-hover,
        var(
            --mod-tag-border-color-emphasized-hover,
            var(--spectrum-tag-border-color-emphasized-hover)
        )
    ); /* .spectrum-Tag.is-emphasized:hover */
}
:host(.is-emphasized:active) {
    background-color: var(
        --highcontrast-tag-background-color-emphasized-active,
        var(
            --mod-tag-background-color-emphasized-active,
            var(--spectrum-tag-background-color-emphasized-active)
        )
    );
    border-color: var(
        --highcontrast-tag-border-color-emphasized-active,
        var(
            --mod-tag-border-color-emphasized-active,
            var(--spectrum-tag-border-color-emphasized-active)
        )
    ); /* .spectrum-Tag.is-emphasized:active */
}
:host(.is-emphasized.focus-visible),
:host(.is-emphasized.is-focused) {
    background-color: var(
        --highcontrast-tag-background-color-emphasized-focus,
        var(
            --mod-tag-background-color-emphasized-focus,
            var(--spectrum-tag-background-color-emphasized-focus)
        )
    );
    border-color: var(
        --highcontrast-tag-border-color-emphasized-focus,
        var(
            --mod-tag-border-color-emphasized-focus,
            var(--spectrum-tag-border-color-emphasized-focus)
        )
    ); /* .spectrum-Tag.is-emphasized:focus-visible,
   * .spectrum-Tag.is-emphasized.is-focused */
}
:host(.is-emphasized.is-focused),
:host(.is-emphasized:focus-visible) {
    background-color: var(
        --highcontrast-tag-background-color-emphasized-focus,
        var(
            --mod-tag-background-color-emphasized-focus,
            var(--spectrum-tag-background-color-emphasized-focus)
        )
    );
    border-color: var(
        --highcontrast-tag-border-color-emphasized-focus,
        var(
            --mod-tag-border-color-emphasized-focus,
            var(--spectrum-tag-border-color-emphasized-focus)
        )
    ); /* .spectrum-Tag.is-emphasized:focus-visible,
   * .spectrum-Tag.is-emphasized.is-focused */
}
:host([disabled]) {
    background-color: var(
        --highcontrast-tag-background-color-disabled,
        var(
            --mod-tag-background-color-disabled,
            var(--spectrum-tag-background-color-disabled)
        )
    );
    border-color: var(
        --highcontrast-tag-border-color-disabled,
        var(
            --mod-tag-border-color-disabled,
            var(--spectrum-tag-border-color-disabled)
        )
    ); /* .spectrum-Tag.is-disabled */
    color: var(
        --highcontrast-tag-content-color-disabled,
        var(
            --mod-tag-content-color-disabled,
            var(--spectrum-tag-content-color-disabled)
        )
    );
    pointer-events: none;
}
:host([disabled]) > ::slotted([slot='avatar']) {
    opacity: var(
        --mod-avatar-opacity-disabled,
        var(--spectrum-avatar-opacity-disabled)
    ); /* .spectrum-Tag.is-disabled>.spectrum-Avatar */
}
@media (forced-colors: active) {
    :host {
        --spectrum-tag-border-color: ButtonText;
        --spectrum-tag-border-color-hover: ButtonText;
        --spectrum-tag-border-color-active: ButtonText;
        --spectrum-tag-border-color-focus: ButtonText;
        --spectrum-tag-background-color: ButtonFace;
        --spectrum-tag-background-color-hover: ButtonFace;
        --spectrum-tag-background-color-active: ButtonFace;
        --spectrum-tag-background-color-focus: ButtonFace;
        --spectrum-tag-content-color: ButtonText;
        --spectrum-tag-content-color-hover: ButtonText;
        --spectrum-tag-content-color-active: ButtonText;
        --spectrum-tag-content-color-focus: ButtonText;
        forced-color-adjust: none;
    }
    :host([selected]) {
        --spectrum-tag-border-color-selected: Highlight;
        --spectrum-tag-border-color-selected-hover: Highlight;
        --spectrum-tag-border-color-selected-active: Highlight;
        --spectrum-tag-border-color-selected-focus: Highlight;
        --spectrum-tag-background-color-selected: Highlight;
        --spectrum-tag-background-color-selected-hover: Highlight;
        --spectrum-tag-background-color-selected-active: Highlight;
        --spectrum-tag-background-color-selected-focus: Highlight;
        --spectrum-tag-content-color-selected: HighlightText;
    }
    :host([disabled]) {
        --spectrum-tag-border-color-disabled: GrayText;
        --spectrum-tag-background-color-disabled: ButtonFace;
        --spectrum-tag-content-color-disabled: GrayText;
    }
}
:host {
    --spectrum-tag-clear-button-spacing-inline-end: var(
        --system-spectrum-tag-clear-button-spacing-inline-end
    ); /* .spectrum-Tag */
    --spectrum-tag-spacing-inline-start: var(
        --system-spectrum-tag-spacing-inline-start
    );
    --spectrum-tag-border-color: var(--system-spectrum-tag-border-color);
    --spectrum-tag-border-color-hover: var(
        --system-spectrum-tag-border-color-hover
    );
    --spectrum-tag-border-color-active: var(
        --system-spectrum-tag-border-color-active
    );
    --spectrum-tag-border-color-focus: var(
        --system-spectrum-tag-border-color-focus
    );
    --spectrum-tag-background-color: var(
        --system-spectrum-tag-background-color
    );
    --spectrum-tag-background-color-hover: var(
        --system-spectrum-tag-background-color-hover
    );
    --spectrum-tag-background-color-active: var(
        --system-spectrum-tag-background-color-active
    );
    --spectrum-tag-background-color-focus: var(
        --system-spectrum-tag-background-color-focus
    );
    --spectrum-tag-content-color: var(--system-spectrum-tag-content-color);
    --spectrum-tag-content-color-hover: var(
        --system-spectrum-tag-content-color-hover
    );
    --spectrum-tag-content-color-active: var(
        --system-spectrum-tag-content-color-active
    );
    --spectrum-tag-content-color-focus: var(
        --system-spectrum-tag-content-color-focus
    );
    --spectrum-tag-border-color-selected: var(
        --system-spectrum-tag-border-color-selected
    );
    --spectrum-tag-border-color-selected-hover: var(
        --system-spectrum-tag-border-color-selected-hover
    );
    --spectrum-tag-border-color-selected-active: var(
        --system-spectrum-tag-border-color-selected-active
    );
    --spectrum-tag-border-color-selected-focus: var(
        --system-spectrum-tag-border-color-selected-focus
    );
    --spectrum-tag-background-color-selected: var(
        --system-spectrum-tag-background-color-selected
    );
    --spectrum-tag-background-color-selected-hover: var(
        --system-spectrum-tag-background-color-selected-hover
    );
    --spectrum-tag-background-color-selected-active: var(
        --system-spectrum-tag-background-color-selected-active
    );
    --spectrum-tag-background-color-selected-focus: var(
        --system-spectrum-tag-background-color-selected-focus
    );
    --spectrum-tag-border-color-disabled: var(
        --system-spectrum-tag-border-color-disabled
    );
    --spectrum-tag-background-color-disabled: var(
        --system-spectrum-tag-background-color-disabled
    );
}
:host([size='s']) {
    --spectrum-tag-spacing-inline-start: var(
        --system-spectrum-tag-sizes-spacing-inline-start
    ); /* .spectrum-Tag--sizeS */
    --spectrum-tag-label-spacing-inline-end: var(
        --system-spectrum-tag-sizes-label-spacing-inline-end
    );
    --spectrum-tag-corner-radius: var(
        --system-spectrum-tag-sizes-corner-radius
    );
    --spectrum-tag-clear-button-spacing-inline-end: var(
        --system-spectrum-tag-sizes-clear-button-spacing-inline-end
    );
}
:host([size='m']) {
    --spectrum-tag-spacing-inline-start: var(
        --system-spectrum-tag-sizem-spacing-inline-start
    ); /* .spectrum-Tag--sizeM */
    --spectrum-tag-label-spacing-inline-end: var(
        --system-spectrum-tag-sizem-label-spacing-inline-end
    );
    --spectrum-tag-corner-radius: var(
        --system-spectrum-tag-sizem-corner-radius
    );
    --spectrum-tag-clear-button-spacing-inline-end: var(
        --system-spectrum-tag-sizem-clear-button-spacing-inline-end
    );
}
:host([size='l']) {
    --spectrum-tag-spacing-inline-start: var(
        --system-spectrum-tag-sizel-spacing-inline-start
    ); /* .spectrum-Tag--sizeL */
    --spectrum-tag-label-spacing-inline-end: var(
        --system-spectrum-tag-sizel-label-spacing-inline-end
    );
    --spectrum-tag-corner-radius: var(
        --system-spectrum-tag-sizel-corner-radius
    );
    --spectrum-tag-clear-button-spacing-inline-end: var(
        --system-spectrum-tag-sizel-clear-button-spacing-inline-end
    );
}
