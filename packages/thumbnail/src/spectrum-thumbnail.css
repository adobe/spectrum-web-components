/*
Copyright 2023 Adobe. All rights reserved.
This file is licensed to you under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License. You may obtain a copy
of the License at http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software distributed under
the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS
OF ANY KIND, either express or implied. See the License for the specific language
governing permissions and limitations under the License.
*/

/* THIS FILE IS MACHINE GENERATED. DO NOT EDIT */
:host {
    align-items: center;
    background-position: 0 0,
        0 var(--spectrum-global-dimension-static-size-100, 8px),
        var(--spectrum-global-dimension-static-size-100, 8px)
            calc(var(--spectrum-global-dimension-static-size-100, 8px) * -1),
        calc(var(--spectrum-global-dimension-static-size-100, 8px) * -1) 0;
    background-size: var(--spectrum-global-dimension-static-size-200, 16px)
        var(--spectrum-global-dimension-static-size-200, 16px);
    border-radius: var(--spectrum-thumbnail-border-radius);
    display: flex;
    height: var(--spectrum-thumbnail-height);
    justify-content: center;
    margin: 0;
    overflow: hidden;
    padding: 0;
    position: relative;
    vertical-align: top;
    width: var(--spectrum-thumbnail-width);
    z-index: 0;
}
:host:before {
    border-radius: var(--spectrum-thumbnail-border-radius);
    content: '';
    height: 100%;
    position: absolute;
    width: 100%;
    z-index: 2;
}
:host([size='xxs']) {
    --spectrum-thumbnail-border-color-selected: var(
        --spectrum-thumbnail-xxs-border-color-selected,
        var(--spectrum-alias-border-color-selected)
    );
    --spectrum-thumbnail-border-size-selected-key-focus: var(
        --spectrum-thumbnail-xxs-border-size-selected-key-focus,
        var(--spectrum-alias-border-size-thick)
    );
    --spectrum-thumbnail-border-size: var(
        --spectrum-thumbnail-xxs-border-size,
        var(--spectrum-alias-border-size-thin)
    );
    --spectrum-thumbnail-border-color: var(
        --spectrum-thumbnail-xxs-border-color,
        var(--spectrum-alias-border-color-translucent)
    );
    --spectrum-thumbnail-border-color-key-focus: var(
        --spectrum-thumbnail-xxs-border-color-key-focus,
        var(--spectrum-alias-border-color-key-focus)
    );
    --spectrum-thumbnail-darksquare-background-color: var(
        --spectrum-thumbnail-xxs-darksquare-background-color,
        var(--spectrum-alias-thumbnail-darksquare-background-color)
    );
    --spectrum-thumbnail-border-radius: var(
        --spectrum-thumbnail-xxs-border-radius,
        var(--spectrum-alias-thumbnail-border-radius-small)
    );
    --spectrum-thumbnail-width: var(
        --spectrum-thumbnail-xxs-width,
        var(--spectrum-global-dimension-size-225)
    );
    --spectrum-thumbnail-height: var(
        --spectrum-thumbnail-xxs-height,
        var(--spectrum-global-dimension-size-225)
    );
}
:host([size='xs']) {
    --spectrum-thumbnail-border-color-selected: var(
        --spectrum-thumbnail-xs-border-color-selected,
        var(--spectrum-alias-border-color-selected)
    );
    --spectrum-thumbnail-border-size-selected-key-focus: var(
        --spectrum-thumbnail-xs-border-size-selected-key-focus,
        var(--spectrum-alias-border-size-thick)
    );
    --spectrum-thumbnail-border-size: var(
        --spectrum-thumbnail-xs-border-size,
        var(--spectrum-alias-border-size-thin)
    );
    --spectrum-thumbnail-border-color: var(
        --spectrum-thumbnail-xs-border-color,
        var(--spectrum-alias-border-color-translucent)
    );
    --spectrum-thumbnail-border-color-key-focus: var(
        --spectrum-thumbnail-xs-border-color-key-focus,
        var(--spectrum-alias-border-color-key-focus)
    );
    --spectrum-thumbnail-darksquare-background-color: var(
        --spectrum-thumbnail-xs-darksquare-background-color,
        var(--spectrum-alias-thumbnail-darksquare-background-color)
    );
    --spectrum-thumbnail-border-radius: var(
        --spectrum-thumbnail-xs-border-radius,
        var(--spectrum-alias-thumbnail-border-radius-small)
    );
    --spectrum-thumbnail-width: var(
        --spectrum-thumbnail-xs-width,
        var(--spectrum-global-dimension-size-300)
    );
    --spectrum-thumbnail-height: var(
        --spectrum-thumbnail-xs-height,
        var(--spectrum-global-dimension-size-300)
    );
}
:host([size='s']) {
    --spectrum-thumbnail-border-color-selected: var(
        --spectrum-thumbnail-s-border-color-selected,
        var(--spectrum-alias-border-color-selected)
    );
    --spectrum-thumbnail-border-size-selected-key-focus: var(
        --spectrum-thumbnail-s-border-size-selected-key-focus,
        var(--spectrum-alias-border-size-thick)
    );
    --spectrum-thumbnail-border-size: var(
        --spectrum-thumbnail-s-border-size,
        var(--spectrum-alias-border-size-thin)
    );
    --spectrum-thumbnail-border-color: var(
        --spectrum-thumbnail-s-border-color,
        var(--spectrum-alias-border-color-translucent)
    );
    --spectrum-thumbnail-border-color-key-focus: var(
        --spectrum-thumbnail-s-border-color-key-focus,
        var(--spectrum-alias-border-color-key-focus)
    );
    --spectrum-thumbnail-darksquare-background-color: var(
        --spectrum-thumbnail-s-darksquare-background-color,
        var(--spectrum-alias-thumbnail-darksquare-background-color)
    );
    --spectrum-thumbnail-border-radius: var(
        --spectrum-thumbnail-s-border-radius,
        var(--spectrum-alias-thumbnail-border-radius-small)
    );
    --spectrum-thumbnail-width: var(
        --spectrum-thumbnail-s-width,
        var(--spectrum-global-dimension-size-400)
    );
    --spectrum-thumbnail-height: var(
        --spectrum-thumbnail-s-height,
        var(--spectrum-global-dimension-size-400)
    );
}
:host([size='m']) {
    --spectrum-thumbnail-border-color-selected: var(
        --spectrum-thumbnail-m-border-color-selected,
        var(--spectrum-alias-border-color-selected)
    );
    --spectrum-thumbnail-border-size-selected-key-focus: var(
        --spectrum-thumbnail-m-border-size-selected-key-focus,
        var(--spectrum-alias-border-size-thick)
    );
    --spectrum-thumbnail-border-size: var(
        --spectrum-thumbnail-m-border-size,
        var(--spectrum-alias-border-size-thin)
    );
    --spectrum-thumbnail-border-color: var(
        --spectrum-thumbnail-m-border-color,
        var(--spectrum-alias-border-color-translucent)
    );
    --spectrum-thumbnail-border-color-key-focus: var(
        --spectrum-thumbnail-m-border-color-key-focus,
        var(--spectrum-alias-border-color-key-focus)
    );
    --spectrum-thumbnail-darksquare-background-color: var(
        --spectrum-thumbnail-m-darksquare-background-color,
        var(--spectrum-alias-thumbnail-darksquare-background-color)
    );
    --spectrum-thumbnail-border-radius: var(
        --spectrum-thumbnail-m-border-radius,
        var(--spectrum-alias-thumbnail-border-radius-small)
    );
    --spectrum-thumbnail-width: var(
        --spectrum-thumbnail-m-width,
        var(--spectrum-global-dimension-size-500)
    );
    --spectrum-thumbnail-height: var(
        --spectrum-thumbnail-m-height,
        var(--spectrum-global-dimension-size-500)
    );
}
:host([size='l']) {
    --spectrum-thumbnail-border-color-selected: var(
        --spectrum-thumbnail-l-border-color-selected,
        var(--spectrum-alias-border-color-selected)
    );
    --spectrum-thumbnail-border-size-selected-key-focus: var(
        --spectrum-thumbnail-l-border-size-selected-key-focus,
        var(--spectrum-alias-border-size-thick)
    );
    --spectrum-thumbnail-border-size: var(
        --spectrum-thumbnail-l-border-size,
        var(--spectrum-alias-border-size-thin)
    );
    --spectrum-thumbnail-border-color: var(
        --spectrum-thumbnail-l-border-color,
        var(--spectrum-alias-border-color-translucent)
    );
    --spectrum-thumbnail-border-color-key-focus: var(
        --spectrum-thumbnail-l-border-color-key-focus,
        var(--spectrum-alias-border-color-key-focus)
    );
    --spectrum-thumbnail-darksquare-background-color: var(
        --spectrum-thumbnail-l-darksquare-background-color,
        var(--spectrum-alias-thumbnail-darksquare-background-color)
    );
    --spectrum-thumbnail-border-radius: var(
        --spectrum-thumbnail-l-border-radius,
        var(--spectrum-alias-thumbnail-border-radius-small)
    );
    --spectrum-thumbnail-width: var(
        --spectrum-thumbnail-l-width,
        var(--spectrum-global-dimension-size-700)
    );
    --spectrum-thumbnail-height: var(
        --spectrum-thumbnail-l-height,
        var(--spectrum-global-dimension-size-700)
    );
}
::slotted(*) {
    max-height: 100%;
    max-width: 100%;
    z-index: 1;
}
:host([cover]) ::slotted(*) {
    height: 100%;
    object-fit: cover;
    object-position: center;
    width: 100%;
}
.background {
    background-position: 50%;
    background-size: cover;
    height: 100%;
    inset: 0;
    position: absolute;
    width: 100%;
    z-index: 0;
}
:host {
    background-color: var(
        --spectrum-global-color-static-white,
        rgb(var(--spectrum-global-color-static-white-rgb))
    );
    background-image: linear-gradient(
            -45deg,
            transparent 75.5%,
            var(--spectrum-thumbnail-darksquare-background-color) 75.5%
        ),
        linear-gradient(
            45deg,
            transparent 75.5%,
            var(--spectrum-thumbnail-darksquare-background-color) 75.5%
        ),
        linear-gradient(
            -45deg,
            var(--spectrum-thumbnail-darksquare-background-color) 25.5%,
            transparent 25.5%
        ),
        linear-gradient(
            45deg,
            var(--spectrum-thumbnail-darksquare-background-color) 25.5%,
            transparent 25.5%
        );
}
:host:before {
    box-shadow: inset 0 0 0 var(--spectrum-thumbnail-border-size)
        var(--spectrum-thumbnail-border-color);
}
:host([selected]) {
    box-shadow: 0 0 0
        calc(var(--spectrum-thumbnail-border-size-selected-key-focus) / 2)
        var(--spectrum-thumbnail-border-color-selected);
}
:host([selected]):before {
    box-shadow: inset 0 0 0
        calc(var(--spectrum-thumbnail-border-size-selected-key-focus) / 2)
        var(--spectrum-thumbnail-border-color-selected);
}
:host(.focus-visible),
:host([focused]) {
    box-shadow: 0 0 0
        calc(var(--spectrum-thumbnail-border-size-selected-key-focus) / 2)
        var(--spectrum-thumbnail-border-color-selected);
    outline: none;
    overflow: visible;
}
:host(:focus-visible),
:host([focused]) {
    box-shadow: 0 0 0
        calc(var(--spectrum-thumbnail-border-size-selected-key-focus) / 2)
        var(--spectrum-thumbnail-border-color-selected);
    outline: none;
    overflow: visible;
}
:host(.focus-visible):before,
:host([focused]):before {
    box-shadow: inset 0 0 0
        calc(var(--spectrum-thumbnail-border-size-selected-key-focus) / 2)
        var(--spectrum-thumbnail-border-color-selected);
}
:host(:focus-visible):before,
:host([focused]):before {
    box-shadow: inset 0 0 0
        calc(var(--spectrum-thumbnail-border-size-selected-key-focus) / 2)
        var(--spectrum-thumbnail-border-color-selected);
}
:host(.focus-visible):after,
:host([focused]):after {
    border-radius: calc(
        var(--spectrum-thumbnail-border-radius) +
            var(
                --spectrum-alias-focus-ring-gap,
                var(--spectrum-global-dimension-static-size-25)
            )
    );
    box-shadow: 0 0 0 var(--spectrum-thumbnail-border-size-selected-key-focus)
        var(--spectrum-thumbnail-border-color-key-focus);
    content: '';
    display: block;
    inset: 0;
    margin: calc(
        var(
                --spectrum-alias-focus-ring-gap,
                var(--spectrum-global-dimension-static-size-25)
            ) * -1
    );
    position: absolute;
}
:host(:focus-visible):after,
:host([focused]):after {
    border-radius: calc(
        var(--spectrum-thumbnail-border-radius) +
            var(
                --spectrum-alias-focus-ring-gap,
                var(--spectrum-global-dimension-static-size-25)
            )
    );
    box-shadow: 0 0 0 var(--spectrum-thumbnail-border-size-selected-key-focus)
        var(--spectrum-thumbnail-border-color-key-focus);
    content: '';
    display: block;
    inset: 0;
    margin: calc(
        var(
                --spectrum-alias-focus-ring-gap,
                var(--spectrum-global-dimension-static-size-25)
            ) * -1
    );
    position: absolute;
}
