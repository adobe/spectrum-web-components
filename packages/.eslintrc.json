{
    "root": true,
    "env": {
        "browser": true,
        "node": false,
        "es6": true
    },
    "parser": "@typescript-eslint/parser",
    "plugins": [
        "@typescript-eslint",
        "notice",
        "@spectrum-web-components",
        "@stylistic",
        "jsdoc",
        "lit-a11y"
    ],
    "extends": [
        "plugin:@typescript-eslint/recommended",
        "prettier",
        "plugin:lit-a11y/recommended",
        "plugin:jsdoc/recommended-typescript"
    ],
    "ignorePatterns": ["packages/**/*.css.ts"],
    "settings": {
        "jsdoc": {
            "tagNamePreference": {
                "attr": "attribute"
            }
        }
    },
    "rules": {
        "no-debugger": 2,
        "no-console": [
            "error",
            {
                "allow": ["warn", "error"]
            }
        ],
        "jsdoc/check-tag-names": [
            "warn",
            {
                "definedTags": ["element", "slot", "attribute", "csspart"]
            }
        ],
        "jsdoc/require-param": 0,
        "jsdoc/require-returns": 0,
        "jsdoc/informative-docs": 1,
        "jsdoc/no-bad-blocks": 1,
        "jsdoc/sort-tags": [
            "warn",
            {
                "tagSequence": [
                    {
                        "tags": [
                            // Brief descriptions
                            "summary",
                            "typeSummary"
                        ]
                    },
                    {
                        "tags": [
                            // Module/file-level
                            "element",
                            "module",
                            "exports",
                            "file",
                            "fileoverview",
                            "overview",
                            "import"
                        ]
                    },
                    {
                        "tags": [
                            // Identifying (name, type)
                            "typedef",
                            "interface",
                            "record",
                            "template",
                            "name",
                            "kind",
                            "type",
                            "alias",
                            "external",
                            "host",
                            "callback",
                            "func",
                            "function",
                            "method",
                            "class",
                            "constructor"
                        ]
                    },
                    {
                        "tags": [
                            // Relationships
                            "modifies",
                            "mixes",
                            "mixin",
                            "mixinClass",
                            "mixinFunction",
                            "namespace",
                            "borrows",
                            "constructs",
                            "lends",
                            "implements",
                            "requires"
                        ]
                    },
                    {
                        "tags": [
                            // Long descriptions
                            "desc",
                            "description",
                            "classdesc",
                            "tutorial",
                            "copyright",
                            "license"
                        ]
                    },
                    {
                        "tags": [
                            // Simple annotations
                            "const",
                            "constant",
                            "final",
                            "global",
                            "readonly",
                            "abstract",
                            "virtual",
                            "var",
                            "member",
                            "memberof",
                            "memberof!",
                            "inner",
                            "instance",
                            "inheritdoc",
                            "inheritDoc",
                            "override",
                            "hideconstructor"
                        ]
                    },
                    {
                        "tags": [
                            // Core function/object info
                            "param",
                            "arg",
                            "argument",
                            "prop",
                            "property",
                            "slot",
                            "return",
                            "returns"
                        ]
                    },
                    {
                        "tags": [
                            // Important behavior details
                            "async",
                            "generator",
                            "default",
                            "defaultvalue",
                            "enum",
                            "augments",
                            "extends",
                            "throws",
                            "exception",
                            "yield",
                            "yields",
                            "event",
                            "fires",
                            "emits",
                            "listens",
                            "this"
                        ]
                    },
                    {
                        "tags": [
                            // Access
                            "static",
                            "private",
                            "protected",
                            "public",
                            "access",
                            "package"
                        ]
                    },
                    { "tags": ["-other"] },
                    {
                        "tags": [
                            // Supplementary descriptions
                            "see",
                            "example"
                        ]
                    },
                    {
                        "tags": [
                            // Other Closure (undocumented) metadata
                            "closurePrimitive",
                            "customElement",
                            "expose",
                            "hidden",
                            "idGenerator",
                            "meaning",
                            "ngInject",
                            "owner",
                            "wizaction"
                        ]
                    },
                    {
                        "tags": [
                            // Other Closure (documented) metadata
                            "define",
                            "dict",
                            "export",
                            "externs",
                            "implicitCast",
                            "noalias",
                            "nocollapse",
                            "nocompile",
                            "noinline",
                            "nosideeffects",
                            "polymer",
                            "polymerBehavior",
                            "preserve",
                            "struct",
                            "suppress",
                            "unrestricted"
                        ]
                    },
                    {
                        "tags": [
                            // Non-Closure metadata
                            "ignore",
                            "author",
                            "version",
                            "variation",
                            "since",
                            "deprecated",
                            "todo"
                        ]
                    }
                ],
                "alphabetizeExtras": true
            }
        ],
        "jsdoc/tag-lines": ["warn", "any", { "startLines": 1, "endLines": 1 }],
        "jsdoc/no-blank-blocks": [
            "warn",
            {
                "enableFixer": true
            }
        ],
        "jsdoc/require-hyphen-before-param-description": 1,
        "@spectrum-web-components/prevent-argument-names": [
            "error",
            ["e", "ev", "evt", "err"]
        ],
        "@spectrum-web-components/document-active-element": ["error"],
        "notice/notice": [
            "error",
            {
                "mustMatch": "Copyright [0-9]{0,4} Adobe. All rights reserved.",
                "templateFile": "config/license.js"
            }
        ],
        "@typescript-eslint/explicit-function-return-type": [
            1,
            {
                "allowExpressions": true
            }
        ],
        "sort-imports": [
            "error",
            {
                "ignoreCase": true,
                "ignoreDeclarationSort": true,
                "ignoreMemberSort": false,
                "allowSeparatedGroups": false
            }
        ],
        "lit-a11y/click-events-have-key-events": [
            "error",
            {
                "allowList": [
                    "sp-button",
                    "sp-action-button",
                    "sp-checkbox",
                    "sp-radio",
                    "sp-switch",
                    "sp-menu-item",
                    "sp-clear-button",
                    "sp-underlay"
                ]
            }
        ],
        "@typescript-eslint/no-unused-vars": [
            "error",
            {
                "argsIgnorePattern": "^_"
            }
        ],
        "@stylistic/padding-line-between-statements": [
            "error",
            {
                "blankLine": "always",
                "prev": "*",
                "next": ["return", "if", "try", "switch"]
            },
            {
                "blankLine": "always",
                "prev": ["const", "let", "var", "if", "try", "switch"],
                "next": "*"
            },
            {
                "blankLine": "any",
                "prev": ["const", "let", "var"],
                "next": ["const", "let", "var"]
            }
        ]
    },
    "overrides": [
        {
            "files": [
                "*.test.ts",
                "*.stories.ts",
                "**/benchmark/*.ts",
                "**/test/*.ts"
            ],
            "rules": {
                "@spectrum-web-components/document-active-element": ["off"],
                "lit-a11y/no-autofocus": ["off"],
                "lit-a11y/tabindex-no-positive": ["off"],
                "jsdoc/require-jsdoc": 0
            }
        },
        {
            "files": ["**/icons/*.ts", "**/src/elements/*.ts"],
            "rules": {
                "sort-imports": ["off"],
                "@stylistic/padding-line-between-statements": 0
            }
        },
        {
            "files": ["**/stories/*"],
            "rules": {
                "jsdoc/require-jsdoc": 0
            }
        },
        {
            "files": ["*.stories.ts"],
            "rules": {
                "no-console": ["off"]
            }
        },
        {
            "files": ["Picker.ts"],
            "rules": {
                "lit-a11y/click-events-have-key-events": [
                    "error",
                    {
                        "allowList": [
                            "sp-button",
                            "sp-action-button",
                            "sp-checkbox",
                            "sp-radio",
                            "sp-switch",
                            "sp-menu-item",
                            "sp-clear-button",
                            "sp-underlay",
                            "sp-popover"
                        ]
                    }
                ]
            }
        }
    ]
}
