/*!
 * Copyright 2025 Adobe. All rights reserved.
 * This file is licensed to you under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License. You may obtain a copy
 * of the License at http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under
 * the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS
 * OF ANY KIND, either express or implied. See the License for the specific language
 * governing permissions and limitations under the License.
 */

/*!
 * Copyright 2025 Adobe. All rights reserved.
 * This file is licensed to you under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License. You may obtain a copy
 * of the License at http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under
 * the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS
 * OF ANY KIND, either express or implied. See the License for the specific language
 * governing permissions and limitations under the License./
 */

.gradient,
:host([disabled]) {
    forced-color-adjust: none;
}

:host {
    --spectrum-colorarea-border-color: #0000001a;
    cursor: default;
    user-select: none;
    min-inline-size: var(--spectrum-color-area-minimum-width);
    min-block-size: var(--spectrum-color-area-minimum-height);
    inline-size: var(--spectrum-color-area-width);
    block-size: var(--spectrum-color-area-height);
    box-sizing: border-box;
    position: relative;
    border-radius: var(--spectrum-color-area-border-rounding);
    border: var(--spectrum-color-area-border-width) solid var(--highcontrast-colorarea-border-color, var(--spectrum-colorarea-border-color));

    touch-action: none;
}

:host([focused]) {
    z-index: 1;
}

:host([disabled]) {
    pointer-events: none;
    background: var(--highcontrast-colorarea-fill-color-disabled, var(--spectrum-disabled-background-color));
    border: var(--spectrum-color-area-border-width) solid var(--highcontrast-colorarea-border-color-disabled);
}

:host([disabled]) #handle {
    display: none;
}

:host([disabled]) #gradient {
    transform: translate(calc(var(--spectrum-color-area-width) - var(--spectrum-color-area-border-width)));
}

#gradient {
    position: absolute;
    inset: 0;
    pointer-events: none;
    border-radius: var(--spectrum-color-area-border-rounding);
}

.handle {
    inset-block-start: 0;

    transform: translate(var(--spectrum-colorarea-default-width), 0);
}

.handle:dir(rtl),
:host([dir="rtl"]) .handle {
    inset-inline-end: 0;
}

.gradient {
    inline-size: 100%;
    block-size: 100%;
    border-radius: var(--mod-colorarea-border-radius, var(--spectrum-color-area-border-rounding));

    overflow: hidden;
}

.slider {
    opacity: 0;
    inline-size: 100%;
    block-size: 100%;
    z-index: 0;
    pointer-events: none;
    margin: 0;
    position: absolute;
    inset-block-start: 0;
    inset-inline-start: 0;
}

:host::before {
    pointer-events: none;
}

::slotted(*) {
    inline-size: 100%;
    block-size: 100%;
}

:host([dir="rtl"]) .gradient {
    transform: scaleX(-1);
}

.slider[orient="vertical"] {
    /* stylelint-disable-next-line declaration-property-value-no-unknown */
    appearance: slider-vertical;
}

.slider:focus {
    z-index: 1;
}

.fieldset {
    border: 0;
    margin: 0;
    padding: 0;
}
