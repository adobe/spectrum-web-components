/**
 * Copyright 2025 Adobe. All rights reserved.
 * This file is licensed to you under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License. You may obtain a copy
 * of the License at http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under
 * the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS
 * OF ANY KIND, either express or implied. See the License for the specific language
 * governing permissions and limitations under the License.
 */

/* Component structure:
 * sp-action-group provides a container for grouping related action buttons with advanced selection capabilities.
 *
 * Features:
 * - Size variants: xs, s, m (default), l, xl (via SizedMixin)
 * - Selection modes: none (default), single (radio), multiple (checkbox)
 * - Layout variants: horizontal (default), vertical
 * - Display variants: regular (default), compact, justified, emphasized, quiet
 * - Static color support: white, black
 * - RTL support via logical properties
 * - Keyboard navigation via roving tabindex
 * - Focus delegation and management
 * - Accessible ARIA attributes
 * - Shadow DOM encapsulation
 *
 * Slots:
 * - default: accepts sp-action-button and sp-action-menu elements
 *
 * States:
 * - Selected: manages selected state for single/multiple selection modes
 * - Disabled: respects disabled state of child buttons
 * - Focus: manages focus states with proper z-index layering
 * - Hover: provides visual feedback for hover states
 */

/* Custom properties and base styles */
:host {
    /* Layout */
    --spectrum-actiongroup-spacing: var(--spectrum-spacing-100);

    /* Border radius */
    --spectrum-actiongroup-border-radius: var(--spectrum-corner-radius-100);

    /* Base layout */
    display: flex;
    flex-wrap: wrap;
    gap: var(--spectrum-actiongroup-spacing);
}

/* Size variants - controlled via SizedMixin */
:host([size="s"]),
:host([size="xs"]) {
    --spectrum-actiongroup-spacing: var(--spectrum-spacing-75);
}

/* Slotted button styles and focus management */
::slotted(*) {
    flex-shrink: 0;
}

::slotted(*:focus-visible) {
    z-index: 3;
}

/* Layout variants */
:host([vertical]) {
    display: inline-flex;
    flex-direction: column;
    gap: var(--spectrum-actiongroup-spacing);
}

/* Compact variants - base */
:host([compact]),
:host([compact][vertical]) {
    gap: 0;
}

/* Non-quiet compact styles */
:host([compact]:not([quiet])) {
    flex-wrap: nowrap;
}

:host([compact]:not([quiet])) ::slotted(*) {
    position: relative;
    border-radius: var(--spectrum-actiongroup-border-radius-reset, 0);
    z-index: 0;
}

/* Compact group item positioning */
:host([compact]:not([quiet])) {
    /* First item */
    ::slotted(*:first-child) {
        --spectrum-actionbutton-focus-indicator-border-radius: var(--spectrum-actiongroup-border-radius) 0 0 var(--spectrum-actiongroup-border-radius);

        border-start-start-radius: var(--spectrum-actiongroup-border-radius);
        border-end-start-radius: var(--spectrum-actiongroup-border-radius);
        margin-inline-start: var(--spectrum-actiongroup-button-spacing-reset, 0);
    }

    /* Middle items */
    ::slotted(* + *) {
        --spectrum-actionbutton-focus-indicator-border-radius: 0;

        margin-inline: var(--spectrum-actiongroup-spacing, -1px);
    }

    /* Last item */
    ::slotted(*:last-child) {
        --spectrum-actionbutton-focus-indicator-border-radius: 0 var(--spectrum-actiongroup-border-radius) var(--spectrum-actiongroup-border-radius) 0;

        border-start-end-radius: var(--spectrum-actiongroup-border-radius);
        border-end-end-radius: var(--spectrum-actiongroup-border-radius);
        margin-inline-start: var(--spectrum-actiongroup-spacing, -1px);
        margin-inline-end: var(--spectrum-actiongroup-border-radius-reset, 0);
    }

    /* Selection and interaction states - z-index layering */
    ::slotted([selected]) {
        z-index: 1; /* Selected items above base */
    }

    ::slotted(*:hover) {
        z-index: 2; /* Hover above selected */
    }

    ::slotted(*:focus-visible) {
        z-index: 3; /* Focus above all */
    }
}

/* @todo this reaches too far into a slotted element
.spectrum-ActionGroup--compact:not(.spectrum-ActionGroup--quiet) .spectrum-ActionGroup-item .spectrum-ActionButton-label {
    inline-size: auto;
} */

/* Vertical compact variant */
:host([compact][vertical]:not([quiet])) {
    ::slotted(*) {
        border-radius: var(--spectrum-actiongroup-border-radius-reset, 0);
    }

    /* First item */
    ::slotted(*:first-child) {
        --spectrum-actionbutton-focus-indicator-border-radius: var(--spectrum-actiongroup-border-radius) var(--spectrum-actiongroup-border-radius) 0 0;

        border-start-start-radius: var(--spectrum-actiongroup-border-radius);
        border-start-end-radius: var(--spectrum-actiongroup-border-radius);
        margin-inline-end: var(--spectrum-actiongroup-button-spacing-reset, 0);
        margin-block: var(--spectrum-actiongroup-spacing, -1px);
    }

    /* Middle items */
    ::slotted(* + *) {
        margin-inline: var(--spectrum-actiongroup-button-spacing-reset, 0);
        margin-block-start: var(--spectrum-actiongroup-button-spacing-reset, 0);
        margin-block-end: var(--spectrum-actiongroup-spacing, -1px);
    }

    /* Last item */
    ::slotted(*:last-child) {
        --spectrum-actionbutton-focus-indicator-border-radius: 0 0 var(--spectrum-actiongroup-border-radius) var(--spectrum-actiongroup-border-radius);

        border-end-start-radius: var(--spectrum-actiongroup-border-radius);
        border-end-end-radius: var(--spectrum-actiongroup-border-radius);
        margin-block-start: var(--spectrum-actiongroup-spacing, -1px);
        margin-block-end: var(--spectrum-actiongroup-button-spacing-reset, 0);
    }
}

/* Justified variant - full width items */
:host([justified]) ::slotted(*) {
    flex-grow: 1;
}

/* Hover state for devices that support hover */
@media (hover: hover) {
    :host([compact]:not([quiet])) ::slotted(*:hover) {
        z-index: 2;
    }
}
