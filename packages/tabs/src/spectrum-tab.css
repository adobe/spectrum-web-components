/* stylelint-disable */ /* 
Copyright 2020 Adobe. All rights reserved.
This file is licensed to you under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License. You may obtain a copy
of the License at http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software distributed under
the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS
OF ANY KIND, either express or implied. See the License for the specific language
governing permissions and limitations under the License.

THIS FILE IS MACHINE GENERATED. DO NOT EDIT */
:host {
    /* .spectrum-Tabs-item */
    position: relative;
    box-sizing: border-box;
    height: calc(
        var(--spectrum-tabs-height, var(--spectrum-global-dimension-size-600)) -
            var(
                --spectrum-tabs-rule-height,
                var(--spectrum-alias-border-size-thick)
            )
    );
    line-height: calc(
        var(--spectrum-tabs-height, var(--spectrum-global-dimension-size-600)) -
            var(
                --spectrum-tabs-rule-height,
                var(--spectrum-alias-border-size-thick)
            )
    );
    z-index: 1;
    text-decoration: none;
    white-space: nowrap;
    transition: color var(--spectrum-global-animation-duration-100, 0.13s)
        ease-out;
    cursor: pointer;
    outline: none; /* .spectrum-Tabs-item */
    color: var(
        --spectrum-tabs-text-color,
        var(--spectrum-alias-label-text-color)
    );
}
:host([disabled]),
:host([disabled]) #itemLabel {
    /* .spectrum-Tabs-item.is-disabled,
   * .spectrum-Tabs-item.is-disabled .spectrum-Tabs-itemLabel */
    cursor: default;
}
::slotted([slot='icon']) {
    /* .spectrum-Tabs-item .spectrum-Icon */
    height: calc(
        var(--spectrum-tabs-height, var(--spectrum-global-dimension-size-600)) -
            var(
                --spectrum-tabs-rule-height,
                var(--spectrum-alias-border-size-thick)
            )
    ); /* .spectrum-Tabs-item .spectrum-Icon */
    color: var(--spectrum-tabs-icon-color, var(--spectrum-alias-icon-color));
}
:host([dir='ltr']) slot[name='icon'] + #itemLabel {
    /* [dir=ltr] .spectrum-Tabs-item .spectrum-Icon+.spectrum-Tabs-itemLabel */
    margin-left: calc(
        var(--spectrum-tabs-icon-gap, var(--spectrum-global-dimension-size-100)) -
            var(--spectrum-global-dimension-size-40)
    );
}
:host([dir='rtl']) slot[name='icon'] + #itemLabel {
    /* [dir=rtl] .spectrum-Tabs-item .spectrum-Icon+.spectrum-Tabs-itemLabel */
    margin-right: calc(
        var(--spectrum-tabs-icon-gap, var(--spectrum-global-dimension-size-100)) -
            var(--spectrum-global-dimension-size-40)
    );
}
:host([dir='ltr']):before {
    /* [dir=ltr] .spectrum-Tabs-item:before */
    left: calc(
        -1 * var(--spectrum-tabs-focus-ring-padding-x, var(--spectrum-global-dimension-size-100))
    );
}
:host([dir='ltr']):before,
:host([dir='rtl']):before {
    /* [dir=ltr] .spectrum-Tabs-item:before,
   * [dir=rtl] .spectrum-Tabs-item:before */
    right: calc(
        -1 * var(--spectrum-tabs-focus-ring-padding-x, var(--spectrum-global-dimension-size-100))
    );
}
:host([dir='rtl']):before {
    /* [dir=rtl] .spectrum-Tabs-item:before */
    left: calc(
        -1 * var(--spectrum-tabs-focus-ring-padding-x, var(--spectrum-global-dimension-size-100))
    );
}
:host:before {
    /* .spectrum-Tabs-item:before */
    content: '';
    position: absolute;
    top: 50%;
    box-sizing: border-box;
    height: var(
        --spectrum-tabs-focus-ring-height,
        var(--spectrum-alias-single-line-height)
    );
    margin-top: calc(
        var(
                --spectrum-tabs-focus-ring-height,
                var(--spectrum-alias-single-line-height)
            ) / -2 +
            var(
                --spectrum-tabs-rule-height,
                var(--spectrum-alias-border-size-thick)
            ) / 2
    );
    border: var(
            --spectrum-tabs-focus-ring-size,
            var(--spectrum-alias-border-size-thick)
        )
        solid transparent;
    border-radius: var(--spectrum-tabs-focus-ring-border-radius);
    pointer-events: none;
}
#itemLabel {
    /* .spectrum-Tabs-itemLabel */
    cursor: pointer;
    vertical-align: top;
    display: inline-block;
    font-size: var(
        --spectrum-tabs-text-size,
        var(--spectrum-alias-font-size-default)
    );
    font-weight: var(
        --spectrum-tabs-text-font-weight,
        var(--spectrum-alias-body-text-font-weight)
    );
    text-decoration: none;
}
#itemLabel:empty {
    /* .spectrum-Tabs-itemLabel:empty */
    display: none;
}
:host(:hover) {
    /* .spectrum-Tabs-item:hover */
    color: var(
        --spectrum-tabs-text-color-hover,
        var(--spectrum-alias-text-color-hover)
    );
}
:host(:hover) ::slotted([slot='icon']) {
    /* .spectrum-Tabs-item:hover .spectrum-Icon */
    color: var(
        --spectrum-tabs-icon-color-hover,
        var(--spectrum-alias-icon-color-hover)
    );
}
:host([selected]) {
    /* .spectrum-Tabs-item.is-selected */
    color: var(
        --spectrum-tabs-text-color-selected,
        var(--spectrum-global-color-gray-900)
    );
}
:host([selected]) ::slotted([slot='icon']) {
    /* .spectrum-Tabs-item.is-selected .spectrum-Icon */
    color: var(
        --spectrum-tabs-icon-color-selected,
        var(--spectrum-global-color-gray-900)
    );
}
:host(:focus-visible) {
    /* .spectrum-Tabs-item.focus-ring */
    color: var(
        --spectrum-tabs-text-color-key-focus,
        var(--spectrum-alias-text-color-hover)
    );
}
:host(:focus-visible):before {
    /* .spectrum-Tabs-item.focus-ring:before */
    border-color: var(
        --spectrum-tabs-focus-ring-color,
        var(--spectrum-alias-border-color-focus)
    );
}
:host(:focus-visible) ::slotted([slot='icon']) {
    /* .spectrum-Tabs-item.focus-ring .spectrum-Icon */
    color: var(
        --spectrum-tabs-icon-color-key-focus,
        var(--spectrum-alias-icon-color-focus)
    );
}
:host([disabled]) {
    /* .spectrum-Tabs-item.is-disabled */
    color: var(
        --spectrum-tabs-text-color-disabled,
        var(--spectrum-alias-text-color-disabled)
    );
}
:host([disabled]) ::slotted([slot='icon']) {
    /* .spectrum-Tabs-item.is-disabled .spectrum-Icon */
    color: var(
        --spectrum-tabs-icon-color-disabled,
        var(--spectrum-alias-icon-color-disabled)
    );
}
