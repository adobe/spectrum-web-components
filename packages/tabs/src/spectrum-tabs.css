/*
Copyright 2023 Adobe. All rights reserved.
This file is licensed to you under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License. You may obtain a copy
of the License at http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software distributed under
the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS
OF ANY KIND, either express or implied. See the License for the specific language
governing permissions and limitations under the License.
*/

/* THIS FILE IS MACHINE GENERATED. DO NOT EDIT */
#list {
    --spectrum-tabs-compact-item-height: calc(
        var(--spectrum-tabs-compact-textonly-height) -
            var(--spectrum-tabs-compact-textonly-divider-size)
    );
    display: flex;
    margin: 0;
    padding-bottom: 0;
    padding-top: 0;
    position: relative;
    vertical-align: top;
    z-index: 0;
}
::slotted(:not([slot])).is-disabled {
    cursor: default;
}
:host([dir='ltr']) ::slotted(:not([slot])):before {
    left: calc(var(--spectrum-tabs-textonly-tabitem-focus-ring-padding-x) * -1);
}
:host([dir='rtl']) ::slotted(:not([slot])):before {
    right: calc(
        var(--spectrum-tabs-textonly-tabitem-focus-ring-padding-x) * -1
    );
}
:host([dir='ltr']) ::slotted(:not([slot])):before {
    right: calc(
        var(--spectrum-tabs-textonly-tabitem-focus-ring-padding-x) * -1
    );
}
:host([dir='rtl']) ::slotted(:not([slot])):before {
    left: calc(var(--spectrum-tabs-textonly-tabitem-focus-ring-padding-x) * -1);
}
:host([dir='ltr']) #selection-indicator {
    left: 0;
}
:host([dir='rtl']) #selection-indicator {
    right: 0;
}
#selection-indicator {
    border-radius: var(--spectrum-tabs-textonly-divider-border-radius);
    position: absolute;
    transform-origin: 0 0;
    transition: transform
        var(
            --spectrum-tabs-texticon-tabitem-selection-indicator-animation-duration
        )
        var(--spectrum-tabs-texticon-tabitem-selection-indicator-animation-ease);
    z-index: 0;
}
:host([compact]) ::slotted(:not([slot])) {
    height: var(--spectrum-tabs-compact-item-height);
    line-height: var(--spectrum-tabs-compact-item-height);
}
:host([direction^='horizontal']) #list {
    align-items: center;
}
:host([direction^='horizontal']) #list ::slotted(:not([slot])) {
    vertical-align: top;
}
:host([dir='ltr'][direction^='horizontal'])
    #list
    ::slotted(:not([slot]):not(:first-child)) {
    margin-left: var(--spectrum-tabs-textonly-tabitem-margin-right);
}
:host([dir='rtl'][direction^='horizontal'])
    #list
    ::slotted(:not([slot]):not(:first-child)) {
    margin-right: var(--spectrum-tabs-textonly-tabitem-margin-right);
}
:host([direction^='horizontal']) #list #selection-indicator {
    bottom: 0;
    height: var(--spectrum-tabs-quiet-textonly-divider-size);
    position: absolute;
}
:host([direction^='horizontal'][compact]) #list {
    align-items: end;
    box-sizing: content-box;
    height: var(--spectrum-tabs-compact-item-height);
}
:host([quiet]) #list {
    display: inline-flex;
}
:host([direction^='vertical']) #list {
    display: inline-flex;
    flex-direction: column;
    padding: 0;
}
:host([dir='ltr'][direction^='vertical']) #list ::slotted(:not([slot])) {
    margin-left: calc(var(--spectrum-tabs-vertical-textonly-tabitem-gap) / 2);
}
:host([dir='rtl'][direction^='vertical']) #list ::slotted(:not([slot])) {
    margin-right: calc(var(--spectrum-tabs-vertical-textonly-tabitem-gap) / 2);
}
:host([direction^='vertical']) #list ::slotted(:not([slot])) {
    height: var(--spectrum-tabs-vertical-textonly-tabitem-height);
    line-height: var(--spectrum-tabs-vertical-textonly-tabitem-height);
    margin-bottom: var(--spectrum-tabs-vertical-textonly-tabitem-gap);
    padding-bottom: 0;
    padding-left: var(
        --spectrum-tabs-quiet-textonly-tabitem-focus-ring-padding-x
    );
    padding-right: var(
        --spectrum-tabs-quiet-textonly-tabitem-focus-ring-padding-x
    );
    padding-top: 0;
}
:host([dir='ltr'][direction^='vertical']) #list ::slotted(:not([slot])):before {
    left: calc(var(--spectrum-tabs-textonly-tabitem-focus-ring-size) * -1);
}
:host([dir='rtl'][direction^='vertical']) #list ::slotted(:not([slot])):before {
    right: calc(var(--spectrum-tabs-textonly-tabitem-focus-ring-size) * -1);
}
:host([dir='ltr'][direction^='vertical']) #list ::slotted(:not([slot])):before {
    right: calc(var(--spectrum-tabs-textonly-tabitem-focus-ring-size) * -1);
}
:host([dir='rtl'][direction^='vertical']) #list ::slotted(:not([slot])):before {
    left: calc(var(--spectrum-tabs-textonly-tabitem-focus-ring-size) * -1);
}
:host([direction^='vertical'][compact]) #list ::slotted(:not([slot])) {
    height: var(--spectrum-tabs-compact-vertical-textonly-tabitem-height);
    line-height: var(--spectrum-tabs-compact-vertical-textonly-tabitem-height);
    margin-bottom: var(--spectrum-tabs-compact-vertical-textonly-tabitem-gap);
}
:host([dir='ltr'][direction^='vertical']) #list #selection-indicator {
    left: 0;
}
:host([dir='rtl'][direction^='vertical']) #list #selection-indicator {
    right: 0;
}
:host([direction^='vertical']) #list #selection-indicator {
    position: absolute;
    width: var(--spectrum-tabs-quiet-textonly-divider-size);
}
#list {
    --spectrum-tabs-list-background-direction: top;
    background: linear-gradient(
        to var(--spectrum-tabs-list-background-direction),
        var(--spectrum-tabs-textonly-divider-background-color) 0
            var(--spectrum-tabs-quiet-textonly-divider-size),
        transparent var(--spectrum-tabs-quiet-textonly-divider-size)
    );
}
:host([direction^='vertical']) #list {
    --spectrum-tabs-list-background-direction: right;
}
:host([direction^='vertical'][compact]) #list,
:host([quiet]) #list,
:host([quiet][compact]) {
    --spectrum-tabs-textonly-divider-background-color: var(
        --spectrum-tabs-quiet-textonly-divider-background-color
    );
}
:host([direction^='vertical'][emphasized]) #list {
    --spectrum-tabs-textonly-divider-background-color: var(
        --spectrum-tabs-emphasized-textonly-divider-background-color
    );
}
#selection-indicator {
    background-color: var(
        --spectrum-tabs-textonly-tabitem-selection-indicator-background-color-selected
    );
}
:host([emphasized]) #selection-indicator {
    background-color: var(
        --spectrum-tabs-emphasized-texticon-tabitem-selection-indicator-background-color-selected
    );
}
::slotted([selected]:not([slot])) {
    color: var(--spectrum-tabs-textonly-tabitem-text-color-selected);
}
:host(.focus-visible)::slotted(:not([slot])) {
    color: var(--spectrum-tabs-textonly-tabitem-text-color-selected-key-focus);
}
:host(:focus-visible)::slotted(:not([slot])) {
    color: var(--spectrum-tabs-textonly-tabitem-text-color-selected-key-focus);
}
::slotted(:not([slot])).is-disabled {
    color: var(--spectrum-tabs-textonly-tabitem-text-color-disabled);
}
:host([emphasized]) ::slotted([selected]:not([slot])) {
    color: var(--spectrum-tabs-emphasized-texticon-tabitem-text-color-selected);
}
:host([quiet]) #list {
    border-bottom-color: var(
        --spectrum-tabs-quiet-textonly-divider-background-color
    );
}
:host([quiet]) #selection-indicator {
    background-color: var(
        --spectrum-tabs-quiet-textonly-tabitem-selection-indicator-background-color-selected
    );
}
:host([quiet][emphasized]) #selection-indicator {
    background-color: var(
        --spectrum-tabs-emphasized-texticon-tabitem-selection-indicator-background-color-selected
    );
}
:host([direction^='vertical'][compact]) #list #selection-indicator,
:host([direction^='vertical'][quiet]) #list #selection-indicator {
    background-color: var(
        --spectrum-tabs-vertical-textonly-tabitem-selection-indicator-background-color-selected
    );
}
:host([direction^='vertical'][emphasized]) #list #selection-indicator {
    background-color: var(
        --spectrum-tabs-emphasized-texticon-tabitem-selection-indicator-background-color-selected
    );
}
@media (forced-colors: active) {
    #list {
        --spectrum-tabs-emphasized-texticon-tabitem-icon-color-selected: HighlightText;
        --spectrum-tabs-emphasized-texticon-tabitem-selection-indicator-background-color-selected: Highlight;
        --spectrum-tabs-emphasized-texticon-tabitem-text-color-selected: HighlightText;
        --spectrum-tabs-emphasized-textonly-divider-background-color: transparent;
        --spectrum-tabs-quiet-textonly-divider-background-color: transparent;
        --spectrum-tabs-quiet-textonly-tabitem-selection-indicator-background-color-selected: Highlight;
        --spectrum-tabs-textonly-divider-background-color: transparent;
        --spectrum-tabs-textonly-tabitem-focus-ring-border-color-key-focus: ButtonText;
        --spectrum-tabs-textonly-tabitem-icon-color-disabled: GrayText;
        --spectrum-tabs-textonly-tabitem-icon-color-hover: ButtonText;
        --spectrum-tabs-textonly-tabitem-icon-color-selected-key-focus: ButtonText;
        --spectrum-tabs-textonly-tabitem-icon-color-selected: HighlightText;
        --spectrum-tabs-textonly-tabitem-selection-indicator-background-color-selected: Highlight;
        --spectrum-tabs-textonly-tabitem-text-color-disabled: GrayText;
        --spectrum-tabs-textonly-tabitem-text-color-hover: ButtonText;
        --spectrum-tabs-textonly-tabitem-text-color-selected-key-focus: ButtonText;
        --spectrum-tabs-textonly-tabitem-text-color-selected: HighlightText;
        --spectrum-tabs-textonly-tabitem-text-color: ButtonText;
        --spectrum-tabs-vertical-textonly-tabitem-selection-indicator-background-color-selected: Highlight;
        forced-color-adjust: none;
    }
    #list ::slotted(:not([slot])):before {
        background-color: ButtonFace;
    }
    #list ::slotted([selected]:not([slot])) {
        color: HighlightText;
    }
    #list ::slotted([selected]:not([slot])):before {
        background-color: Highlight;
        color: HighlightText;
    }
    :host([emphasized]) #list ::slotted(:not([slot])):before {
        background-color: ButtonFace;
    }
    :host([emphasized]) #list ::slotted([selected]:not([slot])) {
        color: HighlightText;
    }
    :host([emphasized]) #list ::slotted([selected]:not([slot])):before {
        background-color: Highlight;
        color: HighlightText;
    }
}
