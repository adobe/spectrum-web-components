/*
Copyright 2023 Adobe. All rights reserved.
This file is licensed to you under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License. You may obtain a copy
of the License at http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software distributed under
the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS
OF ANY KIND, either express or implied. See the License for the specific language
governing permissions and limitations under the License.
*/

/* THIS FILE IS MACHINE GENERATED. DO NOT EDIT */
:host {
    --spectrum-colorslider-handle-hitarea-border-radius: 0%;
    --spectrum-colorslider-handle-hitarea-width: var(
        --spectrum-global-dimension-size-300
    );
    --spectrum-colorslider-handle-hitarea-height: var(
        --spectrum-global-dimension-size-300
    );
}
:host([focused]) .handle {
    height: calc(
        var(
                --spectrum-colorhandle-size,
                var(--spectrum-global-dimension-size-200)
            ) * 2
    );
    margin-left: calc(
        var(
                --spectrum-colorhandle-size,
                var(--spectrum-global-dimension-size-200)
            ) * -1
    );
    margin-top: calc(
        var(
                --spectrum-colorhandle-size,
                var(--spectrum-global-dimension-size-200)
            ) * -1
    );
    width: calc(
        var(
                --spectrum-colorhandle-size,
                var(--spectrum-global-dimension-size-200)
            ) * 2
    );
}
.slider {
    height: 100%;
    left: 0;
    margin: 0;
    opacity: 0;
    pointer-events: none;
    position: absolute;
    top: 0;
    width: 100%;
    z-index: 0;
}
:host {
    cursor: default;
    display: block;
    height: var(
        --spectrum-colorslider-height,
        var(--spectrum-global-dimension-size-300)
    );
    position: relative;
    -webkit-user-select: none;
    user-select: none;
    width: var(
        --spectrum-colorslider-default-length,
        var(--spectrum-global-dimension-size-2400)
    );
}
:host([focused]) {
    z-index: 2;
}
:host([disabled]) {
    pointer-events: none;
}
:host([vertical]) {
    display: inline-block;
    height: var(
        --spectrum-colorslider-vertical-default-length,
        var(--spectrum-global-dimension-size-2400)
    );
    width: var(
        --spectrum-colorslider-vertical-width,
        var(--spectrum-global-dimension-size-300)
    );
}
:host([vertical]) .handle {
    left: 50%;
    top: 0;
}
.handle {
    left: 0;
    top: 50%;
}
.handle:after {
    border-radius: var(--spectrum-colorslider-handle-hitarea-border-radius);
    height: var(--spectrum-colorslider-handle-hitarea-height);
    width: var(--spectrum-colorslider-handle-hitarea-width);
}
.checkerboard {
    background-position: 0 0,
        0 var(--spectrum-global-dimension-static-size-100, 8px),
        var(--spectrum-global-dimension-static-size-100, 8px)
            calc(var(--spectrum-global-dimension-static-size-100, 8px) * -1),
        calc(var(--spectrum-global-dimension-static-size-100, 8px) * -1) 0;
    background-size: var(--spectrum-global-dimension-static-size-200, 16px)
        var(--spectrum-global-dimension-static-size-200, 16px);
}
.checkerboard:before {
    border-radius: var(
        --spectrum-colorslider-border-radius,
        var(--spectrum-alias-border-radius-regular)
    );
    content: '';
    inset: 0;
    position: absolute;
    z-index: 1;
}
.checkerboard,
.gradient {
    border-radius: var(
        --spectrum-colorslider-border-radius,
        var(--spectrum-alias-border-radius-regular)
    );
    height: 100%;
    width: 100%;
}
:host {
    --spectrum-colorslider-border-color: var(
        --spectrum-colorarea-border-color,
        var(--spectrum-alias-border-color-translucent)
    );
}
.checkerboard {
    background-color: var(
        --spectrum-colorcontrol-checkerboard-light-color,
        var(--spectrum-global-color-static-white)
    );
    background-image: linear-gradient(
            -45deg,
            transparent 75.5%,
            var(
                    --spectrum-colorcontrol-checkerboard-dark-color,
                    var(--spectrum-global-color-static-gray-300)
                )
                75.5%
        ),
        linear-gradient(
            45deg,
            transparent 75.5%,
            var(
                    --spectrum-colorcontrol-checkerboard-dark-color,
                    var(--spectrum-global-color-static-gray-300)
                )
                75.5%
        ),
        linear-gradient(
            -45deg,
            var(
                    --spectrum-colorcontrol-checkerboard-dark-color,
                    var(--spectrum-global-color-static-gray-300)
                )
                25.5%,
            transparent 25.5%
        ),
        linear-gradient(
            45deg,
            var(
                    --spectrum-colorcontrol-checkerboard-dark-color,
                    var(--spectrum-global-color-static-gray-300)
                )
                25.5%,
            transparent 25.5%
        );
}
.checkerboard:before {
    box-shadow: inset 0 0 0
        var(
            --spectrum-colorslider-border-size,
            var(--spectrum-alias-border-size-thin)
        )
        var(
            --spectrum-colorslider-border-color,
            var(--spectrum-alias-border-color-translucent)
        );
}
:host([disabled]) .checkerboard {
    background: var(
        --spectrum-colorslider-fill-color-disabled,
        var(--spectrum-alias-track-color-disabled)
    );
}
:host([disabled]) .checkerboard:before {
    box-shadow: 0 0 0
        var(
            --spectrum-colorslider-border-size,
            var(--spectrum-alias-border-size-thin)
        )
        var(
            --spectrum-colorslider-border-color-disabled,
            var(--spectrum-alias-track-color-disabled)
        );
}
:host([disabled]) .gradient {
    display: none;
}
@media (forced-colors: active) {
    :host {
        --spectrum-colorslider-border-color-disabled: GrayText;
        --spectrum-colorslider-fill-color-disabled: Canvas;
    }
    :host {
        forced-color-adjust: none;
    }
}
