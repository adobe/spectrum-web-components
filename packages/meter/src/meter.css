/*
Copyright 2020 Adobe. All rights reserved.
This file is licensed to you under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License. You may obtain a copy
of the License at http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software distributed under
the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS
OF ANY KIND, either express or implied. See the License for the specific language
governing permissions and limitations under the License.
*/

:host {
    --spectrum-meter-inline-size: var(--system-meter-inline-size);
    --spectrum-meter-top-to-text: var(--system-meter-top-to-text);
    --spectrum-meter-thickness: var(--system-meter-thickness);
    --spectrum-meter-font-size: var(--system-meter-font-size);
}

:host([size='s']) {
    --spectrum-meter-thickness: var(--system-meter-size-s-thickness);
    --spectrum-meter-inline-size: var(--system-meter-size-s-inline-size);
    --spectrum-meter-font-size: var(--system-meter-size-s-font-size);
    --spectrum-meter-top-to-text: var(--system-meter-size-s-top-to-text);
}

:host([size='l']) {
    --spectrum-meter-thickness: var(--system-meter-size-l-thickness);
    --spectrum-meter-inline-size: var(--system-meter-size-l-inline-size);
    --spectrum-meter-font-size: var(--system-meter-size-l-font-size);
    --spectrum-meter-top-to-text: var(--system-meter-size-l-top-to-text);
}

:host {
    --spectrum-meter-animation-ease-in-out-indeterminate: var(--mod-meter-animation-ease-in-out-indeterminate, var(--system-progress-bar-animation-ease-in-out-indeterminate));
    --spectrum-meter-animation-duration-indeterminate: var(--mod-meter-animation-duration-indeterminate, var(--system-progress-bar-animation-duration-indeterminate));
    --spectrum-meter-fill-size-indeterminate: var(--mod-meter-fill-size-indeterminate, var(--system-progress-bar-fill-size-indeterminate));
    --spectrum-meter-line-height: var(--mod-meter-line-height, var(--system-progress-bar-line-height));
    --spectrum-meter-spacing-label-to-progressbar: var(--mod-meter-spacing-label-to-progressbar, var(--system-progress-bar-spacing-label-to));
    --spectrum-meter-spacing-label-to-text: var(--mod-meter-spacing-label-to-text, var(--system-progress-bar-spacing-label-to-text));
    --spectrum-meter-text-color: var(--mod-meter-text-color, var(--system-progress-bar-text-color));

    font-size: var(--mod-meter-font-size, var(--spectrum-meter-font-size));
    vertical-align: top;
    inline-size: var(--mod-meter-inline-size, var(--spectrum-meter-inline-size));
    max-inline-size: var(--mod-meter-max-size, var(--mod-meter-max-width, var(--system-meter-max-width)));
    min-inline-size: var(--mod-meter-min-size, var(--mod-meter-min-width, var(--system-meter-min-width)));
    flex-flow: wrap;
    justify-content: space-between;
    align-items: center;
    display: inline-flex;
    position: relative;
}

:host([variant='positive']) {
    --spectrum-meter-fill-color: var(--mod-meter-fill-color-positive, var(--system-meter-fill-color-positive));
}

:host([variant='notice']) {
    --spectrum-meter-fill-color: var(--mod-meter-fill-color-notice, var(--system-meter-fill-color-notice));
}

:host([variant='negative']) {
    --spectrum-meter-fill-color: var(--mod-meter-fill-color-negative, var(--system-meter-fill-color-negative));
}

.label,
.percentage {
    text-align: start;
    line-height: var(--spectrum-meter-line-height);
    color: var(--spectrum-meter-text-color);
    margin-block-start: var(--mod-meter-spacing-top-to-text, var(--spectrum-meter-top-to-text));
    margin-block-end: var(--spectrum-meter-spacing-label-to-progressbar);
}

.label:lang(ja),
.label:lang(ko),
.label:lang(zh),
.percentage:lang(ja),
.percentage:lang(ko),
.percentage:lang(zh) {
    line-height: var(--mod-meter-line-height-cjk, var(--system-progress-bar-line-height-cjk));
}

.label {
    flex: 1;
}

.percentage {
    align-self: flex-start;
    margin-inline-start: var(--spectrum-meter-spacing-label-to-text);
}

.track {
    inline-size: 100%;
    block-size: var(--mod-meter-thickness, var(--spectrum-meter-thickness));
    border-radius: var(--system-progress-bar-corner-radius);
    background: var(--spectrum-meter-track-color);
    overflow: hidden;
}

.fill {
    block-size: var(--mod-meter-thickness, var(--spectrum-meter-thickness));
    background: var(--spectrum-meter-fill-color);
    border: none;
    transition: width 1s;
}

:host([indeterminate]) .fill {
    inline-size: var(--spectrum-meter-fill-size-indeterminate);
    animation-timing-function: var(--spectrum-meter-animation-ease-in-out-indeterminate);
    will-change: transform;
    animation-name: indeterminate-loop-ltr;
    animation-duration: var(--spectrum-meter-animation-duration-indeterminate);
    animation-iteration-count: infinite;
    position: relative;
}

:host([indeterminate]) .fill:dir(rtl),
:host([dir='rtl'][indeterminate]) .fill {
    animation-name: indeterminate-loop-rtl;
}

:host([side-label]) {
    flex-flow: row;
    justify-content: space-between;
    display: inline-flex;
}

:host([side-label]) .track {
    flex: 1 1 var(--spectrum-meter-size-default);
}

:host([side-label]) .label {
    flex-grow: 0;
    margin-block-end: 0;
    margin-inline-end: var(--spectrum-meter-spacing-label-to-text);
}

:host([side-label]) .percentage {
    text-align: end;
    order: 3;
    margin-block-end: 0;
    margin-inline-start: var(--spectrum-meter-spacing-label-to-text);
}

:host([static-color='white']) .fill {
    background: var(--mod-meter-fill-color-white, var(--system-progress-bar-fill-color-white));
}

:host([static-color='white']) .fill,
:host([static-color='white']) .label,
:host([static-color='white']) .percentage {
    color: var(--mod-meter-label-and-value-white, var(--system-progress-bar-label-and-value-white));
}

:host([static-color='white']) .track {
    background: var(--system-progress-bar-track-color-white);
}

.fill {
    transform-origin: left;
}

:host([dir='rtl']) .fill {
    transform-origin: right;
}

@keyframes indeterminate-loop-ltr {
    0% {
        transform: translate(calc(var(--spectrum-meter-fill-size-indeterminate) * -1));
    }

    100% {
        transform: translate(var(--spectrum-meter-size-default));
    }
}

@keyframes indeterminate-loop-rtl {
    0% {
        transform: translate(var(--mod-meter-size-default, var(--spectrum-meter-fill-size-indeterminate)));
    }

    100% {
        transform: translate(calc(var(--spectrum-meter-size-default) * -1));
    }
}

@media (forced-colors: active) {
    .track {
        --highcontrast-meter-fill-color: ButtonText;
        --highcontrast-meter-track-color: ButtonFace;

        forced-color-adjust: none;
        border: 1px solid ButtonText;
    }
}
