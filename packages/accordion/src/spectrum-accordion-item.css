/*
Copyright 2023 Adobe. All rights reserved.
This file is licensed to you under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License. You may obtain a copy
of the License at http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software distributed under
the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS
OF ANY KIND, either express or implied. See the License for the specific language
governing permissions and limitations under the License.
*/

/* THIS FILE IS MACHINE GENERATED. DO NOT EDIT */
:host {
    margin: 0;
    min-block-size: var(
        --mod-accordion-item-height,
        var(--spectrum-accordion-item-height)
    );
    min-inline-size: var(
        --mod-accordion-item-width,
        var(--spectrum-accordion-item-width)
    );
    position: relative;
    z-index: inherit;
}
:host(:first-child) {
    border-block-start: 1px solid #0000;
    border-color: var(
        --mod-accordion-divider-color,
        var(--spectrum-accordion-divider-color)
    );
    border-width: var(
        --mod-accordion-divider-thickness,
        var(--spectrum-divider-thickness-small)
    );
}
:host {
    border-block-end: 1px solid #0000;
    border-color: var(
        --mod-accordion-divider-color,
        var(--spectrum-accordion-divider-color)
    );
    border-width: var(
        --mod-accordion-divider-thickness,
        var(--spectrum-divider-thickness-small)
    );
}
#heading {
    box-sizing: border-box;
    margin: 0;
    position: relative;
}
.iconContainer {
    align-items: center;
    block-size: var(
        --mod-accordion-disclosure-indicator-height,
        var(--spectrum-accordion-disclosure-indicator-height)
    );
    color: var(
        --mod-accordion-item-header-color-default,
        var(--spectrum-accordion-item-header-color-default)
    );
    display: flex;
    inline-size: var(
        --mod-accordion-disclosure-indicator-height,
        var(--spectrum-accordion-disclosure-indicator-height)
    );
    inset-block-start: max(
        0px,
        calc(
            (
                    var(
                            --mod-accordion-min-block-size,
                            var(--spectrum-accordion-min-block-size)
                        ) -
                        var(
                            --mod-accordion-disclosure-indicator-height,
                            var(
                                --spectrum-accordion-disclosure-indicator-height
                            )
                        )
                ) / 2
        )
    );
    justify-content: center;
    padding-inline-start: var(
        --mod-accordion-edge-to-disclosure-indicator-space,
        var(--spectrum-accordion-edge-to-disclosure-indicator-space)
    );
    position: absolute;
}
:host([dir='rtl']) .iconContainer {
    transform: scaleX(-1);
}
#content {
    color: var(
        --mod-accordion-item-content-color,
        var(--spectrum-accordion-item-content-color)
    );
    display: none;
    font-family: var(
        --mod-accordion-item-content-font,
        var(--spectrum-accordion-item-content-font)
    );
    font-size: var(
        --mod-accordion-item-content-font-size,
        var(--spectrum-accordion-item-content-font-size)
    );
    font-style: var(
        --mod-accordion-item-content-font-style,
        var(--spectrum-accordion-item-content-font-style)
    );
    font-weight: var(
        --mod-accordion-item-content-font-weight,
        var(--spectrum-accordion-item-content-font-weight)
    );
    line-height: var(
        --mod-accordion-item-content-line-height,
        var(--spectrum-accordion-item-content-line-height)
    );
    padding-block: var(
            --mod-accordion-item-content-area-top-to-content,
            var(--spectrum-accordion-item-content-area-top-to-content)
        )
        var(
            --mod-accordion-item-content-area-bottom-to-content,
            var(--spectrum-accordion-item-content-area-bottom-to-content)
        );
    padding-inline: var(
            --mod-accordion-component-edge-to-text,
            var(--spectrum-accordion-component-edge-to-text)
        )
        var(
            --mod-accordion-component-edge-to-text,
            var(--spectrum-accordion-component-edge-to-text)
        );
}
#header {
    align-items: center;
    appearance: none;
    border: 0;
    box-sizing: border-box;
    cursor: pointer;
    display: flex;
    font-family: var(
        --mod-accordion-item-header-font,
        var(--spectrum-accordion-item-header-font)
    );
    font-size: var(
        --mod-accordion-item-header-font-size,
        var(--spectrum-accordion-item-header-font-size)
    );
    font-style: var(
        --mod-accordion-item-header-font-style,
        var(--spectrum-accordion-item-header-font-style)
    );
    font-weight: var(
        --mod-accordion-item-header-font-weight,
        var(--spectrum-accordion-item-header-font-weight)
    );
    inline-size: 100%;
    justify-content: flex-start;
    line-height: var(
        --mod-accordion-item-header-line-height,
        var(--spectrum-accordion-item-header-line-height)
    );
    min-block-size: var(
        --mod-accordion-min-block-size,
        var(--spectrum-accordion-min-block-size)
    );
    padding-block: var(
            --mod-accordion-item-header-top-to-text-space,
            var(--spectrum-accordion-item-header-top-to-text-space)
        )
        var(
            --mod-accordion-item-header-bottom-to-text-space,
            var(--spectrum-accordion-item-header-bottom-to-text-space)
        );
    padding-inline-end: var(
        --mod-accordion-edge-to-text-space,
        var(--spectrum-accordion-edge-to-text-space)
    );
    padding-inline-start: calc(
        var(
                --mod-accordion-disclosure-indicator-to-text-space,
                var(--spectrum-accordion-disclosure-indicator-to-text-space)
            ) +
            var(
                --mod-accordion-disclosure-indicator-height,
                var(--spectrum-accordion-disclosure-indicator-height)
            )
    );
    position: relative;
    text-align: start;
    text-overflow: ellipsis;
}
#header:focus {
    outline: none;
}
#header:focus:after {
    content: '';
    inset-inline-start: 0;
    position: absolute;
}
#header {
    background-color: var(
        --mod-accordion-background-color-default,
        var(--spectrum-accordion-background-color-default)
    );
    color: var(
        --mod-accordion-item-header-color-default,
        var(--spectrum-accordion-item-header-color-default)
    );
}
#header.focus-visible {
    background-color: var(
        --mod-accordion-background-color-key-focus,
        var(--spectrum-accordion-background-color-key-focus)
    );
    border-radius: var(
        --mod-accordion-corner-radius,
        var(--spectrum-accordion-corner-radius)
    );
    color: var(
        --mod-accordion-item-header-color-key-focus,
        var(--spectrum-accordion-item-header-color-key-focus)
    );
    outline: var(
            --mod-accordion-focus-indicator-thickness,
            var(--spectrum-accordion-focus-indicator-thickness)
        )
        solid
        var(
            --mod-accordion-focus-indicator-color,
            var(--spectrum-accordion-focus-indicator-color)
        );
    outline-offset: calc(
        var(
                --mod-accordion-focus-indicator-gap,
                var(--spectrum-accordion-focus-indicator-gap)
            ) * -1
    );
}
#header:focus-visible {
    background-color: var(
        --mod-accordion-background-color-key-focus,
        var(--spectrum-accordion-background-color-key-focus)
    );
    border-radius: var(
        --mod-accordion-corner-radius,
        var(--spectrum-accordion-corner-radius)
    );
    color: var(
        --mod-accordion-item-header-color-key-focus,
        var(--spectrum-accordion-item-header-color-key-focus)
    );
    outline: var(
            --mod-accordion-focus-indicator-thickness,
            var(--spectrum-accordion-focus-indicator-thickness)
        )
        solid
        var(
            --mod-accordion-focus-indicator-color,
            var(--spectrum-accordion-focus-indicator-color)
        );
    outline-offset: calc(
        var(
                --mod-accordion-focus-indicator-gap,
                var(--spectrum-accordion-focus-indicator-gap)
            ) * -1
    );
}
#header:active {
    background-color: var(
        --mod-accordion-background-color-down,
        var(--spectrum-accordion-background-color-down)
    );
    color: var(
        --mod-accordion-item-header-color-down,
        var(--spectrum-accordion-item-header-color-down)
    );
}
:host([disabled]) #header,
:host([disabled]) #header.focus-visible {
    background-color: #0000;
    color: var(
        --mod-accordion-item-header-disabled-color,
        var(--spectrum-accordion-item-header-disabled-color)
    );
}
:host([disabled]) #header,
:host([disabled]) #header:focus-visible {
    background-color: #0000;
    color: var(
        --mod-accordion-item-header-disabled-color,
        var(--spectrum-accordion-item-header-disabled-color)
    );
}
@media (hover: hover) {
    #header:hover {
        background-color: var(
            --mod-accordion-background-color-hover,
            var(--spectrum-accordion-background-color-hover)
        );
        color: var(
            --mod-accordion-item-header-color-hover,
            var(--spectrum-accordion-item-header-color-hover)
        );
    }
    #header:hover + .iconContainer {
        color: var(
            --mod-accordion-item-header-color-hover,
            var(--spectrum-accordion-item-header-color-hover)
        );
    }
    :host([open]) #header:hover {
        background-color: var(
            --mod-accordion-background-color-hover,
            var(--spectrum-accordion-background-color-hover)
        );
    }
    :host([disabled]) #header:hover {
        background-color: #0000;
        color: var(
            --mod-accordion-item-header-disabled-color,
            var(--spectrum-accordion-item-header-disabled-color)
        );
    }
}
:host([disabled]) #header + .iconContainer {
    color: var(
        --mod-accordion-item-header-disabled-color,
        var(--spectrum-accordion-item-header-disabled-color)
    );
}
:host([disabled]) #content {
    color: var(
        --mod-accordion-item-content-disabled-color,
        var(--spectrum-accordion-item-content-disabled-color)
    );
}
@media (forced-colors: active) {
    #header:after {
        content: '';
        forced-color-adjust: none;
        inset-inline-start: 0;
        position: absolute;
    }
}
:host([open]) > #heading > .iconContainer > .indicator,
:host([open]) > .iconContainer > .indicator {
    transform: var(--spectrum-logical-rotation) rotate(90deg);
}
:host([open]) > #content {
    display: block;
}
:host([disabled]) #header {
    cursor: default;
}
