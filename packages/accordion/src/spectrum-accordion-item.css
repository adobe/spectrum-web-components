/*
Copyright 2023 Adobe. All rights reserved.
This file is licensed to you under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License. You may obtain a copy
of the License at http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software distributed under
the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS
OF ANY KIND, either express or implied. See the License for the specific language
governing permissions and limitations under the License.
*/

/* THIS FILE IS MACHINE GENERATED. DO NOT EDIT */
:host([dir='ltr']) .indicator {
    left: var(
        --spectrum-accordion-item-padding-x,
        var(--spectrum-global-dimension-size-225)
    );
}
:host([dir='rtl']) .indicator {
    right: var(
        --spectrum-accordion-item-padding-x,
        var(--spectrum-global-dimension-size-225)
    );
    transform: matrix(-1, 0, 0, 1, 0, 0);
}
.indicator {
    display: block;
    position: absolute;
    top: calc(
        50% -
            var(
                --spectrum-accordion-icon-height,
                var(--spectrum-global-dimension-size-125)
            ) / 2
    );
    transition: transform ease var(--spectrum-accordion-animation-duration);
}
:host {
    border-bottom: var(
            --spectrum-accordion-item-border-size,
            var(--spectrum-alias-border-size-thin)
        )
        solid transparent;
    display: list-item;
    margin: 0;
    position: relative;
    z-index: inherit;
}
:host(:first-of-type) {
    border-top: var(
            --spectrum-accordion-item-border-size,
            var(--spectrum-alias-border-size-thin)
        )
        solid transparent;
}
#heading {
    box-sizing: border-box;
    margin: 0;
    position: relative;
}
:host([dir='ltr']) #header {
    padding-left: calc(
        var(
                --spectrum-accordion-item-padding-x,
                var(--spectrum-global-dimension-size-225)
            ) +
            var(
                --spectrum-accordion-icon-height,
                var(--spectrum-global-dimension-size-125)
            ) +
            var(
                --spectrum-accordion-icon-gap,
                var(--spectrum-global-dimension-size-100)
            ) +
            var(
                --spectrum-accordion-item-border-left-size,
                var(--spectrum-alias-border-size-thick)
            )
    );
}
:host([dir='rtl']) #header {
    padding-right: calc(
        var(
                --spectrum-accordion-item-padding-x,
                var(--spectrum-global-dimension-size-225)
            ) +
            var(
                --spectrum-accordion-icon-height,
                var(--spectrum-global-dimension-size-125)
            ) +
            var(
                --spectrum-accordion-icon-gap,
                var(--spectrum-global-dimension-size-100)
            ) +
            var(
                --spectrum-accordion-item-border-left-size,
                var(--spectrum-alias-border-size-thick)
            )
    );
}
:host([dir='ltr']) #header {
    padding-right: var(
        --spectrum-accordion-item-padding-x,
        var(--spectrum-global-dimension-size-225)
    );
}
:host([dir='rtl']) #header {
    padding-left: var(
        --spectrum-accordion-item-padding-x,
        var(--spectrum-global-dimension-size-225)
    );
}
:host([dir='ltr']) #header {
    text-align: left;
}
:host([dir='rtl']) #header {
    text-align: right;
}
#header {
    align-items: center;
    appearance: none;
    background-color: inherit;
    border: 0;
    box-sizing: border-box;
    cursor: pointer;
    display: flex;
    font-family: inherit;
    font-size: var(
        --spectrum-accordion-item-title-text-size,
        var(--spectrum-global-dimension-font-size-50)
    );
    font-weight: 500;
    justify-content: flex-start;
    letter-spacing: calc(
        var(
                --spectrum-accordion-item-title-tracking,
                var(--spectrum-global-font-letter-spacing-medium)
            ) / 100
    );
    line-height: var(
        --spectrum-accordion-text-line-height,
        var(--spectrum-alias-component-text-line-height)
    );
    margin: 0;
    min-height: calc(
        100% -
            var(
                --spectrum-accordion-item-border-size,
                var(--spectrum-alias-border-size-thin)
            )
    );
    padding-bottom: var(--spectrum-accordion-item-title-padding-y);
    padding-top: var(--spectrum-accordion-item-title-padding-y);
    position: relative;
    text-overflow: ellipsis;
    text-transform: uppercase;
    width: 100%;
}
#header:focus {
    outline: none;
}
:host([dir='ltr']) #header:focus:after {
    left: 0;
}
:host([dir='rtl']) #header:focus:after {
    right: 0;
}
#header:focus:after {
    bottom: calc(
        var(
                --spectrum-accordion-item-border-size,
                var(--spectrum-alias-border-size-thin)
            ) * -1
    );
    content: '';
    position: absolute;
    top: calc(
        var(
                --spectrum-accordion-item-border-size,
                var(--spectrum-alias-border-size-thin)
            ) * -1
    );
    width: var(
        --spectrum-accordion-item-border-left-size,
        var(--spectrum-alias-border-size-thick)
    );
}
#content {
    display: none;
    padding-bottom: var(
        --spectrum-accordion-item-content-padding,
        var(--spectrum-global-dimension-size-200)
    );
    padding-left: var(
        --spectrum-accordion-item-content-padding,
        var(--spectrum-global-dimension-size-200)
    );
    padding-right: var(
        --spectrum-accordion-item-content-padding,
        var(--spectrum-global-dimension-size-200)
    );
    padding-top: 0;
}
:host([dir='ltr'][open]) > #heading > .indicator {
    transform: rotate(90deg);
}
:host([dir='rtl'][open]) > #heading > .indicator {
    transform: matrix(-1, 0, 0, 1, 0, 0) rotate(90deg);
}
:host([dir='ltr'][open]) > .indicator {
    transform: rotate(90deg);
}
:host([dir='rtl'][open]) > .indicator {
    transform: matrix(-1, 0, 0, 1, 0, 0) rotate(90deg);
}
:host([open]) > #header:after {
    height: calc(
        100% -
            var(
                --spectrum-accordion-item-border-size,
                var(--spectrum-alias-border-size-thin)
            )
    );
}
:host([open]) > #content {
    display: block;
}
:host([disabled]) #header {
    cursor: default;
}
:host {
    border-color: var(
        --spectrum-accordion-border-color,
        var(--spectrum-global-color-gray-300)
    );
}
.indicator {
    color: var(
        --spectrum-accordion-icon-color,
        var(--spectrum-global-color-gray-600)
    );
}
#header {
    color: var(
        --spectrum-accordion-text-color,
        var(--spectrum-global-color-gray-700)
    );
}
#header:hover {
    background-color: var(
        --spectrum-accordion-item-background-color-hover,
        var(--spectrum-global-color-gray-200)
    );
    color: var(
        --spectrum-accordion-text-color-hover,
        var(--spectrum-global-color-gray-900)
    );
}
#header:hover + .indicator {
    color: var(
        --spectrum-accordion-icon-color-hover,
        var(--spectrum-alias-icon-color-hover)
    );
}
#header.focus-visible:after {
    background-color: var(
        --spectrum-accordion-item-border-left-color-key-focus,
        var(--spectrum-alias-border-color-key-focus)
    );
}
#header:focus-visible:after {
    background-color: var(
        --spectrum-accordion-item-border-left-color-key-focus,
        var(--spectrum-alias-border-color-key-focus)
    );
}
:host([open]) #header:hover {
    background-color: #0000;
}
:host([disabled]) #header,
:host([disabled]) #header.focus-visible,
:host([disabled]) #header:hover {
    background-color: #0000;
    color: var(
        --spectrum-accordion-text-color-disabled,
        var(--spectrum-global-color-gray-500)
    );
}
:host([disabled]) #header,
:host([disabled]) #header:focus-visible,
:host([disabled]) #header:hover {
    background-color: #0000;
    color: var(
        --spectrum-accordion-text-color-disabled,
        var(--spectrum-global-color-gray-500)
    );
}
:host([disabled]) #header + .indicator {
    color: var(
        --spectrum-accordion-icon-color-disabled,
        var(--spectrum-alias-icon-color-disabled)
    );
}
@media (forced-colors: active) {
    #header.focus-visible {
        outline: 3px solid CanvasText;
    }
    #header:focus-visible {
        outline: 3px solid CanvasText;
    }
}
