{"version":3,"file":"events.js","sourceRoot":"","sources":["events.ts"],"names":[],"mappings":"AAAA;;;;;;;;;;EAUE;AAuCF;;;;;;;;GAQG;AACH,MAAM,UAAU,iBAAiB,CAI/B,IAAO,EAAE,OAAU;IACjB,OAAO,IAAI,WAAW,CAAI,IAAI,EAAE,OAAO,CAAC,CAAC;AAC7C,CAAC","sourcesContent":["/*\nCopyright 2019 Adobe. All rights reserved.\nThis file is licensed to you under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License. You may obtain a copy\nof the License at http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software distributed under\nthe License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\nOF ANY KIND, either express or implied. See the License for the specific language\ngoverning permissions and limitations under the License.\n*/\n\n/**\n * Omit the given keys from an object type.\n */\n/* eslint-disable-next-line @typescript-eslint/no-explicit-any */\nexport type Omit<T, K extends keyof T> = T extends any\n    ? Pick<T, Exclude<keyof T, K>>\n    : never;\n\n/**\n * Extracts a CustomEvent payload type from a CustomEvent type.\n */\ntype UnpackCustomEventPayload<T> = T extends CustomEvent<infer U> ? U : never;\n\n/**\n * Extracts the CustomEvent detail type from a CustomEvent type using the name of the event as the key\n * and the DocumentEventMap.\n * E.g. UnpackCustomEventDetail<'my-cool-event'>\n */\nexport type UnpackCustomEventDetail<\n    T extends keyof DocumentEventMap\n> = UnpackCustomEventPayload<DocumentEventMap[T]>;\n\n/**\n * A strongly typed CustomEvent based on the event name using the global DocumentEventMap.\n * E.g. StrictCustomEvent<'my-cool-event'>\n */\nexport type StrictCustomEvent<T extends keyof DocumentEventMap> = CustomEvent<\n    UnpackCustomEventPayload<DocumentEventMap[T]>\n>;\n\n/**\n * A helper type to create a CustomEventInit type from a event detail type.\n */\ntype StrictCustomEventInit<T> = T extends void\n    ? CustomEventInit<T>\n    : Omit<CustomEventInit<T>, 'detail'> & { detail: T };\n\n/**\n * Creates a strictly typed CustomEvent<T> using the DocumentEventMap.\n *\n * To make use of this helper ensure that your events are added to the DocumentEventMap. The\n * easiest way to do this is to include them in the GlobalEventMap\n *\n * @param name The name of the CustomEvent to create\n * @param payload The arguments for the CustomEvent constructor\n */\nexport function strictCustomEvent<\n    T extends keyof DocumentEventMap,\n    D extends UnpackCustomEventPayload<DocumentEventMap[T]>,\n    C extends StrictCustomEventInit<D>\n>(name: T, payload: C): CustomEvent<D> {\n    return new CustomEvent<D>(name, payload);\n}\n"]}