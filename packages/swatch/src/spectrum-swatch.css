/*
Copyright 2023 Adobe. All rights reserved.
This file is licensed to you under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License. You may obtain a copy
of the License at http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software distributed under
the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS
OF ANY KIND, either express or implied. See the License for the specific language
governing permissions and limitations under the License.
*/

/* THIS FILE IS MACHINE GENERATED. DO NOT EDIT */
:host {
    --spectrum-swatch-focus-indicator-border-radius: 8px;
    --spectrum-swatch-icon-border-color: #00000082;
    --spectrum-swatch-size: var(--spectrum-swatch-size-small);
    --spectrum-swatch-border-radius: var(--spectrum-corner-radius-100);
    --spectrum-swatch-border-thickness: var(--spectrum-border-width-100);
    --spectrum-swatch-border-thickness-selected: var(
        --spectrum-border-width-200
    );
    --spectrum-swatch-disabled-icon-size: var(--spectrum-workflow-icon-size-75);
    --spectrum-swatch-slash-thickness: var(
        --spectrum-swatch-slash-thickness-small
    );
    --spectrum-swatch-focus-indicator-thickness: var(
        --spectrum-focus-indicator-thickness
    );
    --spectrum-swatch-focus-indicator-gap: var(--spectrum-focus-indicator-gap);
    --spectrum-swatch-border-color-selected: var(--spectrum-gray-900);
    --spectrum-swatch-inner-border-color-selected: var(--spectrum-gray-50);
    --spectrum-swatch-disabled-icon-border-color: var(
        --spectrum-swatch-disabled-icon-border-color
    );
    --spectrum-swatch-disabled-icon-color: var(--spectrum-white);
    --spectrum-swatch-dash-icon-color: var(--spectrum-gray-800);
    --spectrum-swatch-slash-icon-color: var(--spectrum-red-900);
    --spectrum-swatch-focus-indicator-color: var(
        --spectrum-focus-indicator-color
    );
}
:host([size='xs']) {
    --spectrum-swatch-size: var(--spectrum-swatch-size-extra-small);
    --spectrum-swatch-disabled-icon-size: var(--spectrum-workflow-icon-size-50);
    --spectrum-swatch-slash-thickness: var(
        --spectrum-swatch-slash-thickness-extra-small
    );
}
:host([size='s']) {
    --spectrum-swatch-size: var(--spectrum-swatch-size-small);
    --spectrum-swatch-disabled-icon-size: var(--spectrum-workflow-icon-size-75);
    --spectrum-swatch-slash-thickness: var(
        --spectrum-swatch-slash-thickness-small
    );
}
:host {
    --spectrum-swatch-size: var(--spectrum-swatch-size-medium);
    --spectrum-swatch-disabled-icon-size: var(
        --spectrum-workflow-icon-size-100
    );
    --spectrum-swatch-slash-thickness: var(
        --spectrum-swatch-slash-thickness-medium
    );
}
:host([size='l']) {
    --spectrum-swatch-size: var(--spectrum-swatch-size-large);
    --spectrum-swatch-disabled-icon-size: var(
        --spectrum-workflow-icon-size-200
    );
    --spectrum-swatch-slash-thickness: var(
        --spectrum-swatch-slash-thickness-large
    );
}
@media (forced-colors: active) {
    :host {
        --highcontrast-swatch-disabled-icon-color: GrayText;
        --highcontrast-swatch-focus-indicator-color: ButtonText;
        --highcontrast-swatch-background-color-selected: Background;
        --highcontrast-swatch-border-color-selected: Highlight;
        --highcontrast-swatch-border-color: ButtonText;
        --highcontrast-swatch-fill-foreground-color: ButtonText;
    }
    .fill {
        forced-color-adjust: none;
    }
    :host([disabled]) {
        --highcontrast-swatch-border-color: GrayText;
    }
}
:host {
    align-items: center;
    block-size: var(--mod-swatch-size, var(--spectrum-swatch-size));
    display: flex;
    inline-size: var(--mod-swatch-size, var(--spectrum-swatch-size));
    justify-content: center;
    outline: none;
    position: relative;
    -webkit-user-select: none;
    user-select: none;
}
.disabledIcon {
    block-size: var(
        --mod-swatch-disabled-icon-size,
        var(--spectrum-swatch-disabled-icon-size)
    );
    inline-size: var(
        --mod-swatch-disabled-icon-size,
        var(--spectrum-swatch-disabled-icon-size)
    );
}
:host,
:host:before {
    border-radius: var(
        --mod-swatch-border-radius,
        var(--spectrum-swatch-border-radius)
    );
}
:host([selected]) {
    background-color: var(
        --highcontrast-swatch-background-color-selected,
        var(
            --mod-swatch-inner-border-color-selected,
            var(--spectrum-swatch-inner-border-color-selected)
        )
    );
}
:host([selected]) .fill {
    border-radius: 0;
    clip-path: polygon(
        calc(
                var(
                        --mod-swatch-border-thickness-selected,
                        var(--spectrum-swatch-border-thickness-selected)
                    ) * 2
            )
            calc(
                var(
                        --mod-swatch-border-thickness-selected,
                        var(--spectrum-swatch-border-thickness-selected)
                    ) * 2
            ),
        calc(
                100% -
                    var(
                        --mod-swatch-border-thickness-selected,
                        var(--spectrum-swatch-border-thickness-selected)
                    ) * 2
            )
            calc(
                var(
                        --mod-swatch-border-thickness-selected,
                        var(--spectrum-swatch-border-thickness-selected)
                    ) * 2
            ),
        calc(
                100% -
                    var(
                        --mod-swatch-border-thickness-selected,
                        var(--spectrum-swatch-border-thickness-selected)
                    ) * 2
            )
            calc(
                100% -
                    var(
                        --mod-swatch-border-thickness-selected,
                        var(--spectrum-swatch-border-thickness-selected)
                    ) * 2
            ),
        calc(
                var(
                        --mod-swatch-border-thickness-selected,
                        var(--spectrum-swatch-border-thickness-selected)
                    ) * 2
            )
            calc(
                100% -
                    var(
                        --mod-swatch-border-thickness-selected,
                        var(--spectrum-swatch-border-thickness-selected)
                    ) * 2
            )
    );
}
:host([selected]) .fill:before {
    border-radius: 0;
    box-shadow: none;
}
:host([selected]):before {
    opacity: 1;
}
:host .is-image .fill:before {
    background-color: #0000;
}
:host([mixed-value]) .fill {
    background: var(--spectrum-picked-color, transparent);
}
:host([mixed-value]) .mixedValueIcon {
    color: var(--spectrum-swatch-dash-icon-color);
    display: block;
}
:host([nothing]) .fill {
    background-color: var(--spectrum-picked-color, transparent);
    background-image: none;
}
:host([nothing]) .fill:after {
    background: var(
        --highcontrast-swatch-fill-foreground-color,
        var(
            --mod-swatch-slash-icon-color,
            var(--spectrum-swatch-slash-icon-color)
        )
    );
    block-size: 200%;
    content: '';
    inline-size: var(
        --mod-swatch-slash-thickness,
        var(--spectrum-swatch-slash-thickness)
    );
    position: absolute;
    transform: rotate(-45deg);
}
:host([nothing][shape='rectangle']) .fill:after {
    transform: rotate(-25deg);
}
:host([disabled]) .disabledIcon {
    display: block;
}
:host:before {
    border-color: var(
        --highcontrast-swatch-border-color-selected,
        var(
            --mod-swatch-border-color-selected,
            var(--spectrum-swatch-border-color-selected)
        )
    );
    border-style: solid;
    border-width: var(
        --mod-swatch-border-thickness-selected,
        var(--spectrum-swatch-border-thickness-selected)
    );
    content: '';
    inset: 0;
    opacity: 0;
    pointer-events: none;
    position: absolute;
}
:host:after {
    border-color: var(
        --highcontrast-swatch-focus-indicator-color,
        var(
            --mod-swatch-focus-indicator-color,
            var(--spectrum-swatch-focus-indicator-color)
        )
    );
    border-radius: var(
        --mod-swatch-focus-indicator-border-radius,
        var(--spectrum-swatch-focus-indicator-border-radius)
    );
    border-style: solid;
    border-width: var(
        --mod-swatch-focus-indicator-thickness,
        var(--spectrum-swatch-focus-indicator-thickness)
    );
    content: '';
    inset: calc(
        var(
                --mod-swatch-focus-indicator-gap,
                var(--spectrum-swatch-focus-indicator-gap)
            ) * -2
    );
    opacity: 0;
    position: absolute;
    transition: opacity
        var(
            --mod-animation-duration-100,
            var(--spectrum-animation-duration-100)
        )
        ease-in-out;
}
:host(.focus-visible):after {
    opacity: 1;
}
:host(:focus-visible):after {
    opacity: 1;
}
.fill {
    align-items: center;
    block-size: 100%;
    border-radius: var(
        --mod-swatch-border-radius,
        var(--spectrum-swatch-border-radius)
    );
    box-sizing: border-box;
    display: flex;
    inline-size: 100%;
    justify-content: center;
    overflow: hidden;
    position: relative;
}
.fill:before {
    background-color: var(--spectrum-picked-color, transparent);
    border-radius: var(
        --mod-swatch-border-radius,
        var(--spectrum-swatch-border-radius)
    );
    box-shadow: inset 0 0 0
        var(
            --mod-swatch-border-thickness,
            var(--spectrum-swatch-border-thickness)
        )
        var(
            --highcontrast-swatch-border-color,
            var(--mod-swatch-border-color, var(--spectrum-swatch-border-color))
        );
    content: '';
    inset: 0;
    position: absolute;
    z-index: 0;
}
:host([border='none']) .fill:before {
    background-color: var(--spectrum-picked-color, transparent);
    box-shadow: none;
}
.mixedValueIcon {
    color: var(--spectrum-picked-color, transparent);
}
.disabledIcon,
.mixedValueIcon {
    display: none;
    pointer-events: none;
}
.disabledIcon {
    color: var(
        --highcontrast-swatch-disabled-icon-color,
        var(
            --mod-swatch-disabled-icon-color,
            var(--spectrum-swatch-disabled-icon-color)
        )
    );
    z-index: 2;
    stroke: var(
        --highcontrast-swatch-disabled-icon-color,
        var(
            --mod-swatch-disabled-icon-color,
            var(--spectrum-swatch-disabled-icon-color)
        )
    );
    position: relative;
}
.disabledIcon path:first-child {
    fill: var(
        --highcontrast-swatch-disabled-icon-color,
        var(
            --mod-swatch-disabled-icon-color,
            var(--spectrum-swatch-disabled-icon-color)
        )
    );
}
.disabledIcon path:last-child {
    fill: var(
        --mod-swatch-icon-border-color,
        var(--spectrum-swatch-icon-border-color)
    );
}
:host([shape='rectangle']) {
    inline-size: calc(var(--mod-swatch-size, var(--spectrum-swatch-size)) * 2);
}
:host([rounding='none']),
:host([rounding='none']) .fill,
:host([rounding='none']) .fill:before,
:host([rounding='none']):after,
:host([rounding='none']):before,
:host([rounding='none'][selected]) .fill,
:host([rounding='none'][selected]) .fill:before {
    border-radius: 0;
}
:host([rounding='full']:not([shape='rectangle'])),
:host([rounding='full']:not([shape='rectangle'])) .fill,
:host([rounding='full']:not([shape='rectangle'])) .fill:before,
:host([rounding='full']:not([shape='rectangle'])):after,
:host([rounding='full']:not([shape='rectangle'])):before,
:host([rounding='full']:not([shape='rectangle'])[selected]) .fill,
:host([rounding='full']:not([shape='rectangle'])[selected]) .fill:before {
    border-radius: 100%;
}
:host([rounding='full']:not([shape='rectangle'])[selected]) .fill {
    clip-path: circle(
        calc(
                50% -
                    var(
                        --mod-swatch-border-thickness-selected,
                        var(--spectrum-swatch-border-thickness-selected)
                    ) * 2
            )
            at 50% 50%
    );
}
::slotted([slot='image']) {
    block-size: 100%;
    inline-size: 100%;
    object-fit: contain;
    transition: width
            var(
                --mod-animation-duration-100,
                var(--spectrum-animation-duration-100)
            )
            ease-in-out,
        height
            var(
                --mod-animation-duration-100,
                var(--spectrum-animation-duration-100)
            )
            ease-in-out;
}
