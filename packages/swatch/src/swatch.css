/*!
 * Copyright 2025 Adobe. All rights reserved.
 * This file is licensed to you under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License. You may obtain a copy
 * of the License at http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under
 * the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS
 * OF ANY KIND, either express or implied. See the License for the specific language
 * governing permissions and limitations under the License.
 */

/* Base variables */
:host {
    inline-size: var(--spectrum-swatch-size);
    block-size: var(--spectrum-swatch-size);
    user-select: none;
    outline: none;
    justify-content: center;
    align-items: center;
    display: flex;
    position: relative;
}

.disabledIcon {
    inline-size: var(--spectrum-swatch-disabled-icon-size);
    block-size: var(--spectrum-swatch-disabled-icon-size);

    z-index: 1;
    pointer-events: none;
    color: var(--highcontrast-swatch-disabled-icon-color, var(--spectrum-swatch-disabled-icon-color));
    stroke: var(--highcontrast-swatch-disabled-icon-color, var(--spectrum-swatch-disabled-icon-color));
    display: none;
    position: relative;
}

:host,
:host::before {
    border-radius: var(--spectrum-swatch-border-radius);
}

:host([selected]) {
    background-color: var(--highcontrast-swatch-background-color-selected, var(--spectrum-swatch-inner-border-color-selected));

    border-color: Highlight;
}

:host([selected]) .fill {
    clip-path: polygon(
        calc(var(--spectrum-swatch-border-thickness-selected) * 2) calc(var(--spectrum-swatch-border-thickness-selected) * 2),
        calc(100% - var(--spectrum-swatch-border-thickness-selected) * 2) calc(var(--spectrum-swatch-border-thickness-selected) * 2),
        calc(100% - var(--spectrum-swatch-border-thickness-selected) * 2) calc(100% - var(--spectrum-swatch-border-thickness-selected) * 2),
        calc(var(--spectrum-swatch-border-thickness-selected) * 2) calc(100% - var(--spectrum-swatch-border-thickness-selected) * 2)
    );
    border-radius: 0;
}

:host([selected]) .fill::before {
    box-shadow: none;
    border-radius: 0;
}

:host([selected])::before {
    opacity: 1;
}

:host .is-image .fill::before {
    background-color: initial;
}

:host([mixed-value]) .fill {
    background: none;
    background: var(--spectrum-picked-color, transparent);
}

:host([mixed-value]) .mixedValueIcon {
    color: var(--spectrum-swatch-dash-icon-color);
    display: block;
}

:host([nothing]) .fill {
    background-color: initial;
    background-color: var(--spectrum-picked-color, transparent);
    background-image: none;
}

:host([nothing]) .fill::after {
    inline-size: var(--spectrum-swatch-slash-thickness);
    content: "";
    block-size: 200%;
    background: var(--highcontrast-swatch-fill-foreground-color, var(--spectrum-swatch-slash-icon-color));
    position: absolute;
    transform: rotate(-45deg);
}

:host([nothing][shape="rectangle"]) .fill::after {
    transform: rotate(-25deg);
}

:host([disabled]) .disabledIcon,
:host([disabled]) .disabledIcon {
    display: block;
}

:host::before {
    content: "";
    border-width: var(--spectrum-swatch-border-thickness-selected);
    border-style: solid;
    border-color: var(--highcontrast-swatch-border-color-selected, var(--spectrum-swatch-border-color-selected));
    opacity: 0;
    pointer-events: none;
    position: absolute;
    inset: 0;
}

:host::after {
    content: "";
    inset: calc(var(--spectrum-swatch-focus-indicator-gap) * -2);
    opacity: 0;
    border-width: var(--spectrum-swatch-focus-indicator-thickness);
    border-style: solid;
    border-color: var(--highcontrast-swatch-focus-indicator-color, var(--spectrum-swatch-focus-indicator-color));
    border-radius: var(--spectrum-swatch-focus-indicator-border-radius);
    transition: opacity var(--spectrum-animation-duration-100) ease-in-out;
    position: absolute;
}

:host(:focus-visible)::after {
    opacity: 1;
}

.fill {
    inline-size: 100%;
    block-size: 100%;
    box-sizing: border-box;
    border-radius: var(--spectrum-swatch-border-radius);
    justify-content: center;
    align-items: center;
    display: flex;
    position: relative;
    overflow: hidden;

    forced-color-adjust: none;
}

.fill::before {
    content: "";
    z-index: 0;
    box-shadow: inset 0 0 0 var(--spectrum-swatch-border-thickness) var(--highcontrast-swatch-border-color, var(--spectrum-swatch-border-color));
    border-radius: var(--spectrum-swatch-border-radius);
    position: absolute;
    inset: 0;
}

:host([border="none"]) .fill::before,
.fill::before {
    background-color: initial;
    background-color: var(--spectrum-picked-color, transparent);
}

:host([border="none"]) .fill::before {
    box-shadow: none;
}

:host([border="light"]) .fill::before {
    box-shadow: inset 0 0 0 var(--spectrum-swatch-border-thickness) var(--highcontrast-swatch-border-color-light, var(--spectrum-swatch-border-color-light));
}

.mixedValueIcon {
    pointer-events: none;
    color: #0000;
    color: var(--spectrum-picked-color, transparent);
    display: none;
}

.disabledIcon path:first-child {
    fill: var(--highcontrast-swatch-disabled-icon-color, var(--spectrum-swatch-disabled-icon-color));
}

.disabledIcon path:last-child {
    fill: var(--spectrum-swatch-icon-border-color);
}

:host([shape="rectangle"]) {
    inline-size: calc(var(--spectrum-swatch-size) * 2);
}

:host([rounding="none"]),
:host([rounding="none"]) .fill,
:host([rounding="none"]) .fill::before,
:host([rounding="none"][selected]) .fill,
:host([rounding="none"][selected]) .fill::before,
:host([rounding="none"])::after,
:host([rounding="none"])::before {
    border-radius: 0;
}

:host([rounding="full"][selected]:not([shape="rectangle"])) .fill,
:host([rounding="full"][selected]:not([shape="rectangle"])) .fill::before,
:host([rounding="full"]:not([shape="rectangle"])),
:host([rounding="full"]:not([shape="rectangle"])) .fill,
:host([rounding="full"]:not([shape="rectangle"])) .fill::before,
:host([rounding="full"]:not([shape="rectangle"]))::after,
:host([rounding="full"]:not([shape="rectangle"]))::before {
    border-radius: 100%;
}

:host([rounding="full"][selected]:not([shape="rectangle"])) .fill {
    clip-path: circle(calc(50% - var(--spectrum-swatch-border-thickness-selected) * 2) at 50% 50%);
}

::slotted([slot="image"]) {
    object-fit: contain;
    inline-size: 100%;
    block-size: 100%;
    transition:
        width var(--spectrum-animation-duration-100) ease-in-out,
        height var(--spectrum-animation-duration-100) ease-in-out;
}

/* base variables */
:host {
    /* layout */
    --spectrum-swatch-size: var(--spectrum-swatch-size-medium);
    --spectrum-swatch-disabled-icon-size: var(--spectrum-workflow-icon-size-100);
    --spectrum-swatch-slash-thickness: var(--spectrum-swatch-slash-thickness-medium);

    /* borders */
    --spectrum-swatch-border-radius: var(--spectrum-corner-radius-100);
    --spectrum-swatch-focus-indicator-border-radius: var(--spectrum-corner-radius-200);
    --spectrum-swatch-border-thickness: var(--spectrum-border-width-100);
    --spectrum-swatch-border-thickness-selected: var(--spectrum-border-width-200);
    --spectrum-swatch-focus-indicator-thickness: var(--spectrum-focus-indicator-thickness);
    --spectrum-swatch-focus-indicator-gap: var(--spectrum-focus-indicator-gap);

    /* colors */
    --spectrum-swatch-border-color-opacity: 0.51;
    --spectrum-swatch-border-color-light-opacity: 0.2;
    --spectrum-swatch-border-color: rgb(var(--spectrum-gray-1000-rgb), var(--spectrum-swatch-border-color-opacity));
    --spectrum-swatch-icon-border-color: rgb(var(--spectrum-black-rgb), var(--spectrum-swatch-border-color-opacity));
    --spectrum-swatch-border-color-light: rgb(var(--spectrum-black-rgb), var(--spectrum-swatch-border-color-light-opacity));
    --spectrum-swatch-border-color-selected: var(--spectrum-gray-900);
    --spectrum-swatch-focus-indicator-color: var(--spectrum-focus-indicator-color);
    --spectrum-swatch-background-color-disabled: var(--spectrum-disabled-background-color);
    --spectrum-swatch-icon-color-disabled: var(--spectrum-gray-25);
    --spectrum-swatch-icon-color-disabled-opacity: 1;

    /* base styles */
    display: inline-flex;
    position: relative;
    block-size: var(--spectrum-swatch-size);
    inline-size: var(--spectrum-swatch-size);
    border-radius: var(--spectrum-swatch-border-radius);
    border: var(--spectrum-swatch-border-thickness) solid;
    border-color: rgb(var(--spectrum-swatch-border-color) / var(--spectrum-swatch-border-color-opacity));
    box-sizing: border-box;
    cursor: pointer;
    outline: none;
}

/* size variants */
:host([size="s"]) {
}

:host([size="l"]) {
}

:host([size="xl"]) {
}

/* states */
:host([selected]) {
    border-width: var(--spectrum-swatch-border-thickness-selected);
    border-color: var(--spectrum-swatch-border-color-selected);
}

:host([disabled]) {
    cursor: default;
    background-color: var(--spectrum-swatch-background-color-disabled);
}

:host([disabled]) .icon {
    color: rgb(var(--spectrum-swatch-icon-color-disabled) / var(--spectrum-swatch-icon-color-disabled-opacity));

    color: Canvas;
}

:host([focused]) {
    border-color: var(--spectrum-swatch-focus-indicator-color);
}

:host([focused])::after {
    content: "";
    position: absolute;
    inset: calc(-1 * (var(--spectrum-swatch-focus-indicator-gap) + var(--spectrum-swatch-focus-indicator-thickness)));
    border-radius: var(--spectrum-swatch-focus-indicator-border-radius);
    border: var(--spectrum-swatch-focus-indicator-thickness) solid var(--spectrum-swatch-focus-indicator-color);

    border-color: ButtonText;
}

/* icon styles */
.icon {
    position: absolute;
    inset: 0;
    block-size: 100%;
    inline-size: 100%;
    display: flex;
    align-items: center;
    justify-content: center;
}

.icon svg {
    block-size: var(--spectrum-swatch-disabled-icon-size);
    inline-size: var(--spectrum-swatch-disabled-icon-size);
}

:host([disabled]),
:host([disabled]) {
    --highcontrast-swatch-border-color: GrayText;

    background-color: GrayText;
    border-color: GrayText;
}
