/*
Copyright 2020 Adobe. All rights reserved.
This file is licensed to you under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License. You may obtain a copy
of the License at http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software distributed under
the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS
OF ANY KIND, either express or implied. See the License for the specific language
governing permissions and limitations under the License.
*/

@import './spectrum-action-button.css';

:host {
    display: inline-flex;
    flex-direction: row;
}

:host:after {
    border-radius: var(
        --spectrum-actionbutton-after-border-radius,
        calc(
            var(--spectrum-actionbutton-quiet-textonly-border-radius) +
                var(--spectrum-actionbutton-focus-ring-gap)
        )
    );
}

:host([disabled]) {
    pointer-events: none;
    cursor: auto;
}

:host([dir]) {
    /* spectrum-css uses "-webkit-appearance: button" to workaround an
     * iOS and Safari issue. However, it results in incorrect styling
     * when applied in :host
     */
    -webkit-appearance: none; /* stylelint-disable-line */
}

::slotted([slot='icon']) {
    flex-shrink: 0;
}

#button {
    position: absolute;
    inset: 0;
}

#label {
    flex-grow: var(--spectrum-actionbutton-label-flex-grow);
    text-align: var(--spectrum-actionbutton-label-text-align);
}

:host([emphasized][selected]:not([disabled])) .hold-affordance,
:host([emphasized][quiet][selected]:not([disabled])) .hold-affordance {
    color: var(
        --spectrum-actionbutton-m-emphasized-texticon-icon-color-selected,
        var(--spectrum-alias-component-icon-color-emphasized-selected-default)
    );
}

:host([size='s']) {
    --spectrum-icon-tshirt-size-height: var(
        --spectrum-alias-workflow-icon-size-s
    );
    --spectrum-icon-tshirt-size-width: var(
        --spectrum-alias-workflow-icon-size-s
    );
    --spectrum-ui-icon-tshirt-size-height: var(
        --spectrum-alias-ui-icon-cornertriangle-size-75
    );
    --spectrum-ui-icon-tshirt-size-width: var(
        --spectrum-alias-ui-icon-cornertriangle-size-75
    );
}

:host([size='m']) {
    --spectrum-icon-tshirt-size-height: var(
        --spectrum-alias-workflow-icon-size-m
    );
    --spectrum-icon-tshirt-size-width: var(
        --spectrum-alias-workflow-icon-size-m
    );
    --spectrum-ui-icon-tshirt-size-height: var(
        --spectrum-alias-ui-icon-cornertriangle-size-100
    );
    --spectrum-ui-icon-tshirt-size-width: var(
        --spectrum-alias-ui-icon-cornertriangle-size-100
    );
}

:host([size='l']) {
    --spectrum-icon-tshirt-size-height: var(
        --spectrum-alias-workflow-icon-size-l
    );
    --spectrum-icon-tshirt-size-width: var(
        --spectrum-alias-workflow-icon-size-l
    );
    --spectrum-ui-icon-tshirt-size-height: var(
        --spectrum-alias-ui-icon-cornertriangle-size-200
    );
    --spectrum-ui-icon-tshirt-size-width: var(
        --spectrum-alias-ui-icon-cornertriangle-size-200
    );
}

:host([size='xl']) {
    --spectrum-icon-tshirt-size-height: var(
        --spectrum-alias-workflow-icon-size-xl
    );
    --spectrum-icon-tshirt-size-width: var(
        --spectrum-alias-workflow-icon-size-xl
    );
    --spectrum-ui-icon-tshirt-size-height: var(
        --spectrum-alias-ui-icon-cornertriangle-size-300
    );
    --spectrum-ui-icon-tshirt-size-width: var(
        --spectrum-alias-ui-icon-cornertriangle-size-300
    );
}

@media (forced-colors: active) {
    :host([variant='black']) {
        --spectrum-actionbutton-focus-ring-color: ButtonText;
    }

    :host([size][disabled]),
    :host([size][variant='black'][disabled]),
    :host([size][variant='white'][disabled]),
    :host([size][variant='black'][disabled]:not([quiet])),
    :host([size][variant='white'][disabled]:not([quiet])),
    :host([size][variant='black'][disabled][emphaized]),
    :host([size][variant='white'][disabled][emphaized]) {
        background-color: var(
            --spectrum-actionbutton-m-quiet-textonly-background-color-selected-disabled,
            var(
                --spectrum-alias-component-background-color-quiet-selected-disabled
            )
        );
        border-color: var(
            --spectrum-actionbutton-m-quiet-textonly-border-color-selected-disabled,
            var(--spectrum-alias-component-border-color-quiet-disabled)
        );
    }

    :host([size][disabled]) #label,
    :host([size][disabled]) .hold-affordance,
    :host([size][disabled]) ::slotted(*),
    :host([size][variant='black'][disabled]) #label,
    :host([size][variant='white'][disabled]) #label,
    :host([size][variant='black'][disabled]:not([quiet])) #label,
    :host([size][variant='white'][disabled]:not([quiet])) #label,
    :host([size][variant='black'][disabled][emphaized]) #label,
    :host([size][variant='white'][disabled][emphaized]) #label,
    :host([size][variant='black'][disabled]) .hold-affordance,
    :host([size][variant='white'][disabled]) .hold-affordance,
    :host([size][variant='black'][disabled]:not([quiet])) .hold-affordance,
    :host([size][variant='white'][disabled]:not([quiet])) .hold-affordance,
    :host([size][variant='black'][disabled][emphaized]) .hold-affordance,
    :host([size][variant='white'][disabled][emphaized]) .hold-affordance,
    :host([size][variant='black'][disabled]) ::slotted(*),
    :host([size][variant='white'][disabled]) ::slotted(*),
    :host([size][variant='black'][disabled]:not([quiet])) ::slotted(*),
    :host([size][variant='white'][disabled]:not([quiet])) ::slotted(*),
    :host([size][variant='black'][disabled][emphaized]) ::slotted(*),
    :host([size][variant='white'][disabled][emphaized]) ::slotted(*) {
        color: var(
            --spectrum-actionbutton-m-quiet-textonly-text-color-selected-disabled,
            var(--spectrum-alias-component-text-color-disabled)
        );
    }
}
