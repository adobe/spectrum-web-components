/*!
 * Copyright 2024 Adobe. All rights reserved.
 * This file is licensed to you under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License. You may obtain a copy
 * of the License at http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under
 * the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS
 * OF ANY KIND, either express or implied. See the License for the specific language
 * governing permissions and limitations under the License.
 */

/* Base variables */
:host {
    /* Label colors */
    --spectrum-switch-label-color-default: var(--spectrum-neutral-content-color-default);
    --spectrum-switch-label-color-hover: var(--spectrum-neutral-content-color-hover);
    --spectrum-switch-label-color-down: var(--spectrum-neutral-content-color-down);
    --spectrum-switch-label-color-focus: var(--spectrum-neutral-content-color-key-focus);
    --spectrum-switch-label-color-disabled: var(--spectrum-disabled-content-color);

    /* Background colors */
    --spectrum-switch-background-color-selected-default: var(--spectrum-neutral-background-color-selected-default);
    --spectrum-switch-background-color-selected-hover: var(--spectrum-neutral-background-color-selected-hover);
    --spectrum-switch-background-color-selected-down: var(--spectrum-neutral-background-color-selected-down);
    --spectrum-switch-background-color-selected-focus: var(--spectrum-neutral-background-color-selected-key-focus);
    --spectrum-switch-background-color-selected-disabled: var(--spectrum-disabled-content-color);

    /* Focus indicators */
    --spectrum-switch-focus-indicator-thickness: var(--mod-focus-indicator-thickness, var(--spectrum-focus-indicator-thickness));
    --spectrum-switch-focus-indicator-color: var(--spectrum-focus-indicator-color);

    /* Handle colors */
    --spectrum-switch-handle-border-color-disabled: var(--spectrum-disabled-content-color);

    /* Sizing */
    --spectrum-switch-min-height: var(--spectrum-component-height-100);
    --spectrum-switch-control-width: var(--spectrum-switch-control-width-medium);
    --spectrum-switch-control-height: var(--spectrum-switch-control-height-medium);
    --spectrum-switch-control-label-spacing: var(--spectrum-text-to-control-100);
    --spectrum-switch-spacing-top-to-control: var(--spectrum-switch-top-to-control-medium);
    --spectrum-switch-spacing-top-to-label: var(--spectrum-component-top-to-text-100);
    --spectrum-switch-font-size: var(--spectrum-font-size-100);

    display: inline-flex;
    position: relative;
    min-block-size: var(--mod-switch-height, var(--spectrum-switch-min-height));
    max-inline-size: 100%;
    vertical-align: top;
    align-items: flex-start;
}

:host([emphasized]) {
    --spectrum-switch-handle-border-color-selected-default: var(--spectrum-accent-color-900);
    --spectrum-switch-handle-border-color-selected-hover: var(--spectrum-accent-color-1000);
    --spectrum-switch-handle-border-color-selected-down: var(--spectrum-accent-color-1100);
    --spectrum-switch-handle-border-color-selected-focus: var(--spectrum-accent-color-1000);
}

/* Input styling */
#input {
    box-sizing: border-box;
    position: absolute;
    inset-block-start: 0;
    inset-inline-start: 0;
    inline-size: 100%;
    block-size: 100%;
    opacity: 0;
    padding: 0;
    margin: 0;
    cursor: pointer;
    z-index: 1;
}

/* Switch track and handle */
#switch {
    box-sizing: border-box;
    position: relative;
    display: inline-block;
    flex-grow: 0;
    flex-shrink: 0;
    margin: calc(var(--mod-switch-height, var(--spectrum-switch-min-height)) - var(--mod-switch-control-height, var(--spectrum-switch-control-height)) - var(--mod-switch-spacing-top-to-control, var(--spectrum-switch-spacing-top-to-control))) 0;
    inline-size: var(--mod-switch-control-width, var(--spectrum-switch-control-width));
    block-size: var(--mod-switch-control-height, var(--spectrum-switch-control-height));
    border-radius: calc(var(--mod-switch-control-height, var(--spectrum-switch-control-height)) / 2);
    background-color: var(--highcontrast-switch-background-color, var(--mod-switch-background-color, var(--spectrum-switch-background-color)));
    transition:
        background var(--mod-animation-duration-100, var(--spectrum-animation-duration-100)) ease-in-out,
        border var(--mod-animation-duration-100, var(--spectrum-animation-duration-100)) ease-in-out;
}

/* Label styling */
#label {
    margin-block: var(--mod-switch-spacing-top-to-label, var(--spectrum-switch-spacing-top-to-label)) 0;
    margin-inline: var(--mod-switch-control-label-spacing, var(--spectrum-switch-control-label-spacing));
    font-size: var(--mod-switch-font-size, var(--spectrum-switch-font-size));
    line-height: var(--mod-line-height-100, var(--spectrum-line-height-100));
    color: var(--highcontrast-switch-label-color-default, var(--mod-switch-label-color-default, var(--spectrum-switch-label-color-default)));
    transition: color var(--mod-animation-duration-200, var(--spectrum-animation-duration-200)) ease-in-out;
}

:host([checked]) #input + #switch::before {
    transform: translateX(calc(var(--mod-switch-control-width, var(--spectrum-switch-control-width)) - 100%));

    border-color: var(--highcontrast-switch-handle-border-color-selected-default, var(--mod-switch-handle-border-color-selected-default, var(--spectrum-switch-handle-border-color-selected-default)));
}

:host([checked]) #input + #switch:dir(rtl)::before,
:host([dir="rtl"][checked]) #input + #switch::before {
    transform: translateX(calc((var(--mod-switch-control-width, var(--spectrum-switch-control-width)) - 100%) * -1));
}

:host([disabled]) #input,
:host([disabled]) #input {
    cursor: default;
}

#input:focus-visible + #switch::after {
    margin: calc(var(--mod-focus-indicator-gap, var(--spectrum-focus-indicator-gap)) * -1);

    box-shadow: 0 0 0 var(--mod-switch-focus-indicator-thickness, var(--spectrum-switch-focus-indicator-thickness)) var(--highcontrast-switch-focus-indicator-color, var(--mod-switch-focus-indicator-color, var(--spectrum-switch-focus-indicator-color)));
}

#input:focus-visible + #switch::before {
    border-color: var(--highcontrast-switch-handle-border-color-focus, var(--mod-switch-handle-border-color-focus, var(--spectrum-switch-handle-border-color-focus)));
}

:host(:active) #input + #switch::before {
    border-color: var(--highcontrast-switch-handle-border-color-down, var(--mod-switch-handle-border-color-down, var(--spectrum-switch-handle-border-color-down)));
}

:host(:active) #input ~ #label {
    color: var(--highcontrast-switch-label-color-down, var(--mod-switch-label-color-down, var(--spectrum-switch-label-color-down)));
}

:host(:active[checked]) #input:enabled + #switch {
    background-color: var(--highcontrast-switch-background-color-selected-down, var(--mod-switch-background-color-selected-down, var(--spectrum-switch-background-color-selected-down)));
}

:host(:active[checked]) #input:enabled + #switch::before {
    border-color: var(--highcontrast-switch-handle-border-color-selected-down, var(--mod-switch-handle-border-color-selected-down, var(--spectrum-switch-handle-border-color-selected-down)));
}

:host([checked]) #input:focus-visible + #switch {
    background-color: var(--highcontrast-switch-background-color-selected-focus, var(--mod-switch-background-color-selected-focus, var(--spectrum-switch-background-color-selected-focus)));
}

:host([checked]) #input:focus-visible + #switch::before {
    border-color: var(--highcontrast-switch-handle-border-color-selected-focus, var(--mod-switch-handle-border-color-selected-focus, var(--spectrum-switch-handle-border-color-selected-focus)));
}

#input:focus-visible ~ #label {
    color: var(--highcontrast-switch-label-color-focus, var(--mod-switch-label-color-focus, var(--spectrum-switch-label-color-focus)));
}

:host(:hover) #input ~ #label {
    color: var(--highcontrast-switch-label-color-hover, var(--mod-switch-label-color-hover, var(--spectrum-switch-label-color-hover)));
}

:host([checked]:hover) #input:enabled + #switch {
    background-color: var(--highcontrast-switch-background-color-selected-hover, var(--mod-switch-background-color-selected-hover, var(--spectrum-switch-background-color-selected-hover)));
}

:host([checked]:hover) #input:enabled + #switch::before {
    border-color: var(--highcontrast-switch-handle-border-color-selected-hover, var(--mod-switch-handle-border-color-selected-hover, var(--spectrum-switch-handle-border-color-selected-hover)));
}

:host([disabled]:hover) #input + #switch,
:host([disabled]:hover) #input ~ #label {
    background-color: var(--mod-switch-background-color-disabled, var(--spectrum-switch-background-color-disabled));
    color: var(--highcontrast-switch-label-color-disabled, var(--mod-switch-label-color-disabled, var(--spectrum-switch-label-color-disabled)));
}

:host([disabled][checked]:hover) #input + #switch,
:host([disabled][checked]:hover) #input + #switch {
    background-color: var(--highcontrast-switch-background-color-selected-disabled, var(--mod-switch-background-color-selected-disabled, var(--spectrum-switch-background-color-selected-disabled)));
}

:host([disabled][checked]:hover) #input + #switch::before,
:host([disabled][checked]:hover) #input + #switch::before {
    border-color: var(--highcontrast-switch-handle-border-color-disabled, var(--mod-switch-handle-border-color-disabled, var(--spectrum-switch-handle-border-color-disabled)));
}

:host([disabled][checked]:hover) #input ~ #label,
:host([disabled][checked]:hover) #input ~ #label {
    color: var(--highcontrast-switch-label-color-disabled, var(--mod-switch-label-color-disabled, var(--spectrum-switch-label-color-disabled)));
}

:host(:hover) #input:focus-visible + #switch::after {
    box-shadow: 0 0 0 var(--mod-switch-focus-indicator-thickness, var(--spectrum-switch-focus-indicator-thickness)) var(--highcontrast-switch-focus-indicator-color, var(--mod-switch-focus-indicator-color, var(--spectrum-switch-focus-indicator-color)));
}

:host(:hover) #input:focus-visible + #switch::before {
    border-color: var(--highcontrast-switch-handle-border-color-focus, var(--mod-switch-handle-border-color-focus, var(--spectrum-switch-handle-border-color-focus)));
}

:host([checked]:hover) #input:focus-visible + #switch {
    background-color: var(--highcontrast-switch-background-color-selected-focus, var(--mod-switch-background-color-selected-focus, var(--spectrum-switch-background-color-selected-focus)));
}

:host([checked]:hover) #input:focus-visible + #switch::before {
    border-color: var(--highcontrast-switch-handle-border-color-selected-focus, var(--mod-switch-handle-border-color-selected-focus, var(--spectrum-switch-handle-border-color-selected-focus)));
}

:host(:hover) #input:focus-visible ~ #label {
    color: var(--highcontrast-switch-label-color-focus, var(--mod-switch-label-color-focus, var(--spectrum-switch-label-color-focus)));
}

:host([checked]) #input + #switch {
    background-color: var(--highcontrast-switch-background-color-selected-default, var(--mod-switch-background-color-selected-default, var(--spectrum-switch-background-color-selected-default)));
}

:host([disabled]) #input + #switch,
:host([disabled]) #input + #switch {
    background-color: var(--mod-switch-background-color-disabled, var(--spectrum-switch-background-color-disabled));
}

:host([disabled]) #input + #switch::before,
:host([disabled]) #input + #switch::before {
    border-color: var(--highcontrast-switch-handle-border-color-disabled, var(--mod-switch-handle-border-color-disabled, var(--spectrum-switch-handle-border-color-disabled)));
}

:host([disabled][checked]) #input + #switch,
:host([disabled][checked]) #input + #switch {
    background-color: var(--highcontrast-switch-background-color-selected-disabled, var(--mod-switch-background-color-selected-disabled, var(--spectrum-switch-background-color-selected-disabled)));
}

:host([disabled][checked]) #input + #switch::before,
:host([disabled][checked]) #input + #switch::before {
    border-color: var(--highcontrast-switch-handle-border-color-disabled, var(--mod-switch-handle-border-color-disabled, var(--spectrum-switch-handle-border-color-disabled)));
}

:host([disabled]) #input ~ #label,
:host([disabled]) #input ~ #label {
    color: var(--highcontrast-switch-label-color-disabled, var(--mod-switch-label-color-disabled, var(--spectrum-switch-label-color-disabled)));
}

#input:not(:checked) + #switch {
    box-shadow: inset 0 0 0 1px ButtonText;
}

:host([disabled][checked]:hover) #input + #switch,
:host([disabled][checked]:hover) #input + #switch {
    box-shadow: inset 0 0 0 1px GrayText;
    background-color: GrayText;
}

:host([disabled][checked]:hover) #input + #switch::before,
:host([disabled][checked]:hover) #input + #switch::before {
    border-color: GrayText;
    background-color: ButtonFace;
}

:host([disabled]) #input:not(:checked) + #switch,
:host([disabled]) #input:not(:checked) + #switch {
    box-shadow: inset 0 0 0 1px GrayText;
    background-color: ButtonFace;
}

:host([disabled]) #input:not(:checked) + #switch::before,
:host([disabled]) #input:not(:checked) + #switch::before {
    border-color: GrayText;
    background-color: ButtonFace;
}

:host([disabled][checked]) #input + #switch,
:host([disabled][checked]) #input + #switch {
    box-shadow: inset 0 0 0 1px GrayText;
    background-color: GrayText;
}

:host([disabled][checked]) #input + #switch::before,
:host([disabled][checked]) #input + #switch::before {
    border-color: GrayText;
    background-color: ButtonFace;
}

:host([disabled]) #input ~ #label,
:host([disabled]) #input ~ #label {
    color: GrayText;
}

/* High contrast media query at the bottom */
@media (forced-colors: active) {
    :host {
        --highcontrast-switch-background-color: ButtonFace;
        --highcontrast-switch-handle-background-color: ButtonText;
        --highcontrast-switch-handle-border-color-default: ButtonText;
        --highcontrast-switch-handle-border-color-disabled: GrayText;
        --highcontrast-switch-label-color-disabled: GrayText;
    }
}
