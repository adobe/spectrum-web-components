/* stylelint-disable */ /* 
Copyright 2020 Adobe. All rights reserved.
This file is licensed to you under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License. You may obtain a copy
of the License at http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software distributed under
the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS
OF ANY KIND, either express or implied. See the License for the specific language
governing permissions and limitations under the License.

THIS FILE IS MACHINE GENERATED. DO NOT EDIT */
:host {
    --spectrum-textfield-border-size: var(
        --spectrum-textfield-m-border-size,
        var(--spectrum-alias-border-size-thin)
    ); /* .spectrum-Textfield */
    --spectrum-textfield-text-line-height: var(
        --spectrum-textfield-m-text-line-height,
        var(--spectrum-alias-component-text-line-height)
    );
    --spectrum-textfield-text-size: var(
        --spectrum-textfield-m-text-size,
        var(--spectrum-alias-item-text-size-m)
    );
    --spectrum-textfield-height: var(
        --spectrum-textfield-m-height,
        var(--spectrum-alias-item-height-m)
    );
    --spectrum-textfield-padding-left: var(
        --spectrum-textfield-m-padding-left,
        var(--spectrum-alias-item-padding-m)
    );
    --spectrum-textfield-padding-right: var(
        --spectrum-textfield-m-padding-right,
        var(--spectrum-alias-item-padding-m)
    );
    --spectrum-textfield-min-width: var(
        --spectrum-textfield-m-min-width,
        var(--spectrum-global-dimension-size-600)
    );
    --spectrum-textfield-success-icon-height: var(
        --spectrum-textfield-m-success-icon-height,
        var(--spectrum-alias-ui-icon-checkmark-size-100)
    );
    --spectrum-textfield-success-icon-width: var(
        --spectrum-textfield-m-success-icon-width,
        var(--spectrum-alias-ui-icon-checkmark-size-100)
    );
    --spectrum-textfield-success-icon-margin-left: var(
        --spectrum-textfield-m-success-icon-margin-left,
        var(--spectrum-global-dimension-size-150)
    );
    --spectrum-textfield-error-icon-height: var(
        --spectrum-textfield-m-error-icon-height,
        var(--spectrum-alias-ui-icon-alert-size-100)
    );
    --spectrum-textfield-error-icon-width: var(
        --spectrum-textfield-m-error-icon-width,
        var(--spectrum-alias-ui-icon-alert-size-100)
    );
    --spectrum-textfield-error-icon-margin-left: var(
        --spectrum-textfield-m-error-icon-margin-left,
        var(--spectrum-global-dimension-size-150)
    );
    --spectrum-textfield-placeholder-text-font-style: var(
        --spectrum-textfield-m-placeholder-text-font-style,
        var(--spectrum-global-font-style-italic)
    );
    --spectrum-textfield-placeholder-text-font-weight: var(
        --spectrum-textfield-m-placeholder-text-font-weight,
        var(--spectrum-global-font-weight-regular)
    );
    --spectrum-textfield-border-radius: var(
        --spectrum-textfield-m-border-radius,
        var(--spectrum-alias-border-radius-regular)
    );
    --spectrum-textfield-quiet-border-size: var(
        --spectrum-textfield-quiet-m-border-size,
        var(--spectrum-alias-border-size-thin)
    );
    --spectrum-textfield-quiet-padding-left: var(
        --spectrum-textfield-quiet-m-padding-left,
        0
    );
    --spectrum-textfield-quiet-padding-right: var(
        --spectrum-textfield-quiet-m-padding-right,
        0
    );
    --spectrum-textfield-quiet-success-icon-margin-left: var(
        --spectrum-textfield-quiet-m-success-icon-margin-left,
        var(--spectrum-global-dimension-size-150)
    );
    --spectrum-textfield-quiet-error-icon-margin-left: var(
        --spectrum-textfield-quiet-m-error-icon-margin-left,
        var(--spectrum-global-dimension-size-150)
    );
    --spectrum-textfield-quiet-border-radius: var(
        --spectrum-textfield-quiet-m-border-radius,
        0px
    );
    --spectrum-textarea-text-padding-top: var(
        --spectrum-textarea-m-text-padding-top,
        var(--spectrum-alias-item-text-padding-top-m)
    );
    --spectrum-textarea-text-padding-bottom: var(
        --spectrum-textarea-m-text-padding-bottom,
        var(--spectrum-alias-item-text-padding-bottom-m)
    );
    --spectrum-textarea-height: var(
        --spectrum-textarea-m-height,
        var(--spectrum-alias-item-height-m)
    );
    --spectrum-textarea-padding-left: var(
        --spectrum-textarea-m-padding-left,
        var(--spectrum-alias-item-padding-m)
    );
    --spectrum-textarea-padding-right: var(
        --spectrum-textarea-m-padding-right,
        var(--spectrum-alias-item-padding-m)
    );
    --spectrum-textfield-padding-top: 3px;
    --spectrum-textfield-padding-bottom: 5px;
    --spectrum-textfield-text-font-family: var(
        --spectrum-alias-body-text-font-family,
        var(--spectrum-global-font-family-base)
    );
    --spectrum-textfield-icon-gap: var(--spectrum-global-dimension-size-65);
    --spectrum-textfield-quiet-icon-gap: var(
        --spectrum-global-dimension-size-75
    );
    --spectrum-textarea-min-height: var(--spectrum-textarea-height);
    --spectrum-textarea-height-adjusted: auto;
    --spectrum-textarea-padding-top: var(--spectrum-textarea-text-padding-top);
    --spectrum-textarea-padding-bottom: var(
        --spectrum-textarea-text-padding-bottom
    );
}
:host {
    display: inline-flex; /* .spectrum-Textfield */
    min-width: var(--spectrum-textfield-min-width);
    position: relative;
    width: var(
        --spectrum-alias-single-line-width,
        var(--spectrum-global-dimension-size-2400)
    );
}
:host([quiet][multiline]) .input {
    height: var(
        --spectrum-textfield-height
    ); /* .spectrum-Textfield.spectrum-Textfield--quiet.spectrum-Textfield--multiline
    .spectrum-Textfield-input */
    min-height: var(--spectrum-textfield-height);
}
.input {
    -webkit-appearance: none;
    -moz-appearance: textfield;
    border: var(--spectrum-textfield-border-size) solid;
    border-radius: var(--spectrum-textfield-border-radius);
    box-sizing: border-box; /* .spectrum-Textfield-input */
    font-family: var(--spectrum-textfield-text-font-family);
    font-size: var(--spectrum-textfield-text-size);
    height: var(--spectrum-textfield-height);
    line-height: var(--spectrum-textfield-text-line-height);
    margin: 0;
    outline: none;
    overflow: visible;
    padding: var(--spectrum-textfield-padding-top)
        var(--spectrum-textfield-padding-right)
        var(--spectrum-textfield-padding-bottom)
        calc(var(--spectrum-textfield-padding-left) - 1px);
    text-indent: 0;
    text-overflow: ellipsis;
    transition: border-color
            var(--spectrum-global-animation-duration-100, 0.13s) ease-in-out,
        box-shadow var(--spectrum-global-animation-duration-100, 0.13s)
            ease-in-out;
    vertical-align: top;
    width: 100%;
}
.input::placeholder {
    font-style: var(--spectrum-textfield-placeholder-text-font-style);
    font-weight: var(
        --spectrum-textfield-placeholder-text-font-weight
    ); /* .spectrum-Textfield-input::placeholder */
    opacity: 1;
    transition: color var(--spectrum-global-animation-duration-100, 0.13s)
        ease-in-out;
}
.input:lang(ja)::placeholder,
.input:lang(ko)::placeholder,
.input:lang(zh)::placeholder {
    font-style: normal; /* .spectrum-Textfield-input:lang(ja)::placeholder,
   * .spectrum-Textfield-input:lang(zh)::placeholder,
   * .spectrum-Textfield-input:lang(ko)::placeholder */
}
.input:hover::placeholder {
    font-weight: var(
        --spectrum-textfield-placeholder-text-font-weight
    ); /* .spectrum-Textfield-input:hover::placeholder */
}
.input:disabled {
    opacity: 1;
    resize: none; /* .spectrum-Textfield-input:disabled */
}
.input:disabled::placeholder {
    font-weight: var(
        --spectrum-textfield-placeholder-text-font-weight
    ); /* .spectrum-Textfield-input:disabled::placeholder */
}
.input::-ms-clear {
    height: 0;
    width: 0; /* .spectrum-Textfield-input::-ms-clear */
}
.input::-webkit-inner-spin-button,
.input::-webkit-outer-spin-button {
    -webkit-appearance: none; /* .spectrum-Textfield-input::-webkit-inner-spin-button,
   * .spectrum-Textfield-input::-webkit-outer-spin-button */
    margin: 0;
}
.input:-moz-ui-invalid {
    box-shadow: none; /* .spectrum-Textfield-input:-moz-ui-invalid */
}
:host([dir='ltr'][valid]) .input {
    padding-right: calc(
        var(--spectrum-textfield-padding-right) +
            var(--spectrum-icon-checkmark-medium-width) +
            var(--spectrum-textfield-success-icon-margin-left)
    ); /* [dir=ltr] .spectrum-Textfield.is-valid .spectrum-Textfield-input */
}
:host([dir='rtl'][valid]) .input {
    padding-left: calc(
        var(--spectrum-textfield-padding-right) +
            var(--spectrum-icon-checkmark-medium-width) +
            var(--spectrum-textfield-success-icon-margin-left)
    ); /* [dir=rtl] .spectrum-Textfield.is-valid .spectrum-Textfield-input */
}
:host([dir='ltr'][invalid]) .input {
    padding-right: calc(
        var(--spectrum-textfield-padding-right) +
            var(
                --spectrum-icon-alert-medium-width,
                var(--spectrum-global-dimension-size-225)
            ) + var(--spectrum-textfield-error-icon-margin-left)
    ); /* [dir=ltr] .spectrum-Textfield.is-invalid .spectrum-Textfield-input */
}
:host([dir='rtl'][invalid]) .input {
    padding-left: calc(
        var(--spectrum-textfield-padding-right) +
            var(
                --spectrum-icon-alert-medium-width,
                var(--spectrum-global-dimension-size-225)
            ) + var(--spectrum-textfield-error-icon-margin-left)
    ); /* [dir=rtl] .spectrum-Textfield.is-invalid .spectrum-Textfield-input */
}
:host([multiline]) .input {
    height: var(
        --spectrum-textarea-height-adjusted
    ); /* .spectrum-Textfield--multiline .spectrum-Textfield-input */
    min-height: var(--spectrum-textarea-min-height);
    overflow: auto;
    padding: var(--spectrum-textarea-padding-top)
        var(--spectrum-textarea-padding-right)
        var(--spectrum-textarea-padding-bottom)
        calc(var(--spectrum-textarea-padding-left) - 1px);
}
:host([dir='ltr'][quiet]) .input {
    padding-left: var(
        --spectrum-textfield-quiet-padding-left
    ); /* [dir=ltr] .spectrum-Textfield--quiet .spectrum-Textfield-input */
}
:host([dir='rtl'][quiet]) .input {
    padding-right: var(
        --spectrum-textfield-quiet-padding-left
    ); /* [dir=rtl] .spectrum-Textfield--quiet .spectrum-Textfield-input */
}
:host([dir='ltr'][quiet]) .input {
    padding-right: var(
        --spectrum-textfield-quiet-padding-right
    ); /* [dir=ltr] .spectrum-Textfield--quiet .spectrum-Textfield-input */
}
:host([dir='rtl'][quiet]) .input {
    padding-left: var(
        --spectrum-textfield-quiet-padding-right
    ); /* [dir=rtl] .spectrum-Textfield--quiet .spectrum-Textfield-input */
}
:host([quiet]) .input {
    border-bottom-width: var(--spectrum-textfield-quiet-border-size);
    border-left-width: 0;
    border-radius: var(
        --spectrum-textfield-quiet-border-radius
    ); /* .spectrum-Textfield--quiet .spectrum-Textfield-input */
    border-right-width: 0;
    border-top-width: 0;
    overflow-y: hidden;
    resize: none;
}
:host([dir='ltr'][invalid][quiet]) .input {
    padding-right: calc(
        var(
                --spectrum-icon-alert-medium-width,
                var(--spectrum-global-dimension-size-225)
            ) + var(--spectrum-textfield-quiet-error-icon-margin-left)
    ); /* [dir=ltr] .is-invalid.spectrum-Textfield--quiet .spectrum-Textfield-input */
}
:host([dir='rtl'][invalid][quiet]) .input {
    padding-left: calc(
        var(
                --spectrum-icon-alert-medium-width,
                var(--spectrum-global-dimension-size-225)
            ) + var(--spectrum-textfield-quiet-error-icon-margin-left)
    ); /* [dir=rtl] .is-invalid.spectrum-Textfield--quiet .spectrum-Textfield-input */
}
:host([dir='ltr'][valid][quiet]) .input {
    padding-right: calc(
        var(--spectrum-icon-checkmark-medium-width) +
            var(--spectrum-textfield-quiet-success-icon-margin-left)
    ); /* [dir=ltr] .is-valid.spectrum-Textfield--quiet .spectrum-Textfield-input */
}
:host([dir='rtl'][valid][quiet]) .input {
    padding-left: calc(
        var(--spectrum-icon-checkmark-medium-width) +
            var(--spectrum-textfield-quiet-success-icon-margin-left)
    ); /* [dir=rtl] .is-valid.spectrum-Textfield--quiet .spectrum-Textfield-input */
}
.icon {
    pointer-events: all;
    position: absolute; /* .spectrum-Textfield-validationIcon */
}
:host([dir='ltr'][quiet]) .icon {
    padding-right: 0; /* [dir=ltr] .spectrum-Textfield--quiet .spectrum-Textfield-validationIcon */
}
:host([dir='rtl'][quiet]) .icon {
    padding-left: 0; /* [dir=rtl] .spectrum-Textfield--quiet .spectrum-Textfield-validationIcon */
}
:host([dir='ltr'][invalid]) .icon {
    right: var(
        --spectrum-textfield-error-icon-margin-left
    ); /* [dir=ltr] .spectrum-Textfield.is-invalid .spectrum-Textfield-validationIcon */
}
:host([dir='rtl'][invalid]) .icon {
    left: var(
        --spectrum-textfield-error-icon-margin-left
    ); /* [dir=rtl] .spectrum-Textfield.is-invalid .spectrum-Textfield-validationIcon */
}
:host([invalid]) .icon {
    bottom: calc(
        var(--spectrum-textfield-height) / 2 -
            var(--spectrum-textfield-error-icon-height) / 2
    );
    height: var(--spectrum-textfield-error-icon-height);
    width: var(
        --spectrum-textfield-error-icon-width
    ); /* .spectrum-Textfield.is-invalid .spectrum-Textfield-validationIcon */
}
:host([dir='ltr'][quiet][invalid]) .icon {
    right: 0; /* [dir=ltr] .spectrum-Textfield--quiet.spectrum-Textfield.is-invalid .spectrum-Textfield-validationIcon */
}
:host([dir='rtl'][quiet][invalid]) .icon {
    left: 0; /* [dir=rtl] .spectrum-Textfield--quiet.spectrum-Textfield.is-invalid .spectrum-Textfield-validationIcon */
}
:host([dir='ltr'][valid]) .icon {
    right: var(
        --spectrum-textfield-success-icon-margin-left
    ); /* [dir=ltr] .spectrum-Textfield.is-valid .spectrum-Textfield-validationIcon */
}
:host([dir='rtl'][valid]) .icon {
    left: var(
        --spectrum-textfield-success-icon-margin-left
    ); /* [dir=rtl] .spectrum-Textfield.is-valid .spectrum-Textfield-validationIcon */
}
:host([valid]) .icon {
    bottom: calc(
        var(--spectrum-textfield-height) / 2 -
            var(--spectrum-textfield-success-icon-height) / 2
    );
    height: var(--spectrum-textfield-success-icon-height);
    width: var(
        --spectrum-textfield-success-icon-width
    ); /* .spectrum-Textfield.is-valid .spectrum-Textfield-validationIcon */
}
:host([dir='ltr'][quiet][valid]) .icon {
    right: 0; /* [dir=ltr] .spectrum-Textfield--quiet.spectrum-Textfield.is-valid .spectrum-Textfield-validationIcon */
}
:host([dir='rtl'][quiet][valid]) .icon {
    left: 0; /* [dir=rtl] .spectrum-Textfield--quiet.spectrum-Textfield.is-valid .spectrum-Textfield-validationIcon */
}
:host([dir='ltr']) .icon-workflow {
    left: var(
        --spectrum-textfield-error-icon-margin-left
    ); /* [dir=ltr] .spectrum-Textfield-icon */
}
:host([dir='rtl']) .icon-workflow {
    right: var(
        --spectrum-textfield-error-icon-margin-left
    ); /* [dir=rtl] .spectrum-Textfield-icon */
}
.icon-workflow {
    display: block; /* .spectrum-Textfield-icon */
    height: var(
        --spectrum-alias-workflow-icon-size-m,
        var(--spectrum-global-dimension-size-225)
    );
    position: absolute;
    top: calc(
        var(--spectrum-textfield-height) / 2 -
            var(
                --spectrum-alias-workflow-icon-size-m,
                var(--spectrum-global-dimension-size-225)
            ) / 2
    );
    width: var(
        --spectrum-alias-workflow-icon-size-m,
        var(--spectrum-global-dimension-size-225)
    );
}
:host([dir='ltr'][quiet]) .icon-workflow {
    left: 0; /* [dir=ltr] .spectrum-Textfield--quiet .spectrum-Textfield-icon */
}
:host([dir='rtl'][quiet]) .icon-workflow {
    right: 0; /* [dir=rtl] .spectrum-Textfield--quiet .spectrum-Textfield-icon */
}
:host([dir='ltr'][quiet]) .icon-workflow ~ .input {
    padding-left: calc(
        var(
                --spectrum-alias-workflow-icon-size-m,
                var(--spectrum-global-dimension-size-225)
            ) + var(--spectrum-textfield-quiet-icon-gap)
    ); /* [dir=ltr] .spectrum-Textfield--quiet .spectrum-Textfield-icon~.spectrum-Textfield-input */
}
:host([dir='rtl'][quiet]) .icon-workflow ~ .input {
    padding-right: calc(
        var(
                --spectrum-alias-workflow-icon-size-m,
                var(--spectrum-global-dimension-size-225)
            ) + var(--spectrum-textfield-quiet-icon-gap)
    ); /* [dir=rtl] .spectrum-Textfield--quiet .spectrum-Textfield-icon~.spectrum-Textfield-input */
}
:host([dir='ltr']) .icon-workflow + .input {
    padding-left: calc(
        var(--spectrum-textfield-error-icon-margin-left) +
            var(
                --spectrum-alias-workflow-icon-size-m,
                var(--spectrum-global-dimension-size-225)
            ) + var(--spectrum-textfield-icon-gap)
    ); /* [dir=ltr] .spectrum-Textfield-icon+.spectrum-Textfield-input */
}
:host([dir='rtl']) .icon-workflow + .input {
    padding-right: calc(
        var(--spectrum-textfield-error-icon-margin-left) +
            var(
                --spectrum-alias-workflow-icon-size-m,
                var(--spectrum-global-dimension-size-225)
            ) + var(--spectrum-textfield-icon-gap)
    ); /* [dir=rtl] .spectrum-Textfield-icon+.spectrum-Textfield-input */
}
:host([multiline]) .icon-workflow ~ .input {
    height: var(
        --spectrum-textfield-height
    ); /* .spectrum-Textfield--multiline .spectrum-Textfield-icon~.spectrum-Textfield-input */
    min-height: var(--spectrum-textfield-height);
}
:host {
    --spectrum-textfield-m-validation-icon-color-valid: var(
        --spectrum-semantic-positive-color-icon,
        var(--spectrum-global-color-green-600)
    ); /* .spectrum-Textfield */
}
:host(:hover) .input {
    border-color: var(
        --spectrum-textfield-m-border-color-hover,
        var(--spectrum-alias-border-color-hover)
    ); /* .spectrum-Textfield:hover .spectrum-Textfield-input */
    box-shadow: none;
}
:host(:hover) .input::placeholder {
    color: var(
        --spectrum-textfield-m-placeholder-text-color-hover,
        var(--spectrum-alias-placeholder-text-color-hover)
    ); /* .spectrum-Textfield:hover .spectrum-Textfield-input::placeholder */
}
:host(:hover) .icon-workflow {
    color: var(
        --spectrum-textfield-m-icon-color-hover,
        var(--spectrum-global-color-gray-900)
    ); /* .spectrum-Textfield:hover .spectrum-Textfield-icon */
}
:host(:active) .input {
    border-color: var(
        --spectrum-textfield-m-border-color-down,
        var(--spectrum-alias-border-color-mouse-focus)
    ); /* .spectrum-Textfield:active .spectrum-Textfield-input */
}
:host(:active) .icon-workflow {
    color: var(
        --spectrum-textfield-m-icon-color-down,
        var(--spectrum-alias-icon-color-down)
    ); /* .spectrum-Textfield:active .spectrum-Textfield-icon */
}
:host([valid]) .icon {
    color: var(
        --spectrum-textfield-m-validation-icon-color-valid,
        var(--spectrum-global-color-green-400)
    ); /* .spectrum-Textfield.is-valid .spectrum-Textfield-validationIcon */
}
:host([invalid]) .icon {
    color: var(
        --spectrum-textfield-m-validation-icon-color-error,
        var(--spectrum-semantic-negative-color-icon)
    ); /* .spectrum-Textfield.is-invalid .spectrum-Textfield-validationIcon */
}
:host([invalid]:hover) .input {
    border-color: var(
        --spectrum-textfield-m-border-color-error-hover,
        var(--spectrum-semantic-negative-color-state-hover)
    ); /* .spectrum-Textfield.is-invalid:hover .spectrum-Textfield-input */
}
:host([disabled]) .icon {
    color: var(
        --spectrum-textfield-m-validation-icon-color-disabled,
        var(--spectrum-global-color-gray-500)
    ); /* .spectrum-Textfield.is-disabled .spectrum-Textfield-validationIcon */
}
:host([disabled]) .icon-workflow {
    color: var(
        --spectrum-textfield-m-icon-color-disabled,
        var(--spectrum-global-color-gray-500)
    ); /* .spectrum-Textfield.is-disabled .spectrum-Textfield-icon */
}
.icon-workflow {
    color: var(
        --spectrum-textfield-m-icon-color,
        var(--spectrum-alias-icon-color)
    ); /* .spectrum-Textfield-icon */
}
.input {
    background-color: var(
        --spectrum-textfield-m-background-color,
        var(--spectrum-global-color-gray-50)
    ); /* .spectrum-Textfield-input */
    border-color: var(
        --spectrum-textfield-m-border-color,
        var(--spectrum-alias-border-color)
    );
    color: var(
        --spectrum-textfield-m-text-color,
        var(--spectrum-alias-text-color)
    );
}
.input::placeholder {
    color: var(
        --spectrum-textfield-m-placeholder-text-color,
        var(--spectrum-global-color-gray-600)
    ); /* .spectrum-Textfield-input::placeholder */
}
.input:focus,
:host([focused]) .input {
    border-color: var(
        --spectrum-textfield-m-border-color-down,
        var(--spectrum-alias-border-color-mouse-focus)
    ); /* .spectrum-Textfield.is-focused .spectrum-Textfield-input,
   * .spectrum-Textfield-input:focus */
}
.input.focus-visible,
:host([focused]) .input {
    border-color: var(
        --spectrum-textfield-m-border-color-key-focus,
        var(--spectrum-alias-border-color-focus)
    ); /* .spectrum-Textfield.is-keyboardFocused .spectrum-Textfield-input,
   * .spectrum-Textfield-input.focus-ring */
    box-shadow: 0 0 0 1px
        var(
            --spectrum-textfield-m-border-color-key-focus,
            var(--spectrum-alias-border-color-focus)
        );
}
.input:focus-visible,
:host([focused]) .input {
    border-color: var(
        --spectrum-textfield-m-border-color-key-focus,
        var(--spectrum-alias-border-color-focus)
    ); /* .spectrum-Textfield.is-keyboardFocused .spectrum-Textfield-input,
   * .spectrum-Textfield-input.focus-ring */
    box-shadow: 0 0 0 1px
        var(
            --spectrum-textfield-m-border-color-key-focus,
            var(--spectrum-alias-border-color-focus)
        );
}
:host([invalid]) .input {
    border-color: var(
        --spectrum-textfield-m-border-color-error,
        var(--spectrum-semantic-negative-color-default)
    ); /* .spectrum-Textfield.is-invalid .spectrum-Textfield-input */
}
:host([focused][invalid]) .input,
:host([invalid]) .input.focus-visible {
    border-color: var(
        --spectrum-textfield-m-border-color-error-key-focus,
        var(--spectrum-alias-border-color-focus)
    ); /* .is-keyboardFocused.spectrum-Textfield.is-invalid .spectrum-Textfield-input,
   * .spectrum-Textfield.is-invalid .spectrum-Textfield-input.focus-ring */
    box-shadow: 0 0 0 1px
        var(
            --spectrum-textfield-m-border-color-error-key-focus,
            var(--spectrum-alias-border-color-focus)
        );
}
:host([focused][invalid]) .input,
:host([invalid]) .input:focus-visible {
    border-color: var(
        --spectrum-textfield-m-border-color-error-key-focus,
        var(--spectrum-alias-border-color-focus)
    ); /* .is-keyboardFocused.spectrum-Textfield.is-invalid .spectrum-Textfield-input,
   * .spectrum-Textfield.is-invalid .spectrum-Textfield-input.focus-ring */
    box-shadow: 0 0 0 1px
        var(
            --spectrum-textfield-m-border-color-error-key-focus,
            var(--spectrum-alias-border-color-focus)
        );
}
.input :disabled,
:host([disabled]) .input,
:host([disabled]:hover) .input {
    -webkit-text-fill-color: var(
        --spectrum-textfield-m-text-color-disabled,
        var(--spectrum-alias-text-color-disabled)
    );
    background-color: var(
        --spectrum-textfield-m-background-color-disabled,
        var(--spectrum-global-color-gray-200)
    ); /* .spectrum-Textfield.is-disabled .spectrum-Textfield-input,
   * .spectrum-Textfield.is-disabled:hover .spectrum-Textfield-input,
   * .spectrum-Textfield-input :disabled */
    border-color: var(
        --spectrum-textfield-m-border-color-disabled,
        var(--spectrum-alias-border-color-transparent)
    );
    color: var(
        --spectrum-textfield-m-text-color-disabled,
        var(--spectrum-alias-text-color-disabled)
    );
}
.input :disabled::placeholder,
:host([disabled]) .input::placeholder,
:host([disabled]:hover) .input::placeholder {
    color: var(
        --spectrum-textfield-m-placeholder-text-color-disabled,
        var(--spectrum-alias-text-color-disabled)
    ); /* .spectrum-Textfield.is-disabled .spectrum-Textfield-input::placeholder,
   * .spectrum-Textfield.is-disabled:hover .spectrum-Textfield-input::placeholder,
   * .spectrum-Textfield-input :disabled::placeholder */
}
:host([quiet]) .input {
    background-color: var(
        --spectrum-textfield-quiet-m-background-color,
        var(--spectrum-alias-background-color-transparent)
    ); /* .spectrum-Textfield--quiet .spectrum-Textfield-input */
    border-color: var(
        --spectrum-textfield-quiet-m-border-color,
        var(--spectrum-alias-border-color)
    );
}
:host([focused][quiet]) .input,
:host([quiet]) .input:focus {
    border-color: var(
        --spectrum-textfield-quiet-m-border-color-mouse-focus,
        var(--spectrum-alias-border-color-mouse-focus)
    ); /* .is-focused.spectrum-Textfield--quiet .spectrum-Textfield-input,
   * .spectrum-Textfield--quiet .spectrum-Textfield-input:focus */
}
:host([focused][quiet]) .input,
:host([quiet]) .input.focus-visible {
    border-color: var(
        --spectrum-textfield-m-border-color-key-focus,
        var(--spectrum-alias-border-color-focus)
    ); /* .is-keyboardFocused.spectrum-Textfield--quiet .spectrum-Textfield-input,
   * .spectrum-Textfield--quiet .spectrum-Textfield-input.focus-ring */
    box-shadow: 0 1px 0
        var(
            --spectrum-textfield-m-border-color-key-focus,
            var(--spectrum-alias-border-color-focus)
        );
}
:host([focused][quiet]) .input,
:host([quiet]) .input:focus-visible {
    border-color: var(
        --spectrum-textfield-m-border-color-key-focus,
        var(--spectrum-alias-border-color-focus)
    ); /* .is-keyboardFocused.spectrum-Textfield--quiet .spectrum-Textfield-input,
   * .spectrum-Textfield--quiet .spectrum-Textfield-input.focus-ring */
    box-shadow: 0 1px 0
        var(
            --spectrum-textfield-m-border-color-key-focus,
            var(--spectrum-alias-border-color-focus)
        );
}
:host([invalid][quiet]) .input {
    border-color: var(
        --spectrum-textfield-quiet-m-border-color-error,
        var(--spectrum-semantic-negative-color-default)
    ); /* .is-invalid.spectrum-Textfield--quiet .spectrum-Textfield-input */
}
:host([focused][invalid][quiet]) .input,
:host([invalid][quiet]) .input:focus {
    border-color: var(
        --spectrum-textfield-quiet-m-border-color-error-mouse-focus,
        var(--spectrum-semantic-negative-color-state-hover)
    ); /* .is-focused.is-invalid.spectrum-Textfield--quiet .spectrum-Textfield-input,
   * .is-invalid.spectrum-Textfield--quiet .spectrum-Textfield-input:focus */
}
:host([focused][invalid][quiet]) .input,
:host([invalid][quiet]) .input.focus-visible {
    border-color: var(
        --spectrum-textfield-quiet-m-border-color-error-key-focus,
        var(--spectrum-alias-border-color-focus)
    ); /* .is-keyboardFocused.is-invalid.spectrum-Textfield--quiet .spectrum-Textfield-input,
   * .is-invalid.spectrum-Textfield--quiet .spectrum-Textfield-input.focus-ring */
    box-shadow: 0 1px 0
        var(
            --spectrum-textfield-quiet-m-border-color-error-key-focus,
            var(--spectrum-alias-border-color-focus)
        );
}
:host([focused][invalid][quiet]) .input,
:host([invalid][quiet]) .input:focus-visible {
    border-color: var(
        --spectrum-textfield-quiet-m-border-color-error-key-focus,
        var(--spectrum-alias-border-color-focus)
    ); /* .is-keyboardFocused.is-invalid.spectrum-Textfield--quiet .spectrum-Textfield-input,
   * .is-invalid.spectrum-Textfield--quiet .spectrum-Textfield-input.focus-ring */
    box-shadow: 0 1px 0
        var(
            --spectrum-textfield-quiet-m-border-color-error-key-focus,
            var(--spectrum-alias-border-color-focus)
        );
}
:host([disabled][quiet]) .input,
:host([disabled][quiet]:hover) .input,
:host([quiet]) .input :disabled {
    background-color: var(
        --spectrum-textfield-quiet-m-background-color-disabled,
        var(--spectrum-alias-background-color-transparent)
    ); /* .is-disabled:hover.spectrum-Textfield--quiet .spectrum-Textfield-input,
   * .is-disabled.spectrum-Textfield--quiet .spectrum-Textfield-input,
   * .spectrum-Textfield--quiet .spectrum-Textfield-input :disabled */
    border-color: var(
        --spectrum-textfield-quiet-m-border-color-disabled,
        var(--spectrum-alias-border-color-mid)
    );
}
