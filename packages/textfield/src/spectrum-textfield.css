/* THIS FILE IS MACHINE GENERATED. DO NOT EDIT */
:host {
    --spectrum-textfield-animation-duration: var(--spectrum-animation-duration-100);
    --spectrum-textfield-height: var(--spectrum-component-height-100);
    --spectrum-textfield-width: var(--spectrum-field-default-width-medium);
    --spectrum-textfield-min-width: calc(var(--spectrum-textfield-height) * var(--spectrum-text-field-minimum-width-multiplier));
    --spectrum-textfield-border-width: var(--spectrum-border-width-200);
    --spectrum-textfield-corner-radius: var(--spectrum-corner-radius-medium-size-medium);
    --spectrum-textfield-spacing-inline: var(--spectrum-component-edge-to-text-100);
    --spectrum-textfield-spacing-block-start: var(--spectrum-component-top-to-text-100);
    --spectrum-textfield-spacing-block-end: var(--spectrum-component-bottom-to-text-100);
    --spectrum-textfield-label-spacing-block: var(--spectrum-field-label-to-component);
    --spectrum-textfield-label-spacing-inline-side-label: var(--spectrum-spacing-200);
    --spectrum-textfield-helptext-spacing-block: var(--spectrum-help-text-to-component);
    --spectrum-textfield-icon-size-invalid: var(--spectrum-workflow-icon-size-100);
    --spectrum-textfield-icon-size-valid: var(--spectrum-checkmark-icon-size-100);
    --spectrum-textfield-icon-spacing-inline-start-invalid: var(--spectrum-text-to-visual-100);
    --spectrum-textfield-icon-spacing-inline-end-invalid: var(--spectrum-field-edge-to-alert-icon-medium);
    --spectrum-textfield-icon-spacing-block-invalid: var(--spectrum-component-top-to-workflow-icon-100);
    --spectrum-textfield-icon-spacing-inline-start-valid: var(--spectrum-text-to-visual-100);
    --spectrum-textfield-icon-spacing-inline-end-valid: var(--spectrum-field-edge-to-validation-icon-medium);
    --spectrum-textfield-icon-spacing-block-valid: var(--spectrum-field-top-to-validation-icon-medium);
    --spectrum-textfield-font-family: var(--spectrum-sans-font-family-stack);
    --spectrum-textfield-font-weight: var(--spectrum-regular-font-weight);
    --spectrum-textfield-font-style: var(--spectrum-default-font-style);
    --spectrum-textfield-font-size: var(--spectrum-font-size-100);
    --spectrum-textfield-line-height: var(--spectrum-line-height-100);
    --spectrum-textfield-line-height-cjk: var(--spectrum-cjk-line-height-100);
    --spectrum-textfield-input-line-height: var(--spectrum-textfield-height);
    --spectrum-textfield-character-count-color: var(--spectrum-neutral-subdued-content-color-default);
    --spectrum-textfield-character-count-spacing-inline: var(--spectrum-spacing-200);
    --spectrum-textfield-character-count-spacing-block: var(--spectrum-component-bottom-to-text-100);
    --spectrum-textfield-character-count-spacing-inline-side: var(--spectrum-side-label-character-count-to-field);
    --spectrum-textfield-character-count-spacing-block-side: var(--spectrum-component-top-to-text-100);
    --spectrum-textfield-focus-indicator-width: var(--spectrum-focus-indicator-thickness);
    --spectrum-textfield-focus-indicator-gap: var(--spectrum-focus-indicator-gap);
    --spectrum-textfield-background-color: var(--mod-textfield-background-color, var(--spectrum-gray-25));
    --spectrum-textfield-border-color: var(--spectrum-gray-300);
    --spectrum-textfield-border-color-hover: var(--spectrum-gray-400);
    --spectrum-textfield-border-color-focus: var(--spectrum-gray-800);
    --spectrum-textfield-border-color-focus-hover: var(--spectrum-gray-900);
    --spectrum-textfield-border-color-keyboard-focus: var(--spectrum-gray-800);
    --spectrum-textfield-text-color-default: var(--spectrum-neutral-content-color-default);
    --spectrum-textfield-text-color-hover: var(--spectrum-neutral-content-color-hover);
    --spectrum-textfield-text-color-focus: var(--spectrum-neutral-content-color-focus);
    --spectrum-textfield-text-color-focus-hover: var(--spectrum-neutral-content-color-focus-hover);
    --spectrum-textfield-text-color-keyboard-focus: var(--spectrum-neutral-content-color-key-focus);
    --spectrum-textfield-text-color-readonly: var(--spectrum-neutral-content-color-default);
    --spectrum-textfield-background-color-disabled: var(--highcontrast-textfield-background-color-disabled, var(--mod-textfield-background-color-disabled, var(--spectrum-gray-25)));
    --spectrum-textfield-border-color-disabled: var(--highcontrast-textfield-border-color-disabled, var(--mod-textfield-border-color-disabled, var(--spectrum-disabled-border-color)));
    --spectrum-textfield-text-color-disabled: var(--spectrum-disabled-content-color);
    --spectrum-textfield-border-color-invalid-default: var(--spectrum-negative-border-color-default);
    --spectrum-textfield-border-color-invalid-hover: var(--spectrum-negative-border-color-hover);
    --spectrum-textfield-border-color-invalid-focus: var(--spectrum-negative-border-color-focus);
    --spectrum-textfield-border-color-invalid-focus-hover: var(--spectrum-negative-border-color-focus-hover);
    --spectrum-textfield-border-color-invalid-keyboard-focus: var(--spectrum-negative-border-color-key-focus);
    --spectrum-textfield-icon-color-invalid: var(--spectrum-negative-visual-color);
    --spectrum-textfield-text-color-invalid: var(--spectrum-neutral-content-color-default);
    --spectrum-textfield-text-color-valid: var(--spectrum-neutral-content-color-default);
    --spectrum-textfield-icon-color-valid: var(--spectrum-positive-visual-color);
    --spectrum-textfield-focus-indicator-color: var(--spectrum-focus-indicator-color);
    --spectrum-text-area-min-inline-size: var(--spectrum-text-area-minimum-width);
    --spectrum-text-area-min-block-size: var(--spectrum-text-area-minimum-height);
}

:host([size='s']) #textfield {
    --spectrum-textfield-height: var(--spectrum-component-height-75);
    --spectrum-textfield-width: var(--spectrum-field-default-width-small);
    --spectrum-textfield-corner-radius: var(--spectrum-corner-radius-medium-size-small);
    --spectrum-textfield-spacing-inline: var(--spectrum-component-edge-to-text-75);
    --spectrum-textfield-spacing-block-start: var(--spectrum-component-top-to-text-75);
    --spectrum-textfield-spacing-block-end: var(--spectrum-component-bottom-to-text-75);
    --spectrum-textfield-icon-size-invalid: var(--spectrum-workflow-icon-size-75);
    --spectrum-textfield-icon-size-valid: var(--spectrum-checkmark-icon-size-75);
    --spectrum-textfield-icon-spacing-inline-start-invalid: var(--spectrum-text-to-visual-75);
    --spectrum-textfield-icon-spacing-inline-end-invalid: var(--spectrum-field-edge-to-alert-icon-small);
    --spectrum-textfield-icon-spacing-block-invalid: var(--spectrum-component-top-to-workflow-icon-75);
    --spectrum-textfield-icon-spacing-inline-start-valid: var(--spectrum-text-to-visual-75);
    --spectrum-textfield-icon-spacing-inline-end-valid: var(--spectrum-field-edge-to-validation-icon-small);
    --spectrum-textfield-icon-spacing-block-valid: var(--spectrum-field-top-to-validation-icon-small);
    --spectrum-textfield-font-size: var(--spectrum-font-size-75);
    --spectrum-textfield-character-count-spacing-block: var(--spectrum-component-bottom-to-text-75);
    --spectrum-textfield-character-count-spacing-block-side: var(--spectrum-component-top-to-text-75);
}

:host([size='l']) #textfield {
    --spectrum-textfield-height: var(--spectrum-component-height-200);
    --spectrum-textfield-width: var(--spectrum-field-default-width-large);
    --spectrum-textfield-corner-radius: var(--spectrum-corner-radius-medium-size-large);
    --spectrum-textfield-spacing-inline: var(--spectrum-component-edge-to-text-200);
    --spectrum-textfield-spacing-block-start: var(--spectrum-component-top-to-text-200);
    --spectrum-textfield-spacing-block-end: var(--spectrum-component-bottom-to-text-200);
    --spectrum-textfield-icon-size-invalid: var(--spectrum-workflow-icon-size-200);
    --spectrum-textfield-icon-size-valid: var(--spectrum-checkmark-icon-size-200);
    --spectrum-textfield-icon-spacing-inline-start-invalid: var(--spectrum-text-to-visual-200);
    --spectrum-textfield-icon-spacing-inline-end-invalid: var(--spectrum-field-edge-to-alert-icon-large);
    --spectrum-textfield-icon-spacing-block-invalid: var(--spectrum-component-top-to-workflow-icon-200);
    --spectrum-textfield-icon-spacing-inline-start-valid: var(--spectrum-text-to-visual-200);
    --spectrum-textfield-icon-spacing-inline-end-valid: var(--spectrum-field-edge-to-validation-icon-large);
    --spectrum-textfield-icon-spacing-block-valid: var(--spectrum-field-top-to-validation-icon-large);
    --spectrum-textfield-font-size: var(--spectrum-font-size-200);
    --spectrum-textfield-character-count-spacing-block: var(--spectrum-component-bottom-to-text-200);
    --spectrum-textfield-character-count-spacing-block-side: var(--spectrum-component-top-to-text-200);
}

:host([size='xl']) #textfield {
    --spectrum-textfield-height: var(--spectrum-component-height-300);
    --spectrum-textfield-width: var(--spectrum-field-default-width-extra-large);
    --spectrum-textfield-corner-radius: var(--spectrum-corner-radius-medium-size-extra-large);
    --spectrum-textfield-spacing-inline: var(--spectrum-component-edge-to-text-300);
    --spectrum-textfield-spacing-block-start: var(--spectrum-component-top-to-text-300);
    --spectrum-textfield-spacing-block-end: var(--spectrum-component-bottom-to-text-300);
    --spectrum-textfield-icon-size-invalid: var(--spectrum-workflow-icon-size-300);
    --spectrum-textfield-icon-size-valid: var(--spectrum-checkmark-icon-size-300);
    --spectrum-textfield-icon-spacing-inline-start-invalid: var(--spectrum-text-to-visual-300);
    --spectrum-textfield-icon-spacing-inline-end-invalid: var(--spectrum-field-edge-to-alert-icon-extra-large);
    --spectrum-textfield-icon-spacing-block-invalid: var(--spectrum-component-top-to-workflow-icon-300);
    --spectrum-textfield-icon-spacing-inline-start-valid: var(--spectrum-text-to-visual-300);
    --spectrum-textfield-icon-spacing-inline-end-valid: var(--spectrum-field-edge-to-validation-icon-extra-large);
    --spectrum-textfield-icon-spacing-block-valid: var(--spectrum-field-top-to-validation-icon-extra-large);
    --spectrum-textfield-font-size: var(--spectrum-font-size-300);
    --spectrum-textfield-character-count-spacing-block: var(--spectrum-component-bottom-to-text-300);
    --spectrum-textfield-character-count-spacing-block-side: var(--spectrum-component-top-to-text-300);
}

#textfield {
    text-overflow: ellipsis;
    inline-size: var(--mod-textfield-width, var(--spectrum-textfield-width));
    grid-template-rows: auto auto auto;
    grid-template-columns: auto auto;
    margin: 0;
    display: inline-grid;
    position: relative;
    overflow: visible;
}

:host([invalid]) #textfield .icon,
:host([valid]) #textfield .icon {
    pointer-events: all;
    grid-area: 2 / 2;
    margin-inline-start: auto;
    position: absolute;
    inset-block-start: 0;
}

#textfield.spectrum-Textfield--sideLabel .icon {
    grid-area: 1 / 2 / span 1 / span 1;
}

:host([valid]) #textfield .icon {
    color: var(--mod-textfield-icon-color-valid, var(--spectrum-textfield-icon-color-valid));
    inset-block-start: var(--mod-textfield-icon-spacing-block-valid, var(--spectrum-textfield-icon-spacing-block-valid));
    inset-block-end: var(--mod-textfield-icon-spacing-block-valid, var(--spectrum-textfield-icon-spacing-block-valid));
    inset-inline-end: var(--mod-textfield-icon-spacing-inline-end-valid, var(--spectrum-textfield-icon-spacing-inline-end-valid));
}

:host([invalid]) #textfield .icon {
    block-size: var(--mod-textfield-icon-size-invalid, var(--spectrum-textfield-icon-size-invalid));
    inline-size: var(--mod-textfield-icon-size-invalid, var(--spectrum-textfield-icon-size-invalid));
    color: var(--mod-textfield-icon-color-invalid, var(--spectrum-textfield-icon-color-invalid));
    inset-block-start: var(--mod-textfield-icon-spacing-block-invalid, var(--spectrum-textfield-icon-spacing-block-invalid));
    inset-block-end: var(--mod-textfield-icon-spacing-block-invalid, var(--spectrum-textfield-icon-spacing-block-invalid));
    inset-inline-end: var(--mod-textfield-icon-spacing-inline-end-invalid, var(--spectrum-textfield-icon-spacing-inline-end-invalid));
}

:host([disabled]) #textfield .icon,
:host([readonly]) #textfield .icon {
    color: #0000;
}

#textfield .spectrum-FieldLabel {
    grid-area: 1 / 1 / auto / span 1;
    margin-block-end: var(--mod-textfield-label-spacing-block, var(--spectrum-textfield-label-spacing-block));
}

:host([disabled]) #textfield .spectrum-FieldLabel {
    color: var(--highcontrast-textfield-text-color-disabled, var(--mod-textfield-text-color-disabled, var(--spectrum-textfield-text-color-disabled)));
}

#textfield .spectrum-HelpText {
    grid-area: 3 / 1 / auto / span 2;
    margin-block-start: var(--mod-textfield-helptext-spacing-block, var(--spectrum-textfield-helptext-spacing-block));
}

:host([disabled]) #textfield .spectrum-HelpText .spectrum-HelpText-text {
    color: var(--highcontrast-textfield-text-color-disabled, var(--mod-textfield-text-color-disabled, var(--spectrum-textfield-text-color-disabled)));
}

.spectrum-Textfield-characterCount {
    color: var(--mod-textfield-character-count-color, var(--spectrum-textfield-character-count-color));
    inline-size: auto;
    font-size: var(--mod-textfield-font-size, var(--spectrum-textfield-font-size));
    font-family: var(--mod-textfield-font-family, var(--spectrum-textfield-font-family));
    font-weight: var(--mod-textfield-font-weight, var(--spectrum-textfield-font-weight));
    font-style: var(--mod-textfield-font-style, var(--spectrum-textfield-font-style));
    line-height: var(--mod-textfield-line-height, var(--spectrum-textfield-line-height));
    grid-area: 1 / 2 / auto / span 1;
    justify-content: flex-end;
    align-items: flex-end;
    margin-block-end: var(--mod-textfield-character-count-spacing-block, var(--spectrum-textfield-character-count-spacing-block));
    margin-inline-start: var(--mod-textfield-character-count-spacing-inline, var(--spectrum-textfield-character-count-spacing-inline));
    margin-inline-end: 0;
    padding-inline-end: calc(var(--mod-textfield-corner-radius, var(--spectrum-textfield-corner-radius)) / 2);
    display: inline-flex;
}

:host([disabled]) #textfield .spectrum-Textfield-characterCount {
    color: var(--highcontrast-textfield-text-color-disabled, var(--mod-textfield-text-color-disabled, var(--spectrum-textfield-text-color-disabled)));
}

.spectrum-Textfield-characterCount:lang(ja),
.spectrum-Textfield-characterCount:lang(ko),
.spectrum-Textfield-characterCount:lang(zh) {
    --spectrum-textfield-line-height: var(--mod-textfield-line-height-cjk, var(--spectrum-textfield-line-height-cjk));
}

.input {
    line-height: var(--spectrum-textfield-input-line-height);
    box-sizing: border-box;
    inline-size: 100%;
    min-inline-size: var(--mod-textfield-min-width, var(--spectrum-textfield-min-width));
    block-size: var(--mod-textfield-height, var(--spectrum-textfield-height));
    padding-block-start: calc(var(--mod-textfield-spacing-block-start, var(--spectrum-textfield-spacing-block-start)) - var(--mod-textfield-border-width, var(--spectrum-textfield-border-width)));
    padding-block-end: calc(var(--mod-textfield-spacing-block-end, var(--spectrum-textfield-spacing-block-end)) - var(--mod-textfield-border-width, var(--spectrum-textfield-border-width)));
    padding-inline: calc(var(--mod-textfield-spacing-inline, var(--spectrum-textfield-spacing-inline)) - var(--mod-textfield-border-width, var(--spectrum-textfield-border-width)));
    vertical-align: top;
    background-color: var(--highcontrast-textfield-background-color, var(--spectrum-textfield-background-color));
    border-width: var(--mod-textfield-border-width, var(--spectrum-textfield-border-width));
    border-style: solid;
    border-color: var(--highcontrast-textfield-border-color, var(--mod-textfield-border-color, var(--spectrum-textfield-border-color)));
    border-radius: var(--mod-textfield-corner-radius, var(--spectrum-textfield-corner-radius));
    transition: border-color var(--mod-textfield-animation-duration, var(--spectrum-textfield-animation-duration)) ease-in-out;
    font-size: var(--mod-textfield-font-size, var(--spectrum-textfield-font-size));
    font-family: var(--mod-textfield-font-family, var(--spectrum-textfield-font-family));
    font-weight: var(--mod-textfield-font-weight, var(--spectrum-textfield-font-weight));
    font-style: var(--mod-textfield-font-style, var(--spectrum-textfield-font-style));
    color: var(--highcontrast-textfield-text-color-default, var(--mod-textfield-text-color-default, var(--spectrum-textfield-text-color-default)));
    text-overflow: ellipsis;
    forced-color-adjust: none;
    appearance: none;
    outline: none;
    grid-area: 2 / 1 / auto / span 2;
    margin: 0;
}

:host([type='number']) .input {
    -moz-appearance: textfield;
}

:host([type='number']) .input::-webkit-inner-spin-button,
:host([type='number']) .input::-webkit-outer-spin-button {
    -webkit-appearance: none;
    margin: 0;
}

.input:-moz-ui-invalid {
    box-shadow: none;
}

.input::placeholder {
    opacity: 1;
    font-size: var(--mod-textfield-font-size, var(--spectrum-textfield-font-size));
    font-family: var(--mod-textfield-font-family, var(--spectrum-textfield-font-family));
    font-weight: var(--mod-textfield-font-weight, var(--spectrum-textfield-font-weight));
    font-style: var(--mod-textfield-font-style, var(--spectrum-textfield-font-style));
    color: var(--highcontrast-textfield-text-color-default, var(--mod-textfield-text-color-default, var(--spectrum-textfield-text-color-default)));
    transition: color var(--mod-textfield-animation-duration, var(--spectrum-textfield-animation-duration)) ease-in-out;
}

.input:focus,
:host([focused]) #textfield .input {
    border-color: var(--highcontrast-textfield-border-color-focus, var(--mod-textfield-border-color-focus, var(--spectrum-textfield-border-color-focus)));
}

.input:focus,
.input:focus::placeholder,
:host([focused]) #textfield .input,
:host([focused]) #textfield .input::placeholder {
    color: var(--highcontrast-textfield-text-color-focus, var(--mod-textfield-text-color-focus, var(--spectrum-textfield-text-color-focus)));
}

:host([focused]) #textfield .input {
    border-color: var(--highcontrast-textfield-border-color-keyboard-focus, var(--mod-textfield-border-color-keyboard-focus, var(--spectrum-textfield-border-color-keyboard-focus)));
    outline: var(--mod-textfield-focus-indicator-width, var(--spectrum-textfield-focus-indicator-width)) solid;
    outline-color: var(--highcontrast-textfield-focus-indicator-color, var(--mod-textfield-focus-indicator-color, var(--spectrum-textfield-focus-indicator-color)));
    outline-offset: var(--mod-textfield-focus-indicator-gap, var(--spectrum-textfield-focus-indicator-gap));
}

:host([focused]) #textfield .input,
:host([focused]) #textfield .input::placeholder {
    color: var(--highcontrast-textfield-text-color-keyboard-focus, var(--mod-textfield-text-color-keyboard-focus, var(--spectrum-textfield-text-color-keyboard-focus)));
}

:host([valid]) #textfield .input {
    color: var(--highcontrast-textfield-text-color-valid, var(--mod-textfield-text-color-valid, var(--spectrum-textfield-text-color-valid)));
    padding-inline-end: calc(var(--mod-textfield-icon-spacing-inline-start-valid, var(--spectrum-textfield-icon-spacing-inline-start-valid)) + var(--mod-textfield-icon-size-valid, var(--spectrum-textfield-icon-size-valid)) + var(--mod-textfield-icon-spacing-inline-end-valid, var(--spectrum-textfield-icon-spacing-inline-end-valid)) - var(--mod-textfield-border-width, var(--spectrum-textfield-border-width)));
}

:host([invalid]) #textfield .input {
    color: var(--highcontrast-textfield-text-color-invalid, var(--mod-textfield-text-color-invalid, var(--spectrum-textfield-text-color-invalid)));
    border-color: var(--highcontrast-textfield-border-color-invalid-default, var(--mod-textfield-border-color-invalid-default, var(--spectrum-textfield-border-color-invalid-default)));
    padding-inline-end: calc(var(--mod-textfield-icon-spacing-inline-start-invalid, var(--spectrum-textfield-icon-spacing-inline-start-invalid)) + var(--mod-textfield-icon-size-invalid, var(--spectrum-textfield-icon-size-invalid)) + var(--mod-textfield-icon-spacing-inline-end-invalid, var(--spectrum-textfield-icon-spacing-inline-end-invalid)) - var(--mod-textfield-border-width, var(--spectrum-textfield-border-width)));
}

:host([invalid]) #textfield .input:focus,
:host([invalid][focused]) #textfield .input,
:host([invalid]) #textfield:focus .input {
    border-color: var(--highcontrast-textfield-border-color-invalid-focus, var(--mod-textfield-border-color-invalid-focus, var(--spectrum-textfield-border-color-invalid-focus)));
}

:host([invalid][focused]) #textfield .input {
    border-color: var(--highcontrast-textfield-border-color-invalid-keyboard-focus, var(--mod-textfield-border-color-invalid-keyboard-focus, var(--spectrum-textfield-border-color-invalid-keyboard-focus)));
}

.input:disabled,
:host([disabled]) #textfield .input {
    background-color: var(--spectrum-textfield-background-color-disabled);
    border-color: var(--spectrum-textfield-border-color-disabled);
    resize: none;
    opacity: 1;
}

.input:disabled,
.input:disabled::placeholder,
:host([disabled]) #textfield .input,
:host([disabled]) #textfield .input::placeholder {
    color: var(--highcontrast-textfield-text-color-disabled, var(--mod-textfield-text-color-disabled, var(--spectrum-textfield-text-color-disabled)));
}

.input:read-only,
:host([readonly]) #textfield .input {
    background-color: initial;
    border-color: var(--highcontrast-textfield-border-color-readonly, transparent);
    color: var(--highcontrast-textfield-text-color-readonly, var(--mod-textfield-text-color-readonly, var(--spectrum-textfield-text-color-readonly)));
    outline: none;
}

.input:read-only::placeholder,
:host([readonly]) #textfield .input::placeholder {
    color: var(--highcontrast-textfield-text-color-readonly, var(--mod-textfield-text-color-readonly, var(--spectrum-textfield-text-color-readonly)));
    background-color: initial;
}

:host([disabled]) #textfield .input:read-only::placeholder,
:host([disabled][readonly]) #textfield #textfield .input::placeholder {
    color: var(--highcontrast-textfield-text-color-disabled, var(--mod-textfield-text-color-disabled, var(--spectrum-textfield-text-color-disabled)));
}

@media (hover: hover) {
    .input:hover,
    #textfield:hover .input {
        border-color: var(--highcontrast-textfield-border-color-hover, var(--mod-textfield-border-color-hover, var(--spectrum-textfield-border-color-hover)));
    }

    .input:hover,
    .input:hover::placeholder,
    #textfield:hover .input,
    #textfield:hover .input::placeholder {
        color: var(--highcontrast-textfield-text-color-hover, var(--mod-textfield-text-color-hover, var(--spectrum-textfield-text-color-hover)));
    }

    .input:focus:hover,
    :host([focused]) #textfield .input:hover {
        border-color: var(--highcontrast-textfield-border-color-focus-hover, var(--mod-textfield-border-color-focus-hover, var(--spectrum-textfield-border-color-focus-hover)));
    }

    .input:focus:hover,
    .input:focus:hover::placeholder,
    :host([focused]) #textfield .input:hover,
    :host([focused]) #textfield .input:hover::placeholder {
        color: var(--highcontrast-textfield-text-color-focus-hover, var(--mod-textfield-text-color-focus-hover, var(--spectrum-textfield-text-color-focus-hover)));
    }

    .input:focus:hover,
    :host([focused]) #textfield:hover .input,
    :host([focused]) #textfield:hover .input,
    #textfield:focus:hover .input {
        border-color: var(--highcontrast-textfield-border-color-focus-hover, var(--mod-textfield-border-color-focus-hover, var(--spectrum-textfield-border-color-focus-hover)));
        color: var(--highcontrast-textfield-text-color-focus-hover, var(--mod-textfield-text-color-focus-hover, var(--spectrum-textfield-text-color-focus-hover)));
    }

    .input:focus:hover::placeholder,
    :host([focused]) #textfield:hover .input::placeholder,
    :host([focused]) #textfield:hover .input::placeholder,
    #textfield:focus:hover .input::placeholder {
        color: var(--highcontrast-textfield-text-color-focus-hover, var(--mod-textfield-text-color-focus-hover, var(--spectrum-textfield-text-color-focus-hover)));
    }

    :host([invalid]) #textfield:hover:not(.is-disabled, .is-readOnly) .input,
    :host([invalid]) #textfield:not(.is-disabled, .is-readOnly) .input:hover {
        border-color: var(--highcontrast-textfield-border-color-invalid-hover, var(--mod-textfield-border-color-invalid-hover, var(--spectrum-textfield-border-color-invalid-hover)));
    }

    :host([invalid]) #textfield .input:focus:hover,
    :host([invalid][focused]) #textfield .input:hover,
    :host([invalid][focused]) #textfield:hover .input,
    :host([invalid][focused]) #textfield:hover .input,
    :host([invalid]) #textfield:focus .input:hover,
    :host([invalid]) #textfield:focus:hover .input {
        border-color: var(--highcontrast-textfield-border-color-invalid-focus-hover, var(--mod-textfield-border-color-invalid-focus-hover, var(--spectrum-textfield-border-color-invalid-focus-hover)));
    }

    :host([disabled]) #textfield:hover .input {
        background-color: var(--spectrum-textfield-background-color-disabled);
        border-color: var(--spectrum-textfield-border-color-disabled);
        resize: none;
        opacity: 1;
    }

    :host([disabled]) #textfield:hover .input,
    :host([disabled]) #textfield:hover .input::placeholder {
        color: var(--highcontrast-textfield-text-color-disabled, var(--mod-textfield-text-color-disabled, var(--spectrum-textfield-text-color-disabled)));
    }

    :host([readonly]) #textfield:hover .input {
        border-color: var(--highcontrast-textfield-border-color-readonly, transparent);
        outline: none;
    }

    :host([readonly]) #textfield:hover .input,
    :host([readonly]) #textfield:hover .input::placeholder {
        background-color: initial;
        color: var(--highcontrast-textfield-text-color-readonly, var(--mod-textfield-text-color-readonly, var(--spectrum-textfield-text-color-readonly)));
    }

    :host([disabled][readonly]) #textfield #textfield:hover .input::placeholder,
    :host([disabled]) #textfield:hover .input:read-only::placeholder,
    :host([disabled][readonly]) #textfield:hover #textfield .input::placeholder,
    :host([disabled][readonly]) #textfield:hover #textfield:hover .input::placeholder {
        color: var(--highcontrast-textfield-text-color-disabled, var(--mod-textfield-text-color-disabled, var(--spectrum-textfield-text-color-disabled)));
    }
}

:host([readonly][disabled]) #textfield .input {
    border-color: var(--highcontrast-textfield-border-color-disabled, transparent);
    color: var(--highcontrast-textfield-text-color-disabled, var(--mod-textfield-text-color-disabled, var(--spectrum-textfield-text-color-disabled)));
}

.spectrum-Textfield--sideLabel {
    grid-template-rows: auto auto;
    grid-template-columns: auto auto auto;
}

.spectrum-Textfield--sideLabel .spectrum-FieldLabel {
    grid-area: 1 / 1 / span 2 / span 1;
    margin-inline-end: var(--mod-textfield-label-spacing-inline-side-label, var(--spectrum-textfield-label-spacing-inline-side-label));
}

.spectrum-Textfield--sideLabel .spectrum-Textfield-characterCount {
    grid-area: 1 / 3 / auto / span 1;
    align-items: flex-start;
    margin-block-start: var(--mod-textfield-character-count-spacing-block-side, var(--spectrum-textfield-character-count-spacing-block-side));
    margin-inline-start: var(--mod-textfield-character-count-spacing-inline-side, var(--spectrum-textfield-character-count-spacing-inline-side));
}

.spectrum-Textfield--sideLabel .spectrum-HelpText {
    grid-area: 2 / 2 / auto / span 1;
}

.spectrum-Textfield--sideLabel .input,
.spectrum-Textfield--sideLabel .icon {
    grid-area: 1 / 2 / span 1 / span 1;
}

:host([multiline]) .input {
    line-height: var(--mod-textfield-line-height, var(--spectrum-textfield-line-height));
    min-inline-size: var(--mod-text-area-min-inline-size, var(--spectrum-text-area-min-inline-size));
    min-block-size: var(--mod-text-area-min-block-size, var(--spectrum-text-area-min-block-size));
    resize: inherit;
}

:host([multiline]) .input:lang(ja),
:host([multiline]) .input:lang(ko),
:host([multiline]) .input:lang(zh) {
    --spectrum-textfield-line-height: var(--mod-textfield-line-height-cjk, var(--spectrum-textfield-line-height-cjk));
}

:host([multiline][grows]) .input {
    grid-row: 2;
}

:host([multiline][grows]) .spectrum-Textfield--sideLabel .input {
    grid-row: 1;
}

@media (forced-colors: active) {
    :host {
        --highcontrast-textfield-border-color: CanvasText;
        --highcontrast-textfield-border-color-hover: Highlight;
        --highcontrast-textfield-border-color-focus: Highlight;
        --highcontrast-textfield-border-color-keyboard-focus: Highlight;
        --highcontrast-textfield-border-color-focus-hover: Highlight;
        --highcontrast-textfield-focus-indicator-color: Highlight;
        --highcontrast-textfield-background-color: Canvas;
        --highcontrast-textfield-background-color-disabled: Canvas;
        --highcontrast-textfield-border-color-disabled: GrayText;
        --highcontrast-textfield-border-color-readonly: CanvasText;
        --highcontrast-textfield-border-color-invalid-default: Highlight;
        --highcontrast-textfield-border-color-invalid-hover: Highlight;
        --highcontrast-textfield-border-color-invalid-focus: Highlight;
        --highcontrast-textfield-border-color-invalid-keyboard-focus: Highlight;
        --highcontrast-textfield-border-color-invalid-focus-hover: Highlight;
    }

    #textfield,
    #textfield .input::placeholder {
        --highcontrast-textfield-text-color-valid: CanvasText;
        --highcontrast-textfield-text-color-invalid: CanvasText;
        --highcontrast-textfield-text-color-default: CanvasText;
        --highcontrast-textfield-text-color-hover: CanvasText;
        --highcontrast-textfield-text-color-focus: CanvasText;
        --highcontrast-textfield-text-color-focus-hover: CanvasText;
        --highcontrast-textfield-text-color-keyboard-focus: CanvasText;
        --highcontrast-textfield-text-color-disabled: GrayText;
        --highcontrast-textfield-text-color-readonly: CanvasText;
    }
}
