/*
Copyright 2023 Adobe. All rights reserved.
This file is licensed to you under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License. You may obtain a copy
of the License at http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software distributed under
the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS
OF ANY KIND, either express or implied. See the License for the specific language
governing permissions and limitations under the License.
*/

/* THIS FILE IS MACHINE GENERATED. DO NOT EDIT */
:host {
    --spectrum-textfield-quiet-texticon-border-bottom-size: var(
        --spectrum-textfield-m-quiet-texticon-border-bottom-size,
        var(--spectrum-alias-input-border-size)
    );
    --spectrum-textfield-quiet-texticon-success-icon-margin-left: var(
        --spectrum-textfield-m-quiet-texticon-success-icon-margin-left,
        var(--spectrum-global-dimension-size-150)
    );
    --spectrum-textfield-quiet-texticon-invalid-icon-margin-left: var(
        --spectrum-textfield-m-quiet-texticon-invalid-icon-margin-left,
        var(--spectrum-global-dimension-size-150)
    );
    --spectrum-textfield-quiet-texticon-border-radius: var(
        --spectrum-textfield-m-quiet-texticon-border-radius,
        var(--spectrum-global-dimension-size-0)
    );
    --spectrum-textfield-quiet-texticon-padding-left: var(
        --spectrum-textfield-m-quiet-texticon-padding-left,
        var(--spectrum-global-dimension-size-0)
    );
    --spectrum-textfield-quiet-texticon-padding-right: var(
        --spectrum-textfield-m-quiet-texticon-padding-right,
        var(--spectrum-global-dimension-size-0)
    );
    --spectrum-textfield-texticon-border-size: var(
        --spectrum-textfield-m-texticon-border-size,
        var(--spectrum-alias-input-border-size)
    );
    --spectrum-textfield-texticon-text-line-height: var(
        --spectrum-textfield-m-texticon-text-line-height,
        var(--spectrum-alias-component-text-line-height)
    );
    --spectrum-textfield-texticon-text-size: var(
        --spectrum-textfield-m-texticon-text-size,
        var(--spectrum-global-dimension-font-size-100)
    );
    --spectrum-textfield-texticon-placeholder-text-font-style: var(
        --spectrum-textfield-m-texticon-placeholder-text-font-style,
        var(--spectrum-global-font-style-italic)
    );
    --spectrum-textfield-texticon-placeholder-text-font-weight: var(
        --spectrum-textfield-m-texticon-placeholder-text-font-weight,
        var(--spectrum-global-font-weight-regular)
    );
    --spectrum-textfield-texticon-success-icon-height: var(
        --spectrum-textfield-m-texticon-success-icon-height,
        var(--spectrum-alias-ui-icon-checkmark-size-100)
    );
    --spectrum-textfield-texticon-success-icon-width: var(
        --spectrum-textfield-m-texticon-success-icon-width,
        var(--spectrum-alias-ui-icon-checkmark-size-100)
    );
    --spectrum-textfield-texticon-success-icon-margin-left: var(
        --spectrum-textfield-m-texticon-success-icon-margin-left,
        var(--spectrum-global-dimension-size-150)
    );
    --spectrum-textfield-texticon-invalid-icon-height: var(
        --spectrum-textfield-m-texticon-invalid-icon-height,
        var(--spectrum-alias-ui-icon-alert-size-100)
    );
    --spectrum-textfield-texticon-invalid-icon-width: var(
        --spectrum-textfield-m-texticon-invalid-icon-width,
        var(--spectrum-alias-ui-icon-alert-size-100)
    );
    --spectrum-textfield-texticon-invalid-icon-margin-left: var(
        --spectrum-textfield-m-texticon-invalid-icon-margin-left,
        var(--spectrum-global-dimension-size-150)
    );
    --spectrum-textfield-texticon-min-width: var(
        --spectrum-textfield-m-texticon-min-width,
        var(--spectrum-global-dimension-size-600)
    );
    --spectrum-textfield-texticon-border-radius: var(
        --spectrum-textfield-m-texticon-border-radius,
        var(--spectrum-alias-border-radius-regular)
    );
    --spectrum-textfield-texticon-padding-right: var(
        --spectrum-textfield-m-texticon-padding-right,
        var(--spectrum-global-dimension-size-150)
    );
    --spectrum-textfield-texticon-height: var(
        --spectrum-textfield-m-texticon-height,
        var(--spectrum-global-dimension-size-400)
    );
    --spectrum-textarea-text-padding-top: var(
        --spectrum-textarea-m-text-padding-top,
        var(--spectrum-global-dimension-size-75)
    );
    --spectrum-textarea-text-padding-bottom: var(
        --spectrum-textarea-m-text-padding-bottom,
        var(--spectrum-global-dimension-size-115)
    );
    --spectrum-textarea-padding-left: var(
        --spectrum-textarea-m-padding-left,
        var(--spectrum-global-dimension-size-150)
    );
    --spectrum-textarea-padding-right: var(
        --spectrum-textarea-m-padding-right,
        var(--spectrum-global-dimension-size-150)
    );
    --spectrum-textarea-height: var(
        --spectrum-textarea-m-height,
        var(--spectrum-global-dimension-size-400)
    );
    --spectrum-textfield-texticon-padding-top: 3px;
    --spectrum-textfield-texticon-padding-bottom: 5px;
    --spectrum-textfield-texticon-text-font-family: var(
        --spectrum-alias-body-text-font-family,
        var(--spectrum-global-font-family-base)
    );
    --spectrum-textfield-texticon-icon-gap: var(
        --spectrum-global-dimension-size-65
    );
    --spectrum-textfield-quiet-texticon-icon-gap: var(
        --spectrum-global-dimension-size-75
    );
    --spectrum-textarea-min-height: var(--spectrum-textarea-height);
    --spectrum-textarea-height-adjusted: auto;
    --spectrum-textarea-padding-top: var(--spectrum-textarea-text-padding-top);
    --spectrum-textarea-padding-bottom: var(
        --spectrum-textarea-text-padding-bottom
    );
    --spectrum-textfield-texticon-padding-left: var(
        --spectrum-alias-item-workflow-padding-left-m
    );
}
#textfield {
    display: inline-flex;
    min-width: var(--spectrum-textfield-texticon-min-width);
    position: relative;
    width: var(
        --spectrum-alias-single-line-width,
        var(--spectrum-global-dimension-size-2400)
    );
}
:host([quiet][multiline]) #textfield .input {
    height: var(--spectrum-textfield-texticon-height);
    min-height: var(--spectrum-textfield-texticon-height);
}
#textfield:after {
    border-color: #0000;
    border-radius: calc(
        var(--spectrum-textfield-texticon-border-radius) +
            var(
                --spectrum-textfield-m-texticon-focus-ring-gap,
                var(--spectrum-alias-input-focusring-gap)
            )
    );
    content: '';
    inset: 0;
    margin: calc(
        var(
                --spectrum-textfield-m-texticon-focus-ring-gap,
                var(--spectrum-alias-input-focusring-gap)
            ) * -1
    );
    pointer-events: none;
    position: absolute;
    transition: box-shadow var(--spectrum-global-animation-duration-100, 0.13s)
            ease-in-out,
        border-color var(--spectrum-global-animation-duration-100, 0.13s)
            ease-in-out;
}
:host([quiet]) #textfield:after {
    border-radius: 0;
}
.input {
    -webkit-appearance: none;
    -moz-appearance: textfield;
    border: var(--spectrum-textfield-texticon-border-size) solid;
    border-radius: var(--spectrum-textfield-texticon-border-radius);
    box-sizing: border-box;
    font-family: var(--spectrum-textfield-texticon-text-font-family);
    font-size: var(--spectrum-textfield-texticon-text-size);
    height: var(--spectrum-textfield-texticon-height);
    line-height: var(--spectrum-textfield-texticon-text-line-height);
    margin: 0;
    outline: none;
    overflow: visible;
    padding: var(--spectrum-textfield-texticon-padding-top)
        var(--spectrum-textfield-texticon-padding-right)
        var(--spectrum-textfield-texticon-padding-bottom)
        calc(var(--spectrum-textfield-texticon-padding-left) + 1px);
    text-indent: 0;
    text-overflow: ellipsis;
    transition: border-color
        var(--spectrum-global-animation-duration-100, 0.13s) ease-in-out;
    vertical-align: top;
    width: 100%;
}
.input::placeholder {
    font-style: var(--spectrum-textfield-texticon-placeholder-text-font-style);
    font-weight: var(
        --spectrum-textfield-texticon-placeholder-text-font-weight
    );
    opacity: 1;
    transition: color var(--spectrum-global-animation-duration-100, 0.13s)
        ease-in-out;
}
.input:lang(ja)::placeholder,
.input:lang(ko)::placeholder,
.input:lang(zh)::placeholder {
    font-style: normal;
}
.input:hover::placeholder {
    font-weight: var(
        --spectrum-textfield-texticon-placeholder-text-font-weight
    );
}
.input:disabled {
    opacity: 1;
    resize: none;
}
.input:disabled::placeholder {
    font-weight: var(
        --spectrum-textfield-texticon-placeholder-text-font-weight
    );
}
.input::-ms-clear {
    height: 0;
    width: 0;
}
.input::-webkit-inner-spin-button,
.input::-webkit-outer-spin-button {
    -webkit-appearance: none;
    margin: 0;
}
.input:-moz-ui-invalid {
    box-shadow: none;
}
:host([dir='ltr'][valid]) #textfield .input {
    padding-right: calc(
        var(--spectrum-textfield-texticon-padding-right) +
            var(--spectrum-textfield-texticon-success-icon-width) +
            var(
                --spectrum-textfield-icon-inline-end-override,
                var(--spectrum-textfield-texticon-success-icon-margin-left)
            )
    );
}
:host([dir='rtl'][valid]) #textfield .input {
    padding-left: calc(
        var(--spectrum-textfield-texticon-padding-right) +
            var(--spectrum-textfield-texticon-success-icon-width) +
            var(
                --spectrum-textfield-icon-inline-end-override,
                var(--spectrum-textfield-texticon-success-icon-margin-left)
            )
    );
}
:host([dir='ltr'][invalid]) #textfield .input {
    padding-right: calc(
        var(--spectrum-textfield-texticon-padding-right) +
            var(--spectrum-textfield-texticon-invalid-icon-width) +
            var(
                --spectrum-textfield-icon-inline-end-override,
                var(--spectrum-textfield-texticon-invalid-icon-margin-left)
            )
    );
}
:host([dir='rtl'][invalid]) #textfield .input {
    padding-left: calc(
        var(--spectrum-textfield-texticon-padding-right) +
            var(--spectrum-textfield-texticon-invalid-icon-width) +
            var(
                --spectrum-textfield-icon-inline-end-override,
                var(--spectrum-textfield-texticon-invalid-icon-margin-left)
            )
    );
}
:host([multiline]) .input {
    height: var(--spectrum-textarea-height-adjusted);
    min-height: var(--spectrum-textarea-min-height);
    overflow: auto;
    padding: var(--spectrum-textarea-padding-top)
        var(--spectrum-textarea-padding-right)
        var(--spectrum-textarea-padding-bottom)
        calc(var(--spectrum-textarea-padding-left) - 1px);
}
:host([dir='ltr'][quiet]) .input {
    padding-left: var(--spectrum-textfield-quiet-texticon-padding-left);
}
:host([dir='rtl'][quiet]) .input {
    padding-right: var(--spectrum-textfield-quiet-texticon-padding-left);
}
:host([dir='ltr'][quiet]) .input {
    padding-right: var(--spectrum-textfield-quiet-texticon-padding-right);
}
:host([dir='rtl'][quiet]) .input {
    padding-left: var(--spectrum-textfield-quiet-texticon-padding-right);
}
:host([quiet]) .input {
    border-bottom-width: var(
        --spectrum-textfield-quiet-texticon-border-bottom-size
    );
    border-left-width: 0;
    border-radius: var(--spectrum-textfield-quiet-texticon-border-radius);
    border-right-width: 0;
    border-top-width: 0;
    overflow-y: hidden;
    resize: none;
}
:host([dir='ltr'][invalid][quiet]) .input {
    padding-right: calc(
        var(--spectrum-textfield-texticon-invalid-icon-width) +
            var(--spectrum-textfield-quiet-texticon-invalid-icon-margin-left)
    );
}
:host([dir='rtl'][invalid][quiet]) .input {
    padding-left: calc(
        var(--spectrum-textfield-texticon-invalid-icon-width) +
            var(--spectrum-textfield-quiet-texticon-invalid-icon-margin-left)
    );
}
:host([dir='ltr'][valid][quiet]) .input {
    padding-right: calc(
        var(--spectrum-textfield-texticon-success-icon-width) +
            var(--spectrum-textfield-quiet-texticon-success-icon-margin-left)
    );
}
:host([dir='rtl'][valid][quiet]) .input {
    padding-left: calc(
        var(--spectrum-textfield-texticon-success-icon-width) +
            var(--spectrum-textfield-quiet-texticon-success-icon-margin-left)
    );
}
.icon {
    pointer-events: all;
    position: absolute;
}
:host([dir='ltr'][quiet]) .icon {
    padding-right: 0;
}
:host([dir='rtl'][quiet]) .icon {
    padding-left: 0;
}
:host([dir='ltr'][invalid]) #textfield .icon {
    right: var(
        --spectrum-textfield-icon-inline-end-override,
        var(--spectrum-textfield-texticon-invalid-icon-margin-left)
    );
}
:host([dir='rtl'][invalid]) #textfield .icon {
    left: var(
        --spectrum-textfield-icon-inline-end-override,
        var(--spectrum-textfield-texticon-invalid-icon-margin-left)
    );
}
:host([invalid]) #textfield .icon {
    bottom: calc(
        var(--spectrum-textfield-texticon-height) / 2 -
            var(--spectrum-textfield-texticon-invalid-icon-height) / 2
    );
    height: var(--spectrum-textfield-texticon-invalid-icon-height);
    width: var(--spectrum-textfield-texticon-invalid-icon-width);
}
:host([dir='ltr'][quiet][invalid]) #textfield .icon {
    right: var(--spectrum-textfield-icon-inline-end-override, 0);
}
:host([dir='rtl'][quiet][invalid]) #textfield .icon {
    left: var(--spectrum-textfield-icon-inline-end-override, 0);
}
:host([dir='ltr'][valid]) #textfield .icon {
    right: var(
        --spectrum-textfield-icon-inline-end-override,
        var(--spectrum-textfield-texticon-success-icon-margin-left)
    );
}
:host([dir='rtl'][valid]) #textfield .icon {
    left: var(
        --spectrum-textfield-icon-inline-end-override,
        var(--spectrum-textfield-texticon-success-icon-margin-left)
    );
}
:host([valid]) #textfield .icon {
    bottom: calc(
        var(--spectrum-textfield-texticon-height) / 2 -
            var(--spectrum-textfield-texticon-success-icon-height) / 2
    );
    height: var(--spectrum-textfield-texticon-success-icon-height);
    width: var(--spectrum-textfield-texticon-success-icon-width);
}
:host([dir='ltr'][quiet][valid]) #textfield .icon {
    right: var(--spectrum-textfield-icon-inline-end-override, 0);
}
:host([dir='rtl'][quiet][valid]) #textfield .icon {
    left: var(--spectrum-textfield-icon-inline-end-override, 0);
}
:host([dir='ltr']) .icon-workflow {
    left: var(--spectrum-textfield-texticon-padding-left);
}
:host([dir='rtl']) .icon-workflow {
    right: var(--spectrum-textfield-texticon-padding-left);
}
.icon-workflow {
    display: block;
    height: var(
        --spectrum-alias-workflow-icon-size-m,
        var(--spectrum-global-dimension-size-225)
    );
    position: absolute;
    top: calc(
        var(--spectrum-textfield-texticon-height) / 2 -
            var(
                --spectrum-alias-workflow-icon-size-m,
                var(--spectrum-global-dimension-size-225)
            ) / 2
    );
    width: var(
        --spectrum-alias-workflow-icon-size-m,
        var(--spectrum-global-dimension-size-225)
    );
}
:host([dir='ltr'][quiet]) .icon-workflow {
    left: 0;
}
:host([dir='rtl'][quiet]) .icon-workflow {
    right: 0;
}
:host([dir='ltr'][quiet]) .icon-workflow ~ .input {
    padding-left: calc(
        var(
                --spectrum-alias-workflow-icon-size-m,
                var(--spectrum-global-dimension-size-225)
            ) + var(--spectrum-textfield-quiet-texticon-icon-gap)
    );
}
:host([dir='rtl'][quiet]) .icon-workflow ~ .input {
    padding-right: calc(
        var(
                --spectrum-alias-workflow-icon-size-m,
                var(--spectrum-global-dimension-size-225)
            ) + var(--spectrum-textfield-quiet-texticon-icon-gap)
    );
}
:host([dir='ltr']) .icon-workflow + .input {
    padding-left: calc(
        var(--spectrum-textfield-texticon-padding-left) +
            var(
                --spectrum-alias-workflow-icon-size-m,
                var(--spectrum-global-dimension-size-225)
            ) + var(--spectrum-textfield-texticon-icon-gap)
    );
}
:host([dir='rtl']) .icon-workflow + .input {
    padding-right: calc(
        var(--spectrum-textfield-texticon-padding-left) +
            var(
                --spectrum-alias-workflow-icon-size-m,
                var(--spectrum-global-dimension-size-225)
            ) + var(--spectrum-textfield-texticon-icon-gap)
    );
}
:host([multiline]) .icon-workflow ~ .input {
    height: var(--spectrum-textfield-texticon-height);
    min-height: var(--spectrum-textfield-texticon-height);
}
#textfield:hover .input {
    border-color: var(
        --spectrum-textfield-m-texticon-border-color-hover,
        var(--spectrum-alias-input-border-color-hover)
    );
    box-shadow: none;
}
#textfield:hover .input::placeholder {
    color: var(
        --spectrum-textfield-m-texticon-placeholder-text-color-hover,
        var(--spectrum-alias-placeholder-text-color-hover)
    );
}
#textfield:hover .icon-workflow {
    color: var(
        --spectrum-textfield-m-texticon-icon-color-hover,
        var(--spectrum-alias-component-icon-color-hover)
    );
}
#textfield:active .input {
    border-color: var(
        --spectrum-textfield-m-texticon-border-color-down,
        var(--spectrum-alias-input-border-color-down)
    );
}
#textfield:active .icon-workflow {
    color: var(
        --spectrum-textfield-m-texticon-icon-color-down,
        var(--spectrum-alias-component-icon-color-down)
    );
}
:host([valid]) #textfield .icon {
    color: var(
        --spectrum-textfield-m-texticon-validation-icon-color-valid,
        var(--spectrum-semantic-positive-icon-color)
    );
}
:host([invalid]) #textfield .icon {
    color: var(
        --spectrum-textfield-m-texticon-validation-icon-color-invalid,
        var(--spectrum-semantic-negative-icon-color)
    );
}
:host([invalid]) #textfield:hover .input {
    border-color: var(
        --spectrum-textfield-m-texticon-border-color-invalid-hover,
        var(--spectrum-alias-input-border-color-invalid-hover)
    );
}
:host([disabled]) #textfield .icon {
    color: var(
        --spectrum-textfield-m-texticon-validation-icon-color-invalid-disabled,
        var(--spectrum-alias-background-color-transparent)
    );
}
:host([disabled]) #textfield .icon-workflow {
    color: var(
        --spectrum-textfield-m-texticon-icon-color-disabled,
        var(--spectrum-alias-component-icon-color-disabled)
    );
}
.icon-workflow {
    color: var(
        --spectrum-textfield-m-texticon-icon-color,
        var(--spectrum-alias-component-icon-color-default)
    );
}
.icon,
.icon-workflow {
    pointer-events: none;
}
:host([focused]) #textfield:after {
    box-shadow: 0 0 0
        var(
            --spectrum-textfield-m-texticon-focus-ring-border-width,
            var(--spectrum-alias-component-focusring-size)
        )
        var(
            --spectrum-textfield-m-textonly-focus-ring-border-color-key-focus,
            var(--spectrum-alias-focus-ring-color)
        );
}
:host([focused][quiet]) #textfield .input {
    box-shadow: none;
}
:host([focused][quiet]) #textfield:after {
    border-bottom: 2px solid
        var(
            --spectrum-textfield-m-textonly-focus-ring-border-color-key-focus,
            var(--spectrum-alias-focus-ring-color)
        );
    bottom: calc(
        var(
                --spectrum-alias-input-quiet-focusline-gap,
                var(--spectrum-global-dimension-static-size-10)
            ) * -1
    );
    box-shadow: none;
    margin: 0;
}
.input {
    background-color: var(
        --spectrum-textfield-m-texticon-background-color,
        var(--spectrum-global-color-gray-50)
    );
    border-color: var(
        --spectrum-textfield-m-texticon-border-color,
        var(--spectrum-alias-input-border-color-default)
    );
    color: var(
        --spectrum-textfield-m-texticon-text-color,
        var(--spectrum-alias-component-text-color-default)
    );
}
.input::placeholder {
    color: var(
        --spectrum-textfield-m-texticon-placeholder-text-color,
        var(--spectrum-global-color-gray-600)
    );
}
.input:focus,
:host([focused]) #textfield .input {
    border-color: var(
        --spectrum-textfield-m-texticon-border-color-down,
        var(--spectrum-alias-input-border-color-down)
    );
}
.input.focus-visible,
:host([focused]) #textfield .input {
    border-color: var(
        --spectrum-textfield-m-texticon-border-color-key-focus,
        var(--spectrum-alias-input-border-color-key-focus)
    );
}
.input:focus-visible,
:host([focused]) #textfield .input {
    border-color: var(
        --spectrum-textfield-m-texticon-border-color-key-focus,
        var(--spectrum-alias-input-border-color-key-focus)
    );
}
:host([invalid]) #textfield .input {
    border-color: var(
        --spectrum-textfield-m-texticon-border-color-invalid,
        var(--spectrum-alias-input-border-color-invalid-default)
    );
}
:host([focused][invalid]) #textfield .input,
:host([invalid]) #textfield .input:focus {
    border-color: var(
        --spectrum-textfield-m-texticon-border-color-invalid-mouse-focus,
        var(--spectrum-alias-input-border-color-invalid-mouse-focus)
    );
}
:host([focused][invalid]) #textfield .input,
:host([invalid]) #textfield .input.focus-visible {
    border-color: var(
        --spectrum-textfield-m-texticon-border-color-invalid-key-focus,
        var(--spectrum-alias-input-border-color-invalid-key-focus)
    );
}
:host([focused][invalid]) #textfield .input,
:host([invalid]) #textfield .input:focus-visible {
    border-color: var(
        --spectrum-textfield-m-texticon-border-color-invalid-key-focus,
        var(--spectrum-alias-input-border-color-invalid-key-focus)
    );
}
.input:disabled,
:host([disabled]) #textfield .input,
:host([disabled]) #textfield:hover .input {
    -webkit-text-fill-color: var(
        --spectrum-textfield-m-texticon-text-color-disabled,
        var(--spectrum-alias-component-text-color-disabled)
    );
    background-color: var(
        --spectrum-textfield-m-texticon-background-color-disabled,
        var(--spectrum-global-color-gray-200)
    );
    border-color: var(
        --spectrum-textfield-m-texticon-border-color-disabled,
        var(--spectrum-alias-input-border-color-disabled)
    );
    color: var(
        --spectrum-textfield-m-texticon-text-color-disabled,
        var(--spectrum-alias-component-text-color-disabled)
    );
}
.input:disabled::placeholder,
:host([disabled]) #textfield .input::placeholder,
:host([disabled]) #textfield:hover .input::placeholder {
    color: var(
        --spectrum-textfield-m-texticon-placeholder-text-color-disabled,
        var(--spectrum-alias-text-color-disabled)
    );
}
.input:read-only,
:host([readonly]) #textfield .input,
:host([readonly]) #textfield:hover .input {
    -webkit-text-fill-color: var(--spectrum-global-color-gray-800);
    background-color: var(
        --spectrum-alias-background-color-transparent,
        transparent
    );
    border-color: var(
        --spectrum-alias-background-color-transparent,
        transparent
    );
    color: var(--spectrum-global-color-gray-800);
}
:host([quiet]) .input {
    background-color: var(
        --spectrum-textfield-m-quiet-texticon-background-color,
        var(--spectrum-alias-background-color-transparent)
    );
    border-color: var(
        --spectrum-textfield-m-quiet-texticon-border-color,
        var(--spectrum-alias-input-border-color-default)
    );
}
:host([quiet]:hover) .input {
    border-color: var(
        --spectrum-textfield-m-quiet-texticon-border-color-hover,
        var(--spectrum-alias-input-border-color-hover)
    );
}
:host([quiet]):active .input {
    border-color: var(
        --spectrum-textfield-m-quiet-texticon-border-color-down,
        var(--spectrum-alias-input-border-color-down)
    );
}
:host([focused][quiet]) .input,
:host([quiet]) .input:focus {
    border-color: var(
        --spectrum-textfield-m-quiet-texticon-border-color-mouse-focus,
        var(--spectrum-alias-input-border-color-mouse-focus)
    );
}
:host([focused][quiet]) .input,
:host([quiet]) .input.focus-visible {
    border-color: var(
        --spectrum-textfield-m-texticon-border-color-key-focus,
        var(--spectrum-alias-input-border-color-key-focus)
    );
    box-shadow: 0 1px 0
        var(
            --spectrum-textfield-m-texticon-border-color-key-focus,
            var(--spectrum-alias-input-border-color-key-focus)
        );
}
:host([focused][quiet]) .input,
:host([quiet]) .input:focus-visible {
    border-color: var(
        --spectrum-textfield-m-texticon-border-color-key-focus,
        var(--spectrum-alias-input-border-color-key-focus)
    );
    box-shadow: 0 1px 0
        var(
            --spectrum-textfield-m-texticon-border-color-key-focus,
            var(--spectrum-alias-input-border-color-key-focus)
        );
}
:host([invalid][quiet]) .input {
    border-color: var(
        --spectrum-textfield-m-quiet-texticon-border-color-invalid,
        var(--spectrum-alias-input-border-color-invalid-default)
    );
}
:host([focused][invalid][quiet]) .input,
:host([invalid][quiet]) .input:focus {
    border-color: var(
        --spectrum-textfield-m-quiet-texticon-border-color-invalid-mouse-focus,
        var(--spectrum-alias-input-border-color-invalid-mouse-focus)
    );
}
:host([focused][invalid][quiet]) .input,
:host([invalid][quiet]) .input.focus-visible {
    border-color: var(
        --spectrum-textfield-m-quiet-texticon-border-color-invalid-key-focus,
        var(--spectrum-alias-input-border-color-invalid-key-focus)
    );
    box-shadow: 0 1px 0
        var(
            --spectrum-textfield-m-quiet-texticon-border-color-invalid-key-focus,
            var(--spectrum-alias-input-border-color-invalid-key-focus)
        );
}
:host([focused][invalid][quiet]) .input,
:host([invalid][quiet]) .input:focus-visible {
    border-color: var(
        --spectrum-textfield-m-quiet-texticon-border-color-invalid-key-focus,
        var(--spectrum-alias-input-border-color-invalid-key-focus)
    );
    box-shadow: 0 1px 0
        var(
            --spectrum-textfield-m-quiet-texticon-border-color-invalid-key-focus,
            var(--spectrum-alias-input-border-color-invalid-key-focus)
        );
}
:host([disabled][quiet]) .input,
:host([disabled][quiet]:hover) .input,
:host([quiet]) .input:disabled {
    background-color: var(
        --spectrum-textfield-m-quiet-texticon-background-color-disabled,
        var(--spectrum-alias-background-color-transparent)
    );
    border-color: var(
        --spectrum-textfield-m-quiet-texticon-border-color-disabled,
        var(--spectrum-alias-input-border-color-quiet-disabled)
    );
}
@media (forced-colors: active) {
    :host {
        --spectrum-textfield-m-quiet-texticon-border-color-disabled: GrayText;
        --spectrum-textfield-m-quiet-texticon-border-color-down: Highlight;
        --spectrum-textfield-m-quiet-texticon-border-color-hover: Highlight;
        --spectrum-textfield-m-quiet-texticon-border-color-invalid: Highlight;
        --spectrum-textfield-m-quiet-texticon-border-color-invalid-key-focus: Highlight;
        --spectrum-textfield-m-quiet-texticon-border-color-invalid-mouse-focus: Highlight;
        --spectrum-textfield-m-quiet-texticon-border-color-mouse-focus: Highlight;
        --spectrum-textfield-m-texticon-border-color-disabled: GrayText;
        --spectrum-textfield-m-texticon-border-color-down: Highlight;
        --spectrum-textfield-m-texticon-border-color-hover: Highlight;
        --spectrum-textfield-m-texticon-border-color-invalid: Highlight;
        --spectrum-textfield-m-texticon-border-color-invalid-hover: Highlight;
        --spectrum-textfield-m-texticon-border-color-invalid-key-focus: Highlight;
        --spectrum-textfield-m-texticon-border-color-invalid-mouse-focus: Highlight;
        --spectrum-textfield-m-texticon-border-color-key-focus: Highlight;
        --spectrum-textfield-m-texticon-placeholder-text-color: GrayText;
        --spectrum-textfield-m-texticon-placeholder-text-color-disabled: GrayText;
        --spectrum-textfield-m-texticon-placeholder-text-color-hover: GrayText;
        --spectrum-textfield-m-texticon-text-color-disabled: GrayText;
        --spectrum-textfield-m-textonly-focus-ring-border-color-key-focus: Highlight;
        --spectrum-textfield-m-texticon-focus-ring-border-width: 2px;
    }
    :host([focused]) #textfield:after {
        forced-color-adjust: none;
    }
}
