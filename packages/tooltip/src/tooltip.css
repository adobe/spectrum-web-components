/*!
 * Copyright 2025 Adobe. All rights reserved.
 * This file is licensed to you under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License. You may obtain a copy
 * of the License at http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under
 * the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS
 * OF ANY KIND, either express or implied. See the License for the specific language
 * governing permissions and limitations under the License.
 */

/* Base variables */
:host {
    --spectrum-tooltip-backgound-color-default-neutral: var(--spectrum-neutral-subdued-background-color-default);

    display: contents;
}

#tooltip {
    --spectrum-tooltip-animation-duration: var(--spectrum-animation-duration-100);
    --spectrum-tooltip-margin: 0px;
    --spectrum-tooltip-height: var(--spectrum-component-height-75);
    --spectrum-tooltip-max-inline-size: var(--spectrum-tooltip-maximum-width);
    --spectrum-tooltip-border-radius: var(--spectrum-corner-radius-100);
    --spectrum-tooltip-icon-width: var(--spectrum-workflow-icon-size-50);
    --spectrum-tooltip-icon-height: var(--spectrum-workflow-icon-size-50);
    --spectrum-tooltip-font-size: var(--spectrum-font-size-75);
    --spectrum-tooltip-line-height: var(--spectrum-line-height-100);
    --spectrum-tooltip-cjk-line-height: var(--spectrum-cjk-line-height-100);
    --spectrum-tooltip-font-weight: var(--spectrum-regular-font-weight);
    --spectrum-tooltip-spacing-inline: var(--spectrum-component-edge-to-text-75);
    --spectrum-tooltip-spacing-block-start: var(--spectrum-component-top-to-text-75);
    --spectrum-tooltip-spacing-block-end: var(--spectrum-component-bottom-to-text-75);
    --spectrum-tooltip-icon-spacing-inline-start: var(--spectrum-text-to-visual-75);
    --spectrum-tooltip-icon-spacing-inline-end: var(--spectrum-text-to-visual-75);
    --spectrum-tooltip-icon-spacing-block-start: var(--spectrum-component-top-to-workflow-icon-75);
    --spectrum-tooltip-background-color-informative: var(--spectrum-informative-background-color-default);
    --spectrum-tooltip-background-color-positive: var(--spectrum-positive-background-color-default);
    --spectrum-tooltip-background-color-negative: var(--spectrum-negative-background-color-default);
    --spectrum-tooltip-content-color: var(--spectrum-white);
    --spectrum-tooltip-tip-inline-size: var(--spectrum-tooltip-tip-width);
    --spectrum-tooltip-tip-block-size: var(--spectrum-tooltip-tip-height);
    --spectrum-tooltip-tip-square-size: var(--spectrum-tooltip-tip-inline-size);
    --spectrum-tooltip-tip-height-percentage: 50%;
    --spectrum-tooltip-tip-antialiasing-inset: 0.5px;
    --spectrum-tooltip-pointer-corner-spacing: var(--spectrum-corner-radius-100);
    --spectrum-tooltip-background-color-default: var(--spectrum-tooltip-backgound-color-default-neutral);

    pointer-events: none;
    visibility: hidden;
    opacity: 0;
    transition:
        transform var(--spectrum-animation-duration-100) ease-in-out,
        opacity var(--spectrum-animation-duration-100) ease-in-out,
        visibility 0s linear var(--spectrum-animation-duration-100);
    box-sizing: border-box;
    vertical-align: top;
    padding-inline: var(--spectrum-tooltip-spacing-inline);
    border-radius: var(--spectrum-tooltip-border-radius);
    block-size: auto;
    min-block-size: var(--spectrum-tooltip-height);
    background-color: var(--highcontrast-tooltip-background-color-default, var(--spectrum-tooltip-background-color-default));
    color: var(--spectrum-tooltip-content-color);
    font-size: var(--spectrum-tooltip-font-size);
    font-weight: var(--spectrum-tooltip-font-weight);
    line-height: var(--spectrum-tooltip-line-height);
    word-break: break-all;
    -webkit-font-smoothing: antialiased;
    cursor: default;
    user-select: none;
    flex-direction: row;
    align-items: center;
    display: inline-flex;
    position: relative;

    inline-size: fit-content;
    white-space: initial;
    max-inline-size: var(--spectrum-tooltip-max-inline-size);
}

:host([open]) #tooltip {
    pointer-events: auto;
    visibility: visible;
    opacity: 1;
    transition-delay: var(--spectrum-animation-duration-0);
}

#tip {
    --highcontrast-tooltip-background-color-default: Canvas;
    --highcontrast-tooltip-background-color-informative: Canvas;
    --highcontrast-tooltip-background-color-positive: Canvas;
    --highcontrast-tooltip-background-color-negative: Canvas;

    forced-color-adjust: none;

    position: absolute;
    transform: rotate(45deg);
    background-color: var(--highcontrast-tooltip-background-color-default, var(--spectrum-tooltip-background-color-default));
    clip-path: polygon(0 calc(0% - var(--spectrum-tooltip-tip-antialiasing-inset)), 50% var(--spectrum-tooltip-tip-height-percentage), 100% calc(0% - var(--spectrum-tooltip-tip-antialiasing-inset)));

    clip-path: polygon(0 -5%, 50% 50%, 100% -5%);
    inline-size: var(--spectrum-tooltip-tip-inline-size) !important;
    block-size: var(--spectrum-tooltip-tip-inline-size) !important;
}

:host(:lang(ja)),
:host(:lang(ko)),
:host(:lang(zh)) {
    line-height: var(--spectrum-tooltip-cjk-line-height);
}

#tooltip p {
    margin: 0;
}

:host([variant="info"]) #tooltip {
    background-color: var(--highcontrast-tooltip-background-color-informative, var(--spectrum-tooltip-background-color-informative));
}

:host([variant="positive"]) #tooltip {
    background-color: var(--highcontrast-tooltip-background-color-positive, var(--spectrum-tooltip-background-color-positive));
}

:host([variant="negative"]) #tooltip {
    background-color: var(--highcontrast-tooltip-background-color-negative, var(--spectrum-tooltip-background-color-negative));
}

:host([variant="info"]) #tip {
    background-color: var(--highcontrast-tooltip-background-color-informative, var(--spectrum-tooltip-background-color-informative));
}

:host([variant="positive"]) #tip {
    background-color: var(--highcontrast-tooltip-background-color-positive, var(--spectrum-tooltip-background-color-positive));
}

:host([variant="negative"]) #tip {
    background-color: var(--highcontrast-tooltip-background-color-negative, var(--spectrum-tooltip-background-color-negative));
}

:host([placement*="top"]) #tooltip #tip,
.spectrum-Tooltip--top-end #tip,
.spectrum-Tooltip--top-left #tip,
.spectrum-Tooltip--top-right #tip,
.spectrum-Tooltip--top-start #tip {
    inset-block-start: 100%;
}

:host([placement*="bottom"]) #tooltip #tip,
:host([placement="bottom-end"]) #tip,
:host([placement="bottom-left"]) #tip,
:host([placement="bottom-right"]) #tip,
:host([placement="bottom-start"]) #tip {
    clip-path: polygon(50% calc(100% - var(--spectrum-tooltip-tip-height-percentage)), 0 calc(100% + var(--spectrum-tooltip-tip-antialiasing-inset)), 100% calc(100% + var(--spectrum-tooltip-tip-antialiasing-inset)));
    inset-block: auto 100%;
}

:host([placement="bottom-end"]) #tip,
:host([placement="bottom-left"]) #tip,
:host([placement="bottom-right"]) #tip,
:host([placement="bottom-start"]) #tip,
:host([placement="top-end"]) #tip,
:host([placement="top-left"]) #tip,
:host([placement="top-right"]) #tip,
:host([placement="top-start"]) #tip {
    transform: none;
}

:host([placement="bottom-left"]) #tip,
:host([placement="top-left"]) #tip {
    inset-inline-start: var(--spectrum-tooltip-pointer-corner-spacing);
}

:host([placement="bottom-right"]) #tip,
:host([placement="top-right"]) #tip {
    inset-inline: auto var(--spectrum-tooltip-pointer-corner-spacing);
}

:host([placement="bottom-start"]) #tip,
:host([placement="top-start"]) #tip {
    inset-inline: var(--spectrum-tooltip-pointer-corner-spacing) auto;
}

:host([placement="bottom-start"]) #tip:dir(rtl),
:host([placement="top-start"]) #tip:dir(rtl),
:host([dir="rtl"][placement="bottom-start"]) #tip,
:host([dir="rtl"][placement="top-start"]) #tip {
    right: var(--spectrum-tooltip-pointer-corner-spacing);
    left: auto;
}

:host([placement="bottom-end"]) #tip,
:host([placement="top-end"]) #tip {
    inset-inline: auto var(--spectrum-tooltip-pointer-corner-spacing);
}

:host([placement="bottom-end"]) #tip:dir(rtl),
:host([placement="top-end"]) #tip:dir(rtl),
:host([dir="rtl"][placement="bottom-end"]) #tip,
:host([dir="rtl"][placement="top-end"]) #tip {
    left: var(--spectrum-tooltip-pointer-corner-spacing);
    right: auto;
}

:host([placement="end"]) #tip,
:host([placement="end-bottom"]) #tip,
:host([placement="end-top"]) #tip,
:host([placement*="left"]) #tooltip #tip,
:host([placement="left-bottom"]) #tip,
:host([placement="left-top"]) #tip,
:host([placement*="right"]) #tooltip #tip,
:host([placement="right-bottom"]) #tip,
:host([placement="right-top"]) #tip,
:host([placement="start"]) #tip,
:host([placement="start-bottom"]) #tip,
:host([placement="start-top"]) #tip {
    inset-block-start: 50%;
    transform: translateY(-50%);
}

:host([placement="end-bottom"]) #tip,
:host([placement="end-top"]) #tip,
:host([placement="left-bottom"]) #tip,
:host([placement="left-top"]) #tip,
:host([placement="right-bottom"]) #tip,
:host([placement="right-top"]) #tip,
:host([placement="start-bottom"]) #tip,
:host([placement="start-top"]) #tip {
    inset-block-start: auto;
    transform: none;
}

:host([placement="end"]) #tip,
:host([placement="end-bottom"]) #tip,
:host([placement="end-top"]) #tip,
:host([placement*="right"]) #tooltip #tip,
:host([placement="right-bottom"]) #tip,
:host([placement="right-top"]) #tip {
    clip-path: polygon(calc(100% - var(--spectrum-tooltip-tip-height-percentage)) 50%, calc(100% + var(--spectrum-tooltip-tip-antialiasing-inset)) 100%, calc(100% + var(--spectrum-tooltip-tip-antialiasing-inset)) 0);
    inset-inline: auto 100%;
}

:host([placement*="left"]) #tooltip #tip,
:host([placement="left-bottom"]) #tip,
:host([placement="left-top"]) #tip,
:host([placement="start"]) #tip,
:host([placement="start-bottom"]) #tip,
:host([placement="start-top"]) #tip {
    clip-path: polygon(calc(0% - var(--spectrum-tooltip-tip-antialiasing-inset)) 0, calc(0% - var(--spectrum-tooltip-tip-antialiasing-inset)) 100%, var(--spectrum-tooltip-tip-height-percentage) 50%);
    inset-inline-start: 100%;
}

:host([placement="end-top"]) #tip,
:host([placement="left-top"]) #tip,
:host([placement="right-top"]) #tip,
:host([placement="start-top"]) #tip {
    inset-block-start: var(--spectrum-tooltip-pointer-corner-spacing);
}

:host([placement="end-bottom"]) #tip,
:host([placement="left-bottom"]) #tip,
:host([placement="right-bottom"]) #tip,
:host([placement="start-bottom"]) #tip {
    inset-block-end: var(--spectrum-tooltip-pointer-corner-spacing);
}

:host([placement="end"]) #tip:dir(rtl),
:host([placement="end-bottom"]) #tip:dir(rtl),
:host([placement="end-top"]) #tip:dir(rtl),
:host([placement*="left"]) #tooltip #tip:dir(rtl),
:host([placement="left-bottom"]) #tip:dir(rtl),
:host([placement="left-top"]) #tip:dir(rtl),
:host([dir="rtl"][placement="end"]) #tip,
:host([dir="rtl"][placement="end-bottom"]) #tip,
:host([dir="rtl"][placement="end-top"]) #tip,
:host([dir="rtl"][placement*="left"]) #tooltip #tip,
:host([dir="rtl"][placement="left-bottom"]) #tip,
:host([dir="rtl"][placement="left-top"]) #tip {
    clip-path: polygon(calc(0% - var(--spectrum-tooltip-tip-antialiasing-inset)) 0, calc(0% - var(--spectrum-tooltip-tip-antialiasing-inset)) 100%, var(--spectrum-tooltip-tip-height-percentage) 50%);
    left: 100%;
    right: auto;
}

:host([placement*="right"]) #tooltip #tip:dir(rtl),
:host([placement="right-bottom"]) #tip:dir(rtl),
:host([placement="right-top"]) #tip:dir(rtl),
:host([placement="start"]) #tip:dir(rtl),
:host([placement="start-bottom"]) #tip:dir(rtl),
:host([placement="start-top"]) #tip:dir(rtl),
:host([dir="rtl"][placement*="right"]) #tooltip #tip,
:host([dir="rtl"][placement="right-bottom"]) #tip,
:host([dir="rtl"][placement="right-top"]) #tip,
:host([dir="rtl"][placement="start"]) #tip,
:host([dir="rtl"][placement="start-bottom"]) #tip,
:host([dir="rtl"][placement="start-top"]) #tip {
    clip-path: polygon(var(--spectrum-tooltip-tip-height-percentage) 50%, calc(100% + var(--spectrum-tooltip-tip-antialiasing-inset)) 100%, calc(100% + var(--spectrum-tooltip-tip-antialiasing-inset)) 0);
    left: auto;
    right: 100%;
}

::slotted([slot="icon"]) {
    inline-size: var(--spectrum-tooltip-icon-width);
    block-size: var(--spectrum-tooltip-icon-height);
    flex-shrink: 0;
    align-self: flex-start;
    margin-block-start: var(--spectrum-tooltip-icon-spacing-block-start);
    margin-inline-start: calc(var(--spectrum-tooltip-icon-spacing-inline-start) - var(--spectrum-tooltip-spacing-inline));
    margin-inline-end: var(--spectrum-tooltip-icon-spacing-inline-end);
}

#label {
    line-height: var(--spectrum-tooltip-line-height);
    margin-block-start: var(--spectrum-tooltip-spacing-block-start);
    margin-block-end: var(--spectrum-tooltip-spacing-block-end);
}

#tooltip,
:host([placement*="top"]) #tooltip,
:host([placement="top-end"]) #tooltip,
:host([placement="top-left"]) #tooltip,
:host([placement="top-right"]) #tooltip,
:host([placement="top-start"]) #tooltip {
    margin-block-end: calc(var(--spectrum-tooltip-tip-block-size) + var(--spectrum-tooltip-margin));
}

:host([open][placement="top-end"]) #tooltip,
:host([open][placement="top-left"]) #tooltip,
:host([open][placement="top-right"]) #tooltip,
:host([open][placement="top-start"]) #tooltip,
:host([placement*="top"][open]) #tooltip,
:host([open]) #tooltip {
    transform: translateY(calc(var(--spectrum-tooltip-animation-distance) * -1));
}

:host([placement*="bottom"]) #tooltip,
:host([placement="bottom-end"]) #tooltip,
:host([placement="bottom-left"]) #tooltip,
:host([placement="bottom-right"]) #tooltip,
:host([placement="bottom-start"]) #tooltip {
    margin-block-start: calc(var(--spectrum-tooltip-tip-block-size) + var(--spectrum-tooltip-margin));
}

:host([open][placement="bottom-end"]) #tooltip,
:host([open][placement="bottom-left"]) #tooltip,
:host([open][placement="bottom-right"]) #tooltip,
:host([open][placement="bottom-start"]) #tooltip,
:host([placement*="bottom"][open]) #tooltip {
    transform: translateY(0);
}

:host([placement*="right"]) #tooltip,
:host([placement="right-bottom"]) #tooltip,
:host([placement="right-top"]) #tooltip {
    margin-inline-start: calc(var(--spectrum-tooltip-tip-block-size) + var(--spectrum-tooltip-margin));
}

:host([open][placement="right-bottom"]) #tooltip,
:host([open][placement="right-top"]) #tooltip,
:host([placement*="right"][open]) #tooltip {
    transform: translateX(var(--spectrum-tooltip-animation-distance));
}

:host([placement*="left"]) #tooltip,
:host([placement="left-bottom"]) #tooltip,
:host([placement="left-top"]) #tooltip {
    margin-inline-end: calc(var(--spectrum-tooltip-tip-block-size) + var(--spectrum-tooltip-margin));
}

:host([open][placement="left-bottom"]) #tooltip,
:host([open][placement="left-top"]) #tooltip,
:host([placement*="left"][open]) #tooltip {
    transform: translateX(0);
}

:host([placement="start"]) #tooltip,
:host([placement="start-bottom"]) #tooltip,
:host([placement="start-top"]) #tooltip {
    margin-inline-end: calc(var(--spectrum-tooltip-tip-block-size) + var(--spectrum-tooltip-margin));
}

:host([open][placement="start-bottom"]) #tooltip,
:host([open][placement="start-top"]) #tooltip,
:host([open][placement="start"]) #tooltip {
    transform: translateY(calc(var(--spectrum-tooltip-animation-distance) * -1));
}

:host([open][placement="start-bottom"]:dir(rtl)),
:host([open][placement="start-top"]:dir(rtl)),
:host([open][placement="start"]:dir(rtl)),
:host([dir="rtl"][open][placement="start-bottom"]),
:host([dir="rtl"][open][placement="start-top"]),
:host([dir="rtl"][open][placement="start"]) {
    transform: translateY(0);
}

:host([placement="end"]),
:host([placement="end-bottom"]),
:host([placement="end-top"]) {
    margin-inline-start: calc(var(--spectrum-tooltip-tip-block-size) + var(--spectrum-tooltip-margin));
}

:host([open][placement="end-bottom"]),
:host([open][placement="end-top"]),
:host([open][placement="end"]) {
    transform: translateY(0);
}

:host([open][placement="end-bottom"]:dir(rtl)),
:host([open][placement="end-top"]:dir(rtl)),
:host([open][placement="end"]:dir(rtl)),
:host([dir="rtl"][open][placement="end-bottom"]),
:host([dir="rtl"][open][placement="end-top"]),
:host([dir="rtl"][open][placement="end"]) {
    transform: translateX(var(--spectrum-tooltip-animation-distance));
}

#tip[style] {
    transform: none !important;
}

:host(:not([placement*="top"])) #tooltip {
    margin-block-end: 0;
}

:host([placement*="top"]) #tooltip #tip {
    inset-block-start: 100%;
}

:host([placement*="bottom"]) #tooltip #tip {
    inset-block-end: 100%;
    clip-path: polygon(50% 50%, 0 105%, 100% 105%);
    inset-block-start: auto;
}

:host([placement*="left"]) #tooltip #tip,
:host([placement*="right"]) #tooltip #tip {
    inset-block-start: 50%;
    transform: translateY(-50%);
}

:host([placement*="right"]) #tooltip #tip {
    clip-path: polygon(50% 50%, 105% 100%, 105% 0);
    inset-inline: calc(var(--spectrum-tooltip-tip-block-size) * -2) 100%;
}

:host([placement*="left"]) #tooltip #tip {
    clip-path: polygon(-5% 0, -5% 100%, 50% 50%);
    inset-inline-start: 100%;
}

sp-overlay:not(:defined) {
    display: none;
}
