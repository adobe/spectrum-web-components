/**
 * Copyright 2024 Adobe. All rights reserved.
 *
 * This file is licensed to you under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License. You may obtain a copy
 * of the License at <http://www.apache.org/licenses/LICENSE-2.0>
 *
 * Unless required by applicable law or agreed to in writing, software distributed under
 * the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS
 * OF ANY KIND, either express or implied. See the License for the specific language
 * governing permissions and limitations under the License.
 */

:host {
    --spectrum-combobox-block-size: var(--spectrum-component-height-100);
    --spectrum-combobox-icon-size: var(--spectrum-workflow-icon-size-100);
    --spectrum-combobox-font-size: var(--spectrum-font-size-100);
    --spectrum-combobox-line-height: var(--spectrum-line-height-100);

    --spectrum-combobox-spacing-inline-icon-to-button: var(--spectrum-combo-box-visual-to-field-button);
    --spectrum-combobox-block-spacing-edge-to-progress-circle: var(--spectrum-field-top-to-progress-circle-medium);
    --spectrum-combobox-block-spacing-edge-to-icon: var(--spectrum-component-top-to-workflow-icon-100);
    --spectrum-combobox-spacing-block-start-edge-to-text: var(--spectrum-component-top-to-text-100);
    --spectrum-combobox-spacing-block-end-edge-to-text: var(--spectrum-component-bottom-to-text-100);
    --spectrum-combobox-spacing-inline-start-edge-to-text: var(--spectrum-component-edge-to-text-100);
    --spectrum-combobox-spacing-inline-icon-to-text: var(--spectrum-text-to-visual-100);

    --spectrum-combobox-spacing-to-help-text: var(--spectrum-help-text-to-component);

    --spectrum-combobox-inline-size: var(--spectrum-field-width-medium);
    --spectrum-combobox-min-inline-size: calc(var(--spectrum-combo-box-minimum-width-multiplier) * var(--spectrum-combobox-block-size));
    --spectrum-combobox-button-width: var(--spectrum-combobox-block-size);

    --spectrum-combobox-focus-indicator-thickness: var(--spectrum-focus-indicator-thickness);
    --spectrum-combobox-focus-indicator-gap: var(--spectrum-focus-indicator-gap);
    --spectrum-combobox-focus-indicator-color: var(--spectrum-focus-indicator-color);

    --spectrum-combobox-border-radius: var(--spectrum-corner-radius-medium-size-medium);
    --spectrum-combobox-border-width: var(--spectrum-border-width-200);

    --spectrum-combobox-spacing-label-to-combobox: var(--spectrum-field-label-to-component);
    --spectrum-combobox-spacing-side-label-to-field: var(--spectrum-spacing-200);

    --spectrum-combobox-font-style: var(--spectrum-default-font-style);
    --spectrum-combobox-font-weight: var(--spectrum-regular-font-weight);
    --spectrum-combobox-line-height-cjk: var(--spectrum-cjk-line-height-100);

    --spectrum-combobox-background-color-disabled: var(--spectrum-gray-25);

    --spectrum-combobox-background-color-default: var(--spectrum-gray-25);
    --spectrum-combobox-border-color-default: var(--spectrum-gray-300);
    --spectrum-combobox-border-color-hover: var(--spectrum-gray-400);
    --spectrum-combobox-border-color-focus: var(--spectrum-gray-800);
    --spectrum-combobox-border-color-focus-hover: var(--spectrum-gray-900);
    --spectrum-combobox-border-color-key-focus: var(--spectrum-gray-800);
    --spectrum-combobox-border-color-disabled: var(--spectrum-disabled-border-color);

    --spectrum-combobox-border-color-invalid-default: var(--spectrum-negative-border-color-default);
    --spectrum-combobox-border-color-invalid-hover: var(--spectrum-negative-border-color-hover);
    --spectrum-combobox-border-color-invalid-focus: var(--spectrum-negative-border-color-focus);
    --spectrum-combobox-border-color-invalid-focus-hover: var(--spectrum-negative-border-color-focus-hover);
    --spectrum-combobox-border-color-invalid-key-focus: var(--spectrum-negative-border-color-key-focus);

    --spectrum-combobox-background-color-autofill: rgb(var(--spectrum-blue-900-rgb), 0.3);

    --mod-combobox-popover-animation-distance: var(--spectrum-component-to-menu-medium);

    /* @passthroughs start -- settings for nested Textfield component */
    --mod-textfield-focus-indicator-gap: var(--mod-combobox-focus-indicator-gap, var(--spectrum-combobox-focus-indicator-gap));
    --mod-textfield-focus-indicator-width: var(--mod-combobox-focus-indicator-thickness, var(--spectrum-combobox-focus-indicator-thickness));
    --mod-textfield-focus-indicator-color: var(--mod-combobox-focus-indicator-color, var(--spectrum-combobox-focus-indicator-color));

    --mod-textfield-background-color: var(--mod-combobox-background-color-default);
    --mod-textfield-background-color-disabled: var(--mod-combobox-background-color-disabled, var(--spectrum-combobox-background-color-disabled));

    --mod-textfield-font-family: var(--mod-combobox-font-family);
    --mod-textfield-font-weight: var(--spectrum-combobox-font-weight);
    --mod-textfield-font-size: var(--spectrum-combobox-font-size);
    --mod-textfield-font-style: var(--spectrum-combobox-font-style);
    --mod-textfield-spacing-block-start: var(--mod-combobox-spacing-block-start-edge-to-text, var(--spectrum-combobox-spacing-block-start-edge-to-text));
    --mod-textfield-spacing-block-end: var(--mod-combobox-spacing-block-end-edge-to-text, var(--spectrum-combobox-spacing-block-end-edge-to-text));
    --mod-textfield-text-color-default: var(--mod-combobox-font-color-default);
    --mod-textfield-text-color-hover: var(--mod-combobox-font-color-hover);
    --mod-textfield-text-color-focus: var(--mod-combobox-font-color-focus);
    --mod-textfield-text-color-focus-hover: var(--mod-combobox-font-color-focus-hover);
    --mod-textfield-text-color-keyboard-focus: var(--mod-combobox-font-color-key-focus);
    --mod-textfield-text-color-disabled: var(--mod-combobox-font-color-disabled);

    --mod-textfield-border-width: var(--mod-combobox-border-width, var(--spectrum-combobox-border-width));
    --mod-textfield-border-color: var(--mod-combobox-border-color-default, var(--spectrum-combobox-border-color-default));
    --mod-textfield-border-color-disabled: var(--mod-combobox-border-color-disabled, var(--spectrum-combobox-border-color-disabled));
    --mod-textfield-border-color-focus: var(--mod-combobox-border-color-focus, var(--spectrum-combobox-border-color-focus));
    --mod-textfield-border-color-focus-hover: var(--mod-combobox-border-color-focus-hover, var(--spectrum-combobox-border-color-focus-hover));
    --mod-textfield-border-color-hover: var(--mod-combobox-border-color-hover, var(--spectrum-combobox-border-color-hover));
    --mod-textfield-border-color-keyboard-focus: var(--mod-combobox-border-color-key-focus, var(--spectrum-combobox-border-color-key-focus));
    --mod-textfield-corner-radius: var(--mod-combobox-border-radius, var(--spectrum-combobox-border-radius));

    --mod-textfield-border-color-invalid-default: var(--mod-combobox-border-color-invalid-default, var(--spectrum-combobox-border-color-invalid-default));
    --mod-textfield-border-color-invalid-hover: var(--mod-combobox-border-color-invalid-hover, var(--spectrum-combobox-border-color-invalid-hover));
    --mod-textfield-border-color-invalid-focus: var(--mod-combobox-border-color-invalid-focus, var(--spectrum-combobox-border-color-invalid-focus));
    --mod-textfield-border-color-invalid-focus-hover: var(--mod-combobox-border-color-invalid-focus-hover, var(--spectrum-combobox-border-color-invalid-focus-hover));
    --mod-textfield-border-color-invalid-keyboard-focus: var(--mod-combobox-border-color-invalid-key-focus, var(--spectrum-combobox-border-color-invalid-key-focus));

    --mod-textfield-icon-color-invalid: var(--mod-combobox-alert-icon-color);

    /* @passthroughs end -- settings for nested Textfield component */

    /* @passthroughs start -- settings for nested Picker Button component */
    --mod-picker-button-border-width: var(--mod-combobox-border-width, var(--spectrum-combobox-border-width));
    --mod-picker-button-border-color: var(--mod-combobox-border-color-default, var(--spectrum-combobox-border-color-default));
    --mod-picker-button-background-color: var(--mod-combobox-background-color-default);
    --mod-picker-button-background-color-disabled: var(--mod-combobox-background-color-disabled);
    --mod-picker-button-font-color-disabled: var(--mod-combobox-font-color-disabled);
    --mod-picker-button-border-color-disabled: var(--mod-combobox-border-color-disabled, var(--spectrum-combobox-border-color-disabled));

    /* @passthroughs end -- settings for nested Picker Button component */

    /*** Read-only Colors ***/
    --spectrum-combobox-readonly-input-background-color: var(--spectrum-combobox-background-color-default);
    --spectrum-combobox-readonly-border-color-invalid-default: var(--spectrum-negative-border-color-default);
    --spectrum-combobox-readonly-background-color-disabled: var(--spectrum-disabled-background-color);
    --spectrum-combobox-readonly-text-color-disabled: var(--spectrum-disabled-content-color);
    --spectrum-combobox-readonly-border-color-disabled: var(--spectrum-disabled-border-color);
    --spectrum-combobox-readonly-input-border-color: var(--spectrum-combobox-border-color-default);

    /* @passthroughs start -- settings for nested divider component */
    --mod-divider-inline-minimum-size: auto;

    /* @passthroughs end -- settings for nested divider component */
}

:host([size="s"]) {
    --spectrum-combobox-block-size: var(--spectrum-component-height-75);
    --spectrum-combobox-icon-size: var(--spectrum-workflow-icon-size-75);
    --spectrum-combobox-font-size: var(--spectrum-font-size-75);

    --spectrum-combobox-block-spacing-edge-to-progress-circle: var(--spectrum-field-top-to-progress-circle-small);
    --spectrum-combobox-block-spacing-edge-to-icon: var(--spectrum-component-top-to-workflow-icon-75);
    --spectrum-combobox-spacing-block-start-edge-to-text: var(--spectrum-component-top-to-text-75);
    --spectrum-combobox-spacing-block-end-edge-to-text: var(--spectrum-component-bottom-to-text-75);
    --spectrum-combobox-spacing-inline-start-edge-to-text: var(--spectrum-component-edge-to-text-75);
    --spectrum-combobox-spacing-inline-icon-to-text: var(--spectrum-text-to-visual-75);
    --spectrum-combobox-inline-size: var(--spectrum-field-width-small);
    --spectrum-combobox-border-radius: var(--spectrum-corner-radius-medium-size-small);
    --mod-combobox-popover-animation-distance: var(--spectrum-component-to-menu-small);
}

:host([size="l"]) {
    --spectrum-combobox-block-size: var(--spectrum-component-height-200);
    --spectrum-combobox-icon-size: var(--spectrum-workflow-icon-size-200);
    --spectrum-combobox-font-size: var(--spectrum-font-size-200);

    --spectrum-combobox-block-spacing-edge-to-progress-circle: var(--spectrum-field-top-to-progress-circle-large);
    --spectrum-combobox-block-spacing-edge-to-icon: var(--spectrum-component-top-to-workflow-icon-200);
    --spectrum-combobox-spacing-block-start-edge-to-text: var(--spectrum-component-top-to-text-200);
    --spectrum-combobox-spacing-block-end-edge-to-text: var(--spectrum-component-bottom-to-text-200);
    --spectrum-combobox-spacing-inline-start-edge-to-text: var(--spectrum-component-edge-to-text-200);
    --spectrum-combobox-spacing-inline-icon-to-text: var(--spectrum-text-to-visual-200);
    --spectrum-combobox-inline-size: var(--spectrum-field-width-large);
    --spectrum-combobox-border-radius: var(--spectrum-corner-radius-medium-size-large);
    --mod-combobox-popover-animation-distance: var(--spectrum-component-to-menu-large);
}

:host([size="xl"]) {
    --spectrum-combobox-block-size: var(--spectrum-component-height-300);
    --spectrum-combobox-icon-size: var(--spectrum-workflow-icon-size-300);
    --spectrum-combobox-font-size: var(--spectrum-font-size-300);

    --spectrum-combobox-block-spacing-edge-to-progress-circle: var(--spectrum-field-top-to-progress-circle-extra-large);
    --spectrum-combobox-block-spacing-edge-to-icon: var(--spectrum-component-top-to-workflow-icon-300);
    --spectrum-combobox-spacing-block-start-edge-to-text: var(--spectrum-component-top-to-text-300);
    --spectrum-combobox-spacing-block-end-edge-to-text: var(--spectrum-component-bottom-to-text-300);
    --spectrum-combobox-spacing-inline-start-edge-to-text: var(--spectrum-component-edge-to-text-300);
    --spectrum-combobox-spacing-inline-icon-to-text: var(--spectrum-text-to-visual-300);
    --spectrum-combobox-inline-size: var(--spectrum-field-width-extra-large);
    --spectrum-combobox-border-radius: var(--spectrum-corner-radius-medium-size-extra-large);
    --mod-combobox-popover-animation-distance: var(--spectrum-component-to-menu-extra-large);
}

:host {
    position: relative;
    display: inline-grid;
    inline-size: var(--mod-combobox-inline-size, var(--spectrum-combobox-inline-size));
    margin-block-start: var(--mod-combobox-spacing-label-to-combobox, var(--spectrum-combobox-spacing-label-to-combobox));
}

#label,
.content {
    min-inline-size: var(--mod-combobox-min-inline-size, var(--spectrum-combobox-min-inline-size));
}

#listbox {
    --mod-popover-animation-distance: var(--mod-combobox-popover-animation-distance);
}

#input[readonly].is-keyboardFocused {
    outline-offset: var(--mod-textfield-focus-indicator-gap);
    outline: var(--mod-textfield-focus-indicator-width) solid;
    outline-color: var(--mod-textfield-focus-indicator-color);
}

#input[readonly] {
    background-color: var(--highcontrast-combobox-background-color-default, var(--spectrum-combobox-readonly-input-background-color));
    border-color: var(--highcontrast-combobox-readonly-border-color, var(--spectrum-combobox-readonly-input-border-color));
}

#input[readonly]:hover {
    background-color: revert;
}

#input[readonly][aria-invalid] {
    border-color: var(--highcontrast-textfield-border-color-invalid-default, var(--mod-textfield-border-color-invalid-default, var(--spectrum-combobox-readonly-border-color-invalid-default)));
}

#input[readonly][disabled] {
    background-color: var(--mod-textfield-background-color-disabled, var(--spectrum-combobox-readonly-background-color-disabled));
    border-color: var(--mod-combobox-readonly-border-color-disabled, var(--spectrum-combobox-readonly-border-color-disabled, transparent));
    color: var(--highcontrast-textfield-text-color-disabled, var(--mod-textfield-text-color-disabled, var(--spectrum-combobox-readonly-text-color-disabled)));
}

#input[readonly][disabled]:hover {
    background-color: var(--mod-textfield-background-color-disabled, var(--spectrum-combobox-readonly-background-color-disabled));
}

/* LOADING INDICATOR */
sp-progress-circle {
    position: absolute;
    inset-inline-end: calc(var(--mod-combobox-spacing-inline-icon-to-button, var(--spectrum-combobox-spacing-inline-icon-to-button)) + var(--mod-combobox-button-width, var(--spectrum-combobox-button-width)));
    inset-block-start: var(--mod-combobox-block-spacing-edge-to-progress-circle, var(--spectrum-combobox-block-spacing-edge-to-progress-circle));
    inset-block-end: var(--mod-combobox-block-spacing-edge-to-icon, var(--spectrum-combobox-block-spacing-edge-to-icon));
    padding-inline-start: var(--mod-combobox-spacing-inline-icon-to-text, var(--spectrum-combobox-spacing-inline-icon-to-text));
}

sp-progress-circle:dir(rtl) {
    inset-inline-end: inherit;
    inset-inline-start: calc(var(--mod-combobox-spacing-inline-icon-to-button, var(--spectrum-combobox-spacing-inline-icon-to-button)) + var(--mod-combobox-button-width, var(--spectrum-combobox-button-width)));
}

.label {
    display: flex;
    align-items: center;
    justify-content: space-between;
}

/* PICKER BUTTON */
sp-picker-button {
    position: absolute;
    inset-inline-end: 0;
}

/* Default */
sp-picker-button:not(:disabled, .is-invalid, [quiet]) {
    --mod-picker-button-border-color: var(--mod-combobox-border-color-default, var(--spectrum-combobox-border-color-default));
}

sp-picker-button:not(:disabled, .is-invalid, [quiet]).focus-visible,
sp-picker-button:not(:disabled, .is-invalid, [quiet]):focus,
:host(:has(:focus)) sp-picker-button:not(:disabled, .is-invalid, [quiet]) {
    --mod-picker-button-border-color: var(--highcontrast-combobox-border-color-highlight, var(--mod-combobox-border-color-focus, var(--spectrum-combobox-border-color-focus)));
}

sp-picker-button:not(:disabled, .is-invalid, [quiet]).is-keyboardFocused,
sp-picker-button:not(:disabled, .is-invalid, [quiet]):focus-visible {
    --mod-picker-button-border-color: var(--mod-combobox-border-color-key-focus, var(--spectrum-combobox-border-color-key-focus));
}

sp-picker-button:not(:disabled, .is-invalid, [quiet]):hover,
sp-picker-button:not(:disabled, .is-invalid, [quiet]):active,
:host(:hover) sp-picker-button:not(:disabled, .is-invalid, [quiet]),
:host(:has(:active)) sp-picker-button:not(:disabled, .is-invalid, [quiet]) {
    --mod-picker-button-border-color: var(--highcontrast-combobox-border-color-highlight, var(--mod-combobox-border-color-hover, var(--spectrum-combobox-border-color-hover)));
}

sp-picker-button:not(:disabled, .is-invalid, [quiet]):focus:hover,
sp-picker-button:not(:disabled, .is-invalid, [quiet]).is-focused:hover,
:host(:hover:has(:focus)) sp-picker-button:not(:disabled, .is-invalid, [quiet]),
:host(.is-focused:hover) sp-picker-button:not(:disabled, .is-invalid, [quiet]) {
    --mod-picker-button-border-color: var(--highcontrast-combobox-border-color-highlight, var(--mod-combobox-border-color-focus-hover, var(--spectrum-combobox-border-color-focus-hover)));
}

/* Invalid */
sp-picker-button.is-invalid:not(:disabled, [quiet]) {
    --mod-picker-button-border-color: var(--highcontrast-combobox-border-color-invalid, var(--mod-combobox-border-color-invalid-default, var(--spectrum-combobox-border-color-invalid-default)));
}

sp-picker-button.is-invalid:not(:disabled, [quiet]).focus-visible,
sp-picker-button.is-invalid:not(:disabled, [quiet]):focus,
:host(.is-focused) sp-picker-button.is-invalid:not(:disabled, [quiet]),
:host(:has(:focus)) sp-picker-button.is-invalid:not(:disabled, [quiet]) {
    --mod-picker-button-border-color: var(--highcontrast-combobox-border-color-invalid, var(--mod-combobox-border-color-invalid-focus, var(--spectrum-combobox-border-color-invalid-focus)));
}

sp-picker-button.is-invalid:not(:disabled, [quiet]).is-keyboardFocused,
sp-picker-button.is-invalid:not(:disabled, [quiet]):focus-visible,
:host(.is-keyboardFocused) sp-picker-button.is-invalid:not(:disabled, [quiet]),
:host(:has(:focus)) sp-picker-button.is-invalid:not(:disabled, [quiet]) {
    --mod-picker-button-border-color: var(--highcontrast-combobox-border-color-invalid, var(--mod-combobox-border-color-invalid-key-focus, var(--spectrum-combobox-border-color-invalid-key-focus)));
}

sp-picker-button.is-invalid:not(:disabled, [quiet]):hover,
sp-picker-button.is-invalid:not(:disabled, [quiet]):active,
:host(:hover) sp-picker-button.is-invalid:not(:disabled, [quiet]),
:host(:has(:active)) sp-picker-button.is-invalid:not(:disabled, [quiet]) {
    --mod-picker-button-border-color: var(--highcontrast-combobox-border-color-invalid, var(--mod-combobox-border-color-invalid-hover, var(--spectrum-combobox-border-color-invalid-hover)));
}

sp-picker-button.is-invalid:not(:disabled, [quiet]):focus:hover,
sp-picker-button.is-invalid:not(:disabled, [quiet]).is-focused:hover,
:host(:hover:has(:focus)) sp-picker-button.is-invalid:not(:disabled, [quiet]),
:host(.is-focused:hover) sp-picker-button.is-invalid:not(:disabled, [quiet]) {
    --mod-picker-button-border-color: var(--highcontrast-combobox-border-color-invalid, var(--mod-combobox-border-color-invalid-focus-hover, var(--spectrum-combobox-border-color-invalid-focus-hover)));
}

.content {
    display: inline-grid;
    block-size: var(--mod-combobox-block-size, var(--spectrum-combobox-block-size));
    position: relative;
}

/* TEXT INPUT */
input {
    background-color: var(--highcontrast-combobox-background-color-default, var(--mod-combobox-textfield-background-color, var(--spectrum-combobox-background-color-default)));
    padding-inline-start: calc(var(--mod-combobox-spacing-inline-start-edge-to-text, var(--spectrum-combobox-spacing-inline-start-edge-to-text)) - var(--mod-combobox-border-width, var(--spectrum-combobox-border-width)));
    padding-inline-end: calc(var(--mod-combobox-button-width, var(--spectrum-combobox-button-width)) + var(--mod-combobox-spacing-inline-icon-to-text, var(--spectrum-combobox-spacing-inline-icon-to-text)) - var(--mod-combobox-border-width, var(--spectrum-combobox-border-width)));
    backface-visibility: hidden;
    line-height: var(--mod-combobox-line-height, var(--spectrum-combobox-block-size));
}

input::placeholder {
    --mod-textfield-text-color-default: var(--mod-combobox-font-color-placeholder);
}

/* Hover */
:host(:hover) input,
input:hover,
input:active {
    --mod-textfield-background-color: var(--mod-combobox-background-color-hover);
}

/* Focus */
:host(:focus) input,
input:focus {
    --mod-combobox-border-color-default: var(--spectrum-combobox-border-color-focus);
    --mod-textfield-background-color: var(--mod-combobox-background-color-focus);
}

/* Focus + Hover */
:host(:focus) input:hover,
input:focus:hover {
    --mod-combobox-border-color-default: var(--spectrum-combobox-border-color-focus-hover);
    --mod-textfield-background-color: var(--mod-combobox-background-color-focus-hover);
}

/* Keyboard Focus */
input.is-keyboardFocused {
    --mod-combobox-border-color-default: var(--spectrum-combobox-border-color-key-focus);
    --mod-textfield-background-color: var(--mod-combobox-background-color-key-focus);
}

/* ****** Invalid & Loading ****** */
input[aria-invalid],
input[pending] {
    padding-inline-end: calc(var(--mod-combobox-button-width, var(--spectrum-combobox-button-width)) + var(--mod-combobox-spacing-inline-icon-to-button, var(--spectrum-combobox-spacing-inline-icon-to-button)) + var(--mod-combobox-icon-size, var(--spectrum-combobox-icon-size)) + var(--mod-combobox-spacing-alert-icon-to-text, var(--spectrum-combobox-spacing-inline-icon-to-text)) - var(--mod-combobox-border-width, var(--spectrum-combobox-border-width)));
}

input:lang(ja),
input:lang(zh),
input:lang(ko) {
    --mod-combobox-line-height: var(--mod-combobox-line-height-cjk, var(--spectrum-combobox-line-height-cjk));
}

input:-webkit-autofill,
input:-webkit-autofill:hover,
input:-webkit-autofill:focus,
input:-webkit-autofill:active,
input:-internal-autofill-selected,
input[aria-autocomplete] {
    border-color: var(--spectrum-combobox-border-color-default);
    box-shadow: 0 0 0 30px var(--highcontrast-combobox-background-color-default, var(--spectrum-combobox-background-color-default)) inset !important;
    transition: background-color 200ms ease-in-out 0s;
    -webkit-text-fill-color: var(--highcontrast-textfield-text-color-default, var(--spectrum-neutral-content-color-default)) !important;
    line-height: var(--spectrum-combobox-line-height);
}

input:-webkit-autofill::selection,
input:-webkit-autofill:hover::selection,
input:-webkit-autofill:focus::selection,
input:-webkit-autofill:active::selection,
input:-internal-autofill-selected::selection,
input[aria-autocomplete]::selection {
    background-color: var(--spectrum-combobox-background-color-autofill);
}

#tooltip {
    inset-block-start: var(--mod-combobox-spacing-to-help-text, var(--spectrum-combobox-spacing-to-help-text));
}

::slotted([slot="tooltip"]) {
    inline-size: 100%;
    word-wrap: break-word;
    text-wrap: wrap;
}

/* @todo add side-label markup support */
:host([side-label]) {
    #input {
        inline-size: auto;
    }

    #label {
        grid-row: 1;
        grid-column: 1 / span 1;
        padding-inline-end: var(--mod-combobox-spacing-side-label-to-field, var(--spectrum-combobox-spacing-side-label-to-field));
        overflow-wrap: anywhere;
    }

    .content {
        grid-row: 1 / span 1;
        grid-column: 2 / span 1;
    }

    #tooltip {
        grid-row: 2 / span 2;
        grid-column: 2 / span 1;
    }
}

/* VALIDATION ICON */
#invalid {
    inline-size: var(--mod-combobox-icon-size, var(--spectrum-combobox-icon-size));
    block-size: var(--mod-combobox-icon-size, var(--spectrum-combobox-icon-size));

    inset-block-start: var(--mod-combobox-block-spacing-edge-to-icon, var(--spectrum-combobox-block-spacing-edge-to-icon));
    inset-block-end: var(--mod-combobox-block-spacing-edge-to-icon, var(--spectrum-combobox-block-spacing-edge-to-icon));
    inset-inline-end: calc(var(--mod-combobox-spacing-inline-icon-to-button, var(--spectrum-combobox-spacing-inline-icon-to-button)) + var(--mod-combobox-button-width, var(--spectrum-combobox-button-width)));
    padding-inline-start: var(--mod-combobox-spacing-inline-icon-to-text, var(--spectrum-combobox-spacing-inline-icon-to-text));
}

#input[disabled] .icon,
#input[readonly] .icon,
#input[pending] .icon {
    display: none;
}

@media (forced-colors: active) {
    :host {
        --highcontrast-combobox-border-color-highlight: Highlight;
        --highcontrast-combobox-border-color-invalid: Highlight;
        --highcontrast-combobox-background-color-default: Canvas;
        --highcontrast-combobox-readonly-border-color: CanvasText;
    }
}
