/**
 * Copyright 2025 Adobe. All rights reserved.
 * This file is licensed to you under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License. You may obtain a copy
 * of the License at http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under
 * the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS
 * OF ANY KIND, either express or implied. See the License for the specific language
 * governing permissions and limitations under the License.
 */

#button {
    cursor: pointer;
    user-select: none;
    font-family: var(--spectrum-sans-font-family-stack);
    -webkit-font-smoothing: antialiased;
    -moz-osx-font-smoothing: grayscale;
    line-height: var(--spectrum-line-height-100);
    text-transform: none;
    vertical-align: top;
    appearance: auto;
    transition:
        background var(--spectrum-animation-duration-100) ease-out,
        border-color var(--spectrum-animation-duration-100) ease-out,
        color var(--spectrum-animation-duration-100) ease-out,
        box-shadow var(--spectrum-animation-duration-100) ease-out;
    justify-content: center;
    align-items: center;
    margin: 0;
    text-decoration: none;
    display: inline-flex;
    position: relative;
    overflow: visible;
}

#button::-moz-focus-inner {
    border-style: none;
    padding: 0;
}

#button:focus {
    outline: none;
}

/* Base variables */
:host {
    --spectrum-picker-font-size: var(--spectrum-font-size-100);
    --spectrum-picker-font-weight: var(--spectrum-regular-font-weight);
    --spectrum-picker-placeholder-font-style: var(--spectrum-default-font-style);
    --spectrum-picker-line-height: var(--spectrum-line-height-100);
    --spectrum-picker-block-size: var(--spectrum-component-height-100);
    --spectrum-picker-inline-size: var(--spectrum-field-width);
    --spectrum-picker-border-radius: var(--spectrum-corner-radius-100);
    --spectrum-picker-spacing-top-to-text: var(--spectrum-component-top-to-text-100);
    --spectrum-picker-spacing-bottom-to-text: var(--spectrum-component-bottom-to-text-100);
    --spectrum-picker-spacing-edge-to-text: var(--spectrum-component-edge-to-text-100);
    --spectrum-picker-spacing-edge-to-text-quiet: var(--spectrum-field-edge-to-text-quiet);
    --spectrum-picker-spacing-label-to-picker: var(--spectrum-field-label-to-component);
    --spectrum-picker-spacing-text-to-icon: var(--spectrum-text-to-visual-100);
    --spectrum-picker-spacing-text-to-icon-inline-end: var(--spectrum-field-text-to-alert-icon-medium);
    --spectrum-picker-spacing-icon-to-disclosure-icon: var(--spectrum-picker-visual-to-disclosure-icon-medium);
    --spectrum-picker-spacing-label-to-picker-quiet: var(--spectrum-field-label-to-component-quiet-medium);
    --spectrum-picker-spacing-top-to-alert-icon: var(--spectrum-field-top-to-alert-icon-medium);
    --spectrum-picker-spacing-top-to-progress-circle: var(--spectrum-field-top-to-progress-circle-medium);
    --spectrum-picker-spacing-top-to-disclosure-icon: var(--spectrum-field-top-to-disclosure-icon-100);
    --spectrum-picker-spacing-edge-to-disclosure-icon: var(--spectrum-field-end-edge-to-disclosure-icon-100);
    --spectrum-picker-spacing-edge-to-disclosure-icon-quiet: var(--spectrum-picker-end-edge-to-disclousure-icon-quiet);
    --spectrum-picker-animation-duration: var(--spectrum-animation-duration-100);
    --spectrum-picker-font-color-default: var(--spectrum-neutral-content-color-default);
    --spectrum-picker-font-color-default-open: var(--spectrum-neutral-content-color-focus);
    --spectrum-picker-font-color-hover: var(--spectrum-neutral-content-color-hover);
    --spectrum-picker-font-color-hover-open: var(--spectrum-neutral-content-color-focus-hover);
    --spectrum-picker-font-color-active: var(--spectrum-neutral-content-color-down);
    --spectrum-picker-font-color-key-focus: var(--spectrum-neutral-content-color-key-focus);
    --spectrum-picker-icon-color-default: var(--spectrum-neutral-content-color-default);
    --spectrum-picker-icon-color-default-open: var(--spectrum-neutral-content-color-focus);
    --spectrum-picker-icon-color-hover: var(--spectrum-neutral-content-color-hover);
    --spectrum-picker-icon-color-hover-open: var(--spectrum-neutral-content-color-focus-hover);
    --spectrum-picker-icon-color-active: var(--spectrum-neutral-content-color-down);
    --spectrum-picker-icon-color-key-focus: var(--spectrum-neutral-content-color-key-focus);
    --spectrum-picker-border-color-error-default: var(--spectrum-negative-border-color-default);
    --spectrum-picker-border-color-error-default-open: var(--spectrum-negative-border-color-focus);
    --spectrum-picker-border-color-error-hover: var(--spectrum-negative-border-color-hover);
    --spectrum-picker-border-color-error-hover-open: var(--spectrum-negative-border-color-focus-hover);
    --spectrum-picker-border-color-error-active: var(--spectrum-negative-border-color-down);
    --spectrum-picker-border-color-error-key-focus: var(--spectrum-negative-border-color-key-focus);
    --spectrum-picker-icon-color-error: var(--spectrum-negative-visual-color);
    --spectrum-picker-background-color-disabled: var(--spectrum-disabled-background-color);
    --spectrum-picker-font-color-disabled: var(--spectrum-disabled-content-color);
    --spectrum-picker-icon-color-disabled: var(--spectrum-disabled-content-color);
    --spectrum-picker-focus-indicator-gap: var(--spectrum-focus-indicator-gap);
    --spectrum-picker-focus-indicator-thickness: var(--spectrum-focus-indicator-thickness);
    --spectrum-picker-focus-indicator-color: var(--spectrum-focus-indicator-color);
}

:host([size="s"]) {
}

:host([size="l"]) {
}

:host([size="xl"]) {
}

#button.is-keyboardFocused,
#button:focus-visible {
    --highcontrast-picker-border-color-hover: ButtonText;
}

#button .label,
#button:after {
    forced-color-adjust: none;
}

#button {
    box-sizing: border-box;
    max-inline-size: 100%;
    min-inline-size: calc(var(--spectrum-picker-minimum-width-multiplier) * var(--spectrum-picker-block-size));
    inline-size: var(--spectrum-picker-inline-size);
    block-size: var(--spectrum-picker-block-size);
    border-width: var(--spectrum-picker-border-width);
    border-radius: var(--spectrum-picker-border-radius);
    transition:
        background-color var(--spectrum-picker-animation-duration),
        box-shadow var(--spectrum-picker-animation-duration),
        border-color var(--spectrum-picker-animation-duration) ease-in-out;
    color: var(--highcontrast-picker-content-color-default, var(--spectrum-picker-font-color-default));
    background-color: var(--highcontrast-picker-background-color, var(--spectrum-picker-background-color-default));
    border-style: solid;
    border-color: var(--highcontrast-picker-border-color-default, var(--spectrum-picker-border-color-default));
    margin-block-start: var(--spectrum-picker-spacing-label-to-picker);
    padding-block: 0;
    padding-inline-start: var(--spectrum-picker-spacing-edge-to-text);
    padding-inline-end: var(--spectrum-picker-spacing-edge-to-disclosure-icon);
    display: flex;
}

#button:after {
    pointer-events: none;
    content: "";
    block-size: calc(100% + var(--spectrum-picker-focus-indicator-gap) * 2 + var(--spectrum-picker-border-width) * 2);
    inline-size: calc(100% + var(--spectrum-picker-focus-indicator-gap) * 2 + var(--spectrum-picker-border-width) * 2);
    border-style: solid;
    border-width: var(--spectrum-picker-focus-indicator-thickness);
    border-radius: calc(var(--spectrum-picker-border-radius) + var(--spectrum-picker-focus-indicator-gap) + var(--spectrum-picker-border-width));
    border-color: var(--highcontrast-picker-focus-indicator-color, var(--spectrum-picker-focus-indicator-color));
    margin-block-start: calc((var(--spectrum-picker-focus-indicator-gap) + var(--spectrum-picker-focus-indicator-thickness) + var(--spectrum-picker-border-width)) * -1);
    margin-inline-start: calc((var(--spectrum-picker-focus-indicator-gap) + var(--spectrum-picker-focus-indicator-thickness) + var(--spectrum-picker-border-width)) * -1);
    position: absolute;
    inset-block: 0;
    inset-inline: 0;
}

#button:active {
    background-color: var(--highcontrast-picker-background-color, var(--spectrum-picker-background-color-active));
    border-color: var(--highcontrast-picker-border-color-default, var(--spectrum-picker-border-color-active));
}

#button:active:after {
    border-color: #0000;
}

#button.placeholder:active .label {
    color: var(--highcontrast-picker-content-color-default, var(--spectrum-picker-font-color-active));
}

#button.is-keyboardFocused,
#button:focus-visible {
    background-color: var(--highcontrast-picker-background-color, var(--spectrum-picker-background-color-key-focus));
    border-color: var(--highcontrast-picker-border-color-default, var(--spectrum-picker-border-color-key-focus));
    color: var(--highcontrast-picker-content-color-default, var(--spectrum-picker-font-color-key-focus));
    outline: none;
}

#button.is-keyboardFocused:after,
#button:focus-visible:after {
    border-color: var(--highcontrast-picker-focus-indicator-color, var(--spectrum-picker-focus-indicator-color));
}

#button.is-keyboardFocused .label.placeholder,
#button:focus-visible .label.placeholder {
    color: var(--highcontrast-picker-content-color-default, var(--spectrum-picker-font-color-key-focus));
}

#button.is-keyboardFocused .picker,
#button:focus-visible .picker {
    color: var(--highcontrast-picker-content-color-default, var(--spectrum-picker-icon-color-key-focus));
}

:host([open]) #button:not(.spectrum-Picker--quiet, :disabled, .is-disabled) {
    color: var(--highcontrast-picker-content-color-default, var(--spectrum-picker-font-color-default-open));
    background-color: var(--highcontrast-picker-background-color, var(--spectrum-picker-background-color-default-open));
    border-color: var(--highcontrast-picker-border-color-default, var(--spectrum-picker-border-color-default-open));
}

:host([open]) #button:not(.spectrum-Picker--quiet, :disabled, .is-disabled) .picker {
    color: var(--highcontrast-picker-content-color-default, var(--spectrum-picker-icon-color-default-open));
}

:host([invalid]) #button:not(:disabled, .is-disabled) {
    border-color: var(--highcontrast-picker-border-color-default, var(--spectrum-picker-border-color-error-default));
}

:host([invalid]) #button:not(:disabled, .is-disabled) .validation-icon {
    color: var(--highcontrast-picker-content-color-default, var(--spectrum-picker-icon-color-error));
}

:host([invalid]) #button:not(:disabled, .is-disabled):active {
    border-color: var(--highcontrast-picker-border-color-default, var(--spectrum-picker-border-color-error-active));
}

:host([invalid][open]) #button:not(:disabled, .is-disabled) {
    border-color: var(--highcontrast-picker-border-color-default, var(--spectrum-picker-border-color-error-default-open));
}

:host([invalid]) #button.is-keyboardFocused:not(:disabled, .is-disabled),
:host([invalid]) #button:not(:disabled, .is-disabled):focus-visible {
    border-color: var(--highcontrast-picker-border-color-default, var(--spectrum-picker-border-color-error-key-focus));
}

:host([pending]) #button .picker {
    color: var(--highcontrast-picker-content-color-disabled, var(--spectrum-picker-icon-color-disabled));
}

:host([invalid]) #button .label,
:host([pending]) #button .label {
    margin-inline-end: var(--spectrum-picker-spacing-text-to-icon-inline-end, var(--spectrum-picker-spacing-text-to-alert-icon-inline-start, var(--spectrum-picker-spacing-text-to-icon-inline-end)));
}

.icon {
    flex-shrink: 0;
    margin-inline-end: var(--spectrum-picker-spacing-text-to-icon, var(--spectrum-picker-spacing-text-to-icon));
}

.label {
    white-space: nowrap;
    font-size: var(--spectrum-picker-font-size);
    line-height: var(--spectrum-picker-line-height);
    font-weight: var(--spectrum-picker-font-weight);
    text-overflow: ellipsis;
    text-align: start;
    flex: auto;
    padding-block-start: var(--spectrum-picker-spacing-top-to-text);
    padding-block-end: calc(var(--spectrum-picker-spacing-bottom-to-text) - var(--spectrum-picker-border-width));
    overflow: hidden;
}

.label.placeholder {
    font-weight: var(--spectrum-picker-font-weight);
    font-style: var(--spectrum-picker-placeholder-font-style);
    transition: color var(--spectrum-picker-animation-duration) ease-in-out;
    color: var(--highcontrast-picker-content-color-default, var(--spectrum-picker-font-color-default));
}

.label.placeholder:active {
    color: var(--highcontrast-picker-content-color-default, var(--spectrum-picker-font-color-active));
}

.picker {
    vertical-align: top;
    transition: color var(--spectrum-picker-animation-duration) ease-out;
    margin-inline-start: var(--spectrum-picker-spacing-icon-to-disclosure-icon, var(--spectrum-picker-spacing-icon-to-disclosure-icon));
    margin-block: var(--spectrum-picker-spacing-top-to-disclosure-icon, var(--spectrum-picker-spacing-top-to-disclosure-icon));
    color: var(--highcontrast-picker-content-color-default, var(--spectrum-picker-icon-color-default));
    flex-shrink: 0;
    display: inline-block;
    position: relative;
}

.picker:active {
    color: var(--highcontrast-picker-content-color-default, var(--spectrum-picker-icon-color-active));
}

.validation-icon {
    flex-shrink: 0;
    margin-block-start: calc(var(--spectrum-picker-spacing-top-to-alert-icon) - var(--spectrum-picker-border-width));
    margin-block-end: calc(var(--spectrum-picker-spacing-top-to-alert-icon) - var(--spectrum-picker-border-width));
}

#button .progress-circle {
    margin-block-start: calc(var(--spectrum-picker-spacing-top-to-progress-circle) - var(--spectrum-picker-border-width));
    margin-block-end: calc(var(--spectrum-picker-spacing-top-to-progress-circle) - var(--spectrum-picker-border-width));
}

.label ~ .picker {
    margin-inline-start: var(--spectrum-picker-spacing-text-to-icon, var(--spectrum-picker-spacing-text-to-icon));
}

:host([quiet]) #button {
    inline-size: auto;
    min-inline-size: 0;
    padding-inline: var(--spectrum-picker-spacing-edge-to-text-quiet, var(--spectrum-picker-spacing-edge-to-text-quiet));
    color: var(--highcontrast-picker-content-color-default, var(--spectrum-picker-font-color-default));
    background-color: initial;
    background-color: var(--highcontrast-picker-background-color, transparent);
    border: none;
    border-radius: 0;
    margin-block-start: calc(var(--spectrum-picker-spacing-label-to-picker-quiet, var(--spectrum-picker-spacing-label-to-picker-quiet)) + 1px);
}

:host([quiet]) #button.label-inline {
    margin-block-start: 0;
}

:host([quiet]) #button .picker {
    margin-inline-end: var(--spectrum-picker-spacing-edge-to-disclosure-icon-quiet, var(--spectrum-picker-spacing-edge-to-disclosure-icon-quiet));
}

:host([quiet]) #button:after {
    block-size: auto;
    inline-size: auto;
    border: none;
}

#button:hover .picker {
    color: var(--highcontrast-picker-content-color-default, var(--spectrum-picker-icon-color-hover));
}

:host([open]) #button:not(.spectrum-Picker--quiet, :disabled, .is-disabled):hover {
    color: var(--highcontrast-picker-content-color-default, var(--spectrum-picker-font-color-hover-open));
    background-color: var(--highcontrast-picker-background-color, var(--spectrum-picker-background-color-hover-open));
    border-color: var(--highcontrast-picker-border-color-hover, var(--spectrum-picker-border-color-hover-open));
}

:host([open]) #button:not(.spectrum-Picker--quiet, :disabled, .is-disabled):hover .picker {
    color: var(--highcontrast-picker-content-color-default, var(--spectrum-picker-icon-color-hover-open));
}

:host([invalid]) #button:not(:disabled, .is-disabled):hover {
    border-color: var(--highcontrast-picker-border-color-hover, var(--spectrum-picker-border-color-error-hover));
}

:host([invalid][open]) #button:not(:disabled, .is-disabled):hover {
    border-color: var(--highcontrast-picker-border-color-hover, var(--spectrum-picker-border-color-error-hover-open));
}

.label.placeholder:hover {
    color: var(--highcontrast-picker-content-color-default, var(--spectrum-picker-font-color-hover));
}

:host([quiet]) #button:hover {
    background-color: initial;
    background-color: var(--highcontrast-picker-background-color, transparent);
}

:host([quiet]) #button.is-keyboardFocused,
:host([quiet]) #button:focus-visible {
    background-color: initial;
    background-color: var(--highcontrast-picker-background-color, transparent);
}

:host([quiet]) #button.is-keyboardFocused:after,
:host([quiet]) #button:focus-visible:after {
    box-shadow: 0 var(--spectrum-picker-focus-indicator-thickness) 0 0 var(--highcontrast-picker-focus-indicator-color, var(--spectrum-picker-focus-indicator-color));
    margin: calc((var(--spectrum-picker-focus-indicator-gap) + var(--spectrum-picker-border-width)) * -1) 0;
    border: none;
    border-radius: 0;
}

:host([quiet][open]) #button,
:host([quiet][disabled]) #button#button,
:host([quiet]) #button#button:disabled,
:host([quiet]) #button:active {
    background-color: initial;
    background-color: var(--highcontrast-picker-background-color, transparent);
}

.label-inline {
    vertical-align: top;
    display: inline-flex;
}

:host([disabled]) #button,
#button:disabled {
    cursor: default;
    background-color: var(--highcontrast-picker-background-color, var(--spectrum-picker-background-color-disabled));
    border-color: var(--highcontrast-picker-border-color-disabled, var(--spectrum-picker-border-color-disabled));
    color: var(--highcontrast-picker-content-color-disabled, var(--spectrum-picker-font-color-disabled));
}

:host([disabled]) #button .icon,
:host([disabled]) #button .picker,
:host([disabled]) #button .validation-icon,
#button:disabled .icon,
#button:disabled .picker,
#button:disabled .validation-icon {
    color: var(--highcontrast-picker-content-color-disabled, var(--spectrum-picker-icon-color-disabled));
}

:host([disabled]) #button .label.placeholder,
#button:disabled .label.placeholder {
    color: var(--highcontrast-picker-content-color-disabled, var(--spectrum-picker-font-color-disabled));
}

/* base variables */
:host {
    /* layout */
    --spectrum-picker-border-width: var(--spectrum-border-width-100);

    /* typography */

    /* spacing */

    /* animation */

    /* colors */
    --spectrum-picker-background-color-default: var(--spectrum-gray-75);
    --spectrum-picker-background-color-default-open: var(--spectrum-gray-200);
    --spectrum-picker-background-color-hover: var(--spectrum-gray-100);
    --spectrum-picker-background-color-hover-open: var(--spectrum-gray-300);
    --spectrum-picker-background-color-active: var(--spectrum-gray-300);
    --spectrum-picker-background-color-key-focus: var(--spectrum-gray-75);
    --spectrum-picker-border-color-default: var(--spectrum-gray-500);
    --spectrum-picker-border-color-default-open: var(--spectrum-gray-600);
    --spectrum-picker-border-color-hover: var(--spectrum-gray-600);
    --spectrum-picker-border-color-hover-open: var(--spectrum-gray-700);
    --spectrum-picker-border-color-active: var(--spectrum-gray-700);
    --spectrum-picker-border-color-key-focus: var(--spectrum-gray-800);
    --spectrum-picker-border-color-disabled: var(--spectrum-disabled-border-color);

    /* text Colors */

    /* icon Colors */

    /* error states */

    /* disabled states */

    /* focus indicator */

    /* layout */
    display: inline-flex;
    vertical-align: top;
    max-inline-size: 100%;
    inline-size: var(--spectrum-picker-inline-size);
    min-inline-size: calc(var(--spectrum-picker-minimum-width-multiplier) * var(--spectrum-picker-block-size));
}

/* size variants */
:host([size="s"]) {
}

/* states */
:host([quiet]) {
    inline-size: auto;
    min-inline-size: 0;
}

:host([disabled]) {
    pointer-events: none;
}

:host([readonly]) #button {
    user-select: inherit;
}

/* button base styles */
#button {
    cursor: pointer;
    user-select: none;
    font-family: var(--spectrum-sans-font-family-stack);
    -webkit-font-smoothing: antialiased;
    -moz-osx-font-smoothing: grayscale;
    line-height: var(--spectrum-line-height-100);
    text-transform: none;
    vertical-align: top;

    /* required for proper button styling in Safari */
    /* stylelint-disable-next-line property-no-vendor-prefix */
    -webkit-appearance: button;
    justify-content: center;
    align-items: center;
    margin: 0;
    text-decoration: none;
    position: relative;
    overflow: visible;
    box-sizing: border-box;
    max-inline-size: 100%;
    min-inline-size: calc(var(--spectrum-picker-minimum-width-multiplier) * var(--spectrum-picker-block-size));
    inline-size: var(--spectrum-picker-inline-size);
    block-size: var(--spectrum-picker-block-size);
    border-width: var(--spectrum-picker-border-width);
    border-radius: var(--spectrum-picker-border-radius);
    transition:
        background var(--spectrum-animation-duration-100) ease-out,
        border-color var(--spectrum-animation-duration-100) ease-out,
        color var(--spectrum-animation-duration-100) ease-out,
        box-shadow var(--spectrum-animation-duration-100) ease-out,
        background-color var(--spectrum-picker-animation-duration);
    color: var(--highcontrast-picker-content-color-default, var(--spectrum-picker-font-color-default));
    background-color: var(--highcontrast-picker-background-color, var(--spectrum-picker-background-color-default));
    border-style: solid;
    border-color: var(--highcontrast-picker-border-color-default, var(--spectrum-picker-border-color-default));
    margin-block-start: var(--spectrum-picker-spacing-label-to-picker);
    padding-block: 0;
    padding-inline-start: var(--spectrum-picker-spacing-edge-to-text);
    padding-inline-end: var(--spectrum-picker-spacing-edge-to-disclosure-icon);
    display: flex;
}

#icon:not([hidden]) {
    display: inline-flex;
}

.picker,
.validation-icon {
    flex-shrink: 0;
}

sp-overlay {
    pointer-events: none;
}

sp-menu {
    pointer-events: initial;
}

:host > sp-menu {
    display: none;
}

/* *
 * The accessibility team would prefer that it be possible to override the :focus-visible
 * heuristics in _some_ cases, like when clicking an `sp-field-label`...
 *
 * From Picker
 * */
:host([focused]:not([quiet])) #button #label.placeholder {
    /* .spectrum-Picker-trigger.focus-ring .spectrum-Picker-label.is-placeholder */
    color: var(--spectrum-picker-placeholder-text-color-key-focus, var(--spectrum-alias-placeholder-text-color-hover));
}

#label.visually-hidden ~ .picker {
    margin-inline-start: auto;
}

:host([focused]:not([quiet], [pending])) #button .picker {
    /* .spectrum-Picker-trigger.focus-ring .spectrum-Picker-icon */
    color: var(--spectrum-picker-icon-color-key-focus, var(--spectrum-alias-icon-color-focus));
}

.visually-hidden {
    clip: rect(0, 0, 0, 0);
    clip-path: inset(50%);
    block-size: 1px;
    overflow: hidden;
    position: absolute;
    white-space: nowrap;
    inline-size: 1px;
}

sp-overlay:not(:defined) {
    display: none;
}

#button.remove-focus-ring-safari-hack:focus-visible {
    outline: none;
}

#button.remove-focus-ring-safari-hack:after {
    display: none;
}

#button.remove-focus-ring-safari-hack:focus-visible:after {
    display: block;
}

#button.remove-focus-ring-safari-hack:active {
    outline: none;
}
