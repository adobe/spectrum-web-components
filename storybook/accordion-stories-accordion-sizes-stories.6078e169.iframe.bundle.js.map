{"version":3,"file":"accordion-stories-accordion-sizes-stories.6078e169.iframe.bundle.js","mappings":";;AAcA;AACA;AACA;;AAEA;;;AAGA;;;;;;;;;;;;;;;;;;;;ACpBA","sources":["webpack://@adobe/spectrum-web-components/./packages/accordion/stories/index.js","webpack://@adobe/spectrum-web-components/./packages/link/src/Link.dev.js"],"sourcesContent":["\"use strict\";\nimport { html } from \"@spectrum-web-components/base\";\nimport \"@spectrum-web-components/accordion/sp-accordion.js\";\nimport \"@spectrum-web-components/accordion/sp-accordion-item.js\";\nimport \"@spectrum-web-components/link/sp-link.js\";\nexport const AccordionMarkup = ({\n  allowMultiple = false,\n  disabled = false,\n  open = false,\n  size = \"m\",\n  density = void 0\n} = {}) => {\n  return html`\n        <sp-accordion\n            ?allow-multiple=${allowMultiple}\n            density=${density}\n            size=${size}\n        >\n            <sp-accordion-item label=\"Heading 1\" ?disabled=${disabled}>\n                <div>Item 1</div>\n            </sp-accordion-item>\n            <sp-accordion-item label=\"Heading 2\" ?open=${open}>\n                Item 2\n            </sp-accordion-item>\n            <sp-accordion-item label=\"Heading 3\">\n                <p>\n                    This is content that has a\n                    <sp-link\n                        href=\"http://opensource.adobe.com/spectrum-web-components\"\n                        target=\"_blank\"\n                    >\n                        link back to Spectrum Web Components\n                    </sp-link>\n                    so that it is easy to test that \"Space\" and \"Enter\"\n                    interactions on focusable content does NOT toggle the\n                    Accordion Item.\n                </p>\n            </sp-accordion-item>\n        </sp-accordion>\n    `;\n};\n//# sourceMappingURL=index.js.map\n","\"use strict\";\nvar __defProp = Object.defineProperty;\nvar __getOwnPropDesc = Object.getOwnPropertyDescriptor;\nvar __decorateClass = (decorators, target, key, kind) => {\n  var result = kind > 1 ? void 0 : kind ? __getOwnPropDesc(target, key) : target;\n  for (var i = decorators.length - 1, decorator; i >= 0; i--)\n    if (decorator = decorators[i])\n      result = (kind ? decorator(target, key, result) : decorator(result)) || result;\n  if (kind && result) __defProp(target, key, result);\n  return result;\n};\nimport {\n  property,\n  query\n} from \"@spectrum-web-components/base/src/decorators.js\";\nimport { LikeAnchor } from \"@spectrum-web-components/shared/src/like-anchor.js\";\nimport { Focusable } from \"@spectrum-web-components/shared/src/focusable.js\";\nimport linkStyles from \"./link.css.js\";\nexport class Link extends LikeAnchor(Focusable) {\n  constructor() {\n    super(...arguments);\n    this.quiet = false;\n  }\n  static get styles() {\n    return [linkStyles];\n  }\n  get focusElement() {\n    return this.anchorElement;\n  }\n  render() {\n    return this.renderAnchor({ id: \"anchor\" });\n  }\n}\n__decorateClass([\n  query(\"#anchor\")\n], Link.prototype, \"anchorElement\", 2);\n__decorateClass([\n  property({ type: String, reflect: true })\n], Link.prototype, \"variant\", 2);\n__decorateClass([\n  property({ reflect: true, attribute: \"static-color\" })\n], Link.prototype, \"staticColor\", 2);\n__decorateClass([\n  property({ type: Boolean, reflect: true, attribute: \"quiet\" })\n], Link.prototype, \"quiet\", 2);\n//# sourceMappingURL=Link.dev.js.map\n"],"names":[],"sourceRoot":""}