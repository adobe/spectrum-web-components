{"version":3,"file":"tabs-stories-tabs-overflow-panel-sizes-stories.b9ba6824.iframe.bundle.js","mappings":";;AACA;;AAgCA;AACA;;AAGA;ACOA;;AAEA;AACA;AACA;AACA;;AAGA;;ACnDA;;AAmGA;;;AAOA;AAIA;;;;AAIA;;;;;;;;AAQA;AAIA;;;AAGA;;;;;;;;AAQA;AACA;;;AAIA;;;;;;;;;;ACvHA;AACA;AACA;;AAKA;AACA;;;AAIA;AACA;AAIA;AACA;;;AAIA","sources":["webpack://@adobe/spectrum-web-components/./packages/tabs/src/TabPanel.dev.js","webpack://@adobe/spectrum-web-components/./packages/tabs/src/Tab.dev.js","webpack://@adobe/spectrum-web-components/./packages/tabs/src/TabsOverflow.dev.js","webpack://@adobe/spectrum-web-components/./packages/tabs/stories/index.js"],"sourcesContent":["\"use strict\";\nvar __defProp = Object.defineProperty;\nvar __getOwnPropDesc = Object.getOwnPropertyDescriptor;\nvar __decorateClass = (decorators, target, key, kind) => {\n  var result = kind > 1 ? void 0 : kind ? __getOwnPropDesc(target, key) : target;\n  for (var i = decorators.length - 1, decorator; i >= 0; i--)\n    if (decorator = decorators[i])\n      result = (kind ? decorator(target, key, result) : decorator(result)) || result;\n  if (kind && result) __defProp(target, key, result);\n  return result;\n};\nimport {\n  html,\n  SpectrumElement\n} from \"@spectrum-web-components/base\";\nimport { property } from \"@spectrum-web-components/base/src/decorators.js\";\nimport { randomID } from \"@spectrum-web-components/shared/src/random-id.js\";\nimport panelStyles from \"./tab-panel.css.js\";\nexport class TabPanel extends SpectrumElement {\n  constructor() {\n    super(...arguments);\n    this.selected = false;\n    this.value = \"\";\n  }\n  handleFocusin() {\n    this.removeAttribute(\"tabindex\");\n  }\n  handleFocusout() {\n    this.tabIndex = this.selected ? 0 : -1;\n  }\n  render() {\n    return html`\n            <slot\n                @focusin=${this.handleFocusin}\n                @focusout=${this.handleFocusout}\n            ></slot>\n        `;\n  }\n  firstUpdated() {\n    this.slot = \"tab-panel\";\n    this.setAttribute(\"role\", \"tabpanel\");\n    this.tabIndex = 0;\n    if (!this.hasAttribute(\"id\")) {\n      this.id = `sp-tab-panel-${randomID()}`;\n    }\n  }\n  updated(changes) {\n    if (changes.has(\"selected\")) {\n      if (this.selected) {\n        this.removeAttribute(\"aria-hidden\");\n        this.tabIndex = 0;\n      } else {\n        this.setAttribute(\"aria-hidden\", \"true\");\n        this.tabIndex = -1;\n      }\n    }\n  }\n}\nTabPanel.styles = [panelStyles];\n__decorateClass([\n  property({ type: Boolean, reflect: true })\n], TabPanel.prototype, \"selected\", 2);\n__decorateClass([\n  property({ type: String, reflect: true })\n], TabPanel.prototype, \"value\", 2);\n//# sourceMappingURL=TabPanel.dev.js.map\n","\"use strict\";\nvar __defProp = Object.defineProperty;\nvar __getOwnPropDesc = Object.getOwnPropertyDescriptor;\nvar __decorateClass = (decorators, target, key, kind) => {\n  var result = kind > 1 ? void 0 : kind ? __getOwnPropDesc(target, key) : target;\n  for (var i = decorators.length - 1, decorator; i >= 0; i--)\n    if (decorator = decorators[i])\n      result = (kind ? decorator(target, key, result) : decorator(result)) || result;\n  if (kind && result) __defProp(target, key, result);\n  return result;\n};\nimport {\n  html,\n  nothing,\n  SpectrumElement\n} from \"@spectrum-web-components/base\";\nimport { property } from \"@spectrum-web-components/base/src/decorators.js\";\nimport { FocusVisiblePolyfillMixin } from \"@spectrum-web-components/shared/src/focus-visible.js\";\nimport { ObserveSlotPresence } from \"@spectrum-web-components/shared/src/observe-slot-presence.js\";\nimport { ObserveSlotText } from \"@spectrum-web-components/shared/src/observe-slot-text.js\";\nimport { randomID } from \"@spectrum-web-components/shared/src/random-id.js\";\nimport tabItemStyles from \"./tab.css.js\";\nexport class Tab extends FocusVisiblePolyfillMixin(\n  ObserveSlotText(ObserveSlotPresence(SpectrumElement, '[slot=\"icon\"]'), \"\")\n) {\n  constructor() {\n    super(...arguments);\n    this.disabled = false;\n    this.label = \"\";\n    this.selected = false;\n    this.vertical = false;\n    this.value = \"\";\n  }\n  static get styles() {\n    return [tabItemStyles];\n  }\n  get hasIcon() {\n    return this.slotContentIsPresent;\n  }\n  get hasLabel() {\n    return !!this.label || this.slotHasContent;\n  }\n  render() {\n    return html`\n            ${this.hasIcon ? html`\n                      <slot name=\"icon\"></slot>\n                  ` : nothing}\n            <label id=\"item-label\" ?hidden=${!this.hasLabel}>\n                ${this.slotHasContent ? nothing : this.label}\n                <slot>${this.label}</slot>\n            </label>\n        `;\n  }\n  firstUpdated(changes) {\n    super.firstUpdated(changes);\n    this.setAttribute(\"role\", \"tab\");\n    if (!this.hasAttribute(\"id\")) {\n      this.id = `sp-tab-${randomID()}`;\n    }\n  }\n  updated(changes) {\n    super.updated(changes);\n    if (changes.has(\"selected\")) {\n      this.setAttribute(\n        \"aria-selected\",\n        this.selected ? \"true\" : \"false\"\n      );\n      this.setAttribute(\"tabindex\", this.selected ? \"0\" : \"-1\");\n    }\n    if (changes.has(\"disabled\")) {\n      if (this.disabled) {\n        this.setAttribute(\"aria-disabled\", \"true\");\n      } else {\n        this.removeAttribute(\"aria-disabled\");\n      }\n    }\n  }\n}\n__decorateClass([\n  property({ type: Boolean, reflect: true })\n], Tab.prototype, \"disabled\", 2);\n__decorateClass([\n  property({ reflect: true })\n], Tab.prototype, \"label\", 2);\n__decorateClass([\n  property({ type: Boolean, reflect: true })\n], Tab.prototype, \"selected\", 2);\n__decorateClass([\n  property({ type: Boolean, reflect: true })\n], Tab.prototype, \"vertical\", 2);\n__decorateClass([\n  property({ type: String, reflect: true })\n], Tab.prototype, \"value\", 2);\n//# sourceMappingURL=Tab.dev.js.map\n","\"use strict\";\nvar __defProp = Object.defineProperty;\nvar __getOwnPropDesc = Object.getOwnPropertyDescriptor;\nvar __decorateClass = (decorators, target, key, kind) => {\n  var result = kind > 1 ? void 0 : kind ? __getOwnPropDesc(target, key) : target;\n  for (var i = decorators.length - 1, decorator; i >= 0; i--)\n    if (decorator = decorators[i])\n      result = (kind ? decorator(target, key, result) : decorator(result)) || result;\n  if (kind && result) __defProp(target, key, result);\n  return result;\n};\nimport {\n  html,\n  SizedMixin,\n  SpectrumElement\n} from \"@spectrum-web-components/base\";\nimport {\n  property,\n  query,\n  queryAssignedElements,\n  state\n} from \"@spectrum-web-components/base/src/decorators.js\";\nimport { classMap } from \"@spectrum-web-components/base/src/directives.js\";\nimport { ResizeController } from \"@lit-labs/observers/resize-controller.js\";\nimport \"@spectrum-web-components/action-button/sp-action-button.js\";\nimport \"@spectrum-web-components/icons-ui/icons/sp-icon-chevron100.js\";\nimport chevronIconStyles from \"@spectrum-web-components/icon/src/spectrum-icon-chevron.css.js\";\nimport tabSizes from \"./tabs-sizes.css.js\";\nimport styles from \"./tabs-overflow.css.js\";\nexport class TabsOverflow extends SizedMixin(SpectrumElement) {\n  constructor() {\n    super();\n    this.compact = false;\n    this.labelPrevious = \"Scroll to previous tabs\";\n    this.labelNext = \"Scroll to next tabs\";\n    this.overflowState = {\n      canScrollLeft: false,\n      canScrollRight: false\n    };\n    this.scrollFactor = 0.5;\n    this.resizeController = new ResizeController(this, {\n      target: this,\n      callback: () => {\n        this._updateScrollState();\n      }\n    });\n  }\n  static get styles() {\n    return [styles, tabSizes, chevronIconStyles];\n  }\n  get scrollContent() {\n    return this.tabs;\n  }\n  firstUpdated(changes) {\n    super.firstUpdated(changes);\n    const [tabs] = this.scrollContent;\n    if (tabs) {\n      tabs.enableTabsScroll = true;\n    }\n    this.resizeController.observe(this.overflowContainer);\n  }\n  async _handleSlotChange() {\n    const [tabsElement] = this.scrollContent;\n    await (tabsElement == null ? void 0 : tabsElement.updateComplete);\n    this._updateScrollState();\n  }\n  _updateScrollState() {\n    const { scrollContent, overflowState } = this;\n    if (scrollContent) {\n      const [tabsElement] = this.scrollContent;\n      const { canScrollLeft, canScrollRight } = (tabsElement == null ? void 0 : tabsElement.scrollState) || {\n        canScrollLeft: false,\n        canScrollRight: false\n      };\n      this.overflowState = {\n        ...overflowState,\n        canScrollLeft,\n        canScrollRight\n      };\n    }\n  }\n  _handleScrollClick(event) {\n    const currentTarget = event.currentTarget;\n    const [tabsElement] = this.scrollContent;\n    const dist = tabsElement.clientWidth * this.scrollFactor;\n    const left = currentTarget.classList.contains(\"left-scroll\") ? -dist : dist;\n    tabsElement.scrollTabs(left, \"smooth\");\n  }\n  updated(changedProperties) {\n    super.updated(changedProperties);\n    if (changedProperties.has(\"dir\")) {\n      this._updateScrollState();\n    }\n  }\n  render() {\n    const { canScrollRight, canScrollLeft } = this.overflowState;\n    const ariaLabelPrevious = this.labelPrevious;\n    const ariaLabelNext = this.labelNext;\n    return html`\n            <div\n                class=${classMap({\n      \"tabs-overflow-container\": true,\n      \"left-shadow\": canScrollLeft,\n      \"right-shadow\": canScrollRight\n    })}\n            >\n                <sp-action-button\n                    class=${classMap({\n      \"left-scroll\": true,\n      show: canScrollLeft\n    })}\n                    aria-label=${ariaLabelPrevious}\n                    quiet\n                    dir=\"rtl\"\n                    tabindex=\"-1\"\n                    @click=${this._handleScrollClick}\n                >\n                    <sp-icon-chevron100\n                        slot=\"icon\"\n                        class=\"spectrum-UIIcon-ChevronLeft300\"\n                    ></sp-icon-chevron100>\n                </sp-action-button>\n                <sp-action-button\n                    class=${classMap({\n      \"right-scroll\": true,\n      show: canScrollRight\n    })}\n                    aria-label=${ariaLabelNext}\n                    quiet\n                    tabindex=\"-1\"\n                    @click=${this._handleScrollClick}\n                >\n                    <sp-icon-chevron100\n                        slot=\"icon\"\n                        class=\"spectrum-UIIcon-ChevronRight300\"\n                    ></sp-icon-chevron100>\n                </sp-action-button>\n                <slot\n                    @slotchange=${this._handleSlotChange}\n                    @sp-tabs-scroll=${this._updateScrollState}\n                ></slot>\n            </div>\n        `;\n  }\n}\n__decorateClass([\n  property({ type: Boolean, reflect: true })\n], TabsOverflow.prototype, \"compact\", 2);\n__decorateClass([\n  property({ type: String, attribute: \"label-previous\" })\n], TabsOverflow.prototype, \"labelPrevious\", 2);\n__decorateClass([\n  property({ type: String, attribute: \"label-next\" })\n], TabsOverflow.prototype, \"labelNext\", 2);\n__decorateClass([\n  property({ reflect: true })\n], TabsOverflow.prototype, \"dir\", 2);\n__decorateClass([\n  state()\n], TabsOverflow.prototype, \"overflowState\", 2);\n__decorateClass([\n  queryAssignedElements({ selector: \"sp-tabs\", flatten: true })\n], TabsOverflow.prototype, \"tabs\", 2);\n__decorateClass([\n  query(\".tabs-overflow-container\")\n], TabsOverflow.prototype, \"overflowContainer\", 2);\n//# sourceMappingURL=TabsOverflow.dev.js.map\n","\"use strict\";\nimport \"@spectrum-web-components/tabs/sp-tab.js\";\nimport \"@spectrum-web-components/tabs/sp-tabs.js\";\nimport \"@spectrum-web-components/tabs/sp-tab-panel.js\";\nimport \"@spectrum-web-components/tabs/sp-tabs-overflow.js\";\nimport { html, nothing } from \"@spectrum-web-components/base\";\nimport { repeat } from \"@spectrum-web-components/base/src/directives.js\";\nexport const renderTabsOverflowExample = ({\n  selected = 1,\n  count = 20,\n  size = \"m\",\n  includeTabPanel,\n  compact\n}) => {\n  return html`\n        <style>\n            .container {\n                width: 100%;\n                height: 150px;\n                border: 4px solid gray;\n                resize: both;\n            }\n        </style>\n        <div class=\"container\">\n            <sp-tabs-overflow size=${size} ?compact=${compact}>\n                <sp-tabs size=${size} selected=${selected} ?compact=${compact}>\n                    ${repeat(\n    new Array(count),\n    (item) => item,\n    (_item, index) => html`\n                                <sp-tab\n                                    label=${`Tab Item ${index + 1}`}\n                                    value=${index + 1}\n                                ></sp-tab>\n                            `\n  )}\n                    ${includeTabPanel ? html`\n                              ${repeat(\n    new Array(count),\n    (item) => item,\n    (_item, index) => html`\n                                          <sp-tab-panel value=${index + 1}>\n                                              Content for Tab Item ${index + 1}\n                                          </sp-tab-panel>\n                                      `\n  )}\n                          ` : nothing}\n                </sp-tabs>\n            </sp-tabs-overflow>\n        </div>\n    `;\n};\n//# sourceMappingURL=index.js.map\n"],"names":[],"sourceRoot":""}