{"version":3,"file":"textfield-stories-textfield-stories.6a10ad9f.iframe.bundle.js","mappings":";;AACA;AAgCA;;AAEA;;AAGA;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACEA;;;;;;;;;;AAaA;;;;;;;AAUA;;;;;;;AAUA;;;;;;;;AAWA;;;;;AAQA;;;;;AAQA;;;;;;AASA;;;;;;;AAQA;;;;;;;;;;;;;;;AAgBA;;;;;;;;;AAUA;;;;;;;;;;;;;AAeA","sources":["webpack://@adobe/spectrum-web-components/./packages/help-text/src/HelpText.dev.js","webpack://@adobe/spectrum-web-components/./packages/textfield/stories/textfield.stories.js"],"sourcesContent":["\"use strict\";\nvar __defProp = Object.defineProperty;\nvar __getOwnPropDesc = Object.getOwnPropertyDescriptor;\nvar __decorateClass = (decorators, target, key, kind) => {\n  var result = kind > 1 ? void 0 : kind ? __getOwnPropDesc(target, key) : target;\n  for (var i = decorators.length - 1, decorator; i >= 0; i--)\n    if (decorator = decorators[i])\n      result = (kind ? decorator(target, key, result) : decorator(result)) || result;\n  if (kind && result) __defProp(target, key, result);\n  return result;\n};\nimport {\n  html,\n  nothing,\n  SizedMixin,\n  SpectrumElement\n} from \"@spectrum-web-components/base\";\nimport { property } from \"@spectrum-web-components/base/src/decorators.js\";\nimport \"@spectrum-web-components/icons-workflow/icons/sp-icon-alert.js\";\nimport styles from \"./help-text.css.js\";\nexport class HelpText extends SizedMixin(SpectrumElement, {\n  noDefaultSize: true\n}) {\n  constructor() {\n    super(...arguments);\n    this.icon = false;\n    this.variant = \"neutral\";\n  }\n  static get styles() {\n    return [styles];\n  }\n  render() {\n    return html`\n            ${this.variant === \"negative\" && this.icon ? html`\n                      <sp-icon-alert class=\"icon\"></sp-icon-alert>\n                  ` : nothing}\n            <div class=\"text\"><slot></slot></div>\n        `;\n  }\n}\n__decorateClass([\n  property({ type: Boolean, reflect: true })\n], HelpText.prototype, \"icon\", 2);\n__decorateClass([\n  property({ reflect: true })\n], HelpText.prototype, \"variant\", 2);\n//# sourceMappingURL=HelpText.dev.js.map\n","\"use strict\";\nimport { html } from \"@spectrum-web-components/base\";\nimport \"@spectrum-web-components/textfield/sp-textfield.js\";\nimport \"@spectrum-web-components/field-label/sp-field-label.js\";\nimport \"@spectrum-web-components/help-text/sp-help-text.js\";\nexport default {\n  component: \"sp-textfield\",\n  title: \"Textfield\"\n};\nexport const Default = () => {\n  return html`\n        <sp-textfield placeholder=\"Enter your name\"></sp-textfield>\n        <sp-textfield placeholder=\"Enter your name\" disabled></sp-textfield>\n        <sp-textfield\n            placeholder=\"Enter your name\"\n            pattern=\"[\\\\w\\\\s]*\"\n            required\n            value=\"A valid input\"\n        ></sp-textfield>\n        <sp-textfield\n            placeholder=\"Enter your name\"\n            pattern=\"[\\\\w\\\\s]*\"\n            required\n            value=\"A valid input\"\n            disabled\n        ></sp-textfield>\n        <sp-textfield\n            placeholder=\"Enter your name\"\n            pattern=\"[\\\\d]*\"\n            value=\"Not a valid input\"\n        ></sp-textfield>\n        <sp-textfield\n            placeholder=\"Enter your name\"\n            pattern=\"^[\\\\d]$\"\n            required\n            value=\"Not a valid input\"\n            disabled\n        ></sp-textfield>\n    `;\n};\nexport const growsOnly = () => {\n  return html`\n        <sp-field-label for=\"grows-only\">\n            This Textfield has the \"grows\" attribute without the \"multiline\"\n            attribute\n        </sp-field-label>\n        <sp-textfield\n            grows\n            id=\"grows-only\"\n            placeholder=\"Does not grow or display incorrectly\"\n        ></sp-textfield>\n    `;\n};\nexport const quiet = () => {\n  return html`\n        <sp-field-label for=\"name\">Enter your name</sp-field-label>\n        <sp-textfield\n            id=\"name\"\n            placeholder=\"This Text Field doesn't make much noise\"\n            quiet\n        ></sp-textfield>\n    `;\n};\nexport const defaultAutofocus = () => {\n  return html`\n        <sp-field-label for=\"name\">Enter your name</sp-field-label>\n        <sp-textfield\n            id=\"name\"\n            placeholder=\"Include your first and last name\"\n            autofocus\n        ></sp-textfield>\n    `;\n};\nexport const quietAutofocus = () => {\n  return html`\n        <sp-field-label for=\"name\">Enter your name</sp-field-label>\n        <sp-textfield\n            id=\"name\"\n            placeholder=\"Include your first and last name\"\n            autofocus\n            quiet\n        ></sp-textfield>\n    `;\n};\nexport const notRequiredWithPattern = () => {\n  return html`\n        <sp-textfield\n            placeholder=\"Enter z, x, c, or v\"\n            pattern=\"[zxcv]+\"\n        ></sp-textfield>\n    `;\n};\nexport const allowedKeys = () => {\n  return html`\n        <sp-textfield\n            placeholder=\"Enter your name\"\n            allowed-keys=\"a-z\"\n        ></sp-textfield>\n    `;\n};\nexport const withNameAttribute = () => {\n  return html`\n        <sp-textfield\n            name=\"name\"\n            placeholder=\"Enter your name\"\n            allowed-keys=\"a-z\"\n        ></sp-textfield>\n    `;\n};\nexport const readonly = () => html`\n    <sp-textfield\n        label=\"Enter your life story\"\n        value=\"A readonly textfield\"\n        readonly\n        placeholder=\"Enter your life story\"\n    ></sp-textfield>\n`;\nexport const types = () => html`\n    <sp-textfield label=\"Default\" placeholder=\"default (text)\"></sp-textfield>\n    <sp-textfield label=\"Text\" type=\"text\" placeholder=\"text\"></sp-textfield>\n    <sp-textfield label=\"URL\" type=\"url\" placeholder=\"url\"></sp-textfield>\n    <sp-textfield label=\"Tel\" type=\"tel\" placeholder=\"tel\"></sp-textfield>\n    <sp-textfield\n        label=\"E-Mail\"\n        type=\"email\"\n        placeholder=\"email\"\n    ></sp-textfield>\n    <sp-textfield\n        label=\"Password\"\n        type=\"password\"\n        placeholder=\"password\"\n    ></sp-textfield>\n`;\nexport const empty = () => html`\n    <sp-field-label for=\"empty\">\n        This textfield hasn't been used yet\n    </sp-field-label>\n    <sp-textfield id=\"empty\" placeholder=\"You can type here\">\n        <sp-help-text slot=\"help-text\">\n            Even empty Textfield display correctly while waiting for content.\n        </sp-help-text>\n    </sp-textfield>\n`;\nexport const sized = () => html`\n    <sp-field-label for=\"sized\">\n        This textfield hasn't been used yet\n    </sp-field-label>\n    <sp-textfield\n        id=\"sized\"\n        placeholder=\"You can type here\"\n        style=\"width: 400px\"\n    >\n        <sp-help-text slot=\"help-text\">\n            Even empty Textfield display correctly while waiting for content.\n        </sp-help-text>\n    </sp-textfield>\n`;\n//# sourceMappingURL=textfield.stories.js.map\n;export const __namedExportsOrder = [\"Default\",\"growsOnly\",\"quiet\",\"defaultAutofocus\",\"quietAutofocus\",\"notRequiredWithPattern\",\"allowedKeys\",\"withNameAttribute\",\"readonly\",\"types\",\"empty\",\"sized\"];"],"names":[],"sourceRoot":""}