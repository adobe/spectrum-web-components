{"version":3,"file":"menu-stories-menu-sizes-stories.a69797d0.iframe.bundle.js","mappings":";;AAEA;;;ACWA;;;;;;;;;;;AAWA;;;;;;;;;;AAYA;;;;;;;;;;;;;;;;AAsBA;;;;;;;;;AAwBA;;ACjFA;;;;;;;;;AAwCA;;AAIA;AAEA","sources":["webpack://@adobe/spectrum-web-components/./packages/divider/src/divider.css.js","webpack://@adobe/spectrum-web-components/./packages/menu/stories/index.js","webpack://@adobe/spectrum-web-components/./packages/popover/src/Popover.dev.js"],"sourcesContent":["\"use strict\";import{css as r}from\"@spectrum-web-components/base\";const i=r`\n    @media (forced-colors:active){:host{--highcontrast-divider-background-color:CanvasText}}:host{--spectrum-divider-thickness:var(--spectrum-divider-thickness-medium)}:host([size=s]){--spectrum-divider-thickness:var(--spectrum-divider-thickness-small)}:host([size=l]){--spectrum-divider-thickness:var(--spectrum-divider-thickness-large);--spectrum-divider-background-color:var(--spectrum-gray-800)}:host([static-color=white]){--mod-divider-background-color:var(--mod-divider-background-color-medium-static-white,var(--spectrum-divider-background-color-static-white))}:host([static-color=white][size=s]){--mod-divider-background-color:var(--mod-divider-background-color-small-static-white,var(--spectrum-divider-background-color-static-white))}:host([static-color=white][size=l]){--mod-divider-background-color:var(--mod-divider-background-color-large-static-white,var(--spectrum-transparent-white-800))}:host([static-color=black]){--mod-divider-background-color:var(--mod-divider-background-color-medium-static-black,var(--spectrum-divider-background-color-static-black))}:host([static-color=black][size=s]){--mod-divider-background-color:var(--mod-divider-background-color-small-static-black,var(--spectrum-divider-background-color-static-black))}:host([static-color=black][size=l]){--mod-divider-background-color:var(--mod-divider-background-color-large-static-black,var(--spectrum-transparent-black-800))}:host{block-size:var(--mod-divider-thickness,var(--spectrum-divider-thickness));inline-size:100%;border:none;border-width:var(--mod-divider-thickness,var(--spectrum-divider-thickness));border-radius:var(--mod-divider-thickness,var(--spectrum-divider-thickness));background-color:var(--highcontrast-divider-background-color,var(--mod-divider-background-color,var(--spectrum-divider-background-color)));overflow:visible}:host([vertical]){inline-size:var(--mod-divider-thickness,var(--spectrum-divider-thickness));block-size:100%;block-size:var(--mod-divider-vertical-height,100%);margin-block:var(--mod-divider-vertical-margin);align-self:var(--mod-divider-vertical-align)}:host{--spectrum-divider-background-color:var(--system-divider-background-color);--spectrum-divider-background-color-static-white:var(--system-divider-background-color-static-white);--spectrum-divider-background-color-static-black:var(--system-divider-background-color-static-black)}:host{display:block}hr{border:none;margin:0}\n`;export default i;\n//# sourceMappingURL=divider.css.js.map\n","\"use strict\";\nimport {\n  html,\n  LitElement\n} from \"@spectrum-web-components/base\";\nimport \"@spectrum-web-components/menu/sp-menu.js\";\nimport \"@spectrum-web-components/menu/sp-menu-divider.js\";\nimport \"@spectrum-web-components/menu/sp-menu-item.js\";\nimport \"@spectrum-web-components/popover/sp-popover.js\";\nexport const MenuMarkup = ({\n  size = \"m\"\n} = {}) => {\n  return html`\n        <sp-menu size=${size}>\n            <sp-menu-item>Deselect</sp-menu-item>\n            <sp-menu-item>Select Inverse</sp-menu-item>\n            <sp-menu-item>Feather...</sp-menu-item>\n            <sp-menu-item>Select and Mask...</sp-menu-item>\n            <sp-menu-divider></sp-menu-divider>\n            <sp-menu-item>Save Selection</sp-menu-item>\n            <sp-menu-item disabled>Make Work Path</sp-menu-item>\n        </sp-menu>\n\n        <sp-popover open>\n            <sp-menu size=${size}>\n                <sp-menu-item>Deselect</sp-menu-item>\n                <sp-menu-item>Select Inverse</sp-menu-item>\n                <sp-menu-item>Feather...</sp-menu-item>\n                <sp-menu-item>Select and Mask...</sp-menu-item>\n                <sp-menu-divider></sp-menu-divider>\n                <sp-menu-item>Save Selection</sp-menu-item>\n                <sp-menu-item disabled>Make Work Path</sp-menu-item>\n            </sp-menu>\n        </sp-popover>\n    `;\n};\nexport class ComplexSlottedGroup extends LitElement {\n  get menu() {\n    return this.renderRoot.querySelector(\"sp-menu\");\n  }\n  render() {\n    return html`\n            <sp-menu id=\"sp-menu\">\n                <sp-menu-group id=\"sp-menu-group-1\">\n                    <sp-menu-item id=\"i-1\">Before First</sp-menu-item>\n                    <slot name=\"before\"></slot>\n                </sp-menu-group>\n                <sp-menu-group id=\"sp-menu-group-2\">\n                    <sp-menu-item id=\"i-4\">Sibling 1</sp-menu-item>\n                    <slot></slot>\n                    <sp-menu-item id=\"i-10\">Sibling 2</sp-menu-item>\n                </sp-menu-group>\n                <sp-menu-group id=\"sp-menu-group-3\">\n                    <sp-menu-item id=\"i-11\">After 1</sp-menu-item>\n                    <sp-menu-item id=\"i-12\">After 2</sp-menu-item>\n                </sp-menu-group>\n            </sp-menu>\n        `;\n  }\n}\nComplexSlottedGroup.shadowRootOptions = {\n  ...LitElement.shadowRootOptions,\n  delegatesFocus: true\n};\ncustomElements.define(\"complex-slotted-group\", ComplexSlottedGroup);\nexport class ComplexSlottedMenu extends LitElement {\n  get menu() {\n    return this.renderRoot.querySelector(\n      \"complex-slotted-group\"\n    ).menu;\n  }\n  render() {\n    return html`\n            <complex-slotted-group id=\"complex-slotted-group\">\n                <sp-menu-item id=\"i-5\">Middle 1</sp-menu-item>\n                <sp-menu-item id=\"i-6\">Middle 2</sp-menu-item>\n                <sp-menu-item id=\"i-7\">Middle 3</sp-menu-item>\n                <slot></slot>\n                <slot name=\"before\" slot=\"before\"></slot>\n                <sp-menu-item slot=\"before\" id=\"i-3\">Before Last</sp-menu-item>\n            </complex-slotted-group>\n        `;\n  }\n}\nComplexSlottedMenu.shadowRootOptions = {\n  ...LitElement.shadowRootOptions,\n  delegatesFocus: true\n};\ncustomElements.define(\"complex-slotted-menu\", ComplexSlottedMenu);\n//# sourceMappingURL=index.js.map\n","\"use strict\";\nvar __defProp = Object.defineProperty;\nvar __getOwnPropDesc = Object.getOwnPropertyDescriptor;\nvar __decorateClass = (decorators, target, key, kind) => {\n  var result = kind > 1 ? void 0 : kind ? __getOwnPropDesc(target, key) : target;\n  for (var i = decorators.length - 1, decorator; i >= 0; i--)\n    if (decorator = decorators[i])\n      result = (kind ? decorator(target, key, result) : decorator(result)) || result;\n  if (kind && result) __defProp(target, key, result);\n  return result;\n};\nimport {\n  html,\n  nothing,\n  SpectrumElement\n} from \"@spectrum-web-components/base\";\nimport {\n  property,\n  query\n} from \"@spectrum-web-components/base/src/decorators.js\";\nimport popoverStyles from \"./popover.css.js\";\nexport class Popover extends SpectrumElement {\n  constructor() {\n    super(...arguments);\n    this.open = false;\n    this.tip = false;\n  }\n  static get styles() {\n    return [popoverStyles];\n  }\n  renderTip() {\n    return html`\n            <div id=\"tip\" aria-hidden=\"true\">\n                <svg class=\"tip block\" viewBox=\"0 -0.5 16 9\">\n                    <path class=\"triangle\" d=\"M-1,-1 8,8 17,-1\"></path>\n                </svg>\n                <svg class=\"tip inline\" viewBox=\"0 -0.5 9 16\">\n                    <path class=\"triangle\" d=\"M-1,-1 8,8 -1,17\"></path>\n                </svg>\n            </div>\n        `;\n  }\n  render() {\n    return html`\n            <slot></slot>\n            ${this.tip ? this.renderTip() : nothing}\n        `;\n  }\n}\n__decorateClass([\n  property({ type: Boolean, reflect: true })\n], Popover.prototype, \"open\", 2);\n__decorateClass([\n  property({ reflect: true })\n], Popover.prototype, \"placement\", 2);\n__decorateClass([\n  property({ type: Boolean, reflect: true })\n], Popover.prototype, \"tip\", 2);\n__decorateClass([\n  query(\"#tip\")\n], Popover.prototype, \"tipElement\", 2);\n//# sourceMappingURL=Popover.dev.js.map\n"],"names":[],"sourceRoot":""}