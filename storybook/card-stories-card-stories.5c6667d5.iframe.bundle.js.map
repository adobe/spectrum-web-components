{"version":3,"file":"card-stories-card-stories.5c6667d5.iframe.bundle.js","mappings":";;;;AAiDA;AACA;;;AAGA;;;AAKA;;;;AAOA;AACA;;;;;AAKA;;;;;;;;;;;;;;;;;;;;AA0BA;;AAEA;;;;AAWA;AACA;;;AAGA;;;;;;;;;;;;;;;;;;;;AA0BA;;AAEA;;;;AAUA;AACA;;;AAGA;;;;;;;;;;;;;;;;;AAmBA;;;;;AAMA;AACA;;;;AAIA;;;;;;AAQA;;;;AAKA;AACA;;;;;AAOA;;;;;;AAOA;AACA;;;AAGA;;;;AAMA;;;;;;AAOA;AACA;;;AAGA;;;;;AAOA;;;;;;AAOA;AACA;;;AAGA;;;;;AAOA;;;;;;AAOA;AACA;;;AAGA;;;;;;;;;;;;;;;;;;AAoBA;;AAIA;AACA;;;;;;;;;AAWA;;AAMA;AACA;;;;;;;;;;;AAaA;;;AAOA;AACA;AACA;;;;;;AAMA;;;;;;;;;;;;;;;;;;AAoBA;;;;;;;;;;;;;;AAkBA;AACA;;AAEA;;;;;;;;;;;;;;;;;;;;;;;AAyBA;;AAGA;AACA;;;;AAIA;;;;;;;;;;;;;;;;AAkBA;;;;;;;;;AAaA;;;;;AAOA;;;;;AAKA;;;;;;;;AAYA;;ACrdA;AACA;;AAEA;;;AAGA;;;;;;;;;;;;;;;;ACNA;;AAEA;AACA;;;AAGA;;;;;;;;ACPA","sources":["webpack://@adobe/spectrum-web-components/./packages/card/stories/card.stories.js","webpack://@adobe/spectrum-web-components/./packages/icons-workflow/src/icons-s2/FileText.js","webpack://@adobe/spectrum-web-components/./packages/icons-workflow/src/icons/FileTxt.js","webpack://@adobe/spectrum-web-components/./packages/link/src/Link.dev.js"],"sourcesContent":["\"use strict\";\nimport { html } from \"@spectrum-web-components/base\";\nimport \"@spectrum-web-components/card/sp-card.js\";\nimport { landscape, portrait } from \"./images\";\nimport \"@spectrum-web-components/icons-workflow/icons/sp-icon-file-txt.js\";\nimport \"@spectrum-web-components/textfield/sp-textfield.js\";\nimport \"@spectrum-web-components/action-menu/sp-action-menu.js\";\nimport \"@spectrum-web-components/menu/sp-menu.js\";\nimport \"@spectrum-web-components/menu/sp-menu-item.js\";\nimport \"@spectrum-web-components/menu/sp-menu-divider.js\";\nimport \"@spectrum-web-components/link/sp-link.js\";\nimport { ifDefined } from \"@spectrum-web-components/base/src/directives.js\";\nexport default {\n  component: \"sp-card\",\n  title: \"Card\",\n  args: {\n    horizontal: false,\n    toggles: false\n  },\n  argTypes: {\n    horizontal: {\n      name: \"horizontal\",\n      type: { name: \"boolean\", required: false },\n      table: {\n        type: { summary: \"boolean\" },\n        defaultValue: { summary: false }\n      },\n      control: {\n        type: \"boolean\"\n      }\n    },\n    toggles: {\n      name: \"toggles\",\n      type: { name: \"boolean\", required: false },\n      table: {\n        type: { summary: \"boolean\" },\n        defaultValue: { summary: false }\n      },\n      control: {\n        type: \"boolean\"\n      }\n    }\n  }\n};\nexport const Default = (args) => {\n  return html`\n        <sp-card\n            heading=\"Card Heading\"\n            subheading=\"JPG\"\n            ?horizontal=${args.horizontal}\n            ?toggles=${args.toggles}\n            style=\"width: 200px;\"\n        >\n            <img slot=\"cover-photo\" src=${portrait} alt=\"Demo Graphic\" />\n            <div slot=\"footer\">Footer</div>\n        </sp-card>\n    `;\n};\nDefault.args = {};\nexport const SmallQuiet = (args) => {\n  const { onClick } = args;\n  return html`\n        <sp-card\n            heading=\"Card Heading\"\n            subheading=\"JPG\"\n            ?toggles=${args.toggles !== void 0 ? args.toggles : true}\n            ?horizontal=${args.horizontal}\n            style=\"width: 200px;\"\n            href=\"https://opensource.adobe.com/spectrum-web-components\"\n            variant=\"quiet\"\n            size=\"s\"\n            @click=${(event) => {\n    const composedTarget = event.composedPath()[0];\n    if (composedTarget.id !== \"like-anchor\") return;\n    event.stopPropagation();\n    event.preventDefault();\n    onClick && onClick(event);\n  }}\n        >\n            <div slot=\"footer\">\n                Footer with a\n                <sp-link href=\"https://google.com\">link to Google</sp-link>\n            </div>\n            <sp-action-menu\n                label=\"More Actions\"\n                slot=\"actions\"\n                placement=\"bottom-end\"\n                quiet\n            >\n                <sp-menu-item>Deselect</sp-menu-item>\n                <sp-menu-item>Select Inverse</sp-menu-item>\n                <sp-menu-item>Feather...</sp-menu-item>\n                <sp-menu-item>Select and Mask...</sp-menu-item>\n                <sp-menu-divider></sp-menu-divider>\n                <sp-menu-item>Save Selection</sp-menu-item>\n                <sp-menu-item disabled>Make Work Path</sp-menu-item>\n            </sp-action-menu>\n            <img slot=\"cover-photo\" src=${portrait} alt=\"Demo Graphic\" />\n        </sp-card>\n    `;\n};\nSmallQuiet.argTypes = {\n  onClick: { action: \"link click\" }\n};\nexport const href = (args) => {\n  const { onClick } = args;\n  return html`\n        <sp-card\n            heading=\"Card Heading\"\n            subheading=\"JPG\"\n            ?toggles=${args.toggles !== void 0 ? args.toggles : true}\n            ?horizontal=${args.horizontal}\n            style=\"width: 200px;\"\n            href=\"https://opensource.adobe.com/spectrum-web-components\"\n            @click=${(event) => {\n    const composedTarget = event.composedPath()[0];\n    if (composedTarget.id !== \"like-anchor\") return;\n    event.stopPropagation();\n    event.preventDefault();\n    onClick && onClick(event);\n  }}\n        >\n            <div slot=\"footer\">\n                Footer with a\n                <sp-link href=\"https://google.com\">link to Google</sp-link>\n            </div>\n            <sp-action-menu\n                label=\"More Actions\"\n                slot=\"actions\"\n                placement=\"bottom-end\"\n                quiet\n            >\n                <sp-menu-item>Deselect</sp-menu-item>\n                <sp-menu-item>Select Inverse</sp-menu-item>\n                <sp-menu-item>Feather...</sp-menu-item>\n                <sp-menu-item>Select and Mask...</sp-menu-item>\n                <sp-menu-divider></sp-menu-divider>\n                <sp-menu-item>Save Selection</sp-menu-item>\n                <sp-menu-item disabled>Make Work Path</sp-menu-item>\n            </sp-action-menu>\n            <img slot=\"cover-photo\" src=${portrait} alt=\"Demo Graphic\" />\n        </sp-card>\n    `;\n};\nhref.argTypes = {\n  onClick: { action: \"link click\" }\n};\nexport const actions = (args) => {\n  return html`\n        <sp-card\n            heading=\"Card Heading\"\n            subheading=\"JPG\"\n            ?horizontal=${args.horizontal}\n            ?toggles=${args.toggles}\n            style=\"width: 200px;\"\n        >\n            <img slot=\"cover-photo\" src=${portrait} alt=\"Demo Graphic\" />\n            <div slot=\"footer\">Footer</div>\n            <sp-action-menu\n                label=\"More Actions\"\n                slot=\"actions\"\n                placement=\"bottom-end\"\n                quiet\n            >\n                <sp-menu-item>Deselect</sp-menu-item>\n                <sp-menu-item>Select Inverse</sp-menu-item>\n                <sp-menu-item>Feather...</sp-menu-item>\n                <sp-menu-item>Select and Mask...</sp-menu-item>\n                <sp-menu-divider></sp-menu-divider>\n                <sp-menu-item>Save Selection</sp-menu-item>\n                <sp-menu-item disabled>Make Work Path</sp-menu-item>\n            </sp-action-menu>\n        </sp-card>\n    `;\n};\nexport const Gallery = (args) => {\n  return html`\n        <sp-card\n            variant=\"gallery\"\n            heading=\"Card Heading\"\n            subheading=\"JPG\"\n            ?horizontal=${args.horizontal}\n            ?toggles=${args.toggles}\n        >\n            <img\n                slot=\"preview\"\n                src=${landscape}\n                style=\"object-fit: cover\"\n                alt=\"Demo Graphic\"\n            />\n            <div slot=\"description\">10/15/18</div>\n        </sp-card>\n    `;\n};\nexport const noPreviewImage = (args) => {\n  return html`\n        <sp-card\n            heading=\"Card Heading\"\n            subheading=\"No preview image\"\n            ?horizontal=${args.horizontal}\n            ?toggles=${args.toggles}\n            style=\"width: 200px;\"\n        >\n            <div slot=\"footer\">Footer</div>\n        </sp-card>\n    `;\n};\nexport const Quiet = (args) => {\n  return html`\n        <div>\n            <sp-card\n                variant=\"quiet\"\n                heading=\"Card Heading\"\n                subheading=\"JPG\"\n                ?horizontal=${args.horizontal}\n                ?toggles=${args.toggles}\n                style=\"width: 208px; height: 264px\"\n            >\n                <img src=${portrait} alt=\"Demo Graphic\" slot=\"preview\" />\n                <div slot=\"description\">10/15/18</div>\n            </sp-card>\n        </div>\n    `;\n};\nexport const quietFile = (args) => {\n  return html`\n        <div>\n            <sp-card\n                variant=\"quiet\"\n                subheading=\"JPG\"\n                asset=\"file\"\n                ?horizontal=${args.horizontal}\n                ?toggles=${args.toggles}\n                style=\"width: 208px; height: 264px\"\n            >\n                <img src=${portrait} alt=\"Demo Graphic\" slot=\"preview\" />\n                <div slot=\"heading\">File Name</div>\n                <div slot=\"description\">10/15/18</div>\n            </sp-card>\n        </div>\n    `;\n};\nexport const quietFolder = (args) => {\n  return html`\n        <div>\n            <sp-card\n                variant=\"quiet\"\n                subheading=\"JPG\"\n                asset=\"folder\"\n                ?horizontal=${args.horizontal}\n                ?toggles=${args.toggles}\n                style=\"width: 208px; height: 264px\"\n            >\n                <img src=${portrait} alt=\"Demo Graphic\" slot=\"preview\" />\n                <div slot=\"heading\">Folder Name</div>\n                <div slot=\"description\">10/15/18</div>\n            </sp-card>\n        </div>\n    `;\n};\nexport const quietActions = (args) => {\n  return html`\n        <div>\n            <sp-card\n                variant=\"quiet\"\n                heading=\"Card Heading\"\n                subheading=\"JPG\"\n                ?horizontal=${args.horizontal}\n                ?toggles=${args.toggles}\n                style=\"width: 208px; height: 264px\"\n            >\n                <img src=${portrait} alt=\"Demo Graphic\" slot=\"preview\" />\n                <div slot=\"description\">10/15/18</div>\n                <sp-action-menu\n                    label=\"More Actions\"\n                    slot=\"actions\"\n                    placement=\"bottom-end\"\n                    quiet\n                >\n                    <sp-menu-item>Deselect</sp-menu-item>\n                    <sp-menu-item>Select Inverse</sp-menu-item>\n                    <sp-menu-item>Feather...</sp-menu-item>\n                    <sp-menu-item>Select and Mask...</sp-menu-item>\n                    <sp-menu-divider></sp-menu-divider>\n                    <sp-menu-item>Save Selection</sp-menu-item>\n                    <sp-menu-item disabled>Make Work Path</sp-menu-item>\n                </sp-action-menu>\n            </sp-card>\n        </div>\n    `;\n};\nquietActions.storyName = \"Quiet w/ Actions\";\nexport const Horizontal = (args) => {\n  return html`\n        <sp-card\n            ?horizontal=${args.horizontal}\n            ?toggles=${args.toggles}\n            heading=\"Card Heading\"\n            subheading=\"JPG\"\n        >\n            <sp-icon-file-txt\n                slot=\"preview\"\n                style=\"width: 36px; height: 36px;\"\n            ></sp-icon-file-txt>\n        </sp-card>\n    `;\n};\nHorizontal.args = {\n  horizontal: true\n};\nexport const horizontalWithHREF = (args) => {\n  return html`\n        <sp-card\n            ?horizontal=${args.horizontal}\n            ?toggles=${args.toggles}\n            heading=\"Card Heading\"\n            subheading=\"JPG\"\n            href=\"https://opensource.adobe.com/spectrum-web-components\"\n            target=\"_blank\"\n        >\n            <sp-icon-file-txt\n                slot=\"preview\"\n                style=\"width: 36px; height: 36px;\"\n            ></sp-icon-file-txt>\n        </sp-card>\n    `;\n};\nhorizontalWithHREF.args = {\n  horizontal: true\n};\nexport const smallQuiet = (args) => {\n  return html`\n        <div>\n            <sp-card\n                size=${ifDefined(args.size)}\n                ?horizontal=${args.horizontal}\n                ?toggles=${args.toggles}\n                heading=\"Card Heading\"\n                subheading=\"JPG\"\n                variant=\"quiet\"\n                style=\"width: 115px\"\n            >\n                <img src=${portrait} alt=\"Demo Graphic\" slot=\"preview\" />\n                <div slot=\"footer\">Footer</div>\n                <sp-action-menu\n                    label=\"More Actions\"\n                    slot=\"actions\"\n                    placement=\"bottom-end\"\n                    quiet\n                >\n                    <sp-menu-item>Deselect</sp-menu-item>\n                    <sp-menu-item>Select Inverse</sp-menu-item>\n                    <sp-menu-item>Feather...</sp-menu-item>\n                    <sp-menu-item>Select and Mask...</sp-menu-item>\n                    <sp-menu-divider></sp-menu-divider>\n                    <sp-menu-item>Save Selection</sp-menu-item>\n                    <sp-menu-item disabled>Make Work Path</sp-menu-item>\n                </sp-action-menu>\n            </sp-card>\n        </div>\n    `;\n};\nsmallQuiet.args = {\n  size: \"s\"\n};\nexport const SlottedHeading = (args) => {\n  return html`\n        <style>\n            .slotted-textfield-heading {\n                width: 100%;\n            }\n        </style>\n        <sp-card\n            style=\"\n                --spectrum-card-title-width: 100%;\n                --spectrum-card-title-padding-right: 0;\n                --spectrum-card-title-padding-left: 0;\n                --spectrum-card-body-header-height: auto;\n                --spectrum-alias-single-line-width: 100%;\n            \"\n            ?horizontal=${args.horizontal}\n            ?toggles=${args.toggles}\n        >\n            <img slot=\"cover-photo\" src=${portrait} alt=\"Demo Graphic\" />\n            <sp-textfield\n                class=\"slotted-textfield-heading\"\n                slot=\"heading\"\n                value=\"Apr 23 Project\"\n                quiet\n            ></sp-textfield>\n            <div slot=\"subheading\">Last modified on 6/17/2020, 3:37 PM</div>\n            <sp-action-menu\n                label=\"More Actions\"\n                slot=\"actions\"\n                placement=\"bottom-end\"\n                quiet\n            >\n                <sp-menu-item>Deselect</sp-menu-item>\n                <sp-menu-item>Select Inverse</sp-menu-item>\n                <sp-menu-item>Feather...</sp-menu-item>\n                <sp-menu-item>Select and Mask...</sp-menu-item>\n                <sp-menu-divider></sp-menu-divider>\n                <sp-menu-item>Save Selection</sp-menu-item>\n                <sp-menu-item disabled>Make Work Path</sp-menu-item>\n            </sp-action-menu>\n        </sp-card>\n    `;\n};\nexport const toggles = (args) => {\n  return html`\n        <sp-card\n            ?horizontal=${args.horizontal}\n            ?toggles=${args.toggles}\n            heading=\"Card Heading\"\n            subheading=\"JPG\"\n        >\n            <img slot=\"cover-photo\" src=${portrait} alt=\"Demo Graphic\" />\n            <sp-action-menu\n                label=\"More Actions\"\n                slot=\"actions\"\n                placement=\"bottom-end\"\n                quiet\n            >\n                <sp-menu-item>Deselect</sp-menu-item>\n                <sp-menu-item>Select Inverse</sp-menu-item>\n                <sp-menu-item>Feather...</sp-menu-item>\n                <sp-menu-item>Select and Mask...</sp-menu-item>\n                <sp-menu-divider></sp-menu-divider>\n                <sp-menu-item>Save Selection</sp-menu-item>\n                <sp-menu-item disabled>Make Work Path</sp-menu-item>\n            </sp-action-menu>\n        </sp-card>\n    `;\n};\ntoggles.args = {\n  toggles: true\n};\nexport const ScrollTest = () => {\n  return html`\n        <div class=\"scroll-container\">\n            <div class=\"scroll-indicator\">\n                <h3>Switch to mobile view to test touch behavior.</h3>\n                <p>\n                    In mobile view, verify that touch events work correctly and\n                    scrolling doesn't trigger unwanted clicks.\n                </p>\n            </div>\n            ${Array.from(\n    { length: 20 },\n    () => html`\n                    <div style=\"margin: 10px;\">\n                        <sp-card\n                            heading=\"Card Heading\"\n                            subheading=\"JPG\"\n                            ?horizontal=${false}\n                            style=\"width: 200px;\"\n                        >\n                            <img\n                                slot=\"cover-photo\"\n                                src=${portrait}\n                                alt=\"Demo Graphic\"\n                            />\n                            <div slot=\"footer\">Footer</div>\n                        </sp-card>\n                    </div>\n                `\n  )}\n        </div>\n    `;\n};\n//# sourceMappingURL=card.stories.js.map\n;export const __namedExportsOrder = [\"Default\",\"SmallQuiet\",\"href\",\"actions\",\"Gallery\",\"noPreviewImage\",\"Quiet\",\"quietFile\",\"quietFolder\",\"quietActions\",\"Horizontal\",\"horizontalWithHREF\",\"smallQuiet\",\"SlottedHeading\",\"toggles\",\"ScrollTest\"];","\"use strict\";import{tag as c}from\"../custom-tag.js\";export{setCustomTemplateLiteralTag}from\"../custom-tag.js\";export const FileTextIcon=({width:t=24,height:e=24,hidden:l=!1,title:r=\"File Text\"}={})=>c`<svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    width=\"${t}\"\n    height=\"${e}\"\n    viewBox=\"0 0 20 20\"\n    aria-hidden=${l?\"true\":\"false\"}\n    role=\"img\"\n    fill=\"currentColor\"\n    aria-label=\"${r}\"\n  >\n    <path\n      d=\"m16.34082,5.2959l-3.62109-3.62207c-.41895-.41895-.99902-.65918-1.59082-.65918h-5.87891c-1.24023,0-2.25,1.00977-2.25,2.25v12.4834c0,1.24023,1.00977,2.25,2.25,2.25h9.5c1.24023,0,2.25-1.00977,2.25-2.25V6.88672c0-.60059-.23438-1.16602-.65918-1.59082Zm-1.06055,1.06055c.04614.04614.07397.10352.10596.1582h-3.13623c-.41309,0-.75-.33691-.75-.75v-3.13623c.05542.03223.11353.0603.15918.10596l3.62109,3.62207Zm-.53027,10.1416H5.25c-.41309,0-.75-.33691-.75-.75V3.26465c0-.41309.33691-.75.75-.75h4.75v3.25c0,1.24023,1.00977,2.25,2.25,2.25h3.25v7.7334c0,.41309-.33691.75-.75.75Z\"\n      fill=\"currentColor\"\n    />\n    <path\n      d=\"m13,11.49805h-6c-.41406,0-.75-.33594-.75-.75s.33594-.75.75-.75h6c.41406,0,.75.33594.75.75s-.33594.75-.75.75Z\"\n      fill=\"currentColor\"\n    />\n    <path\n      d=\"m13,14.49805h-6c-.41406,0-.75-.33594-.75-.75s.33594-.75.75-.75h6c.41406,0,.75.33594.75.75s-.33594.75-.75.75Z\"\n      fill=\"currentColor\"\n    />\n  </svg>`;\n//# sourceMappingURL=FileText.js.map\n","\"use strict\";import{tag as r}from\"../custom-tag.js\";export{setCustomTemplateLiteralTag}from\"../custom-tag.js\";export const FileTxtIcon=({width:a=24,height:t=24,hidden:e=!1,title:l=\"File Txt\"}={})=>r`<svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    height=\"${t}\"\n    viewBox=\"0 0 36 36\"\n    width=\"${a}\"\n    aria-hidden=${e?\"true\":\"false\"}\n    role=\"img\"\n    fill=\"currentColor\"\n    aria-label=\"${l}\"\n  >\n    <path d=\"M20 2v10h10L20 2z\" />\n    <path\n      d=\"M19 14a1 1 0 0 1-1-1V2H7a1 1 0 0 0-1 1v30a1 1 0 0 0 1 1h22a1 1 0 0 0 1-1V14Zm7 15.5a.5.5 0 0 1-.5.5h-15a.5.5 0 0 1-.5-.5v-1a.5.5 0 0 1 .5-.5h15a.5.5 0 0 1 .5.5Zm0-4a.5.5 0 0 1-.5.5h-15a.5.5 0 0 1-.5-.5v-1a.5.5 0 0 1 .5-.5h15a.5.5 0 0 1 .5.5Zm0-4a.5.5 0 0 1-.5.5h-15a.5.5 0 0 1-.5-.5v-1a.5.5 0 0 1 .5-.5h15a.5.5 0 0 1 .5.5Z\"\n    />\n  </svg>`;\n//# sourceMappingURL=FileTxt.js.map\n","\"use strict\";\nvar __defProp = Object.defineProperty;\nvar __getOwnPropDesc = Object.getOwnPropertyDescriptor;\nvar __decorateClass = (decorators, target, key, kind) => {\n  var result = kind > 1 ? void 0 : kind ? __getOwnPropDesc(target, key) : target;\n  for (var i = decorators.length - 1, decorator; i >= 0; i--)\n    if (decorator = decorators[i])\n      result = (kind ? decorator(target, key, result) : decorator(result)) || result;\n  if (kind && result) __defProp(target, key, result);\n  return result;\n};\nimport {\n  property,\n  query\n} from \"@spectrum-web-components/base/src/decorators.js\";\nimport { LikeAnchor } from \"@spectrum-web-components/shared/src/like-anchor.js\";\nimport { Focusable } from \"@spectrum-web-components/shared/src/focusable.js\";\nimport linkStyles from \"./link.css.js\";\nexport class Link extends LikeAnchor(Focusable) {\n  constructor() {\n    super(...arguments);\n    this.quiet = false;\n  }\n  static get styles() {\n    return [linkStyles];\n  }\n  get focusElement() {\n    return this.anchorElement;\n  }\n  render() {\n    return this.renderAnchor({ id: \"anchor\" });\n  }\n}\n__decorateClass([\n  query(\"#anchor\")\n], Link.prototype, \"anchorElement\", 2);\n__decorateClass([\n  property({ type: String, reflect: true })\n], Link.prototype, \"variant\", 2);\n__decorateClass([\n  property({ reflect: true, attribute: \"static-color\" })\n], Link.prototype, \"staticColor\", 2);\n__decorateClass([\n  property({ type: Boolean, reflect: true, attribute: \"quiet\" })\n], Link.prototype, \"quiet\", 2);\n//# sourceMappingURL=Link.dev.js.map\n"],"names":[],"sourceRoot":""}