{"version":3,"file":"2136.1e4caa0a.iframe.bundle.js","mappings":";;;AA6CA;;;AAGA;;AAGA;;AAkQA;AACA;AACA;AACA;AACA;;;;;AAKA;;;AAGA;AAGA;;;;AAIA;AAEA;;ACxUA;;ACAA;;ACAA","sources":["webpack://@adobe/spectrum-web-components/./packages/tabs/src/Tabs.dev.js","webpack://@adobe/spectrum-web-components/./packages/tabs/src/tab.css.js","webpack://@adobe/spectrum-web-components/./packages/tabs/src/tabs-sizes.css.js","webpack://@adobe/spectrum-web-components/./packages/tabs/src/tabs.css.js"],"sourcesContent":["\"use strict\";\nvar __defProp = Object.defineProperty;\nvar __getOwnPropDesc = Object.getOwnPropertyDescriptor;\nvar __decorateClass = (decorators, target, key, kind) => {\n  var result = kind > 1 ? void 0 : kind ? __getOwnPropDesc(target, key) : target;\n  for (var i = decorators.length - 1, decorator; i >= 0; i--)\n    if (decorator = decorators[i])\n      result = (kind ? decorator(target, key, result) : decorator(result)) || result;\n  if (kind && result) __defProp(target, key, result);\n  return result;\n};\nimport {\n  css,\n  html,\n  SizedMixin\n} from \"@spectrum-web-components/base\";\nimport {\n  property,\n  query\n} from \"@spectrum-web-components/base/src/decorators.js\";\nimport {\n  classMap,\n  ifDefined\n} from \"@spectrum-web-components/base/src/directives.js\";\nimport { IntersectionController } from \"@lit-labs/observers/intersection-controller.js\";\nimport { ResizeController } from \"@lit-labs/observers/resize-controller.js\";\nimport { Focusable } from \"@spectrum-web-components/shared\";\nimport { RovingTabindexController } from \"@spectrum-web-components/reactive-controllers/src/RovingTabindex.js\";\nimport tabStyles from \"./tabs.css.js\";\nimport tabSizes from \"./tabs-sizes.css.js\";\nexport const ScaledIndicator = {\n  baseSize: 100,\n  noSelectionStyle: \"transform: translateX(0px) scaleX(0) scaleY(0)\",\n  transformX(left, width) {\n    const scale = width / this.baseSize;\n    return `transform: translateX(${left}px) scaleX(${scale});`;\n  },\n  transformY(top, height) {\n    const scale = height / this.baseSize;\n    return `transform: translateY(${top}px) scaleY(${scale});`;\n  },\n  baseStyles() {\n    return css`\n            :host([direction='vertical-right']) #selection-indicator,\n            :host([direction='vertical']) #selection-indicator {\n                height: ${this.baseSize}px;\n            }\n            :host([dir][direction='horizontal']) #selection-indicator {\n                width: ${this.baseSize}px;\n            }\n        `;\n  }\n};\nexport function calculateScrollTargetForRightSide(index, direction, tabs, container) {\n  const nextIndex = index + (direction === \"rtl\" ? -1 : 1);\n  const nextTab = tabs[nextIndex];\n  const viewportEnd = container.scrollLeft + container.offsetWidth;\n  return nextTab ? nextTab.offsetLeft - container.offsetWidth : viewportEnd;\n}\nexport function calculateScrollTargetForLeftSide(index, direction, tabs, container) {\n  const prevIndex = index + (direction === \"rtl\" ? 1 : -1);\n  const prevTab = tabs[prevIndex];\n  const leftmostElement = direction === \"rtl\" ? -container.offsetWidth : 0;\n  return prevTab ? prevTab.offsetLeft + prevTab.offsetWidth : leftmostElement;\n}\nexport class Tabs extends SizedMixin(Focusable, { noDefaultSize: true }) {\n  constructor() {\n    super();\n    this.auto = false;\n    this.compact = false;\n    this.direction = \"horizontal\";\n    this.emphasized = false;\n    this.label = \"\";\n    this.enableTabsScroll = false;\n    this.quiet = false;\n    this.selectionIndicatorStyle = ScaledIndicator.noSelectionStyle;\n    this.shouldAnimate = false;\n    this.selected = \"\";\n    this._tabs = [];\n    this.resizeController = new ResizeController(this, {\n      callback: () => {\n        this.updateSelectionIndicator();\n      }\n    });\n    this.rovingTabindexController = new RovingTabindexController(this, {\n      focusInIndex: (elements) => {\n        let focusInIndex = 0;\n        const firstFocusableElement = elements.find((el, index) => {\n          const focusInElement = this.selected ? el.value === this.selected : !el.disabled;\n          focusInIndex = index;\n          return focusInElement;\n        });\n        return firstFocusableElement ? focusInIndex : -1;\n      },\n      direction: () => \"both\",\n      elementEnterAction: (el) => {\n        if (!this.auto) return;\n        this.shouldAnimate = true;\n        this.selectTarget(el);\n      },\n      elements: () => this.tabs,\n      isFocusableElement: (el) => !this.disabled && !el.disabled,\n      listenerScope: () => this.tabList\n    });\n    this.onTabsScroll = () => {\n      this.dispatchEvent(\n        new Event(\"sp-tabs-scroll\", {\n          bubbles: true,\n          composed: true\n        })\n      );\n    };\n    this.onClick = (event) => {\n      if (this.disabled) {\n        return;\n      }\n      const target = event.composedPath().find((el) => el.parentElement === this);\n      if (!target || target.disabled) {\n        return;\n      }\n      this.shouldAnimate = true;\n      this.selectTarget(target);\n    };\n    this.onKeyDown = (event) => {\n      if (event.code === \"Enter\" || event.code === \"Space\") {\n        event.preventDefault();\n        const target = event.target;\n        if (target) {\n          this.selectTarget(target);\n        }\n      }\n    };\n    this.updateCheckedState = () => {\n      this.tabs.forEach((element) => {\n        element.removeAttribute(\"selected\");\n      });\n      if (this.selected) {\n        const currentChecked = this.tabs.find(\n          (el) => el.value === this.selected\n        );\n        if (currentChecked) {\n          currentChecked.selected = true;\n        } else {\n          this.selected = \"\";\n        }\n      } else {\n        const firstTab = this.tabs[0];\n        if (firstTab) {\n          firstTab.setAttribute(\"tabindex\", \"0\");\n        }\n      }\n      this.updateSelectionIndicator();\n    };\n    this.updateSelectionIndicator = async () => {\n      const selectedElement = this.tabs.find((el) => el.selected);\n      if (!selectedElement) {\n        this.selectionIndicatorStyle = ScaledIndicator.noSelectionStyle;\n        return;\n      }\n      await Promise.all([\n        selectedElement.updateComplete,\n        document.fonts ? document.fonts.ready : Promise.resolve()\n      ]);\n      const { width, height } = selectedElement.getBoundingClientRect();\n      this.selectionIndicatorStyle = this.direction === \"horizontal\" ? ScaledIndicator.transformX(selectedElement.offsetLeft, width) : ScaledIndicator.transformY(selectedElement.offsetTop, height);\n    };\n    new IntersectionController(this, {\n      config: {\n        root: null,\n        rootMargin: \"0px\",\n        threshold: [0, 1]\n      },\n      callback: () => {\n        this.updateSelectionIndicator();\n      }\n    });\n  }\n  static get styles() {\n    return [tabSizes, tabStyles, ScaledIndicator.baseStyles()];\n  }\n  set tabs(tabs) {\n    if (tabs === this.tabs) return;\n    this._tabs.forEach((tab) => {\n      this.resizeController.unobserve(tab);\n    });\n    tabs.forEach((tab) => {\n      this.resizeController.observe(tab);\n    });\n    this._tabs = tabs;\n    this.rovingTabindexController.clearElementCache();\n  }\n  get tabs() {\n    return this._tabs;\n  }\n  /**\n   * @private\n   */\n  get focusElement() {\n    return this.rovingTabindexController.focusInElement || this;\n  }\n  limitDeltaToInterval(min, max) {\n    return (delta) => {\n      if (delta < min) return min;\n      if (delta > max) return max;\n      return delta;\n    };\n  }\n  /**\n   * Scrolls through the tabs component, on the X-axis, by a given ammount of pixels/ delta. The given delta is limited to the scrollable area of the tabs component.\n   * @param {number} delta - The ammount of pixels to scroll by. If the value is positive, the tabs will scroll to the right. If the value is negative, the tabs will scroll to the left.\n   * @param {ScrollBehavior} behavior - The scroll behavior to use. Defaults to 'smooth'.\n   */\n  scrollTabs(delta, behavior = \"smooth\") {\n    var _a;\n    if (delta === 0) return;\n    const { scrollLeft, clientWidth, scrollWidth } = this.tabList;\n    const dirLimit = scrollWidth - clientWidth - Math.abs(scrollLeft);\n    const limitDelta = this.dir === \"ltr\" ? this.limitDeltaToInterval(-scrollLeft, dirLimit) : this.limitDeltaToInterval(-dirLimit, Math.abs(scrollLeft));\n    (_a = this.tabList) == null ? void 0 : _a.scrollBy({\n      left: limitDelta(delta),\n      top: 0,\n      behavior\n    });\n  }\n  get scrollState() {\n    if (this.tabList) {\n      const { scrollLeft, clientWidth, scrollWidth } = this.tabList;\n      const canScrollLeft = Math.abs(scrollLeft) > 0;\n      const canScrollRight = Math.ceil(Math.abs(scrollLeft)) < scrollWidth - clientWidth;\n      return {\n        canScrollLeft: this.dir === \"ltr\" ? canScrollLeft : canScrollRight,\n        canScrollRight: this.dir === \"ltr\" ? canScrollRight : canScrollLeft\n      };\n    }\n    return {};\n  }\n  async getUpdateComplete() {\n    const complete = await super.getUpdateComplete();\n    const tabs = [...this.children];\n    const tabUpdateCompletes = tabs.map((tab) => {\n      if (typeof tab.updateComplete !== \"undefined\") {\n        return tab.updateComplete;\n      }\n      return Promise.resolve(true);\n    });\n    await Promise.all(tabUpdateCompletes);\n    return complete;\n  }\n  getNecessaryAutoScroll(index) {\n    const selectedTab = this.tabs[index];\n    const selectionEnd = selectedTab.offsetLeft + selectedTab.offsetWidth;\n    const viewportEnd = this.tabList.scrollLeft + this.tabList.offsetWidth;\n    const selectionStart = selectedTab.offsetLeft;\n    const viewportStart = this.tabList.scrollLeft;\n    if (selectionEnd > viewportEnd) {\n      return calculateScrollTargetForRightSide(\n        index,\n        this.dir,\n        this.tabs,\n        this.tabList\n      );\n    } else if (selectionStart < viewportStart) {\n      return calculateScrollTargetForLeftSide(\n        index,\n        this.dir,\n        this.tabs,\n        this.tabList\n      );\n    }\n    return -1;\n  }\n  async scrollToSelection() {\n    if (!this.enableTabsScroll || !this.selected) {\n      return;\n    }\n    await this.updateComplete;\n    const selectedIndex = this.tabs.findIndex(\n      (tab) => tab.value === this.selected\n    );\n    if (selectedIndex !== -1 && this.tabList) {\n      const scrollTarget = this.getNecessaryAutoScroll(selectedIndex);\n      if (scrollTarget !== -1) {\n        this.tabList.scrollTo({ left: scrollTarget });\n      }\n    }\n  }\n  updated(changedProperties) {\n    super.updated(changedProperties);\n    if (changedProperties.has(\"selected\")) {\n      this.scrollToSelection();\n    }\n  }\n  managePanels({\n    target\n  }) {\n    const panels = target.assignedElements();\n    panels.map((panel) => {\n      const { value, id } = panel;\n      const tab = this.querySelector(`[role=\"tab\"][value=\"${value}\"]`);\n      if (tab) {\n        tab.setAttribute(\"aria-controls\", id);\n        panel.setAttribute(\"aria-labelledby\", tab.id);\n      }\n      panel.selected = value === this.selected;\n    });\n  }\n  render() {\n    return html`\n            <div\n                class=${classMap({ scroll: this.enableTabsScroll })}\n                aria-label=${ifDefined(this.label ? this.label : void 0)}\n                @click=${this.onClick}\n                @keydown=${this.onKeyDown}\n                @scroll=${this.onTabsScroll}\n                id=\"list\"\n                role=\"tablist\"\n                part=\"tablist\"\n            >\n                <slot @slotchange=${this.onSlotChange}></slot>\n                <div\n                    id=\"selection-indicator\"\n                    class=${ifDefined(\n      this.shouldAnimate ? void 0 : \"first-position\"\n    )}\n                    style=${this.selectionIndicatorStyle}\n                    role=\"presentation\"\n                ></div>\n            </div>\n            <slot name=\"tab-panel\" @slotchange=${this.managePanels}></slot>\n        `;\n  }\n  willUpdate(changes) {\n    if (!this.hasUpdated) {\n      const selectedChild = this.querySelector(\n        \":scope > [selected]\"\n      );\n      if (selectedChild) {\n        this.selectTarget(selectedChild);\n      }\n    }\n    super.willUpdate(changes);\n    if (changes.has(\"selected\")) {\n      if (this.tabs.length) {\n        this.updateCheckedState();\n      }\n      if (changes.get(\"selected\")) {\n        const previous = this.querySelector(\n          `[role=\"tabpanel\"][value=\"${changes.get(\"selected\")}\"]`\n        );\n        if (previous) previous.selected = false;\n      }\n      const next = this.querySelector(\n        `[role=\"tabpanel\"][value=\"${this.selected}\"]`\n      );\n      if (next) next.selected = true;\n    }\n    if (changes.has(\"direction\")) {\n      if (this.direction === \"horizontal\") {\n        this.removeAttribute(\"aria-orientation\");\n      } else {\n        this.setAttribute(\"aria-orientation\", \"vertical\");\n      }\n    }\n    if (changes.has(\"dir\")) {\n      this.updateSelectionIndicator();\n    }\n    if (changes.has(\"disabled\")) {\n      if (this.disabled) {\n        this.setAttribute(\"aria-disabled\", \"true\");\n      } else {\n        this.removeAttribute(\"aria-disabled\");\n      }\n    }\n    if (!this.shouldAnimate && typeof changes.get(\"shouldAnimate\") !== \"undefined\") {\n      this.shouldAnimate = true;\n    }\n  }\n  selectTarget(target) {\n    const value = target.getAttribute(\"value\");\n    if (value) {\n      const selected = this.selected;\n      this.selected = value;\n      const applyDefault = this.dispatchEvent(\n        new Event(\"change\", {\n          cancelable: true\n        })\n      );\n      if (!applyDefault) {\n        this.selected = selected;\n      }\n    }\n  }\n  onSlotChange() {\n    this.tabs = this.slotEl.assignedElements().filter((el) => el.getAttribute(\"role\") === \"tab\");\n    this.updateCheckedState();\n  }\n  connectedCallback() {\n    super.connectedCallback();\n    window.addEventListener(\"resize\", this.updateSelectionIndicator);\n    if (\"fonts\" in document) {\n      document.fonts.addEventListener(\n        \"loadingdone\",\n        this.updateSelectionIndicator\n      );\n    }\n  }\n  disconnectedCallback() {\n    window.removeEventListener(\"resize\", this.updateSelectionIndicator);\n    if (\"fonts\" in document) {\n      document.fonts.removeEventListener(\n        \"loadingdone\",\n        this.updateSelectionIndicator\n      );\n    }\n    super.disconnectedCallback();\n  }\n}\n__decorateClass([\n  property({ type: Boolean })\n], Tabs.prototype, \"auto\", 2);\n__decorateClass([\n  property({ type: Boolean, reflect: true })\n], Tabs.prototype, \"compact\", 2);\n__decorateClass([\n  property({ reflect: true })\n], Tabs.prototype, \"dir\", 2);\n__decorateClass([\n  property({ reflect: true })\n], Tabs.prototype, \"direction\", 2);\n__decorateClass([\n  property({ type: Boolean, reflect: true })\n], Tabs.prototype, \"emphasized\", 2);\n__decorateClass([\n  property()\n], Tabs.prototype, \"label\", 2);\n__decorateClass([\n  property({ type: Boolean })\n], Tabs.prototype, \"enableTabsScroll\", 2);\n__decorateClass([\n  property({ type: Boolean, reflect: true })\n], Tabs.prototype, \"quiet\", 2);\n__decorateClass([\n  property({ attribute: false })\n], Tabs.prototype, \"selectionIndicatorStyle\", 2);\n__decorateClass([\n  property({ attribute: false })\n], Tabs.prototype, \"shouldAnimate\", 2);\n__decorateClass([\n  query(\"slot\")\n], Tabs.prototype, \"slotEl\", 2);\n__decorateClass([\n  query(\"#list\")\n], Tabs.prototype, \"tabList\", 2);\n__decorateClass([\n  property({ reflect: true })\n], Tabs.prototype, \"selected\", 2);\n//# sourceMappingURL=Tabs.dev.js.map\n","\"use strict\";import{css as t}from\"@spectrum-web-components/base\";const o=t`\n    :host{box-sizing:border-box;block-size:calc(var(--mod-tabs-item-height,var(--spectrum-tabs-item-height)) - var(--mod-tabs-divider-size,var(--spectrum-tabs-divider-size)));z-index:1;white-space:nowrap;color:var(--highcontrast-tabs-color,var(--mod-tabs-color,var(--spectrum-tabs-color)));transition:color var(--mod-tabs-animation-duration,var(--spectrum-tabs-animation-duration))ease-out;cursor:pointer;outline:none;-webkit-text-decoration:none;text-decoration:none;position:relative}::slotted([slot=icon]){block-size:var(--mod-tabs-icon-size,var(--spectrum-tabs-icon-size));inline-size:var(--mod-tabs-icon-size,var(--spectrum-tabs-icon-size));margin-block-start:var(--mod-tabs-top-to-icon,var(--spectrum-tabs-top-to-icon))}[name=icon]+#item-label{margin-inline-start:var(--mod-tabs-icon-to-text,var(--spectrum-tabs-icon-to-text))}:host:before{content:\"\";box-sizing:border-box;block-size:calc(100% - var(--mod-tabs-top-to-text,var(--spectrum-tabs-top-to-text)));inline-size:calc(100% + var(--mod-tabs-focus-indicator-gap,var(--spectrum-tabs-focus-indicator-gap))*2);border:var(--mod-tabs-focus-indicator-width,var(--spectrum-tabs-focus-indicator-width))solid transparent;border-radius:var(--mod-tabs-focus-indicator-border-radius,var(--spectrum-tabs-focus-indicator-border-radius));pointer-events:none;position:absolute;inset-block-start:calc(var(--mod-tabs-top-to-text,var(--spectrum-tabs-top-to-text))/2);inset-inline-start:calc(var(--mod-tabs-focus-indicator-gap,var(--spectrum-tabs-focus-indicator-gap))*-1);inset-inline-end:calc(var(--mod-tabs-focus-indicator-gap,var(--spectrum-tabs-focus-indicator-gap))*-1)}@media (hover:hover){:host(:hover){color:var(--highcontrast-tabs-color-hover,var(--mod-tabs-color-hover,var(--spectrum-tabs-color-hover)))}}:host([selected]){color:var(--highcontrast-tabs-color-selected,var(--mod-tabs-color-selected,var(--spectrum-tabs-color-selected)))}:host([disabled]){cursor:default;color:var(--highcontrast-tabs-color-disabled,var(--mod-tabs-color-disabled,var(--spectrum-tabs-color-disabled)))}:host([disabled]) #item-label{cursor:default}:host(:focus-visible){color:var(--highcontrast-tabs-color-key-focus,var(--mod-tabs-color-key-focus,var(--spectrum-tabs-color-key-focus)))}:host(:focus-visible):before{border-color:var(--highcontrast-tabs-focus-indicator-color,var(--mod-tabs-focus-indicator-color,var(--spectrum-tabs-focus-indicator-color)))}#item-label{cursor:pointer;vertical-align:top;font-family:var(--mod-tabs-font-family,var(--spectrum-tabs-font-family));font-style:var(--mod-tabs-font-style,var(--spectrum-tabs-font-style));font-size:var(--mod-tabs-font-size,var(--spectrum-tabs-font-size));font-weight:var(--mod-tabs-font-weight,var(--spectrum-tabs-font-weight));line-height:var(--mod-tabs-line-height,var(--spectrum-tabs-line-height));margin-block-start:var(--mod-tabs-top-to-text,var(--spectrum-tabs-top-to-text));margin-block-end:var(--mod-tabs-bottom-to-text,var(--spectrum-tabs-bottom-to-text));-webkit-text-decoration:none;text-decoration:none;display:inline-block}#item-label:empty{display:none}:host{scroll-margin-inline:var(--mod-tabs-item-horizontal-spacing,var(--spectrum-tabs-item-horizontal-spacing))}:host([disabled]){pointer-events:none}#item-label[hidden]{display:none}@media (forced-colors:active){:host:before{background-color:buttonface}:host ::slotted([slot=icon]){z-index:1;color:inherit;position:relative}#item-label{z-index:1;position:relative}:host([selected]),:host([selected]) ::slotted([slot=icon]),:host([selected]) #item-label{color:highlighttext}}:host([vertical]){flex-direction:column;justify-content:center;align-items:center;height:auto;display:flex}:host([dir][vertical]) slot[name=icon]+#item-label{margin-inline-start:0;margin-block:calc(var(--mod-tabs-top-to-text,var(--spectrum-tabs-top-to-text))/2)calc(var(--mod-tabs-bottom-to-text,var(--spectrum-tabs-bottom-to-text))/2)}:host([vertical]) ::slotted([slot=icon]){margin-block-start:calc(var(--mod-tabs-top-to-icon,var(--spectrum-tabs-top-to-icon))/2)}\n`;export default o;\n//# sourceMappingURL=tab.css.js.map\n","\"use strict\";import{css as t}from\"@spectrum-web-components/base\";const a=t`\n    :host([size=s]) #list{--spectrum-tabs-item-height:var(--spectrum-tab-item-height-small);--spectrum-tabs-item-horizontal-spacing:var(--spectrum-tab-item-to-tab-item-horizontal-small);--spectrum-tabs-item-vertical-spacing:var(--spectrum-tab-item-to-tab-item-vertical-small);--spectrum-tabs-start-to-edge:var(--spectrum-tab-item-start-to-edge-small);--spectrum-tabs-top-to-text:var(--spectrum-tab-item-top-to-text-small);--spectrum-tabs-bottom-to-text:var(--spectrum-tab-item-bottom-to-text-small);--spectrum-tabs-icon-size:var(--spectrum-workflow-icon-size-50);--spectrum-tabs-icon-to-text:var(--spectrum-text-to-visual-75);--spectrum-tabs-top-to-icon:var(--spectrum-tab-item-top-to-workflow-icon-small);--spectrum-tabs-focus-indicator-gap:var(--spectrum-tab-item-focus-indicator-gap-small);--spectrum-tabs-font-size:var(--spectrum-font-size-75)}:host([size=l]) #list{--spectrum-tabs-item-height:var(--spectrum-tab-item-height-large);--spectrum-tabs-item-horizontal-spacing:var(--spectrum-tab-item-to-tab-item-horizontal-large);--spectrum-tabs-item-vertical-spacing:var(--spectrum-tab-item-to-tab-item-vertical-large);--spectrum-tabs-start-to-edge:var(--spectrum-tab-item-start-to-edge-large);--spectrum-tabs-top-to-text:var(--spectrum-tab-item-top-to-text-large);--spectrum-tabs-bottom-to-text:var(--spectrum-tab-item-bottom-to-text-large);--spectrum-tabs-icon-size:var(--spectrum-workflow-icon-size-100);--spectrum-tabs-icon-to-text:var(--spectrum-text-to-visual-200);--spectrum-tabs-top-to-icon:var(--spectrum-tab-item-top-to-workflow-icon-large);--spectrum-tabs-focus-indicator-gap:var(--spectrum-tab-item-focus-indicator-gap-large);--spectrum-tabs-font-size:var(--spectrum-font-size-200)}:host([size=xl]) #list{--spectrum-tabs-item-height:var(--spectrum-tab-item-height-extra-large);--spectrum-tabs-item-horizontal-spacing:var(--spectrum-tab-item-to-tab-item-horizontal-extra-large);--spectrum-tabs-item-vertical-spacing:var(--spectrum-tab-item-to-tab-item-vertical-extra-large);--spectrum-tabs-start-to-edge:var(--spectrum-tab-item-start-to-edge-extra-large);--spectrum-tabs-top-to-text:var(--spectrum-tab-item-top-to-text-extra-large);--spectrum-tabs-bottom-to-text:var(--spectrum-tab-item-bottom-to-text-extra-large);--spectrum-tabs-icon-size:var(--spectrum-workflow-icon-size-200);--spectrum-tabs-icon-to-text:var(--spectrum-text-to-visual-300);--spectrum-tabs-top-to-icon:var(--spectrum-tab-item-top-to-workflow-icon-extra-large);--spectrum-tabs-focus-indicator-gap:var(--spectrum-tab-item-focus-indicator-gap-extra-large);--spectrum-tabs-font-size:var(--spectrum-font-size-300)}:host([size=s]) #list.spectrum-Tabs--compact{--mod-tabs-item-height:var(--mod-tabs-item-height-compact,var(--spectrum-tab-item-compact-height-small));--mod-tabs-top-to-text:var(--mod-tabs-top-to-text-compact,var(--spectrum-tab-item-top-to-text-compact-small));--mod-tabs-bottom-to-text:var(--mod-tabs-bottom-to-text-compact,var(--spectrum-tab-item-top-to-text-compact-small));--mod-tabs-top-to-icon:var(--mod-tabs-top-to-icon-compact,var(--spectrum-tab-item-top-to-workflow-icon-compact-small))}:host([size=l]) #list.spectrum-Tabs--compact{--mod-tabs-item-height:var(--mod-tabs-item-height-compact,var(--spectrum-tab-item-compact-height-large));--mod-tabs-top-to-text:var(--mod-tabs-top-to-text-compact,var(--spectrum-tab-item-top-to-text-compact-large));--mod-tabs-bottom-to-text:var(--mod-tabs-bottom-to-text-compact,var(--spectrum-tab-item-top-to-text-compact-large));--mod-tabs-top-to-icon:var(--mod-tabs-top-to-icon-compact,var(--spectrum-tab-item-top-to-workflow-icon-compact-large))}:host([size=xl]) #list.spectrum-Tabs--compact{--mod-tabs-item-height:var(--mod-tabs-item-height-compact,var(--spectrum-tab-item-compact-height-extra-large));--mod-tabs-top-to-text:var(--mod-tabs-top-to-text-compact,var(--spectrum-tab-item-top-to-text-compact-extra-large));--mod-tabs-bottom-to-text:var(--mod-tabs-bottom-to-text-compact,var(--spectrum-tab-item-top-to-text-compact-extra-large));--mod-tabs-top-to-icon:var(--mod-tabs-top-to-icon-compact,var(--spectrum-tab-item-top-to-workflow-icon-compact-extra-large))}\n`;export default a;\n//# sourceMappingURL=tabs-sizes.css.js.map\n","\"use strict\";import{css as t}from\"@spectrum-web-components/base\";const o=t`\n    #list{--spectrum-tabs-item-height:var(--spectrum-tab-item-height-medium);--spectrum-tabs-item-horizontal-spacing:var(--spectrum-tab-item-to-tab-item-horizontal-medium);--spectrum-tabs-item-vertical-spacing:var(--spectrum-tab-item-to-tab-item-vertical-medium);--spectrum-tabs-start-to-edge:var(--spectrum-tab-item-start-to-edge-medium);--spectrum-tabs-top-to-text:var(--spectrum-tab-item-top-to-text-medium);--spectrum-tabs-bottom-to-text:var(--spectrum-tab-item-bottom-to-text-medium);--spectrum-tabs-icon-size:var(--spectrum-workflow-icon-size-75);--spectrum-tabs-icon-to-text:var(--spectrum-text-to-visual-100);--spectrum-tabs-top-to-icon:var(--spectrum-tab-item-top-to-workflow-icon-medium);--spectrum-tabs-color:var(--spectrum-neutral-subdued-content-color-default);--spectrum-tabs-color-selected:var(--spectrum-neutral-subdued-content-color-down);--spectrum-tabs-color-hover:var(--spectrum-neutral-subdued-content-color-hover);--spectrum-tabs-color-key-focus:var(--spectrum-neutral-subdued-content-color-key-focus);--spectrum-tabs-color-disabled:var(--spectrum-gray-500);--spectrum-tabs-font-family:var(--spectrum-sans-font-family-stack);--spectrum-tabs-font-style:var(--spectrum-default-font-style);--spectrum-tabs-font-size:var(--spectrum-font-size-100);--spectrum-tabs-line-height:var(--spectrum-line-height-100);--spectrum-tabs-focus-indicator-width:var(--spectrum-focus-indicator-thickness);--spectrum-tabs-focus-indicator-border-radius:var(--spectrum-corner-radius-100);--spectrum-tabs-focus-indicator-gap:var(--spectrum-tab-item-focus-indicator-gap-medium);--spectrum-tabs-focus-indicator-color:var(--spectrum-focus-indicator-color);--spectrum-tabs-selection-indicator-color:var(--spectrum-neutral-subdued-content-color-down);--spectrum-tabs-list-background-direction:top;--spectrum-tabs-divider-size:var(--spectrum-border-width-200);--spectrum-tabs-divider-border-radius:1px;--spectrum-tabs-animation-duration:var(--spectrum-animation-duration-100);--spectrum-tabs-animation-ease:var(--spectrum-animation-ease-in-out)}:host([emphasized]) #list{--mod-tabs-color-selected:var(--mod-tabs-color-selected-emphasized,var(--spectrum-accent-content-color-default));--mod-tabs-color-hover:var(--mod-tabs-color-hover-emphasized,var(--spectrum-accent-content-color-hover));--mod-tabs-color-key-focus:var(--mod-tabs-color-key-focus-emphasized,var(--spectrum-accent-content-color-key-focus));--mod-tabs-selection-indicator-color:var(--mod-tabs-selection-indicator-color-emphasized,var(--spectrum-accent-content-color-default))}:host([direction^=vertical]) #list{--mod-tabs-list-background-direction:var(--mod-tabs-list-background-direction-vertical,right)}:host([direction^=vertical-right]) #list{--mod-tabs-list-background-direction:var(--mod-tabs-list-background-direction-vertical-right,left)}:host([direction^=vertical]) #list:dir(rtl),:host([dir=rtl][direction^=vertical]) #list{--mod-tabs-list-background-direction:var(--mod-tabs-list-background-direction-vertical,left)}:host([direction^=vertical-right]) #list:dir(rtl),:host([dir=rtl][direction^=vertical-right]) #list{--mod-tabs-list-background-direction:var(--mod-tabs-list-background-direction-vertical,right)}:host([compact]) #list{--mod-tabs-item-height:var(--mod-tabs-item-height-compact,var(--spectrum-tab-item-compact-height-medium));--mod-tabs-top-to-text:var(--mod-tabs-top-to-text-compact,var(--spectrum-tab-item-top-to-text-compact-medium));--mod-tabs-bottom-to-text:var(--mod-tabs-bottom-to-text-compact,var(--spectrum-tab-item-top-to-text-compact-medium));--mod-tabs-top-to-icon:var(--mod-tabs-top-to-icon-compact,var(--spectrum-tab-item-top-to-workflow-icon-compact-medium))}#list{z-index:0;vertical-align:top;background:linear-gradient(to var(--mod-tabs-list-background-direction,var(--spectrum-tabs-list-background-direction)),var(--highcontrast-tabs-divider-background-color,var(--mod-tabs-divider-background-color,var(--spectrum-tabs-divider-background-color)))0 var(--mod-tabs-divider-size,var(--spectrum-tabs-divider-size)),transparent var(--mod-tabs-divider-size,var(--spectrum-tabs-divider-size)));margin:0;padding-block:0;display:flex;position:relative}::slotted([selected]:not([slot])){color:var(--highcontrast-tabs-color-selected,var(--mod-tabs-color-selected,var(--spectrum-tabs-color-selected)))}::slotted([disabled]:not([slot])){cursor:default;color:var(--highcontrast-tabs-color-disabled,var(--mod-tabs-color-disabled,var(--spectrum-tabs-color-disabled)))}#selection-indicator{background-color:var(--highcontrast-tabs-selection-indicator-color,var(--mod-tabs-selection-indicator-color,var(--spectrum-tabs-selection-indicator-color)));z-index:0;transition:transform var(--mod-tabs-animation-duration,var(--spectrum-tabs-animation-duration))var(--mod-tabs-animation-ease,var(--spectrum-tabs-animation-ease));transform-origin:0 0;border-radius:var(--mod-tabs-divider-border-radius,var(--spectrum-tabs-divider-border-radius));position:absolute;inset-inline-start:0}:host([direction^=horizontal]) #list{align-items:center}:host([direction^=horizontal]) #list ::slotted(:not([slot])){vertical-align:top}:host([direction^=horizontal]) ::slotted(:not(:first-child)){margin-inline-start:var(--mod-tabs-item-horizontal-spacing,var(--spectrum-tabs-item-horizontal-spacing))}:host([direction^=horizontal]) #list #selection-indicator{block-size:var(--mod-tabs-divider-size,var(--spectrum-tabs-divider-size));position:absolute;inset-block-end:0}:host([direction^=horizontal][compact]) #list{box-sizing:initial;align-items:end}:host([quiet]) #list{background:0 0;border-color:#0000;display:inline-flex}:host([quiet]) #selection-indicator{padding-inline-start:var(--mod-tabs-start-to-item-quiet)}:host([direction^=vertical]) #list,:host([direction^=vertical-right]) #list{flex-direction:column;padding:0;display:inline-flex}:host([direction^=vertical-right][quiet]) #list,:host([direction^=vertical][quiet]) #list{border-color:#0000}:host([direction^=vertical]) #list ::slotted(:not([slot])),:host([direction^=vertical-right]) #list ::slotted(:not([slot])){block-size:var(--mod-tabs-item-height,var(--spectrum-tabs-item-height));line-height:var(--mod-tabs-item-height,var(--spectrum-tabs-item-height));margin-block-end:var(--mod-tabs-item-vertical-spacing,var(--spectrum-tabs-item-vertical-spacing));margin-inline-start:var(--mod-tabs-start-to-edge,var(--spectrum-tabs-start-to-edge));margin-inline-end:var(--mod-tabs-start-to-edge,var(--spectrum-tabs-start-to-edge));padding-block:0}:host([direction^=vertical]) #list ::slotted(:not([slot])):before,:host([direction^=vertical-right]) #list ::slotted(:not([slot])):before{inset-inline-start:calc(var(--mod-tabs-focus-indicator-gap,var(--spectrum-tabs-focus-indicator-gap))*-1)}:host([direction^=vertical]) #list #selection-indicator,:host([direction^=vertical-right]) #list #selection-indicator{inline-size:var(--mod-tabs-divider-size,var(--spectrum-tabs-divider-size));position:absolute;inset-block-start:0;inset-inline-start:0}:host([direction^=vertical-right]) #list #selection-indicator{inset-inline:auto 0}@media (forced-colors:active){#list{--highcontrast-tabs-divider-background-color:var(--spectrum-gray-500);--highcontrast-tabs-selection-indicator-color:Highlight;--highcontrast-tabs-focus-indicator-color:CanvasText;--highcontrast-tabs-focus-indicator-background-color:Highlight;--highcontrast-tabs-color:ButtonText;--highcontrast-tabs-color-hover:ButtonText;--highcontrast-tabs-color-selected:HighlightText;--highcontrast-tabs-color-key-focus:ButtonText;--highcontrast-tabs-color-disabled:GrayText;forced-color-adjust:none}#list ::slotted([selected]:not([slot])):before{background-color:var(--highcontrast-tabs-focus-indicator-background-color)}:host([direction^=vertical][compact]) #list #list ::slotted(:not([slot])):before{block-size:100%;inset-block-start:0}:host([quiet]) #list{background:linear-gradient(to var(--mod-tabs-list-background-direction,var(--spectrum-tabs-list-background-direction)),var(--highcontrast-tabs-divider-background-color,var(--mod-tabs-divider-background-color,var(--spectrum-tabs-divider-background-color)))0 var(--mod-tabs-divider-size,var(--spectrum-tabs-divider-size)),transparent var(--mod-tabs-divider-size,var(--spectrum-tabs-divider-size)))}}#list{--spectrum-tabs-font-weight:var(--system-tabs-font-weight);--spectrum-tabs-divider-background-color:var(--system-tabs-divider-background-color)}:host{grid-template-columns:100%;display:grid;position:relative}:host(:not([direction^=vertical])){grid-template-rows:auto 1fr}:host([direction^=vertical]){grid-template-columns:auto 1fr}:host([dir=rtl]) #selection-indicator{left:0;right:auto}:host([direction=vertical-right]) #list #selection-indicator{inset-inline:auto 0}#list{justify-content:var(--swc-tabs-list-justify-content)}:host([disabled]) #list{pointer-events:none}:host([disabled]) #list #selection-indicator{background-color:var(--mod-tabs-color-disabled,var(--spectrum-tabs-color-disabled))}:host([disabled]) ::slotted(sp-tab){color:var(--mod-tabs-color-disabled,var(--spectrum-tabs-color-disabled))}:host([direction=vertical-right]) #list #selection-indicator,:host([direction=vertical]) #list #selection-indicator{inset-block-start:0}#selection-indicator.first-position{transition:none}:host([dir][direction=horizontal]) #list.scroll{scrollbar-width:none;overflow:auto hidden}:host([dir][direction=horizontal]) #list.scroll::-webkit-scrollbar{display:none}\n`;export default o;\n//# sourceMappingURL=tabs.css.js.map\n"],"names":[],"sourceRoot":""}