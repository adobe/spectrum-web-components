{"version":3,"file":"color-wheel-stories-color-wheel-stories.ebc06121.iframe.bundle.js","mappings":";;AAEA;;ACDA;AAyCA;;AAEA;AACA;;AAGA;;;;;;;;;;ACZA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAqCA;;ACxEA;;;AAsPA;;AAEA;AACA;AACA;AACA;AACA;;;;;;;;;;;;AAYA;AACA;AACA;;AAEA;AACA;AACA;AACA;;;;;;AAaA;;;AAGA;AACA;AACA;AAUA;AACA;AACA;;AAGA;;ACrSA;;;;;;;;;;;;;;;;;;;;;;;;;;;AA8BA;;AAKA;;AAKA;;;;AAOA;AAsDA;;AAMA;;ACrHA","sources":["webpack://@adobe/spectrum-web-components/./packages/color-handle/src/color-handle.css.js","webpack://@adobe/spectrum-web-components/./packages/color-handle/src/ColorHandle.dev.js","webpack://@adobe/spectrum-web-components/./packages/color-loupe/src/ColorLoupe.dev.js","webpack://@adobe/spectrum-web-components/./packages/color-wheel/src/ColorWheel.dev.js","webpack://@adobe/spectrum-web-components/./packages/color-wheel/stories/color-wheel.stories.js","webpack://@adobe/spectrum-web-components/./tools/opacity-checkerboard/src/opacity-checkerboard.css.js"],"sourcesContent":["\"use strict\";import{css as o}from\"@spectrum-web-components/base\";const r=o`\n    @media (forced-colors:active){:host{forced-color-adjust:none}:host([disabled]){--highcontrast-colorhandle-border-color-disabled:GrayText;--highcontrast-colorhandle-fill-color-disabled:Canvas}}:host{--spectrum-colorhandle-outer-border-color:rgba(var(--spectrum-black-rgb),var(--spectrum-color-handle-outer-border-opacity));--spectrum-colorhandle-outer-border-width:var(--spectrum-color-handle-outer-border-width);--spectrum-colorhandle-inner-border-color:rgba(var(--spectrum-black-rgb),var(--spectrum-color-handle-inner-border-opacity));--mod-opacity-checkerboard-position:50%;z-index:1;box-sizing:border-box;inline-size:var(--mod-colorhandle-size,var(--spectrum-color-handle-size));block-size:var(--mod-colorhandle-size,var(--spectrum-color-handle-size));margin-inline:calc(var(--mod-colorhandle-size,var(--spectrum-color-handle-size))/2*-1);margin-block:calc(var(--mod-colorhandle-size,var(--spectrum-color-handle-size))/2*-1);border-width:var(--mod-colorhandle-border-width,var(--spectrum-color-handle-border-width));border-color:var(--mod-colorhandle-border-color,var(--spectrum-white));box-shadow:0 0 0 var(--mod-colorhandle-outer-border-width,var(--spectrum-colorhandle-outer-border-width))var(--mod-colorhandle-outer-border-color,var(--spectrum-colorhandle-outer-border-color));transition:all var(--mod-colorhandle-animation-duration,var(--spectrum-animation-duration-100))ease-in-out;transition:all var(--mod-colorhandle-animation-duration,var(--spectrum-animation-duration-100))var(--mod-colorhandle-animation-easing,ease-in-out);border-style:solid}:host,:host:after{border-radius:100%;display:block;position:absolute}:host:after{content:\"\";inset-inline:calc(50% - var(--mod-colorhandle-hitarea-size,var(--spectrum-color-control-track-width))/2);inset-block:calc(50% - var(--mod-colorhandle-hitarea-size,var(--spectrum-color-control-track-width))/2);inline-size:var(--mod-colorhandle-hitarea-size,var(--spectrum-color-control-track-width));block-size:var(--mod-colorhandle-hitarea-size,var(--spectrum-color-control-track-width));border-radius:var(--mod-colorhandle-hitarea-border-radius,100%)}:host([focused]),:host(:focus-visible){inline-size:var(--mod-colorhandle-focused-size,var(--spectrum-color-handle-size-key-focus));block-size:var(--mod-colorhandle-focused-size,var(--spectrum-color-handle-size-key-focus));margin-inline:calc(var(--mod-colorhandle-size,var(--spectrum-color-handle-size))*-1);margin-block:calc(var(--mod-colorhandle-size,var(--spectrum-color-handle-size))*-1);outline:none}:host([disabled]){pointer-events:none;border-color:var(--highcontrast-colorhandle-border-color-disabled,var(--mod-colorhandle-border-color-disabled,var(--spectrum-disabled-content-color)));background:var(--highcontrast-colorhandle-fill-color-disabled,var(--mod-colorhandle-fill-color-disabled,var(--spectrum-disabled-background-color)));box-shadow:none}:host([disabled]) .inner{display:none}.inner{block-size:100%;inline-size:100%;box-shadow:inset 0 0 0 var(--mod-colorhandle-inner-border-width,var(--spectrum-color-handle-inner-border-width))var(--mod-colorhandle-inner-border-color,var(--spectrum-colorhandle-inner-border-color));background-color:var(--spectrum-picked-color);border-radius:100%}:host{touch-action:none;transition:inline-size var(--mod-colorhandle-animation-duration,var(--spectrum-colorhandle-animation-duration))var(--mod-colorhandle-animation-easing,var(--spectrum-colorhandle-animation-easing)),block-size var(--mod-colorhandle-animation-duration,var(--spectrum-colorhandle-animation-duration))var(--mod-colorhandle-animation-easing,var(--spectrum-colorhandle-animation-easing)),border-width var(--mod-colorhandle-animation-duration,var(--spectrum-colorhandle-animation-duration))var(--mod-colorhandle-animation-easing,var(--spectrum-colorhandle-animation-easing)),margin-inline var(--mod-colorhandle-animation-duration,var(--spectrum-colorhandle-animation-duration))var(--mod-colorhandle-animation-easing,var(--spectrum-colorhandle-animation-easing)),margin-block var(--mod-colorhandle-animation-duration,var(--spectrum-colorhandle-animation-duration))var(--mod-colorhandle-animation-easing,var(--spectrum-colorhandle-animation-easing))}:host(:focus){outline:none}\n`;export default r;\n//# sourceMappingURL=color-handle.css.js.map\n","\"use strict\";\nvar __defProp = Object.defineProperty;\nvar __getOwnPropDesc = Object.getOwnPropertyDescriptor;\nvar __decorateClass = (decorators, target, key, kind) => {\n  var result = kind > 1 ? void 0 : kind ? __getOwnPropDesc(target, key) : target;\n  for (var i = decorators.length - 1, decorator; i >= 0; i--)\n    if (decorator = decorators[i])\n      result = (kind ? decorator(target, key, result) : decorator(result)) || result;\n  if (kind && result) __defProp(target, key, result);\n  return result;\n};\nimport {\n  html,\n  SpectrumElement\n} from \"@spectrum-web-components/base\";\nimport { property } from \"@spectrum-web-components/base/src/decorators.js\";\nimport \"@spectrum-web-components/color-loupe/sp-color-loupe.js\";\nimport opacityCheckerboardStyles from \"@spectrum-web-components/opacity-checkerboard/src/is-opacity-checkerboard.css.js\";\nimport styles from \"./color-handle.css.js\";\nexport class ColorHandle extends SpectrumElement {\n  constructor() {\n    super(...arguments);\n    this.disabled = false;\n    this.focused = false;\n    this.open = false;\n    this.color = \"rgba(255, 0, 0, 0.5)\";\n  }\n  static get styles() {\n    return [opacityCheckerboardStyles, styles];\n  }\n  handlePointerdown(event) {\n    if (event.pointerType === \"touch\") {\n      this.open = true;\n    }\n    this.setPointerCapture(event.pointerId);\n  }\n  handlePointerup(event) {\n    this.open = false;\n    this.releasePointerCapture(event.pointerId);\n  }\n  render() {\n    return html`\n            <div class=\"inner\" style=\"background-color: ${this.color}\"></div>\n            <sp-color-loupe\n                color=${this.color}\n                ?open=${this.open && !this.disabled}\n            ></sp-color-loupe>\n        `;\n  }\n  firstUpdated(changed) {\n    super.firstUpdated(changed);\n    this.addEventListener(\"pointerdown\", this.handlePointerdown);\n    this.addEventListener(\"pointerup\", this.handlePointerup);\n    this.addEventListener(\"pointercancel\", this.handlePointerup);\n  }\n}\n__decorateClass([\n  property({ type: Boolean, reflect: true })\n], ColorHandle.prototype, \"disabled\", 2);\n__decorateClass([\n  property({ type: Boolean, reflect: true })\n], ColorHandle.prototype, \"focused\", 2);\n__decorateClass([\n  property({ type: Boolean, reflect: true })\n], ColorHandle.prototype, \"open\", 2);\n__decorateClass([\n  property({ type: String })\n], ColorHandle.prototype, \"color\", 2);\n//# sourceMappingURL=ColorHandle.dev.js.map\n","\"use strict\";\nvar __defProp = Object.defineProperty;\nvar __getOwnPropDesc = Object.getOwnPropertyDescriptor;\nvar __decorateClass = (decorators, target, key, kind) => {\n  var result = kind > 1 ? void 0 : kind ? __getOwnPropDesc(target, key) : target;\n  for (var i = decorators.length - 1, decorator; i >= 0; i--)\n    if (decorator = decorators[i])\n      result = (kind ? decorator(target, key, result) : decorator(result)) || result;\n  if (kind && result) __defProp(target, key, result);\n  return result;\n};\nimport {\n  html,\n  SpectrumElement\n} from \"@spectrum-web-components/base\";\nimport { property } from \"@spectrum-web-components/base/src/decorators.js\";\nimport styles from \"./color-loupe.css.js\";\nimport opacityCheckerboardStyles from \"@spectrum-web-components/opacity-checkerboard/src/opacity-checkerboard.css.js\";\nexport class ColorLoupe extends SpectrumElement {\n  constructor() {\n    super(...arguments);\n    this.open = false;\n    this.color = \"rgba(255, 0, 0, 0.5)\";\n  }\n  static get styles() {\n    return [opacityCheckerboardStyles, styles];\n  }\n  render() {\n    return html`\n            <div class=\"opacity-checkerboard loupe-clipped\"></div>\n            <div class=\"spectrum-ColorLoupe-inner-border loupe-clipped\"></div>\n            <div class=\"spectrum-ColorLoupe-outer-border loupe-clipped\"></div>\n            <svg\n                aria-hidden=\"true\"\n                class=\"spectrum-ColorLoupe is-open\"\n                overflow=\"visible\"\n                style=\"--spectrum-picked-color: ${this.color}; position: absolute;\"\n            >\n                <defs>\n                    <path\n                        id=\"loupe-path\"\n                        d=\"M23 61.575C19.0044 57.435 15.2591 53.0606 11.784 48.475C8.68949 44.4532 5.96348 40.1608 3.639 35.65C1.224 30.8 0 26.549 0 23C0.00319993 17.6937 1.84059 12.5516 5.20091 8.44488C8.56122 4.33815 13.2378 1.51928 18.4385 0.465803C23.6392 -0.587678 29.0442 0.189006 33.7378 2.66428C38.4314 5.13955 42.125 9.16122 44.193 14.048C45.3915 16.88 46.0061 19.9248 46 23C46 26.551 44.774 30.811 42.355 35.661C40.0274 40.1747 37.298 44.4698 34.2 48.494C30.7297 53.0728 26.9898 57.4409 23 61.575ZZ\"\n                        transform=\"translate(2, 2)\"\n                    />\n                    <mask id=\"loupe-mask\">\n                        <rect\n                            x=\"0\"\n                            y=\"0\"\n                            height=\"100\"\n                            width=\"100\"\n                            fill=\"white\"\n                        />\n                        <use xlink:href=\"#path\" fill=\"black\" />\n                    </mask>\n                </defs>\n\n                <g class=\"spectrum-ColorLoupe-loupe\">\n                    <g>\n                        <use\n                            xlink:href=\"#loupe-path\"\n                            mask=\"url(#loupe-mask)\"\n                            transform=\"translate(2, 2)\"\n                            class=\"spectrum-ColorLoupe-inner-border\"\n                        />\n                        <use\n                            xlink:href=\"#loupe-path\"\n                            mask=\"url(#loupe-mask)\"\n                            class=\"spectrum-ColorLoupe-outer-border\"\n                        />\n                    </g>\n                </g>\n            </svg>\n        `;\n  }\n}\n__decorateClass([\n  property({ type: Boolean, reflect: true })\n], ColorLoupe.prototype, \"open\", 2);\n__decorateClass([\n  property({ type: String })\n], ColorLoupe.prototype, \"color\", 2);\n//# sourceMappingURL=ColorLoupe.dev.js.map\n","\"use strict\";\nvar __defProp = Object.defineProperty;\nvar __getOwnPropDesc = Object.getOwnPropertyDescriptor;\nvar __decorateClass = (decorators, target, key, kind) => {\n  var result = kind > 1 ? void 0 : kind ? __getOwnPropDesc(target, key) : target;\n  for (var i = decorators.length - 1, decorator; i >= 0; i--)\n    if (decorator = decorators[i])\n      result = (kind ? decorator(target, key, result) : decorator(result)) || result;\n  if (kind && result) __defProp(target, key, result);\n  return result;\n};\nimport {\n  html\n} from \"@spectrum-web-components/base\";\nimport {\n  property,\n  query\n} from \"@spectrum-web-components/base/src/decorators.js\";\nimport { ifDefined } from \"@spectrum-web-components/base/src/directives.js\";\nimport { streamingListener } from \"@spectrum-web-components/base/src/streaming-listener.js\";\nimport \"@spectrum-web-components/color-handle/sp-color-handle.js\";\nimport {\n  ColorController\n} from \"@spectrum-web-components/reactive-controllers/src/ColorController.js\";\nimport { LanguageResolutionController } from \"@spectrum-web-components/reactive-controllers/src/LanguageResolution.js\";\nimport { Focusable } from \"@spectrum-web-components/shared/src/focusable.js\";\nimport styles from \"./color-wheel.css.js\";\nexport class ColorWheel extends Focusable {\n  constructor() {\n    super(...arguments);\n    this.disabled = false;\n    this.focused = false;\n    this.label = \"hue\";\n    this.step = 1;\n    this.languageResolver = new LanguageResolutionController(this);\n    this.colorController = new ColorController(this, { manageAs: \"hsv\" });\n    this._baseStep = 1;\n    this._altered = 0;\n    this._pointerDown = false;\n  }\n  static get styles() {\n    return [styles];\n  }\n  get value() {\n    return this.colorController.hue;\n  }\n  set value(hue) {\n    this.colorController.hue = hue;\n  }\n  get color() {\n    return this.colorController.colorValue;\n  }\n  set color(color) {\n    this.colorController.color = color;\n  }\n  // Preserves user's value\n  set altered(altered) {\n    this._altered = altered;\n  }\n  get effectiveStep() {\n    return this._altered > 0 ? this._baseStep * 10 : this._baseStep;\n  }\n  get focusElement() {\n    return this.input;\n  }\n  handleKeydown(event) {\n    const { key } = event;\n    this.focused = true;\n    this.altered = [event.shiftKey, event.ctrlKey, event.altKey].filter(\n      (key2) => !!key2\n    ).length;\n    let delta = 0;\n    switch (key) {\n      case \"ArrowUp\":\n        delta = this.effectiveStep;\n        break;\n      case \"ArrowDown\":\n        delta = -this.effectiveStep;\n        break;\n      case \"ArrowLeft\":\n        delta = this.effectiveStep * (this.isLTR ? -1 : 1);\n        break;\n      case \"ArrowRight\":\n        delta = this.effectiveStep * (this.isLTR ? 1 : -1);\n        break;\n      default:\n        return;\n    }\n    event.preventDefault();\n    this.value = (360 + this.value + delta) % 360;\n    this.colorController.savePreviousColor();\n    this.dispatchEvent(\n      new Event(\"input\", {\n        bubbles: true,\n        composed: true\n      })\n    );\n    const applyDefault = this.dispatchEvent(\n      new Event(\"change\", {\n        bubbles: true,\n        composed: true,\n        cancelable: true\n      })\n    );\n    if (!applyDefault) {\n      this.colorController.restorePreviousColor();\n    }\n  }\n  handleInput(event) {\n    const { valueAsNumber } = event.target;\n    this.value = valueAsNumber;\n  }\n  handleChange(event) {\n    this.handleInput(event);\n    this.dispatchEvent(\n      new Event(\"change\", {\n        bubbles: true,\n        composed: true\n      })\n    );\n  }\n  focus(focusOptions = {}) {\n    super.focus(focusOptions);\n    this.forwardFocus();\n  }\n  forwardFocus() {\n    this.focused = this.hasVisibleFocusInTree();\n    this.input.focus();\n  }\n  handleFocus() {\n    this.focused = true;\n  }\n  handleBlur() {\n    if (this._pointerDown) {\n      return;\n    }\n    this.altered = 0;\n    this.focused = false;\n  }\n  handlePointerdown(event) {\n    if (event.button !== 0) {\n      event.preventDefault();\n      return;\n    }\n    this._pointerDown = true;\n    this.colorController.savePreviousColor();\n    this.boundingClientRect = this.getBoundingClientRect();\n    event.target.setPointerCapture(event.pointerId);\n    if (event.pointerType === \"mouse\") {\n      this.focused = true;\n    }\n  }\n  handlePointermove(event) {\n    this.value = this.calculateHandlePosition(event);\n    this.dispatchEvent(\n      new Event(\"input\", {\n        bubbles: true,\n        composed: true,\n        cancelable: true\n      })\n    );\n  }\n  handlePointerup(event) {\n    this._pointerDown = false;\n    event.target.releasePointerCapture(event.pointerId);\n    const applyDefault = this.dispatchEvent(\n      new Event(\"change\", {\n        bubbles: true,\n        composed: true,\n        cancelable: true\n      })\n    );\n    if (!applyDefault) {\n      this.colorController.restorePreviousColor();\n    }\n    this.focus();\n    if (event.pointerType === \"mouse\") {\n      this.focused = false;\n    }\n  }\n  /**\n   * Returns the value under the cursor\n   * @param: PointerEvent on slider\n   * @return: Slider value that correlates to the position under the pointer\n   */\n  calculateHandlePosition(event) {\n    if (!this.boundingClientRect) {\n      return this.value;\n    }\n    const rect = this.boundingClientRect;\n    const { width, height, left, top } = rect;\n    const centerX = left + width / 2;\n    const centerY = top + height / 2;\n    const pointX = event.clientX - centerX;\n    const pointY = event.clientY - centerY;\n    const value = Math.atan2(pointY, pointX) * 180 / Math.PI;\n    return (360 + (360 + (this.isLTR ? value : 180 - value))) % 360;\n  }\n  handleGradientPointerdown(event) {\n    if (event.button !== 0 || event.target.classList.contains(\"innerCircle\")) {\n      return;\n    }\n    event.stopPropagation();\n    event.preventDefault();\n    const { button, pointerId, pointerType } = event;\n    this.handle.dispatchEvent(\n      new PointerEvent(\"pointerdown\", {\n        button,\n        pointerId,\n        pointerType\n      })\n    );\n    this.handlePointermove(event);\n  }\n  calculateStyleData() {\n    const { width: diameter = 160 } = this.boundingClientRect || {};\n    const styles2 = getComputedStyle(this);\n    const borderWidth = parseFloat(\n      styles2.getPropertyValue(\"--_border-width\")\n    );\n    const trackWidth = parseFloat(\n      styles2.getPropertyValue(\"--_track-width\")\n    );\n    const radius = diameter / 2;\n    const diameterAfterBoarder = diameter - borderWidth * 2;\n    const radiusAfterBoarder = radius - borderWidth;\n    const innerRadius = radius - trackWidth;\n    const innerDiameter = innerRadius * 2;\n    const innerRadiusAfterBorder = innerRadius + borderWidth;\n    const innerDiameterAfterBorder = innerDiameter + borderWidth * 2;\n    const clipPathBorders = `\"M ${radius} ${radius} m -${radius} 0 a ${radius} ${radius} 0 1 0 ${diameter} 0 a ${radius} ${radius} 0 1 0 -${diameter} 0 M ${radius} ${radius} m -${innerRadius} 0 a ${innerRadius} ${innerRadius} 0 1 0 ${innerDiameter} 0 a ${innerRadius} ${innerRadius} 0 1 0 -${innerDiameter} 0\"`;\n    const clipPath = `\"M ${radiusAfterBoarder} ${radiusAfterBoarder} m -${radiusAfterBoarder} 0 a ${radiusAfterBoarder} ${radiusAfterBoarder} 0 1 0 ${diameterAfterBoarder} 0 a ${radiusAfterBoarder} ${radiusAfterBoarder} 0 1 0 -${diameterAfterBoarder} 0 M ${radiusAfterBoarder} ${radiusAfterBoarder} m -${innerRadiusAfterBorder} 0 a ${innerRadiusAfterBorder} ${innerRadiusAfterBorder} 0 1 0 ${innerDiameterAfterBorder} 0 a ${innerRadiusAfterBorder} ${innerRadiusAfterBorder} 0 1 0 -${innerDiameterAfterBorder} 0\"`;\n    const translateX = (this.isLTR ? 1 : -1) * (radius - trackWidth / 2) * Math.cos(this.value * Math.PI / 180);\n    const translateY = (radius - trackWidth / 2) * Math.sin(this.value * Math.PI / 180);\n    const handleLocationStyles = `transform: translate(${translateX}px, ${translateY}px);`;\n    return {\n      clipPath,\n      clipPathBorders,\n      diameter,\n      handleLocationStyles\n    };\n  }\n  render() {\n    const { clipPath, clipPathBorders, diameter, handleLocationStyles } = this.calculateStyleData();\n    return html`\n            <slot\n                name=\"gradient\"\n                @pointerdown=${this.handleGradientPointerdown}\n                style=\"\n                    --spectrum-colorwheel-colorarea-container-size: ${diameter}px;\n                    --spectrum-colorwheel-height: ${diameter}px;\n                    --spectrum-colorwheel-width: ${diameter}px;\n                    --spectrum-colorwheel-path-borders: ${clipPathBorders};\n                    --spectrum-colorwheel-path: ${clipPath};\n                \"\n            >\n                <div class=\"inner\">\n                    <div class=\"colorarea-container\"></div>\n                </div>\n                <div class=\"border\">\n                    <div class=\"wheel\"></div>\n                </div>\n            </slot>\n\n            <sp-color-handle\n                tabindex=${ifDefined(this.focused ? void 0 : \"0\")}\n                @focus=${this.forwardFocus}\n                ?focused=${this.focused}\n                class=\"handle\"\n                color=\"hsl(${this.value}, 100%, 50%)\"\n                ?disabled=${this.disabled}\n                style=${handleLocationStyles}\n                ${streamingListener({\n      start: [\"pointerdown\", this.handlePointerdown],\n      streamInside: [\"pointermove\", this.handlePointermove],\n      end: [\n        [\"pointerup\", \"pointercancel\", \"pointerleave\"],\n        this.handlePointerup\n      ]\n    })}\n            ></sp-color-handle>\n\n            <input\n                type=\"range\"\n                class=\"slider\"\n                aria-label=${this.label}\n                min=\"0\"\n                max=\"360\"\n                step=${this.step}\n                .value=${String(this.value)}\n                aria-valuetext=${`${new Intl.NumberFormat(\n      this.languageResolver.language,\n      {\n        maximumFractionDigits: 0,\n        minimumIntegerDigits: 1,\n        style: \"unit\",\n        unit: \"degree\",\n        unitDisplay: \"narrow\"\n      }\n    ).format(this.value)}`}\n                @input=${this.handleInput}\n                @change=${this.handleChange}\n                @keydown=${this.handleKeydown}\n            />\n        `;\n  }\n  firstUpdated(changed) {\n    super.firstUpdated(changed);\n    this.boundingClientRect = this.getBoundingClientRect();\n    this.addEventListener(\"focus\", this.handleFocus);\n    this.addEventListener(\"blur\", this.handleBlur);\n  }\n  willUpdate(changed) {\n    if (changed.has(\"step\")) {\n      this._baseStep = this.step;\n    }\n  }\n  connectedCallback() {\n    var _a;\n    super.connectedCallback();\n    if (!this.observer && window.ResizeObserver) {\n      this.observer = new ResizeObserver((entries) => {\n        requestAnimationFrame(() => {\n          for (const entry of entries) {\n            this.boundingClientRect = entry.contentRect;\n          }\n          this.requestUpdate();\n        });\n      });\n    }\n    (_a = this.observer) == null ? void 0 : _a.observe(this);\n  }\n  disconnectedCallback() {\n    var _a;\n    (_a = this.observer) == null ? void 0 : _a.unobserve(this);\n    super.disconnectedCallback();\n  }\n}\n__decorateClass([\n  property({ type: String, reflect: true })\n], ColorWheel.prototype, \"dir\", 2);\n__decorateClass([\n  property({ type: Boolean, reflect: true })\n], ColorWheel.prototype, \"disabled\", 2);\n__decorateClass([\n  property({ type: Boolean, reflect: true })\n], ColorWheel.prototype, \"focused\", 2);\n__decorateClass([\n  query(\".handle\")\n], ColorWheel.prototype, \"handle\", 2);\n__decorateClass([\n  property({ type: String })\n], ColorWheel.prototype, \"label\", 2);\n__decorateClass([\n  property({ type: Number })\n], ColorWheel.prototype, \"step\", 2);\n__decorateClass([\n  property({ type: Number })\n], ColorWheel.prototype, \"value\", 1);\n__decorateClass([\n  property({ type: String })\n], ColorWheel.prototype, \"color\", 1);\n__decorateClass([\n  query(\"input\")\n], ColorWheel.prototype, \"input\", 2);\n//# sourceMappingURL=ColorWheel.dev.js.map\n","\"use strict\";\nimport { html } from \"@spectrum-web-components/base\";\nimport \"@spectrum-web-components/color-wheel/sp-color-wheel.js\";\nexport default {\n  title: \"Color/Wheel\",\n  component: \"sp-color-wheel\"\n};\nexport const Default = () => {\n  return html`\n        <sp-color-wheel></sp-color-wheel>\n    `;\n};\nexport const StepSize = () => {\n  return html`\n        <div style=\"display: flex; gap: 20px; align-items: center;\">\n            <div style=\"text-align: center;\">\n                <sp-color-wheel step=\"0.5\"></sp-color-wheel>\n                <p style=\"margin: 8px 0 0 0; font-size: 14px; color: #666;\">\n                    Step: 0.5°\n                </p>\n            </div>\n            <div style=\"text-align: center;\">\n                <sp-color-wheel step=\"1\"></sp-color-wheel>\n                <p style=\"margin: 8px 0 0 0; font-size: 14px; color: #666;\">\n                    Step: 1°\n                </p>\n            </div>\n            <div style=\"text-align: center;\">\n                <sp-color-wheel step=\"10\"></sp-color-wheel>\n                <p style=\"margin: 8px 0 0 0; font-size: 14px; color: #666;\">\n                    Step: 10°\n                </p>\n            </div>\n            <div style=\"text-align: center;\">\n                <sp-color-wheel step=\"50\"></sp-color-wheel>\n                <p style=\"margin: 8px 0 0 0; font-size: 14px; color: #666;\">\n                    Step: 50°\n                </p>\n            </div>\n        </div>\n    `;\n};\nexport const sized = () => {\n  return html`\n        <sp-color-wheel style=\"width: 300px; height: 300px;\"></sp-color-wheel>\n    `;\n};\nexport const wheelDisabled = () => {\n  return html`\n        <sp-color-wheel disabled></sp-color-wheel>\n    `;\n};\nexport const canvas = () => {\n  return html`\n        <sp-color-wheel>\n            <canvas slot=\"gradient\"></canvas>\n        </sp-color-wheel>\n    `;\n};\nclass CanvasWriter extends HTMLElement {\n  constructor() {\n    super();\n    this.writeStatePromise = Promise.resolve(false);\n    this.writeStatePromise = new Promise((res) => {\n      requestAnimationFrame(() => {\n        this.writeToCanvas();\n        res(true);\n      });\n    });\n  }\n  writeToCanvas() {\n    const { previousElementSibling } = this;\n    if (previousElementSibling) {\n      const canvas2 = previousElementSibling.querySelector(\n        'canvas[slot=\"gradient\"]'\n      );\n      if (canvas2) {\n        canvas2.width = canvas2.offsetWidth;\n        canvas2.height = canvas2.offsetHeight;\n        const context = canvas2.getContext(\"2d\");\n        if (context) {\n          context.rect(0, 0, canvas2.width, canvas2.height);\n          const width = canvas2.width;\n          const height = canvas2.height;\n          const centerX = width / 2;\n          const centerY = height / 2;\n          const ringSize = centerX - 18;\n          for (let i = 0; i < 360; i += Math.PI / 8) {\n            const rad = i * (2 * Math.PI) / 360;\n            context.strokeStyle = `hsla(${i}, 100%, 50%, 1.0)`;\n            context.beginPath();\n            context.moveTo(\n              centerX + ringSize * Math.cos(rad),\n              centerY + ringSize * Math.sin(rad)\n            );\n            context.lineTo(\n              centerX + centerX * Math.cos(rad),\n              centerY + centerY * Math.sin(rad)\n            );\n            context.stroke();\n          }\n        }\n      }\n    }\n  }\n  get updateComplete() {\n    return this.writeStatePromise;\n  }\n}\ncustomElements.define(\"wheel-canvas-writer\", CanvasWriter);\ncanvas.decorators = [\n  (story) => {\n    return html`\n            ${story()}\n            <wheel-canvas-writer></wheel-canvas-writer>\n        `;\n  }\n];\n//# sourceMappingURL=color-wheel.stories.js.map\n;export const __namedExportsOrder = [\"Default\",\"StepSize\",\"sized\",\"wheelDisabled\",\"canvas\"];","\"use strict\";import{css as r}from\"@spectrum-web-components/base\";const c=r`\n    .opacity-checkerboard{background:repeating-conic-gradient(var(--mod-opacity-checkerboard-light,var(--spectrum-opacity-checkerboard-square-light))0 25%,var(--mod-opacity-checkerboard-dark,var(--spectrum-opacity-checkerboard-square-dark))0 50%)0 0/calc(var(--mod-opacity-checkerboard-size,var(--spectrum-opacity-checkerboard-square-size))*2)calc(var(--mod-opacity-checkerboard-size,var(--spectrum-opacity-checkerboard-square-size))*2)}@supports (background:repeating-conic-gradient(from 0deg, red 0deg, red 0deg 1deg, red 2deg)){.opacity-checkerboard{background:repeating-conic-gradient(var(--mod-opacity-checkerboard-light,var(--spectrum-opacity-checkerboard-square-light))0 25%,var(--mod-opacity-checkerboard-dark,var(--spectrum-opacity-checkerboard-square-dark))0 50%)var(--mod-opacity-checkerboard-position,left top)/calc(var(--mod-opacity-checkerboard-size,var(--spectrum-opacity-checkerboard-square-size))*2)calc(var(--mod-opacity-checkerboard-size,var(--spectrum-opacity-checkerboard-square-size))*2)}}@media (forced-colors:active){.opacity-checkerboard{forced-color-adjust:none}}\n`;export default c;\n//# sourceMappingURL=opacity-checkerboard.css.js.map\n"],"names":[],"sourceRoot":""}