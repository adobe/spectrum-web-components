{"version":3,"file":"search-stories-search-sizes-stories.104bbb93.iframe.bundle.js","mappings":";;AACA;AAgCA;;AAEA;;AAGA;;ACrCA;;AAyEA;;AAEA;AACA;AACA;AACA;;;AAGA;;;AAGA;AACA;;;;;;AAMA;AACA;;AAEA;;AAGA;ACpFA;;;AAGA;AACA;;;;AAMA","sources":["webpack://@adobe/spectrum-web-components/./packages/help-text/src/HelpText.dev.js","webpack://@adobe/spectrum-web-components/./packages/search/src/Search.dev.js","webpack://@adobe/spectrum-web-components/./packages/search/stories/search-sizes.stories.js"],"sourcesContent":["\"use strict\";\nvar __defProp = Object.defineProperty;\nvar __getOwnPropDesc = Object.getOwnPropertyDescriptor;\nvar __decorateClass = (decorators, target, key, kind) => {\n  var result = kind > 1 ? void 0 : kind ? __getOwnPropDesc(target, key) : target;\n  for (var i = decorators.length - 1, decorator; i >= 0; i--)\n    if (decorator = decorators[i])\n      result = (kind ? decorator(target, key, result) : decorator(result)) || result;\n  if (kind && result) __defProp(target, key, result);\n  return result;\n};\nimport {\n  html,\n  nothing,\n  SizedMixin,\n  SpectrumElement\n} from \"@spectrum-web-components/base\";\nimport { property } from \"@spectrum-web-components/base/src/decorators.js\";\nimport \"@spectrum-web-components/icons-workflow/icons/sp-icon-alert.js\";\nimport styles from \"./help-text.css.js\";\nexport class HelpText extends SizedMixin(SpectrumElement, {\n  noDefaultSize: true\n}) {\n  constructor() {\n    super(...arguments);\n    this.icon = false;\n    this.variant = \"neutral\";\n  }\n  static get styles() {\n    return [styles];\n  }\n  render() {\n    return html`\n            ${this.variant === \"negative\" && this.icon ? html`\n                      <sp-icon-alert class=\"icon\"></sp-icon-alert>\n                  ` : nothing}\n            <div class=\"text\"><slot></slot></div>\n        `;\n  }\n}\n__decorateClass([\n  property({ type: Boolean, reflect: true })\n], HelpText.prototype, \"icon\", 2);\n__decorateClass([\n  property({ reflect: true })\n], HelpText.prototype, \"variant\", 2);\n//# sourceMappingURL=HelpText.dev.js.map\n","\"use strict\";\nvar __defProp = Object.defineProperty;\nvar __getOwnPropDesc = Object.getOwnPropertyDescriptor;\nvar __decorateClass = (decorators, target, key, kind) => {\n  var result = kind > 1 ? void 0 : kind ? __getOwnPropDesc(target, key) : target;\n  for (var i = decorators.length - 1, decorator; i >= 0; i--)\n    if (decorator = decorators[i])\n      result = (kind ? decorator(target, key, result) : decorator(result)) || result;\n  if (kind && result) __defProp(target, key, result);\n  return result;\n};\nimport {\n  html,\n  nothing\n} from \"@spectrum-web-components/base\";\nimport {\n  property,\n  query\n} from \"@spectrum-web-components/base/src/decorators.js\";\nimport { ifDefined } from \"@spectrum-web-components/base/src/directives.js\";\nimport { Textfield } from \"@spectrum-web-components/textfield\";\nimport \"@spectrum-web-components/button/sp-clear-button.js\";\nimport \"@spectrum-web-components/icons-workflow/icons/sp-icon-search.js\";\nimport searchStyles from \"./search.css.js\";\nconst stopPropagation = (event) => event.stopPropagation();\nexport class Search extends Textfield {\n  constructor() {\n    super(...arguments);\n    this.action = \"\";\n    this.label = \"Search\";\n    this.placeholder = \"Search\";\n  }\n  static get styles() {\n    return [...super.styles, searchStyles];\n  }\n  handleSubmit(event) {\n    const applyDefault = this.dispatchEvent(\n      new Event(\"submit\", {\n        cancelable: true,\n        bubbles: true\n      })\n    );\n    if (!applyDefault) {\n      event.preventDefault();\n    }\n  }\n  handleKeydown(event) {\n    const { code } = event;\n    if (code === \"Escape\" && this.holdValueOnEscape) {\n      return;\n    }\n    if (!this.value || code !== \"Escape\") {\n      return;\n    }\n    this.reset();\n  }\n  async reset() {\n    this.value = \"\";\n    await this.updateComplete;\n    this.focusElement.dispatchEvent(\n      new InputEvent(\"input\", {\n        bubbles: true,\n        composed: true\n      })\n    );\n    this.focusElement.dispatchEvent(\n      new InputEvent(\"change\", {\n        bubbles: true\n      })\n    );\n  }\n  renderField() {\n    return html`\n            <form\n                action=${this.action}\n                id=\"form\"\n                method=${ifDefined(this.method)}\n                @submit=${this.handleSubmit}\n                @reset=${this.reset}\n                @keydown=${this.handleKeydown}\n            >\n                <sp-icon-search\n                    size=${this.size}\n                    class=\"icon magnifier icon-workflow icon-search\"\n                ></sp-icon-search>\n                ${super.renderField()}\n                ${this.value ? html`\n                          <sp-clear-button\n                              id=\"button\"\n                              label=\"Reset\"\n                              tabindex=\"-1\"\n                              type=\"reset\"\n                              size=${ifDefined(this.size)}\n                              @keydown=${stopPropagation}\n                          ></sp-clear-button>\n                      ` : nothing}\n            </form>\n        `;\n  }\n  firstUpdated(changedProperties) {\n    super.firstUpdated(changedProperties);\n    if (!this.hasAttribute(\"holdValueOnEscape\")) {\n      this.inputElement.setAttribute(\"type\", \"search\");\n    }\n  }\n  willUpdate() {\n    this.multiline = false;\n  }\n}\n__decorateClass([\n  property()\n], Search.prototype, \"action\", 2);\n__decorateClass([\n  property()\n], Search.prototype, \"label\", 2);\n__decorateClass([\n  property()\n], Search.prototype, \"method\", 2);\n__decorateClass([\n  property()\n], Search.prototype, \"placeholder\", 2);\n__decorateClass([\n  property({ type: Boolean })\n], Search.prototype, \"holdValueOnEscape\", 2);\n__decorateClass([\n  query(\"#form\")\n], Search.prototype, \"form\", 2);\n//# sourceMappingURL=Search.dev.js.map\n","\"use strict\";\nimport { html } from \"@spectrum-web-components/base\";\nimport \"@spectrum-web-components/search/sp-search.js\";\nimport \"@spectrum-web-components/field-label/sp-field-label.js\";\nimport \"@spectrum-web-components/help-text/sp-help-text.js\";\nimport { ifDefined } from \"@spectrum-web-components/base/src/directives.js\";\nexport default {\n  component: \"sp-search\",\n  title: \"Search/Sizes\"\n};\nconst template = ({\n  size\n} = {}) => {\n  return html`\n        <sp-field-label for=\"name\" size=${ifDefined(size)}>\n            What would you like to find?\n        </sp-field-label>\n        <sp-search id=\"name\" size=${ifDefined(size)} value=\"Sized Search\">\n            <sp-help-text size=${ifDefined(size)} slot=\"help-text\">\n                Anything within reason...\n            </sp-help-text>\n        </sp-search>\n    `;\n};\nexport const s = () => template({ size: \"s\" });\nexport const noSize = () => template();\nexport const m = () => template({ size: \"m\" });\nexport const l = () => template({ size: \"l\" });\nexport const XL = () => template({ size: \"xl\" });\n//# sourceMappingURL=search-sizes.stories.js.map\n;export const __namedExportsOrder = [\"s\",\"noSize\",\"m\",\"l\",\"XL\"];"],"names":[],"sourceRoot":""}