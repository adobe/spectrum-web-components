{"version":3,"file":"6053.c1b0c43d.iframe.bundle.js","mappings":";;;AAiDA;;;;AAIA;AACA;;;;AAIA;;;;AAIA;;AAIA;;AAOA;AACA;AACA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AAIA;;AAEA;;;;AAIA;;AAEA;AAEA;;ACnGA;;;;;AAqBA;;;;;;;;;;;AAwCA;;;;;AAvBA;;;;;;;;;;;AAwBA;;AA9CA;;AChBA;;AA+KA;;AAGA;AAGA;;;AAGA;;;AAIA;AAGA;;;AAGA;;;AAIA;;AAmBA;;;AAIA;AAIA;AACA;;;AAGA;AACA;AACA;;;AAGA;;;;AAIA;;AAEA;;AAEA;;AAEA;;AAEA;AAIA;;AAEA;AACA;;;AAGA;;;;AAIA;AACA;;;AAGA;;;;AAIA;AACA;;;AAGA;;;;AAIA;;AAGA;;ACtRA;;ACAA;AACA;;AAEA;;;AAGA;;;;;;;;;;;ACRA;;ACEA;AACA;;AAEA;;;AAGA;;;;;;;ACPA;;;;;;;;;AAwCA;;AAIA;AAEA","sources":["webpack://@adobe/spectrum-web-components/./packages/action-menu/src/ActionMenu.dev.js","webpack://@adobe/spectrum-web-components/./packages/asset/src/Asset.dev.js","webpack://@adobe/spectrum-web-components/./packages/card/src/Card.dev.js","webpack://@adobe/spectrum-web-components/./packages/divider/src/divider.css.js","webpack://@adobe/spectrum-web-components/./packages/icons-workflow/src/icons-s2/More.js","webpack://@adobe/spectrum-web-components/./packages/icons-workflow/src/elements/IconMore.js","webpack://@adobe/spectrum-web-components/./packages/icons-workflow/src/icons/More.js","webpack://@adobe/spectrum-web-components/./packages/popover/src/Popover.dev.js"],"sourcesContent":["\"use strict\";\nvar __defProp = Object.defineProperty;\nvar __getOwnPropDesc = Object.getOwnPropertyDescriptor;\nvar __decorateClass = (decorators, target, key, kind) => {\n  var result = kind > 1 ? void 0 : kind ? __getOwnPropDesc(target, key) : target;\n  for (var i = decorators.length - 1, decorator; i >= 0; i--)\n    if (decorator = decorators[i])\n      result = (kind ? decorator(target, key, result) : decorator(result)) || result;\n  if (kind && result) __defProp(target, key, result);\n  return result;\n};\nimport {\n  html\n} from \"@spectrum-web-components/base\";\nimport { state } from \"@spectrum-web-components/base/src/decorators.js\";\nimport { ifDefined } from \"@spectrum-web-components/base/src/directives.js\";\nimport { property } from \"@spectrum-web-components/base/src/decorators.js\";\nimport { DESCRIPTION_ID, PickerBase } from \"@spectrum-web-components/picker\";\nimport \"@spectrum-web-components/action-button/sp-action-button.js\";\nimport { ObserveSlotPresence } from \"@spectrum-web-components/shared/src/observe-slot-presence.js\";\nimport { ObserveSlotText } from \"@spectrum-web-components/shared/src/observe-slot-text.js\";\nimport \"@spectrum-web-components/icons-workflow/icons/sp-icon-more.js\";\nimport actionMenuStyles from \"./action-menu.css.js\";\nimport { SlottableRequestEvent } from \"@spectrum-web-components/overlay/src/slottable-request-event.js\";\nexport class ActionMenu extends ObserveSlotPresence(\n  ObserveSlotText(PickerBase, \"label\"),\n  '[slot=\"label-only\"]'\n) {\n  constructor() {\n    super(...arguments);\n    this.selects = void 0;\n    this.listRole = \"menu\";\n    this.itemRole = \"menuitem\";\n    this.handleSlottableRequest = (event) => {\n      this.dispatchEvent(new SlottableRequestEvent(event.name, event.data));\n    };\n  }\n  static get styles() {\n    return [actionMenuStyles];\n  }\n  get hasLabel() {\n    return this.slotHasContent;\n  }\n  get labelOnly() {\n    return this.slotContentIsPresent;\n  }\n  get buttonContent() {\n    return [\n      html`\n                ${this.labelOnly ? html`` : html`\n                          <slot\n                              name=\"icon\"\n                              slot=\"icon\"\n                              ?icon-only=${!this.hasLabel}\n                              ?hidden=${this.labelOnly}\n                          >\n                              <sp-icon-more\n                                  class=\"icon\"\n                                  size=${this.size}\n                              ></sp-icon-more>\n                          </slot>\n                      `}\n                <slot name=\"label\" ?hidden=${!this.hasLabel}></slot>\n                <slot name=\"label-only\"></slot>\n            `\n    ];\n  }\n  render() {\n    if (this.tooltipEl) {\n      this.tooltipEl.disabled = this.open;\n    }\n    return html`\n            <sp-action-button\n                aria-describedby=${DESCRIPTION_ID}\n                ?quiet=${this.quiet}\n                ?selected=${this.open}\n                static-color=${ifDefined(this.staticColor)}\n                aria-haspopup=\"true\"\n                aria-controls=${ifDefined(this.open ? \"menu\" : void 0)}\n                aria-expanded=${this.open ? \"true\" : \"false\"}\n                aria-label=${ifDefined(this.label || void 0)}\n                id=\"button\"\n                class=\"button\"\n                size=${this.size}\n                @blur=${this.handleButtonBlur}\n                @focus=${this.handleButtonFocus}\n                @keydown=${{\n      handleEvent: this.handleEnterKeydown,\n      capture: true\n    }}\n                ?disabled=${this.disabled}\n            >\n                ${this.buttonContent}\n            </sp-action-button>\n            <slot\n                name=\"tooltip\"\n                @slotchange=${this.handleTooltipSlotchange}\n            ></slot>\n            ${this.renderMenu} ${this.renderDescriptionSlot}\n        `;\n  }\n  update(changedProperties) {\n    if (changedProperties.has(\"invalid\")) {\n      this.invalid = false;\n    }\n    super.update(changedProperties);\n  }\n  hasAccessibleLabel() {\n    return !!this.label || !!this.getAttribute(\"aria-label\") || !!this.getAttribute(\"aria-labelledby\") || !!this.appliedLabel || this.hasLabel || this.labelOnly;\n  }\n  warnNoLabel() {\n    window.__swc.warn(\n      this,\n      `<${this.localName}> needs one of the following to be accessible:`,\n      \"https://opensource.adobe.com/spectrum-web-components/components/action-menu/#accessibility\",\n      {\n        type: \"accessibility\",\n        issues: [\n          `an <sp-field-label> element with a \\`for\\` attribute referencing the \\`id\\` of the \\`<${this.localName}>\\`, or`,\n          'value supplied to the \"label\" attribute, which will be displayed visually as placeholder text',\n          'text content supplied in a <span> with slot=\"label\", or, text content supplied in a <span> with slot=\"label-only\"',\n          \"which will also be displayed visually as placeholder text.\"\n        ]\n      }\n    );\n  }\n}\n__decorateClass([\n  property({ type: String })\n], ActionMenu.prototype, \"selects\", 2);\n__decorateClass([\n  property({ reflect: true, attribute: \"static-color\" })\n], ActionMenu.prototype, \"staticColor\", 2);\n__decorateClass([\n  state()\n], ActionMenu.prototype, \"labelOnly\", 1);\n//# sourceMappingURL=ActionMenu.dev.js.map\n","\"use strict\";\nvar __defProp = Object.defineProperty;\nvar __getOwnPropDesc = Object.getOwnPropertyDescriptor;\nvar __decorateClass = (decorators, target, key, kind) => {\n  var result = kind > 1 ? void 0 : kind ? __getOwnPropDesc(target, key) : target;\n  for (var i = decorators.length - 1, decorator; i >= 0; i--)\n    if (decorator = decorators[i])\n      result = (kind ? decorator(target, key, result) : decorator(result)) || result;\n  if (kind && result) __defProp(target, key, result);\n  return result;\n};\nimport {\n  html,\n  SpectrumElement\n} from \"@spectrum-web-components/base\";\nimport { property } from \"@spectrum-web-components/base/src/decorators.js\";\nimport styles from \"./asset.css.js\";\nconst file = (label) => html`\n    <svg\n        class=\"file\"\n        role=\"img\"\n        viewBox=\"0 0 128 128\"\n        aria-label=${label || \"File\"}\n    >\n        <path\n            class=\"fileBackground\"\n            d=\"M24,126c-5.5,0-10-4.5-10-10V12c0-5.5,4.5-10,10-10h61.5c2.1,0,4.1,0.8,5.6,2.3l20.5,20.4c1.5,1.5,2.4,3.5,2.4,5.7V116c0,5.5-4.5,10-10,10H24z\"\n        ></path>\n        <path\n            class=\"fileOutline\"\n            d=\"M113.1,23.3L92.6,2.9C90.7,1,88.2,0,85.5,0H24c-6.6,0-12,5.4-12,12v104c0,6.6,5.4,12,12,12h80c6.6,0,12-5.4,12-12V30.4C116,27.8,114.9,25.2,113.1,23.3z M90,6l20.1,20H92c-1.1,0-2-0.9-2-2V6z M112,116c0,4.4-3.6,8-8,8H24c-4.4,0-8-3.6-8-8V12c0-4.4,3.6-8,8-8h61.5c0.2,0,0.3,0,0.5,0v20c0,3.3,2.7,6,6,6h20c0,0.1,0,0.3,0,0.4V116z\"\n        ></path>\n    </svg>\n`;\nconst folder = (label) => html`\n    <svg\n        class=\"folder\"\n        role=\"img\"\n        viewBox=\"0 0 32 32\"\n        aria-label=${label || \"Folder\"}\n    >\n        <path\n            class=\"folderBackground\"\n            d=\"M3,29.5c-1.4,0-2.5-1.1-2.5-2.5V5c0-1.4,1.1-2.5,2.5-2.5h10.1c0.5,0,1,0.2,1.4,0.6l3.1,3.1c0.2,0.2,0.4,0.3,0.7,0.3H29c1.4,0,2.5,1.1,2.5,2.5v18c0,1.4-1.1,2.5-2.5,2.5H3z\"\n        ></path>\n        <path\n            class=\"folderOutline\"\n            d=\"M29,6H18.3c-0.1,0-0.2,0-0.4-0.2l-3.1-3.1C14.4,2.3,13.8,2,13.1,2H3C1.3,2,0,3.3,0,5v22c0,1.6,1.3,3,3,3h26c1.7,0,3-1.4,3-3V9C32,7.3,30.7,6,29,6z M31,27c0,1.1-0.9,2-2,2H3c-1.1,0-2-0.9-2-2V7h28c1.1,0,2,0.9,2,2V27z\"\n        ></path>\n    </svg>\n`;\nexport class Asset extends SpectrumElement {\n  constructor() {\n    super(...arguments);\n    this.label = \"\";\n  }\n  static get styles() {\n    return [styles];\n  }\n  render() {\n    if (this.variant === \"file\") {\n      return file(this.label);\n    } else if (this.variant === \"folder\") {\n      return folder(this.label);\n    }\n    return html`\n            <slot></slot>\n        `;\n  }\n}\n__decorateClass([\n  property({ type: String, reflect: true })\n], Asset.prototype, \"variant\", 2);\n__decorateClass([\n  property()\n], Asset.prototype, \"label\", 2);\n//# sourceMappingURL=Asset.dev.js.map\n","\"use strict\";\nvar __defProp = Object.defineProperty;\nvar __getOwnPropDesc = Object.getOwnPropertyDescriptor;\nvar __decorateClass = (decorators, target, key, kind) => {\n  var result = kind > 1 ? void 0 : kind ? __getOwnPropDesc(target, key) : target;\n  for (var i = decorators.length - 1, decorator; i >= 0; i--)\n    if (decorator = decorators[i])\n      result = (kind ? decorator(target, key, result) : decorator(result)) || result;\n  if (kind && result) __defProp(target, key, result);\n  return result;\n};\nimport {\n  html,\n  nothing,\n  SizedMixin,\n  SpectrumElement\n} from \"@spectrum-web-components/base\";\nimport { ifDefined } from \"@spectrum-web-components/base/src/directives.js\";\nimport {\n  property,\n  query\n} from \"@spectrum-web-components/base/src/decorators.js\";\nimport { FocusVisiblePolyfillMixin } from \"@spectrum-web-components/shared/src/focus-visible.js\";\nimport { ObserveSlotPresence } from \"@spectrum-web-components/shared/src/observe-slot-presence.js\";\nimport { LikeAnchor } from \"@spectrum-web-components/shared/src/like-anchor.js\";\nimport \"@spectrum-web-components/asset/sp-asset.js\";\nimport \"@spectrum-web-components/checkbox/sp-checkbox.js\";\nimport \"@spectrum-web-components/popover/sp-popover.js\";\nimport \"@spectrum-web-components/divider/sp-divider.js\";\nimport cardStyles from \"./card.css.js\";\nexport class Card extends LikeAnchor(\n  SizedMixin(\n    ObserveSlotPresence(FocusVisiblePolyfillMixin(SpectrumElement), [\n      '[slot=\"cover-photo\"]',\n      '[slot=\"preview\"]'\n    ]),\n    {\n      validSizes: [\"s\", \"m\"],\n      noDefaultSize: true\n    }\n  )\n) {\n  constructor() {\n    super(...arguments);\n    this.variant = \"standard\";\n    this._selected = false;\n    this.heading = \"\";\n    this.horizontal = false;\n    this.focused = false;\n    this.toggles = false;\n    this.value = \"\";\n    this.subheading = \"\";\n    this.handleFocusin = (event) => {\n      this.focused = true;\n      const target = event.composedPath()[0];\n      if (target !== this) {\n        this.removeEventListener(\"keydown\", this.handleKeydown);\n        return;\n      }\n      this.addEventListener(\"keydown\", this.handleKeydown);\n    };\n  }\n  static get styles() {\n    return [cardStyles];\n  }\n  get selected() {\n    return this._selected;\n  }\n  set selected(selected) {\n    if (selected === this.selected) return;\n    this._selected = selected;\n    if (this.role === \"row\" && this.toggles) {\n      this.setAttribute(\"aria-selected\", String(this.selected));\n    }\n    this.requestUpdate(\"selected\", !this._selected);\n  }\n  get hasCoverPhoto() {\n    return this.getSlotContentPresence('[slot=\"cover-photo\"]');\n  }\n  get hasPreview() {\n    return this.getSlotContentPresence('[slot=\"preview\"]');\n  }\n  click() {\n    var _a;\n    (_a = this.likeAnchor) == null ? void 0 : _a.click();\n  }\n  handleFocusout(event) {\n    this.focused = false;\n    const target = event.composedPath()[0];\n    if (target === this) {\n      this.removeEventListener(\"keydown\", this.handleKeydown);\n    }\n  }\n  handleKeydown(event) {\n    const { code } = event;\n    switch (code) {\n      case \"Space\":\n        this.toggleSelected();\n        if (this.toggles) {\n          event.preventDefault();\n          break;\n        }\n      case \"Enter\":\n      case \"NumpadEnter\":\n        this.click();\n    }\n  }\n  handleSelectedChange(event) {\n    event.stopPropagation();\n    this.selected = event.target.checked;\n    this.announceChange();\n  }\n  toggleSelected() {\n    if (!this.toggles) {\n      this.dispatchEvent(\n        new Event(\"click\", {\n          bubbles: true,\n          composed: true\n        })\n      );\n      return;\n    }\n    this.selected = !this.selected;\n    this.announceChange();\n  }\n  announceChange() {\n    const applyDefault = this.dispatchEvent(\n      new Event(\"change\", {\n        cancelable: true,\n        bubbles: true,\n        composed: true\n      })\n    );\n    if (!applyDefault) {\n      this.selected = !this.selected;\n    }\n  }\n  stopPropagationOnHref(event) {\n    if (this.href) {\n      event.stopPropagation();\n    }\n  }\n  /**\n   * Handles pointer down events on the card element.\n   * Implements a click detection system that distinguishes between clicks and drags\n   * based on duration and movement distance.\n   */\n  handlePointerdown(event) {\n    const path = event.composedPath();\n    const hasAnchor = path.some(\n      (el) => el.localName === \"a\"\n    );\n    if (hasAnchor) return;\n    const startTime = event.timeStamp;\n    const startX = event.clientX;\n    const startY = event.clientY;\n    const handleEnd = (endEvent) => {\n      const endTime = endEvent.timeStamp;\n      const endX = endEvent.clientX;\n      const endY = endEvent.clientY;\n      const timeDelta = endTime - startTime;\n      const moveX = Math.abs(endX - startX);\n      const moveY = Math.abs(endY - startY);\n      const moved = moveX > 10 || moveY > 10;\n      if (timeDelta < 200 && !moved) {\n        this.click();\n      }\n      this.removeEventListener(\"pointerup\", handleEnd);\n      this.removeEventListener(\"pointercancel\", handleEnd);\n    };\n    this.addEventListener(\"pointerup\", handleEnd);\n    this.addEventListener(\"pointercancel\", handleEnd);\n  }\n  get renderHeading() {\n    return html`\n            <div class=\"title\" id=\"heading\">\n                <slot name=\"heading\">${this.heading}</slot>\n            </div>\n        `;\n  }\n  get renderPreviewImage() {\n    return html`\n            <sp-asset id=\"preview\" variant=${ifDefined(this.asset)}>\n                <slot name=\"preview\"></slot>\n            </sp-asset>\n            ${this.variant !== \"quiet\" && !this.horizontal ? html`\n                      <sp-divider size=\"s\"></sp-divider>\n                  ` : nothing}\n        `;\n  }\n  get renderCoverImage() {\n    return html`\n            <sp-asset id=\"cover-photo\" variant=${ifDefined(this.asset)}>\n                <slot name=\"cover-photo\"></slot>\n            </sp-asset>\n            ${this.variant !== \"quiet\" && !this.horizontal ? html`\n                      <sp-divider size=\"s\"></sp-divider>\n                  ` : nothing}\n        `;\n  }\n  get images() {\n    const images = [];\n    if (this.hasPreview) images.push(this.renderPreviewImage);\n    if (this.hasCoverPhoto) images.push(this.renderCoverImage);\n    return images;\n  }\n  renderImage() {\n    if (this.horizontal) {\n      return this.images;\n    }\n    if (this.variant !== \"standard\") {\n      return [this.renderPreviewImage];\n    }\n    return this.images;\n  }\n  get renderSubtitleAndDescription() {\n    return html`\n            <div class=\"subtitle\">\n                <slot name=\"subheading\">${this.subheading}</slot>\n            </div>\n            <slot name=\"description\"></slot>\n        `;\n  }\n  render() {\n    const roleForWrapper = this.role === \"row\" ? \"gridcell\" : void 0;\n    return html`\n            <div class=\"wrapper\" role=${ifDefined(roleForWrapper)}>\n                ${this.renderImage()}\n                <div class=\"body\">\n                    <div class=\"header\">\n                        ${this.renderHeading}\n                        ${this.variant === \"gallery\" ? this.renderSubtitleAndDescription : nothing}\n                        ${this.variant !== \"quiet\" || this.size !== \"s\" ? html`\n                                  <div\n                                      class=\"action-button\"\n                                      @pointerdown=${this.stopPropagationOnHref}\n                                  >\n                                      <slot name=\"actions\"></slot>\n                                  </div>\n                              ` : nothing}\n                    </div>\n                    ${this.variant !== \"gallery\" ? html`\n                              <div class=\"content\">\n                                  ${this.renderSubtitleAndDescription}\n                              </div>\n                          ` : nothing}\n                </div>\n                ${this.href ? this.renderAnchor({\n      id: \"like-anchor\",\n      labelledby: \"heading\"\n    }) : nothing}\n                ${this.variant === \"standard\" ? html`\n                          <slot name=\"footer\"></slot>\n                      ` : nothing}\n                ${this.toggles ? html`\n                          <sp-popover\n                              class=\"checkbox-toggle\"\n                              @pointerdown=${this.stopPropagationOnHref}\n                          >\n                              <sp-checkbox\n                                  class=\"checkbox\"\n                                  @change=${this.handleSelectedChange}\n                                  .checked=${this.selected}\n                              >\n                                  <span class=\"sr-only\">\n                                      ${this.label || this.heading}\n                                  </span>\n                              </sp-checkbox>\n                          </sp-popover>\n                      ` : nothing}\n                ${this.variant === \"quiet\" && this.size === \"s\" ? html`\n                          <div\n                              class=\"spectrum-QuickActions actions\"\n                              @pointerdown=${this.stopPropagationOnHref}\n                          >\n                              <slot name=\"actions\"></slot>\n                          </div>\n                      ` : nothing}\n            </div>\n        `;\n  }\n  firstUpdated(changes) {\n    super.firstUpdated(changes);\n    if (changes.has(\"label\")) {\n      if (this.label) {\n        this.setAttribute(\"aria-label\", this.label);\n      } else {\n        this.removeAttribute(\"aria-label\");\n      }\n    }\n    this.addEventListener(\"pointerdown\", this.handlePointerdown);\n    this.addEventListener(\"focusin\", this.handleFocusin);\n    this.shadowRoot.addEventListener(\"focusin\", this.handleFocusin);\n    this.addEventListener(\"focusout\", this.handleFocusout);\n  }\n  update(changes) {\n    super.update(changes);\n    if (changes.has(\"label\")) {\n      if (this.label) {\n        this.setAttribute(\"aria-label\", this.label);\n      } else {\n        this.removeAttribute(\"aria-label\");\n      }\n    }\n  }\n}\n__decorateClass([\n  property()\n], Card.prototype, \"asset\", 2);\n__decorateClass([\n  property({ reflect: true })\n], Card.prototype, \"variant\", 2);\n__decorateClass([\n  property({ type: Boolean, reflect: true })\n], Card.prototype, \"selected\", 1);\n__decorateClass([\n  property()\n], Card.prototype, \"heading\", 2);\n__decorateClass([\n  property({ type: Boolean, reflect: true })\n], Card.prototype, \"horizontal\", 2);\n__decorateClass([\n  query(\"#like-anchor\")\n], Card.prototype, \"likeAnchor\", 2);\n__decorateClass([\n  property({ type: Boolean, reflect: true })\n], Card.prototype, \"focused\", 2);\n__decorateClass([\n  property({ type: Boolean, reflect: true })\n], Card.prototype, \"toggles\", 2);\n__decorateClass([\n  property()\n], Card.prototype, \"value\", 2);\n__decorateClass([\n  property()\n], Card.prototype, \"subheading\", 2);\n//# sourceMappingURL=Card.dev.js.map\n","\"use strict\";import{css as r}from\"@spectrum-web-components/base\";const i=r`\n    @media (forced-colors:active){:host{--highcontrast-divider-background-color:CanvasText}}:host{--spectrum-divider-thickness:var(--spectrum-divider-thickness-medium)}:host([size=s]){--spectrum-divider-thickness:var(--spectrum-divider-thickness-small)}:host([size=l]){--spectrum-divider-thickness:var(--spectrum-divider-thickness-large);--spectrum-divider-background-color:var(--spectrum-gray-800)}:host([static-color=white]){--mod-divider-background-color:var(--mod-divider-background-color-medium-static-white,var(--spectrum-divider-background-color-static-white))}:host([static-color=white][size=s]){--mod-divider-background-color:var(--mod-divider-background-color-small-static-white,var(--spectrum-divider-background-color-static-white))}:host([static-color=white][size=l]){--mod-divider-background-color:var(--mod-divider-background-color-large-static-white,var(--spectrum-transparent-white-800))}:host([static-color=black]){--mod-divider-background-color:var(--mod-divider-background-color-medium-static-black,var(--spectrum-divider-background-color-static-black))}:host([static-color=black][size=s]){--mod-divider-background-color:var(--mod-divider-background-color-small-static-black,var(--spectrum-divider-background-color-static-black))}:host([static-color=black][size=l]){--mod-divider-background-color:var(--mod-divider-background-color-large-static-black,var(--spectrum-transparent-black-800))}:host{block-size:var(--mod-divider-thickness,var(--spectrum-divider-thickness));inline-size:100%;border:none;border-width:var(--mod-divider-thickness,var(--spectrum-divider-thickness));border-radius:var(--mod-divider-thickness,var(--spectrum-divider-thickness));background-color:var(--highcontrast-divider-background-color,var(--mod-divider-background-color,var(--spectrum-divider-background-color)));overflow:visible}:host([vertical]){inline-size:var(--mod-divider-thickness,var(--spectrum-divider-thickness));block-size:100%;block-size:var(--mod-divider-vertical-height,100%);margin-block:var(--mod-divider-vertical-margin);align-self:var(--mod-divider-vertical-align)}:host{--spectrum-divider-background-color:var(--system-divider-background-color);--spectrum-divider-background-color-static-white:var(--system-divider-background-color-static-white);--spectrum-divider-background-color-static-black:var(--system-divider-background-color-static-black)}:host{display:block}hr{border:none;margin:0}\n`;export default i;\n//# sourceMappingURL=divider.css.js.map\n","\"use strict\";import{tag as t}from\"../custom-tag.js\";export{setCustomTemplateLiteralTag}from\"../custom-tag.js\";export const MoreIcon=({width:r=24,height:l=24,hidden:e=!1,title:c=\"More\"}={})=>t`<svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    width=\"${r}\"\n    height=\"${l}\"\n    viewBox=\"0 0 20 20\"\n    aria-hidden=${e?\"true\":\"false\"}\n    role=\"img\"\n    fill=\"currentColor\"\n    aria-label=\"${c}\"\n  >\n    <circle cx=\"10\" cy=\"10.02114\" r=\"1.5\" fill=\"currentColor\" />\n    <path\n      d=\"m10,8.5c-.82843,0-1.5.67157-1.5,1.5s.67157,1.5,1.5,1.5,1.5-.67157,1.5-1.5-.67157-1.5-1.5-1.5Z\"\n      fill=\"currentColor\"\n    />\n    <circle cx=\"4\" cy=\"10.02114\" r=\"1.5\" fill=\"currentColor\" />\n    <circle cx=\"4\" cy=\"10\" r=\"1.5\" fill=\"currentColor\" />\n    <circle cx=\"16\" cy=\"10.02114\" r=\"1.5\" fill=\"currentColor\" />\n    <circle cx=\"16\" cy=\"10\" r=\"1.5\" fill=\"currentColor\" />\n  </svg>`;\n//# sourceMappingURL=More.js.map\n","\"use strict\";import{html as e}from\"@spectrum-web-components/base\";import{IconBase as t}from\"@spectrum-web-components/icon\";import{setCustomTemplateLiteralTag as r}from\"../custom-tag.js\";import{MoreIcon as o}from\"../icons-s2/More.js\";import{MoreIcon as l}from\"../icons/More.js\";export class IconMore extends t{render(){return r(e),this.spectrumVersion===2?o({hidden:!this.label,title:this.label}):l({hidden:!this.label,title:this.label})}}\n//# sourceMappingURL=IconMore.js.map\n","\"use strict\";import{tag as c}from\"../custom-tag.js\";export{setCustomTemplateLiteralTag}from\"../custom-tag.js\";export const MoreIcon=({width:e=24,height:r=24,hidden:t=!1,title:l=\"More\"}={})=>c`<svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    width=\"${e}\"\n    height=\"${r}\"\n    viewBox=\"0 0 36 36\"\n    aria-hidden=${t?\"true\":\"false\"}\n    role=\"img\"\n    fill=\"currentColor\"\n    aria-label=\"${l}\"\n  >\n    <circle cx=\"17.8\" cy=\"18.2\" r=\"3.4\" />\n    <circle cx=\"29.5\" cy=\"18.2\" r=\"3.4\" />\n    <circle cx=\"6.1\" cy=\"18.2\" r=\"3.4\" />\n  </svg>`;\n//# sourceMappingURL=More.js.map\n","\"use strict\";\nvar __defProp = Object.defineProperty;\nvar __getOwnPropDesc = Object.getOwnPropertyDescriptor;\nvar __decorateClass = (decorators, target, key, kind) => {\n  var result = kind > 1 ? void 0 : kind ? __getOwnPropDesc(target, key) : target;\n  for (var i = decorators.length - 1, decorator; i >= 0; i--)\n    if (decorator = decorators[i])\n      result = (kind ? decorator(target, key, result) : decorator(result)) || result;\n  if (kind && result) __defProp(target, key, result);\n  return result;\n};\nimport {\n  html,\n  nothing,\n  SpectrumElement\n} from \"@spectrum-web-components/base\";\nimport {\n  property,\n  query\n} from \"@spectrum-web-components/base/src/decorators.js\";\nimport popoverStyles from \"./popover.css.js\";\nexport class Popover extends SpectrumElement {\n  constructor() {\n    super(...arguments);\n    this.open = false;\n    this.tip = false;\n  }\n  static get styles() {\n    return [popoverStyles];\n  }\n  renderTip() {\n    return html`\n            <div id=\"tip\" aria-hidden=\"true\">\n                <svg class=\"tip block\" viewBox=\"0 -0.5 16 9\">\n                    <path class=\"triangle\" d=\"M-1,-1 8,8 17,-1\"></path>\n                </svg>\n                <svg class=\"tip inline\" viewBox=\"0 -0.5 9 16\">\n                    <path class=\"triangle\" d=\"M-1,-1 8,8 -1,17\"></path>\n                </svg>\n            </div>\n        `;\n  }\n  render() {\n    return html`\n            <slot></slot>\n            ${this.tip ? this.renderTip() : nothing}\n        `;\n  }\n}\n__decorateClass([\n  property({ type: Boolean, reflect: true })\n], Popover.prototype, \"open\", 2);\n__decorateClass([\n  property({ reflect: true })\n], Popover.prototype, \"placement\", 2);\n__decorateClass([\n  property({ type: Boolean, reflect: true })\n], Popover.prototype, \"tip\", 2);\n__decorateClass([\n  query(\"#tip\")\n], Popover.prototype, \"tipElement\", 2);\n//# sourceMappingURL=Popover.dev.js.map\n"],"names":[],"sourceRoot":""}