{"version":3,"file":"breadcrumbs-stories-breadcrumbs-stories.5a622eea.iframe.bundle.js","mappings":";;;AAiDA;;;;AAIA;AACA;;;;AAIA;;;;AAIA;;AAIA;;AAOA;AACA;AACA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AAIA;;AAEA;;;;AAIA;;AAEA;AAEA;;ACnGA;;;AAoEA;AACA;AACA;AAGA;AACA;;;;AAKA;;;;;;AASA;AAGA;;AAEA;AAEA;;AC/FA;;;AA2KA;;AAEA;;AAEA;AACA;;;;;;;AAOA;;AAGA;AACA;;AAEA;;;;;AAOA;AAoBA;;AAEA;AACA;;AAGA;AC3MA;AACA;;AAIA;AAMA;AACA;;AAIA;;AAiBA;AACA;AACA;AACA;;;AAGA;;;;;;;;ACNA;AACA;AACA;;AAEA;;AAIA;;AAoBA;AACA;;AAQA;;;AAGA;;;;AAQA;;AAGA;;AAUA;;AAIA;;AAMA;AACA;AACA;;;;;AAKA;;AAIA;;ADhGA;;;;;;;;;;;;;ACsGA;AACA;AACA;;AAEA;;;AAMA;;ACrJA;AACA;;AAEA;;;AAGA;;;;;;ACRA;;ACEA;AACA;;AAEA;;;AAGA;;;;;;;;;;;ACRA;;ACEA;AACA;;AAEA;;;AAGA;;;;;;;;;;ACRA;;ACEA;;AAEA;AACA;;;AAGA;;;;;;;ACNA;AACA;;AAEA;;;AAGA;;;;;;;ACNA;;AAEA;AACA;;;AAGA","sources":["webpack://@adobe/spectrum-web-components/./packages/action-menu/src/ActionMenu.dev.js","webpack://@adobe/spectrum-web-components/./packages/breadcrumbs/src/BreadcrumbItem.dev.js","webpack://@adobe/spectrum-web-components/./packages/breadcrumbs/src/Breadcrumbs.dev.js","webpack://@adobe/spectrum-web-components/./packages/breadcrumbs/stories/template.js","webpack://@adobe/spectrum-web-components/./packages/breadcrumbs/stories/breadcrumbs.stories.js","webpack://@adobe/spectrum-web-components/./packages/icons-workflow/src/icons-s2/FolderOpen.js","webpack://@adobe/spectrum-web-components/./packages/icons-workflow/src/elements/IconFolderOpen.js","webpack://@adobe/spectrum-web-components/./packages/icons-workflow/src/icons-s2/More.js","webpack://@adobe/spectrum-web-components/./packages/icons-workflow/src/elements/IconMore.js","webpack://@adobe/spectrum-web-components/./packages/icons-workflow/src/icons-s2/Settings.js","webpack://@adobe/spectrum-web-components/./packages/icons-workflow/src/elements/IconSettings.js","webpack://@adobe/spectrum-web-components/./packages/icons-workflow/src/icons/FolderOpen.js","webpack://@adobe/spectrum-web-components/./packages/icons-workflow/src/icons/More.js","webpack://@adobe/spectrum-web-components/./packages/icons-workflow/src/icons/Settings.js"],"sourcesContent":["\"use strict\";\nvar __defProp = Object.defineProperty;\nvar __getOwnPropDesc = Object.getOwnPropertyDescriptor;\nvar __decorateClass = (decorators, target, key, kind) => {\n  var result = kind > 1 ? void 0 : kind ? __getOwnPropDesc(target, key) : target;\n  for (var i = decorators.length - 1, decorator; i >= 0; i--)\n    if (decorator = decorators[i])\n      result = (kind ? decorator(target, key, result) : decorator(result)) || result;\n  if (kind && result) __defProp(target, key, result);\n  return result;\n};\nimport {\n  html\n} from \"@spectrum-web-components/base\";\nimport { state } from \"@spectrum-web-components/base/src/decorators.js\";\nimport { ifDefined } from \"@spectrum-web-components/base/src/directives.js\";\nimport { property } from \"@spectrum-web-components/base/src/decorators.js\";\nimport { DESCRIPTION_ID, PickerBase } from \"@spectrum-web-components/picker\";\nimport \"@spectrum-web-components/action-button/sp-action-button.js\";\nimport { ObserveSlotPresence } from \"@spectrum-web-components/shared/src/observe-slot-presence.js\";\nimport { ObserveSlotText } from \"@spectrum-web-components/shared/src/observe-slot-text.js\";\nimport \"@spectrum-web-components/icons-workflow/icons/sp-icon-more.js\";\nimport actionMenuStyles from \"./action-menu.css.js\";\nimport { SlottableRequestEvent } from \"@spectrum-web-components/overlay/src/slottable-request-event.js\";\nexport class ActionMenu extends ObserveSlotPresence(\n  ObserveSlotText(PickerBase, \"label\"),\n  '[slot=\"label-only\"]'\n) {\n  constructor() {\n    super(...arguments);\n    this.selects = void 0;\n    this.listRole = \"menu\";\n    this.itemRole = \"menuitem\";\n    this.handleSlottableRequest = (event) => {\n      this.dispatchEvent(new SlottableRequestEvent(event.name, event.data));\n    };\n  }\n  static get styles() {\n    return [actionMenuStyles];\n  }\n  get hasLabel() {\n    return this.slotHasContent;\n  }\n  get labelOnly() {\n    return this.slotContentIsPresent;\n  }\n  get buttonContent() {\n    return [\n      html`\n                ${this.labelOnly ? html`` : html`\n                          <slot\n                              name=\"icon\"\n                              slot=\"icon\"\n                              ?icon-only=${!this.hasLabel}\n                              ?hidden=${this.labelOnly}\n                          >\n                              <sp-icon-more\n                                  class=\"icon\"\n                                  size=${this.size}\n                              ></sp-icon-more>\n                          </slot>\n                      `}\n                <slot name=\"label\" ?hidden=${!this.hasLabel}></slot>\n                <slot name=\"label-only\"></slot>\n            `\n    ];\n  }\n  render() {\n    if (this.tooltipEl) {\n      this.tooltipEl.disabled = this.open;\n    }\n    return html`\n            <sp-action-button\n                aria-describedby=${DESCRIPTION_ID}\n                ?quiet=${this.quiet}\n                ?selected=${this.open}\n                static-color=${ifDefined(this.staticColor)}\n                aria-haspopup=\"true\"\n                aria-controls=${ifDefined(this.open ? \"menu\" : void 0)}\n                aria-expanded=${this.open ? \"true\" : \"false\"}\n                aria-label=${ifDefined(this.label || void 0)}\n                id=\"button\"\n                class=\"button\"\n                size=${this.size}\n                @blur=${this.handleButtonBlur}\n                @focus=${this.handleButtonFocus}\n                @keydown=${{\n      handleEvent: this.handleEnterKeydown,\n      capture: true\n    }}\n                ?disabled=${this.disabled}\n            >\n                ${this.buttonContent}\n            </sp-action-button>\n            <slot\n                name=\"tooltip\"\n                @slotchange=${this.handleTooltipSlotchange}\n            ></slot>\n            ${this.renderMenu} ${this.renderDescriptionSlot}\n        `;\n  }\n  update(changedProperties) {\n    if (changedProperties.has(\"invalid\")) {\n      this.invalid = false;\n    }\n    super.update(changedProperties);\n  }\n  hasAccessibleLabel() {\n    return !!this.label || !!this.getAttribute(\"aria-label\") || !!this.getAttribute(\"aria-labelledby\") || !!this.appliedLabel || this.hasLabel || this.labelOnly;\n  }\n  warnNoLabel() {\n    window.__swc.warn(\n      this,\n      `<${this.localName}> needs one of the following to be accessible:`,\n      \"https://opensource.adobe.com/spectrum-web-components/components/action-menu/#accessibility\",\n      {\n        type: \"accessibility\",\n        issues: [\n          `an <sp-field-label> element with a \\`for\\` attribute referencing the \\`id\\` of the \\`<${this.localName}>\\`, or`,\n          'value supplied to the \"label\" attribute, which will be displayed visually as placeholder text',\n          'text content supplied in a <span> with slot=\"label\", or, text content supplied in a <span> with slot=\"label-only\"',\n          \"which will also be displayed visually as placeholder text.\"\n        ]\n      }\n    );\n  }\n}\n__decorateClass([\n  property({ type: String })\n], ActionMenu.prototype, \"selects\", 2);\n__decorateClass([\n  property({ reflect: true, attribute: \"static-color\" })\n], ActionMenu.prototype, \"staticColor\", 2);\n__decorateClass([\n  state()\n], ActionMenu.prototype, \"labelOnly\", 1);\n//# sourceMappingURL=ActionMenu.dev.js.map\n","\"use strict\";\nvar __defProp = Object.defineProperty;\nvar __getOwnPropDesc = Object.getOwnPropertyDescriptor;\nvar __decorateClass = (decorators, target, key, kind) => {\n  var result = kind > 1 ? void 0 : kind ? __getOwnPropDesc(target, key) : target;\n  for (var i = decorators.length - 1, decorator; i >= 0; i--)\n    if (decorator = decorators[i])\n      result = (kind ? decorator(target, key, result) : decorator(result)) || result;\n  if (kind && result) __defProp(target, key, result);\n  return result;\n};\nimport {\n  html\n} from \"@spectrum-web-components/base\";\nimport { ifDefined } from \"@spectrum-web-components/base/src/directives.js\";\nimport { property } from \"@spectrum-web-components/base/src/decorators.js\";\nimport { Focusable } from \"@spectrum-web-components/shared/src/focusable.js\";\nimport { LikeAnchor } from \"@spectrum-web-components/shared/src/like-anchor.js\";\nimport chevronStyles from \"@spectrum-web-components/icon/src/spectrum-icon-chevron.css.js\";\nimport \"@spectrum-web-components/icons-ui/icons/sp-icon-chevron100.js\";\nimport styles from \"./breadcrumb-item.css.js\";\nexport class BreadcrumbItem extends LikeAnchor(Focusable) {\n  constructor() {\n    super(...arguments);\n    this.value = void 0;\n    this.isLastOfType = false;\n  }\n  static get styles() {\n    return [styles, chevronStyles];\n  }\n  get focusElement() {\n    return this.shadowRoot.querySelector(\"#item-link\");\n  }\n  connectedCallback() {\n    super.connectedCallback();\n    if (!this.hasAttribute(\"role\")) {\n      this.setAttribute(\"role\", \"listitem\");\n    }\n  }\n  announceSelected(value) {\n    const selectDetail = {\n      value\n    };\n    const selectionEvent = new CustomEvent(\"breadcrumb-select\", {\n      bubbles: true,\n      composed: true,\n      detail: selectDetail\n    });\n    this.dispatchEvent(selectionEvent);\n  }\n  handleClick(event) {\n    if (!this.href && event) {\n      event.preventDefault();\n    }\n    if (!this.href || (event == null ? void 0 : event.defaultPrevented)) {\n      if (this.value && !this.isLastOfType) {\n        this.announceSelected(this.value);\n      }\n    }\n  }\n  handleKeyDown(event) {\n    if (event.key === \"Enter\" || event.keyCode === 13) {\n      this.handleClick(event);\n    }\n  }\n  renderLink() {\n    return html`\n            <a\n                id=\"item-link\"\n                href=${ifDefined(!this.isLastOfType ? this.href : void 0)}\n                tabindex=${0}\n                aria-current=${ifDefined(\n      this.isLastOfType ? \"page\" : void 0\n    )}\n                @keydown=${this.handleKeyDown}\n                @click=${this.handleClick}\n            >\n                <slot></slot>\n            </a>\n        `;\n  }\n  renderSeparator() {\n    return html`\n            <sp-icon-chevron100\n                id=\"separator\"\n                size=\"xs\"\n                class=\"spectrum-UIIcon-ChevronRight100\"\n            ></sp-icon-chevron100>\n        `;\n  }\n  render() {\n    return html`\n            ${this.renderLink()}\n            <slot name=\"menu\"></slot>\n            ${this.renderSeparator()}\n        `;\n  }\n  updated(changes) {\n    if (changes.has(\"disabled\")) {\n      if (this.disabled) {\n        this.setAttribute(\"aria-disabled\", \"true\");\n      } else {\n        this.removeAttribute(\"aria-disabled\");\n      }\n    }\n  }\n}\n__decorateClass([\n  property()\n], BreadcrumbItem.prototype, \"value\", 2);\n__decorateClass([\n  property({ type: Boolean })\n], BreadcrumbItem.prototype, \"isLastOfType\", 2);\n//# sourceMappingURL=BreadcrumbItem.dev.js.map\n","\"use strict\";\nvar __defProp = Object.defineProperty;\nvar __getOwnPropDesc = Object.getOwnPropertyDescriptor;\nvar __decorateClass = (decorators, target, key, kind) => {\n  var result = kind > 1 ? void 0 : kind ? __getOwnPropDesc(target, key) : target;\n  for (var i = decorators.length - 1, decorator; i >= 0; i--)\n    if (decorator = decorators[i])\n      result = (kind ? decorator(target, key, result) : decorator(result)) || result;\n  if (kind && result) __defProp(target, key, result);\n  return result;\n};\nimport {\n  html,\n  SpectrumElement\n} from \"@spectrum-web-components/base\";\nimport {\n  property,\n  query,\n  queryAssignedElements,\n  state\n} from \"@spectrum-web-components/base/src/decorators.js\";\nimport \"@spectrum-web-components/breadcrumbs/sp-breadcrumb-item.js\";\nimport \"@spectrum-web-components/icons-workflow/icons/sp-icon-folder-open.js\";\nimport \"@spectrum-web-components/action-menu/sp-action-menu.js\";\nimport \"@spectrum-web-components/menu/sp-menu-item.js\";\nimport {\n  createRef,\n  ref\n} from \"@spectrum-web-components/base/src/directives.js\";\nimport styles from \"./breadcrumbs.css.js\";\nimport { ifDefined } from \"@spectrum-web-components/base/src/directives.js\";\nexport class Breadcrumbs extends SpectrumElement {\n  constructor() {\n    super(...arguments);\n    this.maxVisibleItems = 4;\n    this.label = \"\";\n    this.menuLabel = \"More items\";\n    this.compact = false;\n    this.items = [];\n    this.visibleItems = 0;\n    this.firstRender = true;\n    this.menuRef = createRef();\n  }\n  static get styles() {\n    return [styles];\n  }\n  get hasMenu() {\n    var _a, _b;\n    return this.visibleItems < ((_b = (_a = this.breadcrumbsElements) == null ? void 0 : _a.length) != null ? _b : 0);\n  }\n  connectedCallback() {\n    super.connectedCallback();\n    if (!this.hasAttribute(\"role\")) {\n      this.setAttribute(\"role\", \"navigation\");\n    }\n    this.resizeObserver = new ResizeObserver(() => {\n      if (this.firstRender) {\n        this.firstRender = false;\n        return;\n      }\n      this.adjustOverflow();\n    });\n    this.resizeObserver.observe(this);\n  }\n  disconnectedCallback() {\n    var _a;\n    (_a = this.resizeObserver) == null ? void 0 : _a.unobserve(this);\n    super.disconnectedCallback();\n  }\n  updated(changes) {\n    super.updated(changes);\n    if (changes.has(\"label\")) {\n      this.setAttribute(\"aria-label\", this.label || \"Breadcrumbs\");\n    }\n    if (changes.has(\"maxVisibleItems\") || changes.has(\"compact\")) {\n      this.calculateBreadcrumbItemsWidth();\n      this.adjustOverflow();\n    }\n    if (changes.has(\"visibleItems\")) {\n      this.items.forEach((item, index) => {\n        this.breadcrumbsElements[index].isLastOfType = index === this.breadcrumbsElements.length - 1;\n        this.breadcrumbsElements[index].toggleAttribute(\n          \"hidden\",\n          !item.isVisible\n        );\n      });\n    }\n  }\n  /**\n   * We need to understand how much space (px) each breadcrumb item occupies,\n   * in order to know if it fits the available horizontal space.\n   */\n  calculateBreadcrumbItemsWidth() {\n    this.items = this.breadcrumbsElements.map((el, index) => {\n      let width = el.offsetWidth;\n      if (el.hasAttribute(\"hidden\")) {\n        el.removeAttribute(\"hidden\");\n        width = el.offsetWidth;\n        el.setAttribute(\"hidden\", \"\");\n      }\n      return {\n        label: el.innerText,\n        href: el.href,\n        value: el.value || index.toString(),\n        offsetWidth: width,\n        isVisible: true\n      };\n    });\n  }\n  /**\n   * Calculate which breadcrumbs fit in the viewport, and which should be hidden.\n   */\n  adjustOverflow() {\n    let occupiedSpace = 0;\n    let newVisibleItems = 0;\n    const availableSpace = this.list.clientWidth;\n    if (this.hasMenu && this.menuRef.value) {\n      occupiedSpace += this.menuRef.value.offsetWidth || 0;\n    }\n    if (this.rootElement.length > 0) {\n      occupiedSpace += this.rootElement[0].offsetWidth;\n    }\n    const start = 0;\n    for (let i = this.items.length - 1; i >= start; i--) {\n      occupiedSpace += this.items[i].offsetWidth;\n      if (occupiedSpace < availableSpace && newVisibleItems < Math.max(this.maxVisibleItems, 1)) {\n        this.items[i].isVisible = true;\n        newVisibleItems++;\n      } else {\n        for (let j = i; j >= start; j--) {\n          this.items[j].isVisible = false;\n        }\n        break;\n      }\n    }\n    if (newVisibleItems === 0) {\n      this.items[this.items.length - 1].isVisible = true;\n      newVisibleItems++;\n    }\n    if (newVisibleItems !== this.visibleItems) {\n      this.visibleItems = newVisibleItems;\n    }\n  }\n  announceChange(value) {\n    const selectDetail = {\n      value\n    };\n    const selectionEvent = new CustomEvent(\"change\", {\n      bubbles: true,\n      composed: true,\n      detail: selectDetail\n    });\n    this.dispatchEvent(selectionEvent);\n  }\n  handleSelect(event) {\n    event.stopPropagation();\n    this.announceChange(event.detail.value);\n  }\n  handleMenuChange(event) {\n    event.stopPropagation();\n    this.announceChange(event.target.value);\n  }\n  /**\n   * The truncation menu when there is not enough space to display all the breadcrumbs.\n   * It displays all options within a breadcrumb.\n   * Items are listed with the hierarchy ordered from top (root) to bottom\n   * and include the currently selected item.\n   */\n  renderMenu() {\n    return html`\n            <sp-breadcrumb-item role=\"listitem\" class=\"is-menu\">\n                <sp-action-menu\n                    ${ref(this.menuRef)}\n                    quiet\n                    label=${this.menuLabel}\n                    selects=\"single\"\n                    value=${this.items[this.items.length - 1].value}\n                    @change=${this.handleMenuChange}\n                    slot=\"menu\"\n                >\n                    <slot slot=\"icon\" name=\"icon\">\n                        <sp-icon-folder-open class=\"icon\"></sp-icon-folder-open>\n                    </slot>\n\n                    ${this.items.map(\n      (item) => html`\n                            <sp-menu-item\n                                href=${ifDefined(item.href)}\n                                value=${item.value}\n                            >\n                                ${item.label}\n                            </sp-menu-item>\n                        `\n    )}\n                </sp-action-menu>\n            </sp-breadcrumb-item>\n        `;\n  }\n  /**\n   * Breadcrumbs were added / removed, we need to recalculate the width of each item\n   * and adjust the overflow accordingly.\n   */\n  async slotChangeHandler() {\n    if (this.breadcrumbsElements.length === 0) {\n      this.items = [];\n      this.visibleItems = 0;\n      return;\n    }\n    await Promise.all(\n      this.breadcrumbsElements.map((el) => el.updateComplete)\n    );\n    this.calculateBreadcrumbItemsWidth();\n    this.visibleItems = 0;\n    this.adjustOverflow();\n  }\n  render() {\n    return html`\n            <ul @breadcrumb-select=${this.handleSelect} id=\"list\">\n                <slot name=\"root\"></slot>\n                ${this.hasMenu ? this.renderMenu() : \"\"}\n                <slot @slotchange=${this.slotChangeHandler}></slot>\n            </ul>\n        `;\n  }\n}\n__decorateClass([\n  property({ type: Number, attribute: \"max-visible-items\" })\n], Breadcrumbs.prototype, \"maxVisibleItems\", 2);\n__decorateClass([\n  property({ type: String })\n], Breadcrumbs.prototype, \"label\", 2);\n__decorateClass([\n  property({ type: String, attribute: \"menu-label\" })\n], Breadcrumbs.prototype, \"menuLabel\", 2);\n__decorateClass([\n  property({ type: Boolean })\n], Breadcrumbs.prototype, \"compact\", 2);\n__decorateClass([\n  queryAssignedElements({ selector: \"sp-breadcrumb-item\" })\n], Breadcrumbs.prototype, \"breadcrumbsElements\", 2);\n__decorateClass([\n  queryAssignedElements({ slot: \"root\", selector: \"sp-breadcrumb-item\" })\n], Breadcrumbs.prototype, \"rootElement\", 2);\n__decorateClass([\n  query(\"#list\")\n], Breadcrumbs.prototype, \"list\", 2);\n__decorateClass([\n  state()\n], Breadcrumbs.prototype, \"items\", 2);\n__decorateClass([\n  state()\n], Breadcrumbs.prototype, \"visibleItems\", 2);\n//# sourceMappingURL=Breadcrumbs.dev.js.map\n","\"use strict\";\nimport { html } from \"@spectrum-web-components/base\";\nimport { spreadProps } from \"../../../test/lit-helpers.js\";\nimport { ifDefined } from \"@spectrum-web-components/base/src/directives.js\";\nimport \"@spectrum-web-components/breadcrumbs/sp-breadcrumbs.js\";\nimport \"@spectrum-web-components/breadcrumbs/sp-breadcrumb-item.js\";\nconst dummyOrganizer = [\n  \"Your stuff\",\n  \"Files\",\n  \"Team\",\n  \"In progress\",\n  \"Trend\",\n  \"Winter\",\n  \"Assets\",\n  \"18x24\"\n];\nexport const getBreadcrumbsWithLinks = (count) => {\n  const breadcrumbs = [];\n  for (let i = 0; i < count; i++) {\n    breadcrumbs.push(html`\n            <sp-breadcrumb-item href=${window.location.href}>\n                ${dummyOrganizer[i] || `Breadcrumb ${i}`}\n            </sp-breadcrumb-item>\n        `);\n  }\n  return breadcrumbs;\n};\nexport const getBreadcrumbs = (count) => {\n  const breadcrumbs = [];\n  for (let i = 0; i < count; i++) {\n    breadcrumbs.push(html`\n            <sp-breadcrumb-item value=${i}>\n                ${dummyOrganizer[i] || `Breadcrumb ${i}`}\n            </sp-breadcrumb-item>\n        `);\n  }\n  return breadcrumbs;\n};\nexport const getResizableStyles = () => {\n  return html`\n        <style>\n            .resizable-container {\n                border: 2px solid;\n                padding: 20px;\n                width: 300px;\n                resize: both;\n                overflow: auto;\n            }\n        </style>\n    `;\n};\nexport const Template = (args) => html`\n    <sp-breadcrumbs\n        ${spreadProps(args)}\n        max-visible-items=${ifDefined(args[\"max-visible-items\"])}\n        @change=${args.onChange}\n        ?compact=${args.compact}\n    >\n        <sp-breadcrumb-item value=\"0\">Your stuff</sp-breadcrumb-item>\n        <sp-breadcrumb-item ?disabled=${args.disabled} value=\"1\">\n            Files\n        </sp-breadcrumb-item>\n        <sp-breadcrumb-item value=\"2\">Team</sp-breadcrumb-item>\n        <sp-breadcrumb-item value=\"3\">In progress</sp-breadcrumb-item>\n    </sp-breadcrumbs>\n`;\n//# sourceMappingURL=template.js.map\n","\"use strict\";\nvar __defProp = Object.defineProperty;\nvar __getOwnPropDesc = Object.getOwnPropertyDescriptor;\nvar __typeError = (msg) => {\n  throw TypeError(msg);\n};\nvar __decorateClass = (decorators, target, key, kind) => {\n  var result = kind > 1 ? void 0 : kind ? __getOwnPropDesc(target, key) : target;\n  for (var i = decorators.length - 1, decorator; i >= 0; i--)\n    if (decorator = decorators[i])\n      result = (kind ? decorator(target, key, result) : decorator(result)) || result;\n  if (kind && result) __defProp(target, key, result);\n  return result;\n};\nvar __accessCheck = (obj, member, msg) => member.has(obj) || __typeError(\"Cannot \" + msg);\nvar __privateGet = (obj, member, getter) => (__accessCheck(obj, member, \"read from private field\"), getter ? getter.call(obj) : member.get(obj));\nvar __privateAdd = (obj, member, value) => member.has(obj) ? __typeError(\"Cannot add the same private member more than once\") : member instanceof WeakSet ? member.add(obj) : member.set(obj, value);\nvar __privateSet = (obj, member, value, setter) => (__accessCheck(obj, member, \"write to private field\"), setter ? setter.call(obj, value) : member.set(obj, value), value);\nvar _maxVisibleItems;\nimport { html } from \"@spectrum-web-components/base\";\nimport \"@spectrum-web-components/icons-workflow/icons/sp-icon-settings.js\";\nimport { LitElement } from \"@spectrum-web-components/base\";\nimport { property } from \"@spectrum-web-components/base/src/decorators.js\";\nimport {\n  getBreadcrumbs,\n  getBreadcrumbsWithLinks,\n  getResizableStyles,\n  Template\n} from \"./template.js\";\nimport { argTypes } from \"./args.js\";\nimport { ifDefined } from \"@spectrum-web-components/base/src/directives.js\";\nimport { spreadProps } from \"../../../test/lit-helpers.js\";\nimport \"@spectrum-web-components/button/sp-button.js\";\nexport default {\n  title: \"Breadcrumbs\",\n  component: \"sp-breadcrumbs\",\n  args: {\n    \"max-visible-items\": 4\n  },\n  argTypes\n};\nexport const Default = (args) => Template(args);\nexport const Disabled = (args) => Template(args);\nDisabled.args = {\n  disabled: true\n};\nexport const Compact = (args) => Template(args);\nCompact.args = {\n  compact: true\n};\nexport const Links = (args) => {\n  return html`\n        <sp-breadcrumbs\n            ${spreadProps(args)}\n            max-visible-items=${ifDefined(args[\"max-visible-items\"])}\n            @change=${args.onChange}\n        >\n            ${getBreadcrumbsWithLinks(4)}\n        </sp-breadcrumbs>\n    `;\n};\nclass AddItemsStoryBreadcrumbs extends LitElement {\n  constructor() {\n    super(...arguments);\n    this._counter = 2;\n    this._items = [];\n    __privateAdd(this, _maxVisibleItems, 4);\n  }\n  get maxVisibleItems() {\n    return __privateGet(this, _maxVisibleItems);\n  }\n  set maxVisibleItems(_) {\n    __privateSet(this, _maxVisibleItems, _);\n  }\n  firstUpdated() {\n    this._items = getBreadcrumbsWithLinks(this._counter);\n    this.requestUpdate();\n  }\n  render() {\n    return html`\n            <sp-breadcrumbs\n                max-visible-items=${this.maxVisibleItems}\n                @slotchange=${() => {\n      var _a;\n      const breadcrumbs = (_a = this.shadowRoot) == null ? void 0 : _a.querySelector(\"sp-breadcrumbs\");\n      if (breadcrumbs) {\n        breadcrumbs.requestUpdate();\n      }\n    }}\n            >\n                ${this._items}\n            </sp-breadcrumbs>\n            <sp-button\n                @click=${() => {\n      this._counter++;\n      this._items = getBreadcrumbsWithLinks(this._counter);\n      this.requestUpdate();\n    }}\n                style=\"margin-top: 8px;\"\n                id=\"add-more-items\"\n            >\n                Add more items (current: ${this._counter})\n            </sp-button>\n        `;\n  }\n}\n_maxVisibleItems = new WeakMap();\n__decorateClass([\n  property({ type: Number })\n], AddItemsStoryBreadcrumbs.prototype, \"maxVisibleItems\", 1);\ncustomElements.define(\"add-items-story-breadcrumbs\", AddItemsStoryBreadcrumbs);\nexport const AddItemsDynamic = (args) => {\n  return html`\n        <add-items-story-breadcrumbs\n            maxVisibleItems=${ifDefined(args[\"max-visible-items\"])}\n        ></add-items-story-breadcrumbs>\n    `;\n};\nAddItemsDynamic.swc_vrt = {\n  skip: true\n};\nexport const ShowRoot = (args) => {\n  return html`\n        <sp-breadcrumbs\n            ${spreadProps(args)}\n            max-visible-items=${ifDefined(args[\"max-visible-items\"])}\n            @change=${args.onChange}\n        >\n            <sp-breadcrumb-item value=\"Home\" slot=\"root\">\n                Home\n            </sp-breadcrumb-item>\n            ${getBreadcrumbs(6)}\n        </sp-breadcrumbs>\n    `;\n};\nexport const resizableBehavior = (args) => {\n  return html`\n        <div class=\"resizable-container\">\n            ${getResizableStyles()}\n\n            <sp-breadcrumbs\n                ${spreadProps(args)}\n                max-visible-items=${ifDefined(args[\"max-visible-items\"])}\n                @change=${args.onChange}\n            >\n                ${getBreadcrumbs(4)}\n            </sp-breadcrumbs>\n        </div>\n    `;\n};\n//# sourceMappingURL=breadcrumbs.stories.js.map\n;export const __namedExportsOrder = [\"Default\",\"Disabled\",\"Compact\",\"Links\",\"AddItemsDynamic\",\"ShowRoot\",\"resizableBehavior\"];","\"use strict\";import{tag as c}from\"../custom-tag.js\";export{setCustomTemplateLiteralTag}from\"../custom-tag.js\";export const FolderOpenIcon=({width:e=24,height:l=24,hidden:t=!1,title:r=\"Folder Open\"}={})=>c`<svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    width=\"${e}\"\n    height=\"${l}\"\n    viewBox=\"0 0 20 20\"\n    aria-hidden=${t?\"true\":\"false\"}\n    role=\"img\"\n    fill=\"currentColor\"\n    aria-label=\"${r}\"\n  >\n    <path\n      d=\"M19.21143,8.89648c-.4292-.56934-1.08398-.89648-1.79736-.89648H6.65918c-.99756,0-1.88672.66992-2.1626,1.62891l-1.64954,5.73682c-.20404-.13428-.34705-.35413-.34705-.61572V4.25c0-.41309.33643-.75.75-.75h3.56494c.21826,0,.42529.09473.56689.25684l1.70117,1.96875c.42773.49219,1.04688.77441,1.69922.77441h6.18945c.41406,0,.75-.33594.75-.75s-.33594-.75-.75-.75h-6.18945c-.21777,0-.42432-.09473-.56592-.25684l-1.70117-1.96875c-.42773-.49219-1.04736-.77441-1.7002-.77441h-3.56494c-1.24072,0-2.25,1.00977-2.25,2.25v10.5c0,1.24023,1.00928,2.25,2.25,2.25.0235,0,.04327-.01123.06622-.01343.01978.00171.03687.01343.05682.01343h12.74756c.99805,0,1.88721-.66992,2.16211-1.62891l1.29395-4.5c.19727-.68457.06396-1.4043-.36523-1.97461ZM18.13525,10.45703l-1.29395,4.5c-.0918.31934-.38818.54297-.7207.54297H4.36914l1.56885-5.45703c.09229-.31934.38867-.54297.72119-.54297h10.75488c.23779,0,.45605.10938.59912.29883.14307.19043.1875.42969.12207.6582Z\"\n      fill=\"currentColor\"\n    />\n  </svg>`;\n//# sourceMappingURL=FolderOpen.js.map\n","\"use strict\";import{html as e}from\"@spectrum-web-components/base\";import{IconBase as t}from\"@spectrum-web-components/icon\";import{setCustomTemplateLiteralTag as r}from\"../custom-tag.js\";import{FolderOpenIcon as l}from\"../icons-s2/FolderOpen.js\";import{FolderOpenIcon as o}from\"../icons/FolderOpen.js\";export class IconFolderOpen extends t{render(){return r(e),this.spectrumVersion===2?l({hidden:!this.label,title:this.label}):o({hidden:!this.label,title:this.label})}}\n//# sourceMappingURL=IconFolderOpen.js.map\n","\"use strict\";import{tag as t}from\"../custom-tag.js\";export{setCustomTemplateLiteralTag}from\"../custom-tag.js\";export const MoreIcon=({width:r=24,height:l=24,hidden:e=!1,title:c=\"More\"}={})=>t`<svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    width=\"${r}\"\n    height=\"${l}\"\n    viewBox=\"0 0 20 20\"\n    aria-hidden=${e?\"true\":\"false\"}\n    role=\"img\"\n    fill=\"currentColor\"\n    aria-label=\"${c}\"\n  >\n    <circle cx=\"10\" cy=\"10.02114\" r=\"1.5\" fill=\"currentColor\" />\n    <path\n      d=\"m10,8.5c-.82843,0-1.5.67157-1.5,1.5s.67157,1.5,1.5,1.5,1.5-.67157,1.5-1.5-.67157-1.5-1.5-1.5Z\"\n      fill=\"currentColor\"\n    />\n    <circle cx=\"4\" cy=\"10.02114\" r=\"1.5\" fill=\"currentColor\" />\n    <circle cx=\"4\" cy=\"10\" r=\"1.5\" fill=\"currentColor\" />\n    <circle cx=\"16\" cy=\"10.02114\" r=\"1.5\" fill=\"currentColor\" />\n    <circle cx=\"16\" cy=\"10\" r=\"1.5\" fill=\"currentColor\" />\n  </svg>`;\n//# sourceMappingURL=More.js.map\n","\"use strict\";import{html as e}from\"@spectrum-web-components/base\";import{IconBase as t}from\"@spectrum-web-components/icon\";import{setCustomTemplateLiteralTag as r}from\"../custom-tag.js\";import{MoreIcon as o}from\"../icons-s2/More.js\";import{MoreIcon as l}from\"../icons/More.js\";export class IconMore extends t{render(){return r(e),this.spectrumVersion===2?o({hidden:!this.label,title:this.label}):l({hidden:!this.label,title:this.label})}}\n//# sourceMappingURL=IconMore.js.map\n","\"use strict\";import{tag as r}from\"../custom-tag.js\";export{setCustomTemplateLiteralTag}from\"../custom-tag.js\";export const SettingsIcon=({width:l=24,height:c=24,hidden:t=!1,title:e=\"Settings\"}={})=>r`<svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    width=\"${l}\"\n    height=\"${c}\"\n    viewBox=\"0 0 20 20\"\n    aria-hidden=${t?\"true\":\"false\"}\n    role=\"img\"\n    fill=\"currentColor\"\n    aria-label=\"${e}\"\n  >\n    <path\n      d=\"M10.00391,12.58887c-.88818,0-1.75293-.45996-2.22803-1.2832h0c-.70801-1.22754-.28613-2.80078.93994-3.50879.59326-.34375,1.28516-.43359,1.94922-.25684.6626.17773,1.21631.60352,1.55908,1.19727.34326.59375.43408,1.28613.25684,1.94824-.17773.66309-.60254,1.2168-1.19678,1.55957-.40332.2334-.84473.34375-1.28027.34375ZM9.07471,10.55566c.29443.50879.94824.68359,1.45947.39062.24707-.14258.42383-.37305.49756-.64844s.03613-.56348-.10645-.81055c-.14307-.24707-.37305-.42383-.64893-.49805-.2749-.07324-.56299-.03516-.81055.10645-.51025.29492-.68555.94922-.39111,1.45996h0Z\"\n      fill=\"currentColor\"\n    />\n    <path\n      d=\"M6.90674,18.31836c-.33936,0-.68213-.08496-.99219-.26465l-.81982-.47266c-.89307-.51367-1.25-1.64941-.81104-2.58301l.58008-1.2334c-.26514-.36328-.48975-.75098-.67188-1.16113l-1.35693-.1123c-1.02881-.08496-1.83447-.95996-1.83447-1.99121l-.00098-.94629c0-1.0332.80518-1.90918,1.8335-1.99414l1.35449-.11426c.0918-.20898.19238-.40918.30176-.59961.10986-.19141.2334-.37891.36914-.56445l-.58057-1.22949c-.44092-.93262-.08643-2.06836.80713-2.58496l.82031-.47363c.89258-.5166,2.05371-.25879,2.64258.58984l.77734,1.11816c.44385-.0498.89209-.04785,1.34082,0l.77539-1.11914c.58887-.84961,1.75098-1.10938,2.64355-.59375l.81982.47266c.89404.51562,1.24951,1.65137.81055,2.58398l-.58008,1.23242c.26562.36426.49023.75195.67188,1.16113l1.35693.1123c1.02832.08496,1.83398.95996,1.83496,1.99121l.00049.94727c.00098,1.03125-.80371,1.90723-1.83203,1.99414l-1.35547.11426c-.09131.20898-.19189.4082-.30273.59961h0c-.10938.18945-.23242.37793-.36816.56348l.58057,1.22949c.44043.93164.08643,2.06738-.80664,2.58496l-.8208.47461c-.89355.51855-2.05371.25781-2.64258-.59082l-.77734-1.11816c-.4458.04883-.89404.04785-1.34082.00098l-.77637,1.12012c-.38379.55371-1.01172.85645-1.65039.85645ZM6.9043,3.22461c-.08496,0-.17041.02148-.24805.06641l-.8208.47461c-.22266.12891-.31152.41211-.20117.64551l.77881,1.65039c.12598.2666.08398.58203-.10742.80664-.2041.23926-.37305.47656-.5166.72559-.14111.24609-.26514.51855-.36816.80957-.09814.27832-.3501.47266-.64404.49707l-1.81885.15332c-.26172.02246-.4585.23633-.4585.49902l.00098.94629c0,.25781.20117.47656.4585.49805l1.81934.15039c.29395.02441.54639.21875.64502.49707.19873.56055.49707,1.07617.88672,1.53223.19189.22363.23438.54004.10889.80664l-.77783,1.65234c-.10938.2334-.021.51758.20264.64551l.82031.47363c.22412.12988.51416.06348.66016-.14746l1.04102-1.50195c.16748-.24219.45898-.36914.75244-.30957.58838.10742,1.18457.1084,1.77002-.00098.28955-.05469.58496.06641.75342.30957l1.04199,1.49902c.14648.20996.43848.27637.66064.14746l.82031-.47363c.22607-.13086.31348-.40918.20117-.64648l-.77881-1.65039c-.12598-.2666-.08398-.58203.10742-.80664.2041-.24023.37305-.47656.51562-.72461l.00049-.00098c.14258-.24707.26318-.51172.36865-.80957.09863-.27832.35059-.47266.64453-.49707l1.81885-.15234c.25635-.02246.45752-.24121.45752-.49902l-.00049-.94727c0-.26172-.19727-.47559-.45898-.49805l-1.81885-.15039c-.29395-.02441-.54639-.21875-.64502-.49707-.19775-.55957-.49658-1.0752-.88721-1.53223-.19141-.22461-.23389-.54004-.1084-.80664l.77734-1.65234c.10986-.2334.021-.51758-.20264-.64648l-.81982-.47266c-.22461-.12695-.51416-.06152-.66113.14941l-1.03955,1.5c-.16797.24316-.45898.36816-.75293.31055-.59131-.10938-1.1875-.10938-1.77002,0-.29199.05176-.58545-.06738-.75342-.30957l-1.04199-1.49902c-.09619-.1377-.25293-.21387-.41211-.21387Z\"\n      fill=\"currentColor\"\n    />\n  </svg>`;\n//# sourceMappingURL=Settings.js.map\n","\"use strict\";import{html as e}from\"@spectrum-web-components/base\";import{IconBase as t}from\"@spectrum-web-components/icon\";import{setCustomTemplateLiteralTag as r}from\"../custom-tag.js\";import{SettingsIcon as s}from\"../icons-s2/Settings.js\";import{SettingsIcon as l}from\"../icons/Settings.js\";export class IconSettings extends t{render(){return r(e),this.spectrumVersion===2?s({hidden:!this.label,title:this.label}):l({hidden:!this.label,title:this.label})}}\n//# sourceMappingURL=IconSettings.js.map\n","\"use strict\";import{tag as r}from\"../custom-tag.js\";export{setCustomTemplateLiteralTag}from\"../custom-tag.js\";export const FolderOpenIcon=({width:e=24,height:t=24,hidden:l=!1,title:a=\"Folder Open\"}={})=>r`<svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    height=\"${t}\"\n    viewBox=\"0 0 36 36\"\n    width=\"${e}\"\n    aria-hidden=${l?\"true\":\"false\"}\n    role=\"img\"\n    fill=\"currentColor\"\n    aria-label=\"${a}\"\n  >\n    <path\n      d=\"M30 14V9a1 1 0 0 0-1-1l-12.332.008-3.3-3.4A2 2 0 0 0 11.929 4H4a2 2 0 0 0-2 2v23a1 1 0 0 0 1 1h26.307a1 1 0 0 0 .936-.649l5.25-14A1 1 0 0 0 34.557 14ZM4 6h7.929l3.305 3.4.59.607h.845L28 10v4H8.693a1 1 0 0 0-.936.649L4 24.667Z\"\n    />\n  </svg>`;\n//# sourceMappingURL=FolderOpen.js.map\n","\"use strict\";import{tag as c}from\"../custom-tag.js\";export{setCustomTemplateLiteralTag}from\"../custom-tag.js\";export const MoreIcon=({width:e=24,height:r=24,hidden:t=!1,title:l=\"More\"}={})=>c`<svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    width=\"${e}\"\n    height=\"${r}\"\n    viewBox=\"0 0 36 36\"\n    aria-hidden=${t?\"true\":\"false\"}\n    role=\"img\"\n    fill=\"currentColor\"\n    aria-label=\"${l}\"\n  >\n    <circle cx=\"17.8\" cy=\"18.2\" r=\"3.4\" />\n    <circle cx=\"29.5\" cy=\"18.2\" r=\"3.4\" />\n    <circle cx=\"6.1\" cy=\"18.2\" r=\"3.4\" />\n  </svg>`;\n//# sourceMappingURL=More.js.map\n","\"use strict\";import{tag as r}from\"../custom-tag.js\";export{setCustomTemplateLiteralTag}from\"../custom-tag.js\";export const SettingsIcon=({width:a=24,height:l=24,hidden:t=!1,title:e=\"Settings\"}={})=>r`<svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    height=\"${l}\"\n    viewBox=\"0 0 36 36\"\n    width=\"${a}\"\n    aria-hidden=${t?\"true\":\"false\"}\n    role=\"img\"\n    fill=\"currentColor\"\n    aria-label=\"${e}\"\n  >\n    <path\n      d=\"M32.9 15.793h-3.111a11.953 11.953 0 0 0-1.842-4.507l2.205-2.206a1.1 1.1 0 0 0 0-1.56l-1.673-1.672a1.1 1.1 0 0 0-1.56 0l-2.205 2.205a11.925 11.925 0 0 0-4.507-1.841V3.1A1.1 1.1 0 0 0 19.1 2h-2.2a1.1 1.1 0 0 0-1.1 1.1v3.112a11.925 11.925 0 0 0-4.507 1.841l-2.2-2.205a1.1 1.1 0 0 0-1.56 0L5.848 7.52a1.1 1.1 0 0 0 0 1.56l2.205 2.206a11.953 11.953 0 0 0-1.842 4.507H3.1A1.1 1.1 0 0 0 2 16.9v2.2a1.1 1.1 0 0 0 1.1 1.1h3.111a11.934 11.934 0 0 0 1.842 4.507l-2.205 2.212a1.1 1.1 0 0 0 0 1.56l1.673 1.673a1.1 1.1 0 0 0 1.56 0l2.205-2.205a11.925 11.925 0 0 0 4.507 1.841V32.9A1.1 1.1 0 0 0 16.9 34h2.2a1.1 1.1 0 0 0 1.1-1.1v-3.112a11.925 11.925 0 0 0 4.507-1.841l2.205 2.205a1.1 1.1 0 0 0 1.56 0l1.673-1.673a1.1 1.1 0 0 0 0-1.56l-2.205-2.205a11.934 11.934 0 0 0 1.842-4.507H32.9A1.1 1.1 0 0 0 34 19.1v-2.2a1.1 1.1 0 0 0-1.1-1.107ZM22.414 18A4.414 4.414 0 1 1 18 13.586 4.414 4.414 0 0 1 22.414 18Z\"\n    />\n  </svg>`;\n//# sourceMappingURL=Settings.js.map\n"],"names":[],"sourceRoot":""}