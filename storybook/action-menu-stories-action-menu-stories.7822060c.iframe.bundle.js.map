{"version":3,"file":"action-menu-stories-action-menu-stories.7822060c.iframe.bundle.js","mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAwMA;;AAUA;AACA;AACA;AACA;AAIA;AACA;AACA;;;;AAIA;;;;;;;AAQA;;;AA4BA;;;;;;;;;;;;;AAiBA;;;AAcA;AAWA;;AAIA;;;;;AAKA;AACA;;;;;;;;;AASA;;;;AAIA;AACA;;;;;;AAMA;AACA;;;;;;;;AAUA;;;AAMA;;AAEA;;;;;;;;;;;;;;;;;;;;;;;;;;AA2BA;;AAMA;;;;;;;;;;;;;;AAgBA;;;;;AA6BA;AACA;;;;;;;AATA;;;;;;;;;;;;AAgBA;AAQA;;AAGA;;AAKA;;AAIA;;AAQA;;;AAMA;AACA;;;AAGA;;;AAGA;;;;AAIA;;;;;AAOA;;;AChZA;;;;;AAKA;;AAIA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAGA;;;AASA;AACA;AACA;AAEA;;;;;;AAuBA;;;;;;;AAQA;;;;;;AASA;AAGA;;;AAMA;AAhDA;;AAWA;AACA;AAEA;;;AA4CA;;;;;;AAOA;AAGA;;ACpMA;AACA;;AAEA;;;AAGA;;;;;;;;;;ACRA;;ACEA;AACA;;AAEA;;;AAGA;;;;;;;;;;;;;;;;ACNA;;AAEA;AACA;;;AAGA;;;;;;;ACNA;;AAEA;AACA;;;AAGA;;;;;;;ACPA;AAgEA;AACA;;AAEA;AAEA","sources":["webpack://@adobe/spectrum-web-components/./packages/action-menu/stories/action-menu.stories.js","webpack://@adobe/spectrum-web-components/./packages/button/stories/index.js","webpack://@adobe/spectrum-web-components/./packages/icons-workflow/src/icons-s2/Settings.js","webpack://@adobe/spectrum-web-components/./packages/icons-workflow/src/elements/IconSettings.js","webpack://@adobe/spectrum-web-components/./packages/icons-workflow/src/icons-s2/HelpCircle.js","webpack://@adobe/spectrum-web-components/./packages/icons-workflow/src/icons/Help.js","webpack://@adobe/spectrum-web-components/./packages/icons-workflow/src/icons/Settings.js","webpack://@adobe/spectrum-web-components/./packages/menu/src/MenuGroup.dev.js"],"sourcesContent":["\"use strict\";\nimport { html } from \"@spectrum-web-components/base\";\nimport { ifDefined } from \"@spectrum-web-components/base/src/directives.js\";\nimport \"@spectrum-web-components/action-menu/sp-action-menu.js\";\nimport \"@spectrum-web-components/menu/sp-menu-divider.js\";\nimport \"@spectrum-web-components/menu/sp-menu-group.js\";\nimport \"@spectrum-web-components/menu/sp-menu-item.js\";\nimport \"@spectrum-web-components/menu/sp-menu.js\";\nimport { slottableRequest } from \"@spectrum-web-components/overlay/src/slottable-request-directive.js\";\nimport \"@spectrum-web-components/tooltip/sp-tooltip.js\";\nimport { makeOverBackground } from \"../../button/stories/index.js\";\nimport { isOverlayOpen } from \"../../overlay/stories/index.js\";\nimport { ActionMenuMarkup } from \"./\";\nimport \"@spectrum-web-components/icons-workflow/icons/sp-icon-settings.js\";\nexport default {\n  component: \"sp-action-menu\",\n  title: \"Action menu\",\n  argTypes: {\n    onChange: { action: \"change\" },\n    disabled: {\n      name: \"disabled\",\n      type: { name: \"boolean\", required: false },\n      description: \"Disable this control. It will not receive focus or events.\",\n      table: {\n        type: { summary: \"boolean\" },\n        defaultValue: { summary: false }\n      },\n      control: {\n        type: \"boolean\"\n      }\n    },\n    open: {\n      name: \"open\",\n      type: { name: \"boolean\", required: false },\n      description: \"Whether the menu is open or not.\",\n      table: {\n        type: { summary: \"boolean\" },\n        defaultValue: { summary: false }\n      },\n      control: \"boolean\"\n    },\n    visibleLabel: {\n      name: \"Visible Label\",\n      description: \"The placeholder content for the picker.\",\n      type: { name: \"string\", required: false },\n      table: {\n        type: { summary: \"string\" },\n        defaultValue: { summary: \"\" }\n      },\n      control: \"text\"\n    },\n    tooltipDescription: {\n      name: \"Tooltip Description\",\n      type: { name: \"string\", required: false },\n      description: \"Tooltip description\",\n      table: {\n        type: { summary: \"string\" },\n        defaultValue: { summary: \"\" }\n      },\n      control: {\n        type: \"text\"\n      }\n    },\n    tooltipPlacement: {\n      name: \"Tooltip Placement\",\n      type: { name: \"string\", required: false },\n      description: \"Tooltip Placement.\",\n      table: {\n        defaultValue: { summary: \"bottom\" }\n      },\n      control: {\n        options: [\n          \"auto\",\n          \"auto-start\",\n          \"auto-end\",\n          \"top\",\n          \"bottom\",\n          \"right\",\n          \"left\",\n          \"top-start\",\n          \"top-end\",\n          \"bottom-start\",\n          \"bottom-end\",\n          \"right-start\",\n          \"right-end\",\n          \"left-start\",\n          \"left-end\",\n          \"none\"\n        ],\n        type: \"select\"\n      }\n    },\n    quiet: {\n      name: \"quiet\",\n      type: { name: \"boolean\", required: false },\n      description: \"Quiet rendering\",\n      table: {\n        type: { summary: \"boolean\" },\n        defaultValue: { summary: false }\n      },\n      control: {\n        type: \"boolean\"\n      }\n    },\n    staticColorValue: {\n      name: \"static-color\",\n      type: { name: \"string\", required: false },\n      description: \"The visual static color variant to apply to the button.\",\n      table: {\n        type: { summary: \"string\" },\n        defaultValue: { summary: \"none\" }\n      },\n      control: {\n        type: \"select\",\n        labels: {\n          white: \"white\",\n          black: \"black\",\n          none: void 0\n        },\n        options: [\"white\", \"black\", \"none\"]\n      }\n    },\n    align: {\n      name: \"align\",\n      type: { name: \"string\", required: false },\n      description: \"Alignment of the Action Menu\",\n      table: {\n        defaultValue: { summary: \"start\" }\n      },\n      control: {\n        type: \"select\",\n        labels: {\n          start: \"start\",\n          end: \"end\"\n        }\n      },\n      options: [\"start\", \"end\"]\n    }\n  },\n  args: {\n    align: \"start\",\n    visibleLabel: \"More Actions\",\n    disabled: false,\n    forcePopover: false,\n    open: false,\n    quiet: false,\n    tooltipDescription: \"\",\n    tooltipPlacement: \"bottom\",\n    static: void 0\n  }\n};\nconst Template = (args = {}) => ActionMenuMarkup(args);\nexport const Default = (args = {}) => Template(args);\nexport const staticWhite = (args = {}) => Template(args);\nstaticWhite.args = {\n  staticValue: \"white\"\n};\nstaticWhite.decorators = [makeOverBackground()];\nexport const staticBlack = (args = {}) => Template(args);\nstaticBlack.args = {\n  staticValue: \"black\"\n};\nstaticBlack.decorators = [makeOverBackground()];\nexport const quiet = (args = {}) => Template(args);\nquiet.args = {\n  quiet: true\n};\nexport const forcePopoverOnMobile = () => html`\n    <div style=\"padding: 40px\">\n        <h1>Force Popover on Mobile</h1>\n        <p>\n            The force-popover attribute overrides the mobile device\n            functionality of rendering a tray so that a popover will always\n            render no matter the device.\n        </p>\n        <ol>\n            <li>Open Chrome DevTools (or equivalent).</li>\n            <li>Toggle the Device Toolbar (the phone/tablet icon).</li>\n            <li>Select a device preset (e.g. iPhone 12).</li>\n            <li>\n                Chrome will set user-agent strings, simulate touch, and adjust\n                DPI.\n            </li>\n            <li>Reload the page</li>\n            <li>Click the Action Menu and see a popover</li>\n        </ol>\n        <sp-action-menu force-popover>\n            <span slot=\"icon\">\n                <sp-icon-settings></sp-icon-settings>\n            </span>\n            <sp-menu-item>Deselect</sp-menu-item>\n            <sp-menu-item>Select Inverse</sp-menu-item>\n            <sp-menu-item>Feather...</sp-menu-item>\n            <sp-menu-item>Select and Mask...</sp-menu-item>\n            <sp-menu-divider></sp-menu-divider>\n            <sp-menu-item>Save Selection</sp-menu-item>\n            <sp-menu-item disabled>Make Work Path</sp-menu-item>\n        </sp-action-menu>\n    </div>\n`;\nexport const labelOnly = ({\n  align = \"start\",\n  changeHandler = () => void 0,\n  disabled = false,\n  open = false,\n  size = \"m\",\n  selects: selects2 = \"\",\n  selected = false\n} = {}) => html`\n    <sp-action-menu\n        ?disabled=${disabled}\n        ?open=${open}\n        size=${size}\n        @change=${(event) => {\n  navigator.clipboard.writeText(event.target.value);\n  changeHandler(event);\n}}\n        .selects=${selects2 ? selects2 : void 0}\n        value=${selected ? \"Select Inverse\" : \"\"}\n        style=${ifDefined(align === \"end\" ? \"float: inline-end;\" : void 0)}\n    >\n        <span slot=\"label-only\">Label Only</span>\n        <sp-menu-item>Deselect</sp-menu-item>\n        <sp-menu-item ?selected=${selected}>Select Inverse</sp-menu-item>\n        <sp-menu-item>Feather...</sp-menu-item>\n        <sp-menu-item>Select and Mask...</sp-menu-item>\n        <sp-menu-divider></sp-menu-divider>\n        <sp-menu-item>Save Selection</sp-menu-item>\n        <sp-menu-item disabled>Make Work Path</sp-menu-item>\n    </sp-action-menu>\n`;\nexport const selects = (args = {}) => Template({\n  ...args,\n  selects: \"single\",\n  selected: true\n});\nselects.args = {\n  open: true\n};\nselects.decorators = [isOverlayOpen];\nexport const iconOnly = (args = {}) => Template(args);\niconOnly.args = {\n  visibleLabel: \"\"\n};\nexport const tooltipDescriptionAndPlacement = (args = {}) => Template(args);\ntooltipDescriptionAndPlacement.args = {\n  tooltipDescription: \"Your tooltip string here\",\n  visibleLabel: \"\",\n  tooltipPlacement: \"bottom\"\n};\nexport const customIcon = (args) => Template(args);\ncustomIcon.args = {\n  customIcon: `<sp-icon-settings slot=\"icon\"></sp-icon-settings>`,\n  visibleLabel: \"\"\n};\nexport const submenu = ({ align = \"start\" } = {}) => {\n  return html`\n        <sp-action-menu\n            label=\"More Actions\"\n            style=${ifDefined(\n    align === \"end\" ? \"float: inline-end;\" : void 0\n  )}\n        >\n            <sp-menu-item>One</sp-menu-item>\n            <sp-menu-item>Two</sp-menu-item>\n            <sp-menu-item>\n                Select some items\n                <sp-menu slot=\"submenu\" selects=\"multiple\">\n                    <sp-menu-item>A</sp-menu-item>\n                    <sp-menu-item selected>B</sp-menu-item>\n                    <sp-menu-item>C</sp-menu-item>\n                </sp-menu>\n            </sp-menu-item>\n        </sp-action-menu>\n    `;\n};\nexport const controlled = ({ align = \"start\" } = {}) => {\n  const state = {\n    snap: true,\n    grid: false,\n    guides: true,\n    latestChange: \"\"\n  };\n  function toggle(prop) {\n    return (event) => {\n      const item = event.target;\n      state[prop] = !state[prop];\n      item.selected = state[prop];\n    };\n  }\n  function onChange(event) {\n    state.latestChange = event.target.value;\n    logState();\n  }\n  function logState() {\n    document.getElementById(\"state-json\").textContent = `application state: ${JSON.stringify(state)}`;\n  }\n  return html`\n        <sp-action-menu\n            label=\"View\"\n            @change=${onChange}\n            style=${ifDefined(\n    align === \"end\" ? \"float: inline-end;\" : void 0\n  )}\n        >\n            <sp-menu-item value=\"action\" @click=${() => alert(\"action\")}>\n                Non-selectable action\n            </sp-menu-item>\n            <sp-menu-item\n                value=\"snap\"\n                ?selected=${state.snap}\n                @click=${toggle(\"snap\")}\n            >\n                Snap\n            </sp-menu-item>\n            <sp-menu-item>\n                Show\n                <sp-menu\n                    slot=\"submenu\"\n                    selects=\"multiple\"\n                    @change=${(event) => event.preventDefault()}\n                >\n                    <sp-menu-item\n                        value=\"grid\"\n                        ?selected=${state.grid}\n                        @click=${toggle(\"grid\")}\n                    >\n                        Grid\n                    </sp-menu-item>\n                    <sp-menu-item\n                        value=\"guides\"\n                        ?selected=${state.guides}\n                        @click=${toggle(\"guides\")}\n                    >\n                        Guides\n                    </sp-menu-item>\n                </sp-menu>\n            </sp-menu-item>\n        </sp-action-menu>\n        <span id=\"state-json\"></span>\n    `;\n};\nexport const groups = ({\n  align = \"start\",\n  onChange\n}) => html`\n    <sp-action-menu\n        id=\"groups\"\n        @change=${({ target: { value } }) => onChange(value)}\n        open\n        style=${ifDefined(align === \"end\" ? \"float: inline-end;\" : void 0)}\n    >\n        <sp-menu-group id=\"cms\">\n            <span slot=\"header\">cms</span>\n            <sp-menu-item value=\"updateAllSiteContent\">\n                Update All Content\n            </sp-menu-item>\n            <sp-menu-item value=\"refreshAllXDs\">Refresh All XDs</sp-menu-item>\n        </sp-menu-group>\n        <sp-menu-group id=\"ssg\">\n            <span slot=\"header\">ssg</span>\n            <sp-menu-item value=\"clearCache\">Clear Cache</sp-menu-item>\n        </sp-menu-group>\n        <sp-menu-group id=\"vrt\">\n            <span slot=\"header\">vrt</span>\n            <sp-menu-item value=\"vrt-contributions\">Contributions</sp-menu-item>\n            <sp-menu-item value=\"vrt-internal\">Internal</sp-menu-item>\n            <sp-menu-item value=\"vrt-public\">Public</sp-menu-item>\n            <sp-menu-item value=\"vrt-patterns\">Patterns</sp-menu-item>\n            <sp-menu-item value=\"vrt\">All</sp-menu-item>\n        </sp-menu-group>\n        <sp-menu-divider></sp-menu-divider>\n        <sp-menu-group id=\"misc\">\n            <sp-menu-item value=\"logout\">Logout</sp-menu-item>\n        </sp-menu-group>\n    </sp-action-menu>\n`;\ngroups.decorators = [isOverlayOpen];\nexport const groupsWithSelects = ({\n  onChange\n}) => {\n  return html`\n        <sp-action-menu\n            @change=${({ target: { value } }) => onChange(value)}\n            label=\"Filter or Sort\"\n        >\n            <sp-menu-group selects=\"single\">\n                <span slot=\"header\">Sort By</span>\n                <sp-menu-item>Name</sp-menu-item>\n                <sp-menu-item>Created</sp-menu-item>\n                <sp-menu-item>Modified</sp-menu-item>\n            </sp-menu-group>\n            <sp-menu-divider></sp-menu-divider>\n            <sp-menu-group selects=\"multiple\">\n                <sp-menu-item>Reverse Order</sp-menu-item>\n            </sp-menu-group>\n        </sp-action-menu>\n    `;\n};\ngroupsWithSelects.swc_vrt = {\n  skip: true\n};\ngroupsWithSelects.parameters = {\n  // Disables Chromatic's snapshotting on a global level\n  chromatic: { disableSnapshot: true }\n};\nexport const directive = () => {\n  const renderSubmenu = () => html`\n        <sp-menu-item>Submenu Item 1</sp-menu-item>\n        <sp-menu-item>Submenu Item 2</sp-menu-item>\n        <sp-menu-item>Submenu Item 3</sp-menu-item>\n        <sp-menu-item>Submenu Item 4</sp-menu-item>\n    `;\n  const renderOptions = () => html`\n        <sp-menu-item>Deselect</sp-menu-item>\n        <sp-menu-item>Select Inverse</sp-menu-item>\n        <sp-menu-item>\n            Feather...\n            <sp-menu\n                slot=\"submenu\"\n                ${slottableRequest(renderSubmenu)}\n            ></sp-menu>\n        </sp-menu-item>\n        <sp-menu-item>Select and Mask...</sp-menu-item>\n        <sp-menu-divider></sp-menu-divider>\n        <sp-menu-item>Save Selection</sp-menu-item>\n        <sp-menu-item disabled>Make Work Path</sp-menu-item>\n    `;\n  return html`\n        <sp-action-menu ${slottableRequest(renderOptions)}>\n            <span slot=\"label\">\n                Select a Country with a very long label, too long in fact\n            </span>\n        </sp-action-menu>\n    `;\n};\ndirective.swc_vrt = {\n  skip: true\n};\ndirective.parameters = {\n  // Disables Chromatic's snapshotting on a global level\n  chromatic: { disableSnapshot: true }\n};\nexport const withScrollEvent = () => {\n  function handleActionMenuScroll() {\n    console.log(\"attached action menu scroll listener\");\n  }\n  function renderMenuItems() {\n    return Array.from(\n      { length: 30 },\n      (_, i) => html`\n                <sp-menu-item style=\"width: 100%;\">\n                    This is an Action Menu Item ${i + 1}\n                </sp-menu-item>\n            `\n    );\n  }\n  return html`\n        <sp-action-menu @scroll=${handleActionMenuScroll} open>\n            <span slot=\"label\">This is an Action Menu</span>\n            ${renderMenuItems()}\n        </sp-action-menu>\n    `;\n};\nwithScrollEvent.parameters = {\n  chromatic: { disableSnapshot: true }\n};\nexport const MenuItemAlerts = () => html`\n    <sp-action-menu size=\"m\">\n        <span slot=\"label\">More Actions</span>\n        <sp-menu-item @click=${() => alert(\"Deselect\")}>Deselect</sp-menu-item>\n        <sp-menu-item @click=${() => alert(\"Select inverse\")}>\n            Select inverse\n        </sp-menu-item>\n        <sp-menu-item @click=${() => alert(\"Feather...\")}>\n            Feather...\n        </sp-menu-item>\n        <sp-menu-item @click=${() => alert(\"Select and mask...\")}>\n            Select and mask...\n        </sp-menu-item>\n        <sp-menu-divider></sp-menu-divider>\n        <sp-menu-item @click=${() => alert(\"Save selection\")}>\n            Save selection\n        </sp-menu-item>\n        <sp-menu-item disabled>Make work path</sp-menu-item>\n    </sp-action-menu>\n`;\n//# sourceMappingURL=action-menu.stories.js.map\n;export const __namedExportsOrder = [\"Default\",\"staticWhite\",\"staticBlack\",\"quiet\",\"forcePopoverOnMobile\",\"labelOnly\",\"selects\",\"iconOnly\",\"tooltipDescriptionAndPlacement\",\"customIcon\",\"submenu\",\"controlled\",\"groups\",\"groupsWithSelects\",\"directive\",\"withScrollEvent\",\"MenuItemAlerts\"];","\"use strict\";\nimport { html } from \"@spectrum-web-components/base\";\nimport { ifDefined } from \"@spectrum-web-components/base/src/directives.js\";\nimport \"@spectrum-web-components/button/sp-button.js\";\nimport \"@spectrum-web-components/icon/sp-icon.js\";\nimport \"@spectrum-web-components/icons-workflow/icons/sp-icon-help.js\";\nexport const args = {\n  disabled: false,\n  variant: \"cta\",\n  pending: false\n};\nexport const argTypes = {\n  disabled: {\n    name: \"disabled\",\n    type: { name: \"boolean\", required: false },\n    description: \"Disable this control. It will not receive focus or events.\",\n    table: {\n      type: { summary: \"boolean\" },\n      defaultValue: { summary: false }\n    },\n    control: {\n      type: \"boolean\"\n    }\n  },\n  variant: {\n    name: \"variant\",\n    type: { name: \"string\", required: false },\n    description: \"The visual variant to apply to the button.\",\n    table: {\n      type: { summary: \"string\" },\n      defaultValue: { summary: \"cta\" }\n    },\n    control: {\n      type: \"inline-radio\",\n      options: [\n        \"cta\",\n        \"accent\",\n        \"primary\",\n        \"secondary\",\n        \"negative\",\n        \"overBackground\",\n        \"black\",\n        \"white\"\n      ]\n    }\n  },\n  treatment: {\n    name: \"treatment\",\n    type: { name: \"string\", required: false },\n    description: \"The visual treatment to apply to the button.\",\n    table: {\n      type: { summary: \"string\" },\n      defaultValue: { summary: \"fill\" }\n    },\n    control: {\n      type: \"inline-radio\",\n      options: [\"fill\", \"outline\"]\n    }\n  },\n  pending: {\n    name: \"pending\",\n    type: { name: \"boolean\", required: false },\n    description: \"Shows the pending state of the button.\",\n    table: {\n      type: { summary: \"boolean\" },\n      defaultValue: { summary: false }\n    },\n    control: {\n      type: \"boolean\"\n    }\n  },\n  label: {\n    name: \"label\",\n    type: { name: \"string\", required: false },\n    description: \"The label to apply to the aria-label of the button.\",\n    table: {\n      type: { summary: \"string\" }\n    },\n    control: {\n      type: \"text\"\n    }\n  }\n};\nexport const makeOverBackground = (staticColor) => (story) => {\n  const color = staticColor === \"black\" ? \"var(--spectrum-docs-static-black-background-color)\" : \"var(--spectrum-docs-static-white-background-color)\";\n  return html`\n            <div\n                style=\"\n                    background-color: ${color};\n                    padding: calc(var(--swc-scale-factor) * 14px) calc(var(--swc-scale-factor) * 20px);\n                    display: inline-block;\n                \"\n            >\n                ${story()}\n            </div>\n        `;\n};\nexport function renderButton(properties) {\n  return html`\n        <sp-button\n            ?disabled=${!!properties.disabled}\n            href=${ifDefined(properties.href)}\n            ?icon-only=${properties.iconOnly}\n            ?pending=${!!properties.pending}\n            ?quiet=\"${!!properties.quiet}\"\n            ?no-wrap=\"${!!properties.noWrap}\"\n            size=${ifDefined(properties.size)}\n            target=${ifDefined(properties.target)}\n            treatment=${ifDefined(properties.treatment)}\n            variant=${ifDefined(properties.variant)}\n            static-color=${ifDefined(properties.staticColor)}\n            label=${ifDefined(properties.label)}\n        >\n            ${properties.content || \"Click Me\"}\n        </sp-button>\n    `;\n}\nexport function renderButtonSet(properties) {\n  const disabled = Object.assign({}, properties, { disabled: true });\n  const icon = Object.assign({}, properties, {\n    content: html`\n            <sp-icon-help slot=\"icon\"></sp-icon-help>\n            Click Me\n        `\n  });\n  return html`\n        ${renderButton(properties)} ${renderButton(disabled)}\n        ${renderButton(icon)}\n    `;\n}\nexport function renderIconButtonSet(properties) {\n  const disabled = Object.assign({}, properties, {\n    iconOnly: true,\n    disabled: true\n  });\n  const iconOnly = Object.assign({}, properties, {\n    iconOnly: true,\n    content: html`\n            <sp-icon-help slot=\"icon\"></sp-icon-help>\n        `\n  });\n  return html`\n        ${renderButton(iconOnly)} ${renderButton(disabled)}\n    `;\n}\nexport const bellIcon = html`\n    <svg slot=\"icon\" viewBox=\"0 0 36 36\" focusable=\"false\" aria-hidden=\"true\">\n        <path\n            d=\"M16 36a4.407 4.407 0 0 0 4-4h-8a4.407 4.407 0 0 0 4 4zm9.143-24.615c0-3.437-3.206-4.891-7.143-5.268V3a1.079 1.079 0 0 0-1.143-1h-1.714A1.079 1.079 0 0 0 14 3v3.117c-3.937.377-7.143 1.831-7.143 5.268C6.857 26.8 2 26.111 2 28.154V30h28v-1.846C30 26 25.143 26.8 25.143 11.385z\"\n        ></path>\n    </svg>\n`;\nexport const renderWithIcon = (props) => {\n  return html`\n        <style>\n            .row {\n                padding: 10px;\n            }\n        </style>\n        <div class=\"row\">\n            ${renderButtonSet({\n    ...props,\n    content: html`\n                    <sp-icon-help slot=\"icon\"></sp-icon-help>\n                    Help\n                `\n  })}\n        </div>\n        <div class=\"row\">\n            ${renderButtonSet({\n    ...props,\n    content: html`\n                    ${bellIcon} Custom SVG\n                `\n  })}\n        </div>\n    `;\n};\nexport const renderWithIconOnly = (props) => {\n  return html`\n        ${renderIconButtonSet({\n    ...props,\n    content: html`\n                <sp-icon-help slot=\"icon\"></sp-icon-help>\n            `\n  })}\n    `;\n};\nexport const renderMinWidthButton = (props) => {\n  return html`\n        <style>\n            sp-button {\n                min-width: 300px;\n            }\n        </style>\n        ${renderButtonSet(props)}\n    `;\n};\nconst href = \"https://github.com/adobe/spectrum-web-components\";\nexport const renderLink = (props) => renderButtonSet({\n  ...props,\n  href\n});\nexport const renderLinkWithTarget = (props) => renderButtonSet({\n  ...props,\n  href,\n  target: \"_blank\"\n});\n//# sourceMappingURL=index.js.map\n","\"use strict\";import{tag as r}from\"../custom-tag.js\";export{setCustomTemplateLiteralTag}from\"../custom-tag.js\";export const SettingsIcon=({width:l=24,height:c=24,hidden:t=!1,title:e=\"Settings\"}={})=>r`<svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    width=\"${l}\"\n    height=\"${c}\"\n    viewBox=\"0 0 20 20\"\n    aria-hidden=${t?\"true\":\"false\"}\n    role=\"img\"\n    fill=\"currentColor\"\n    aria-label=\"${e}\"\n  >\n    <path\n      d=\"M10.00391,12.58887c-.88818,0-1.75293-.45996-2.22803-1.2832h0c-.70801-1.22754-.28613-2.80078.93994-3.50879.59326-.34375,1.28516-.43359,1.94922-.25684.6626.17773,1.21631.60352,1.55908,1.19727.34326.59375.43408,1.28613.25684,1.94824-.17773.66309-.60254,1.2168-1.19678,1.55957-.40332.2334-.84473.34375-1.28027.34375ZM9.07471,10.55566c.29443.50879.94824.68359,1.45947.39062.24707-.14258.42383-.37305.49756-.64844s.03613-.56348-.10645-.81055c-.14307-.24707-.37305-.42383-.64893-.49805-.2749-.07324-.56299-.03516-.81055.10645-.51025.29492-.68555.94922-.39111,1.45996h0Z\"\n      fill=\"currentColor\"\n    />\n    <path\n      d=\"M6.90674,18.31836c-.33936,0-.68213-.08496-.99219-.26465l-.81982-.47266c-.89307-.51367-1.25-1.64941-.81104-2.58301l.58008-1.2334c-.26514-.36328-.48975-.75098-.67188-1.16113l-1.35693-.1123c-1.02881-.08496-1.83447-.95996-1.83447-1.99121l-.00098-.94629c0-1.0332.80518-1.90918,1.8335-1.99414l1.35449-.11426c.0918-.20898.19238-.40918.30176-.59961.10986-.19141.2334-.37891.36914-.56445l-.58057-1.22949c-.44092-.93262-.08643-2.06836.80713-2.58496l.82031-.47363c.89258-.5166,2.05371-.25879,2.64258.58984l.77734,1.11816c.44385-.0498.89209-.04785,1.34082,0l.77539-1.11914c.58887-.84961,1.75098-1.10938,2.64355-.59375l.81982.47266c.89404.51562,1.24951,1.65137.81055,2.58398l-.58008,1.23242c.26562.36426.49023.75195.67188,1.16113l1.35693.1123c1.02832.08496,1.83398.95996,1.83496,1.99121l.00049.94727c.00098,1.03125-.80371,1.90723-1.83203,1.99414l-1.35547.11426c-.09131.20898-.19189.4082-.30273.59961h0c-.10938.18945-.23242.37793-.36816.56348l.58057,1.22949c.44043.93164.08643,2.06738-.80664,2.58496l-.8208.47461c-.89355.51855-2.05371.25781-2.64258-.59082l-.77734-1.11816c-.4458.04883-.89404.04785-1.34082.00098l-.77637,1.12012c-.38379.55371-1.01172.85645-1.65039.85645ZM6.9043,3.22461c-.08496,0-.17041.02148-.24805.06641l-.8208.47461c-.22266.12891-.31152.41211-.20117.64551l.77881,1.65039c.12598.2666.08398.58203-.10742.80664-.2041.23926-.37305.47656-.5166.72559-.14111.24609-.26514.51855-.36816.80957-.09814.27832-.3501.47266-.64404.49707l-1.81885.15332c-.26172.02246-.4585.23633-.4585.49902l.00098.94629c0,.25781.20117.47656.4585.49805l1.81934.15039c.29395.02441.54639.21875.64502.49707.19873.56055.49707,1.07617.88672,1.53223.19189.22363.23438.54004.10889.80664l-.77783,1.65234c-.10938.2334-.021.51758.20264.64551l.82031.47363c.22412.12988.51416.06348.66016-.14746l1.04102-1.50195c.16748-.24219.45898-.36914.75244-.30957.58838.10742,1.18457.1084,1.77002-.00098.28955-.05469.58496.06641.75342.30957l1.04199,1.49902c.14648.20996.43848.27637.66064.14746l.82031-.47363c.22607-.13086.31348-.40918.20117-.64648l-.77881-1.65039c-.12598-.2666-.08398-.58203.10742-.80664.2041-.24023.37305-.47656.51562-.72461l.00049-.00098c.14258-.24707.26318-.51172.36865-.80957.09863-.27832.35059-.47266.64453-.49707l1.81885-.15234c.25635-.02246.45752-.24121.45752-.49902l-.00049-.94727c0-.26172-.19727-.47559-.45898-.49805l-1.81885-.15039c-.29395-.02441-.54639-.21875-.64502-.49707-.19775-.55957-.49658-1.0752-.88721-1.53223-.19141-.22461-.23389-.54004-.1084-.80664l.77734-1.65234c.10986-.2334.021-.51758-.20264-.64648l-.81982-.47266c-.22461-.12695-.51416-.06152-.66113.14941l-1.03955,1.5c-.16797.24316-.45898.36816-.75293.31055-.59131-.10938-1.1875-.10938-1.77002,0-.29199.05176-.58545-.06738-.75342-.30957l-1.04199-1.49902c-.09619-.1377-.25293-.21387-.41211-.21387Z\"\n      fill=\"currentColor\"\n    />\n  </svg>`;\n//# sourceMappingURL=Settings.js.map\n","\"use strict\";import{html as e}from\"@spectrum-web-components/base\";import{IconBase as t}from\"@spectrum-web-components/icon\";import{setCustomTemplateLiteralTag as r}from\"../custom-tag.js\";import{SettingsIcon as s}from\"../icons-s2/Settings.js\";import{SettingsIcon as l}from\"../icons/Settings.js\";export class IconSettings extends t{render(){return r(e),this.spectrumVersion===2?s({hidden:!this.label,title:this.label}):l({hidden:!this.label,title:this.label})}}\n//# sourceMappingURL=IconSettings.js.map\n","\"use strict\";import{tag as o}from\"../custom-tag.js\";export{setCustomTemplateLiteralTag}from\"../custom-tag.js\";export const HelpCircleIcon=({width:e=24,height:l=24,hidden:r=!1,title:t=\"Help Circle\"}={})=>o`<svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    width=\"${e}\"\n    height=\"${l}\"\n    viewBox=\"0 0 20 20\"\n    aria-hidden=${r?\"true\":\"false\"}\n    role=\"img\"\n    fill=\"currentColor\"\n    aria-label=\"${t}\"\n  >\n    <path\n      d=\"m9.9881,15.52679c-.23065.00813-.45538-.07387-.62661-.22862-.33033-.36505-.33033-.92102,0-1.28607.16935-.15851.39483-.24308.62664-.23504.23635-.00948.46589.08035.63302.24775.16207.1679.24916.39432.24137.62755.01238.23497-.06959.46515-.2277.6394-.17358.16474-.40786.24988-.64671.23503Z\"\n      fill=\"currentColor\"\n    />\n    <path\n      d=\"m10,18.75c-4.8252,0-8.75-3.9248-8.75-8.75S5.1748,1.25,10,1.25s8.75,3.9248,8.75,8.75-3.9248,8.75-8.75,8.75Zm0-16c-3.99805,0-7.25,3.25195-7.25,7.25s3.25195,7.25,7.25,7.25,7.25-3.25195,7.25-7.25-3.25195-7.25-7.25-7.25Z\"\n      fill=\"currentColor\"\n    />\n    <path\n      d=\"m9.99219,12.70605c-.41406,0-.75-.33594-.75-.75,0-1.02246.07031-1.71387,1.03906-2.68262.78516-.78613.91797-1.10156.91797-1.65137,0-.20996-.06641-1.25781-1.37402-1.25781-1.36523,0-1.51074,1.15625-1.52637,1.3877-.02637.41309-.39258.7207-.79688.69922-.41406-.02734-.72656-.38379-.69922-.79688.06348-.96484.77637-2.79004,3.02246-2.79004,1.88672,0,2.87402,1.3877,2.87402,2.75781,0,1.14355-.45703,1.81055-1.35742,2.71191-.57617.57617-.59961.81152-.59961,1.62207,0,.41406-.33594.75-.75.75Z\"\n      fill=\"currentColor\"\n    />\n  </svg>`;\n//# sourceMappingURL=HelpCircle.js.map\n","\"use strict\";import{tag as r}from\"../custom-tag.js\";export{setCustomTemplateLiteralTag}from\"../custom-tag.js\";export const HelpIcon=({width:e=24,height:a=24,hidden:t=!1,title:l=\"Help\"}={})=>r`<svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    height=\"${a}\"\n    viewBox=\"0 0 36 36\"\n    width=\"${e}\"\n    aria-hidden=${t?\"true\":\"false\"}\n    role=\"img\"\n    fill=\"currentColor\"\n    aria-label=\"${l}\"\n  >\n    <path\n      d=\"M18 2a16 16 0 1 0 16 16A16 16 0 0 0 18 2Zm.047 26.876a2.69 2.69 0 1 1 0-5.375 2.62 2.62 0 0 1 2.8 2.67 2.581 2.581 0 0 1-2.8 2.705Zm3.566-12.818-.2.21c-.789.829-1.684 1.768-1.684 2.351a2.771 2.771 0 0 0 .359 1.348l.145.277-.113.429a.617.617 0 0 1-.567.378h-2.682a.867.867 0 0 1-.65-.235 4.111 4.111 0 0 1-.845-2.525c0-1.677.934-2.714 2.225-4.15.2-.219.39-.42.575-.609.629-.651 1.013-1.071 1.013-1.515 0-.308 0-1.245-1.786-1.245a5.918 5.918 0 0 0-3.159.919.592.592 0 0 1-.653-.02l-.237-.169-.055-.443v-2.9a.879.879 0 0 1 .393-.819 8.275 8.275 0 0 1 4.3-1.1c3.291 0 5.5 2.117 5.5 5.272a6.131 6.131 0 0 1-1.879 4.546Z\"\n    />\n  </svg>`;\n//# sourceMappingURL=Help.js.map\n","\"use strict\";import{tag as r}from\"../custom-tag.js\";export{setCustomTemplateLiteralTag}from\"../custom-tag.js\";export const SettingsIcon=({width:a=24,height:l=24,hidden:t=!1,title:e=\"Settings\"}={})=>r`<svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    height=\"${l}\"\n    viewBox=\"0 0 36 36\"\n    width=\"${a}\"\n    aria-hidden=${t?\"true\":\"false\"}\n    role=\"img\"\n    fill=\"currentColor\"\n    aria-label=\"${e}\"\n  >\n    <path\n      d=\"M32.9 15.793h-3.111a11.953 11.953 0 0 0-1.842-4.507l2.205-2.206a1.1 1.1 0 0 0 0-1.56l-1.673-1.672a1.1 1.1 0 0 0-1.56 0l-2.205 2.205a11.925 11.925 0 0 0-4.507-1.841V3.1A1.1 1.1 0 0 0 19.1 2h-2.2a1.1 1.1 0 0 0-1.1 1.1v3.112a11.925 11.925 0 0 0-4.507 1.841l-2.2-2.205a1.1 1.1 0 0 0-1.56 0L5.848 7.52a1.1 1.1 0 0 0 0 1.56l2.205 2.206a11.953 11.953 0 0 0-1.842 4.507H3.1A1.1 1.1 0 0 0 2 16.9v2.2a1.1 1.1 0 0 0 1.1 1.1h3.111a11.934 11.934 0 0 0 1.842 4.507l-2.205 2.212a1.1 1.1 0 0 0 0 1.56l1.673 1.673a1.1 1.1 0 0 0 1.56 0l2.205-2.205a11.925 11.925 0 0 0 4.507 1.841V32.9A1.1 1.1 0 0 0 16.9 34h2.2a1.1 1.1 0 0 0 1.1-1.1v-3.112a11.925 11.925 0 0 0 4.507-1.841l2.205 2.205a1.1 1.1 0 0 0 1.56 0l1.673-1.673a1.1 1.1 0 0 0 0-1.56l-2.205-2.205a11.934 11.934 0 0 0 1.842-4.507H32.9A1.1 1.1 0 0 0 34 19.1v-2.2a1.1 1.1 0 0 0-1.1-1.107ZM22.414 18A4.414 4.414 0 1 1 18 13.586 4.414 4.414 0 0 1 22.414 18Z\"\n    />\n  </svg>`;\n//# sourceMappingURL=Settings.js.map\n","\"use strict\";\nvar __defProp = Object.defineProperty;\nvar __getOwnPropDesc = Object.getOwnPropertyDescriptor;\nvar __decorateClass = (decorators, target, key, kind) => {\n  var result = kind > 1 ? void 0 : kind ? __getOwnPropDesc(target, key) : target;\n  for (var i = decorators.length - 1, decorator; i >= 0; i--)\n    if (decorator = decorators[i])\n      result = (kind ? decorator(target, key, result) : decorator(result)) || result;\n  if (kind && result) __defProp(target, key, result);\n  return result;\n};\nimport {\n  html\n} from \"@spectrum-web-components/base\";\nimport {\n  queryAssignedNodes,\n  state\n} from \"@spectrum-web-components/base/src/decorators.js\";\nimport { randomID } from \"@spectrum-web-components/shared/src/random-id.js\";\nimport { Menu } from \"./Menu.dev.js\";\nimport \"@spectrum-web-components/menu/sp-menu.js\";\nimport menuGroupStyles from \"./menu-group.css.js\";\nexport class MenuGroup extends Menu {\n  constructor() {\n    super(...arguments);\n    this.headerId = \"\";\n  }\n  static get styles() {\n    return [...super.styles, menuGroupStyles];\n  }\n  /**\n   * a menu group must have the role `group`\n   * and should never function as a menu\n   */\n  get ownRole() {\n    return \"group\";\n  }\n  /**\n   * only a menu controls roving tabindex;\n   * groups should defer navigation to parent menu\n   */\n  get controlsRovingTabindex() {\n    return false;\n  }\n  updateLabel() {\n    const headerElement = this.headerElements.length ? this.headerElements[0] : void 0;\n    if (headerElement !== this.headerElement) {\n      if (this.headerElement && this.headerElement.id === this.headerId) {\n        this.headerElement.removeAttribute(\"id\");\n      }\n      if (headerElement) {\n        this.headerId = this.headerId || `sp-menu-group-label-${randomID()}`;\n        const headerId = headerElement.id || this.headerId;\n        if (!headerElement.id) {\n          headerElement.id = headerId;\n        }\n        this.setAttribute(\"aria-labelledby\", headerId);\n      } else {\n        this.removeAttribute(\"aria-labelledby\");\n      }\n    }\n    this.headerElement = headerElement;\n  }\n  render() {\n    return html`\n            <span class=\"header\" ?hidden=${!this.headerElement}>\n                <slot name=\"header\" @slotchange=${this.updateLabel}></slot>\n            </span>\n            ${this.renderMenuItemSlot()}\n        `;\n  }\n}\n__decorateClass([\n  queryAssignedNodes({\n    slot: \"header\",\n    flatten: true\n  })\n], MenuGroup.prototype, \"headerElements\", 2);\n__decorateClass([\n  state()\n], MenuGroup.prototype, \"headerElement\", 2);\n//# sourceMappingURL=MenuGroup.dev.js.map\n"],"names":[],"sourceRoot":""}