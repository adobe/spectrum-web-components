"use strict";(self.webpackChunk_adobe_spectrum_web_components=self.webpackChunk_adobe_spectrum_web_components||[]).push([[1646],{"./packages/color-area/stories/color-area.stories.js":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Default:function(){return Default},__namedExportsOrder:function(){return __namedExportsOrder},appliedValues:function(){return appliedValues},canvas:function(){return canvas},default:function(){return color_area_stories},disabled:function(){return disabled},joint:function(){return joint},sized:function(){return sized}});var index_dev=__webpack_require__("./tools/base/src/index.dev.js"),directives_dev=(__webpack_require__("./packages/color-slider/sp-color-slider.dev.js"),__webpack_require__("./tools/base/src/directives.dev.js")),decorators_dev=__webpack_require__("./tools/base/src/decorators.dev.js"),streaming_listener_dev=__webpack_require__("./tools/base/src/streaming-listener.dev.js"),ColorController_dev=(__webpack_require__("./packages/color-handle/sp-color-handle.dev.js"),__webpack_require__("./tools/reactive-controllers/src/ColorController.dev.js")),LanguageResolution_dev=__webpack_require__("./tools/reactive-controllers/src/LanguageResolution.dev.js"),platform_dev=__webpack_require__("./tools/shared/src/platform.dev.js");var color_area_css=index_dev.AH`
    @media (forced-colors:active){:host{--highcontrast-colorarea-border-color-disabled:GrayText;--highcontrast-colorarea-border-color:Canvas;--highcontrast-colorarea-fill-color-disabled:Canvas}.gradient,:host([disabled]){forced-color-adjust:none}}:host{--spectrum-colorarea-border-color:#0000001a;cursor:default;-webkit-user-select:none;user-select:none;min-inline-size:var(--mod-colorarea-min-width,var(--spectrum-color-area-minimum-width));min-block-size:var(--mod-colorarea-min-height,var(--spectrum-color-area-minimum-height));inline-size:var(--mod-colorarea-width,var(--spectrum-color-area-width));block-size:var(--mod-colorarea-height,var(--spectrum-color-area-height));box-sizing:border-box;border-radius:var(--mod-colorarea-border-radius,var(--spectrum-color-area-border-rounding));border:var(--mod-colorarea-border-width,var(--spectrum-color-area-border-width))solid var(--highcontrast-colorarea-border-color,var(--mod-colorarea-border-color,var(--spectrum-colorarea-border-color)));display:inline-block;position:relative}:host([focused]){z-index:1}:host([disabled]){pointer-events:none;background:var(--highcontrast-colorarea-fill-color-disabled,var(--mod-colorarea-disabled-background-color,var(--spectrum-disabled-background-color)));border:var(--mod-colorarea-border-width,var(--spectrum-color-area-border-width))solid var(--highcontrast-colorarea-border-color-disabled)}:host([disabled]) .gradient{display:none}.handle{transform:translate(calc(var(--mod-colorarea-width,var(--spectrum-color-area-width)) - var(--spectrum-color-area-border-width)));inset-block-start:0}.handle:dir(rtl),:host([dir=rtl]) .handle{inset-inline-end:0}.gradient{border-radius:var(--mod-colorarea-border-radius,var(--spectrum-color-area-border-rounding));block-size:100%;inline-size:100%}.slider{opacity:0;z-index:0;pointer-events:none;block-size:100%;inline-size:100%;margin:0;position:absolute;inset-block-start:0;inset-inline-start:0}:host{touch-action:none}:host:before{pointer-events:none}.gradient{overflow:hidden}.handle{transform:translate(var(--spectrum-colorarea-default-width),0)}::slotted(*){width:100%;height:100%}:host([dir=rtl]) .gradient{transform:scaleX(-1)}.slider[orient=vertical]{appearance:slider-vertical}.slider:focus{z-index:1}.fieldset{border:0;margin:0;padding:0}
`,__defProp=Object.defineProperty,__getOwnPropDesc=Object.getOwnPropertyDescriptor,__decorateClass=(decorators,target,key,kind)=>{for(var decorator,result=kind>1?void 0:kind?__getOwnPropDesc(target,key):target,i=decorators.length-1;i>=0;i--)(decorator=decorators[i])&&(result=(kind?decorator(target,key,result):decorator(result))||result);return kind&&result&&__defProp(target,key,result),result};class ColorArea extends index_dev.wG{constructor(){super(...arguments),this.disabled=!1,this.focused=!1,this.labelX="saturation",this.labelY="luminosity",this.languageResolver=new LanguageResolution_dev.P(this),this.colorController=new ColorController_dev.C(this,{manageAs:"hsv"}),this.activeAxis="x",this.step=.01,this.altered=0,this.activeKeys=new Set,this._valueChanged=!1,this._pointerDown=!1}static get styles(){return[color_area_css]}get hue(){return this.colorController.hue}set hue(value){this.colorController.hue=value}get value(){return this.colorController.colorValue}get color(){return this.colorController.colorValue}set color(color){this.colorController.color=color}get x(){return this.colorController.color.hsv.s/100}set x(x){if(x===this.x)return;const oldValue=this.x;this.inputX?(this.inputX.value=x.toString(),this.colorController.color.set("s",100*this.inputX.valueAsNumber)):this.colorController.color.set("s",100*x),this.requestUpdate("x",oldValue)}get y(){return this.colorController.color.hsv.v/100}set y(y){if(y===this.y)return;const oldValue=this.y;this.inputY&&(this.inputY.value=y.toString(),this.colorController.color.set("v",100*this.inputY.valueAsNumber)),this.requestUpdate("y",oldValue)}focus(focusOptions={}){super.focus(focusOptions),this.forwardFocus()}forwardFocus(){this.focused=this.hasVisibleFocusInTree(),"x"===this.activeAxis?this.inputX.focus():this.inputY.focus()}handleFocus(){this.focused=!0,this._valueChanged=!1}handleBlur(){this._pointerDown||(this.altered=0,this.focused=!1,this._valueChanged=!1)}handleKeydown(event){const{code:code}=event;this.focused=!0,this.altered=[event.shiftKey,event.ctrlKey,event.altKey].filter(key=>!!key).length;(0===code.search("Arrow")||0===code.search("Page")||0===code.search("Home")||0===code.search("End"))&&(event.preventDefault(),this.activeKeys.add(code),this.handleKeypress())}handleKeypress(){let deltaX=0,deltaY=0;const step=Math.max(this.step,5*this.altered*this.step);if(this.activeKeys.forEach(code=>{switch(code){case"ArrowUp":deltaY=step;break;case"ArrowDown":deltaY=-1*step;break;case"ArrowLeft":deltaX=this.step*(this.isLTR?-1:1);break;case"ArrowRight":deltaX=this.step*(this.isLTR?1:-1);break;case"PageUp":deltaY=10*step;break;case"PageDown":deltaY=-10*step;break;case"Home":deltaX=step*(this.isLTR?-10:10);break;case"End":deltaX=step*(this.isLTR?10:-10)}}),0!=deltaX?(this.activeAxis="x",this.inputX.focus()):0!=deltaY&&(this.activeAxis="y",this.inputY.focus()),this.x=Math.min(1,Math.max(this.x+deltaX,0)),this.y=Math.min(1,Math.max(this.y+deltaY,0)),this.colorController.savePreviousColor(),0!=deltaX||0!=deltaY){this._valueChanged=!0,this.dispatchEvent(new Event("input",{bubbles:!0,composed:!0}));this.dispatchEvent(new Event("change",{bubbles:!0,composed:!0,cancelable:!0}))||this.colorController.restorePreviousColor()}}handleKeyup(event){event.preventDefault();const{code:code}=event;this.activeKeys.delete(code)}handleInput(event){const{valueAsNumber:valueAsNumber,name:name}=event.target;this[name]=valueAsNumber}handleChange(event){this.handleInput(event),this.dispatchEvent(new Event("change",{bubbles:!0,composed:!0,cancelable:!0}))}handlePointerdown(event){0===event.button?(this._pointerDown=!0,this.colorController.savePreviousColor(),this.boundingClientRect=this.getBoundingClientRect(),event.target.setPointerCapture(event.pointerId),"mouse"===event.pointerType&&(this.focused=!0)):event.preventDefault()}handlePointermove(event){const[x,y]=this.calculateHandlePosition(event);this._valueChanged=!1,this.x=x,this.y=y,this.dispatchEvent(new Event("input",{bubbles:!0,composed:!0,cancelable:!0}))}handlePointerup(event){event.preventDefault(),this._pointerDown=!1,event.target.releasePointerCapture(event.pointerId);const applyDefault=this.dispatchEvent(new Event("change",{bubbles:!0,composed:!0,cancelable:!0}));this.inputX.focus(),"mouse"===event.pointerType&&(this.focused=!1),applyDefault||this.colorController.restorePreviousColor()}calculateHandlePosition(event){if(!this.boundingClientRect)return[this.x,this.y];const rect=this.boundingClientRect,minOffsetX=rect.left,minOffsetY=rect.top,offsetX=event.clientX,offsetY=event.clientY,width=rect.width,height=rect.height,percentX=Math.max(0,Math.min(1,(offsetX-minOffsetX)/width)),percentY=Math.max(0,Math.min(1,(offsetY-minOffsetY)/height));return[this.isLTR?percentX:1-percentX,1-percentY]}handleAreaPointerdown(event){0===event.button&&(event.stopPropagation(),event.preventDefault(),this.handle.dispatchEvent(new PointerEvent("pointerdown",event)),this.handlePointermove(event))}render(){const{width:width=0,height:height=0}=this.boundingClientRect||{},isMobile=(0,platform_dev.m0)()||(0,platform_dev.un)(),ariaRoleDescription=(0,directives_dev.JR)(isMobile?void 0:"2d slider"),ariaLabelX=this.labelX,ariaLabelY=this.labelY,ariaValueX=new Intl.NumberFormat(this.languageResolver.language,{style:"percent",unitDisplay:"narrow"}).format(this.x),ariaValueY=new Intl.NumberFormat(this.languageResolver.language,{style:"percent",unitDisplay:"narrow"}).format(this.y),style_background=`linear-gradient(to top, black 0%, hsla(${this.hue}, 100%, 0.01%, 0) 100%),linear-gradient(to right, white 0%, hsla(${this.hue}, 100%, 0.01%, 0) 100%), hsl(${this.hue}, 100%, 50%);`;return index_dev.qy`
            <div
                @pointerdown=${this.handleAreaPointerdown}
                class="gradient"
                style="background: ${style_background};"
            >
                <slot name="gradient"></slot>
            </div>

            <sp-color-handle
                tabindex=${(0,directives_dev.JR)(this.focused?void 0:"0")}
                @focus=${this.forwardFocus}
                ?focused=${this.focused}
                class="handle"
                color=${this.colorController.getHslString()}
                ?disabled=${this.disabled}
                style=${`transform: translate(${(this.isLTR?this.x:1-this.x)*width}px, ${height-this.y*height}px);`}
                ${(0,streaming_listener_dev.b)({start:["pointerdown",this.handlePointerdown],streamInside:["pointermove",this.handlePointermove],end:[["pointerup","pointercancel","pointerleave"],this.handlePointerup]})}
            ></sp-color-handle>

            <fieldset
                class="fieldset"
                aria-label=${(0,directives_dev.JR)(isMobile?"Color Picker":void 0)}
            >
                <div role="presentation">
                    <input
                        type="range"
                        class="slider"
                        name="x"
                        aria-label=${isMobile?ariaLabelX:`${ariaLabelX} Color Picker`}
                        aria-roledescription=${ariaRoleDescription}
                        aria-orientation="horizontal"
                        aria-valuetext=${isMobile?ariaValueX:`${ariaValueX}, ${ariaLabelX}${this._valueChanged?"":`, ${ariaValueY}, ${ariaLabelY}`}`}
                        min="0"
                        max="1"
                        step=${this.step}
                        tabindex="-1"
                        .value=${String(this.x)}
                        @input=${this.handleInput}
                        @change=${this.handleChange}
                    />
                </div>
                <div role="presentation">
                    <input
                        type="range"
                        class="slider"
                        name="y"
                        aria-label=${isMobile?ariaLabelY:`${ariaLabelY} Color Picker`}
                        aria-roledescription=${ariaRoleDescription}
                        aria-orientation="vertical"
                        aria-valuetext=${isMobile?ariaValueY:`${ariaValueY}, ${ariaLabelY}${this._valueChanged?"":`, ${ariaValueX}, ${ariaLabelX}`}`}
                        orient="vertical"
                        min="0"
                        max="1"
                        step=${this.step}
                        tabindex="-1"
                        .value=${String(this.y)}
                        @input=${this.handleInput}
                        @change=${this.handleChange}
                    />
                </div>
            </fieldset>
        `}firstUpdated(changed){super.firstUpdated(changed),this.boundingClientRect=this.getBoundingClientRect(),this.addEventListener("focus",this.handleFocus),this.addEventListener("blur",this.handleBlur),this.addEventListener("keyup",this.handleKeyup),this.addEventListener("keydown",this.handleKeydown)}updated(changed){if(super.updated(changed),this.x!==this.inputX.valueAsNumber&&this.colorController.color.set("s",100*this.inputX.valueAsNumber),this.y!==this.inputY.valueAsNumber&&this.colorController.color.set("v",100*(1-this.inputY.valueAsNumber)),changed.has("focused")&&this.focused){const parentX=this.inputX.parentElement,parentY=this.inputY.parentElement;if(!parentX.shadowRoot&&!parentY.shadowRoot){parentX.attachShadow({mode:"open"}),parentY.attachShadow({mode:"open"});const slot='<div tabindex="-1"><slot></slot></div>';parentX.shadowRoot.innerHTML=slot,parentY.shadowRoot.innerHTML=slot}}}connectedCallback(){var _a;super.connectedCallback(),!this.observer&&window.ResizeObserver&&(this.observer=new window.ResizeObserver(entries=>{for(const entry of entries)this.boundingClientRect=entry.contentRect;this.requestUpdate()})),null==(_a=this.observer)||_a.observe(this)}disconnectedCallback(){var _a;null==(_a=this.observer)||_a.unobserve(this),super.disconnectedCallback()}}__decorateClass([(0,decorators_dev.MZ)({type:String,reflect:!0})],ColorArea.prototype,"dir",2),__decorateClass([(0,decorators_dev.MZ)({type:Boolean,reflect:!0})],ColorArea.prototype,"disabled",2),__decorateClass([(0,decorators_dev.MZ)({type:Boolean,reflect:!0})],ColorArea.prototype,"focused",2),__decorateClass([(0,decorators_dev.MZ)({type:String,attribute:"label-x"})],ColorArea.prototype,"labelX",2),__decorateClass([(0,decorators_dev.MZ)({type:String,attribute:"label-y"})],ColorArea.prototype,"labelY",2),__decorateClass([(0,decorators_dev.P)(".handle")],ColorArea.prototype,"handle",2),__decorateClass([(0,decorators_dev.MZ)({type:Number})],ColorArea.prototype,"hue",1),__decorateClass([(0,decorators_dev.MZ)({type:String})],ColorArea.prototype,"value",1),__decorateClass([(0,decorators_dev.MZ)({type:String})],ColorArea.prototype,"color",1),__decorateClass([(0,decorators_dev.MZ)({attribute:!1})],ColorArea.prototype,"activeAxis",2),__decorateClass([(0,decorators_dev.MZ)({type:Number})],ColorArea.prototype,"x",1),__decorateClass([(0,decorators_dev.MZ)({type:Number})],ColorArea.prototype,"y",1),__decorateClass([(0,decorators_dev.MZ)({type:Number})],ColorArea.prototype,"step",2),__decorateClass([(0,decorators_dev.P)('[name="x"]')],ColorArea.prototype,"inputX",2),__decorateClass([(0,decorators_dev.P)('[name="y"]')],ColorArea.prototype,"inputY",2),(0,__webpack_require__("./tools/base/src/define-element.dev.js").e)("sp-color-area",ColorArea);var color_area_stories={title:"Color/Area",component:"sp-color-area",argTypes:{onInput:{action:"input"},onChange:{action:"change"},color:{name:"color",type:{name:"ColorTypes",required:"true"},description:"The color displayed by the ColorArea.",table:{type:{summary:"ColorTypes"},defaultValue:{summary:""}},control:"text"}}};const Default=({onChange:onChange,onInput:onInput})=>index_dev.qy`
        <sp-color-area
            color="#ff0000"
            @input=${({target:target})=>{const next=target.nextElementSibling;next.textContent=target.color,next.style.color=target.color,onInput(target.value)}}
            @change=${({target:target})=>{onChange(target.value)}}
        ></sp-color-area>
        <div style="color: #ff0000" aria-live="off">#ff0000</div>
    `,appliedValues=()=>index_dev.qy`
        <sp-color-area
            .color=${{space:"hsv",coords:[250,90,80]}}
        ></sp-color-area>
        <sp-color-area color="hsv(250, 90%, 80%)"></sp-color-area>
        <sp-color-area hue="250" x="0.1" y="0.1"></sp-color-area>
    `,joint=()=>index_dev.qy`
        <div>
            <sp-color-area
                color="hsv (0 100% 100%)"
                @input=${({target:target})=>{const next=target.nextElementSibling,display=next.nextElementSibling;display.textContent=target.color,display.style.color=target.color,next.color=target.color}}
            ></sp-color-area>
            <sp-color-slider
                color="hsv(0 100% 100%)"
                @input=${({target:{color:color,previousElementSibling:previousElementSibling,nextElementSibling:nextElementSibling}})=>{previousElementSibling.color=color,nextElementSibling.textContent=color,nextElementSibling.style.color=color}}
            ></sp-color-slider>
            <div style="color: hsv(0, 100%, 100%)">hsv(0, 100%, 100%)</div>
        </div>
    `,disabled=()=>index_dev.qy`
        <sp-color-area disabled></sp-color-area>
    `,sized=()=>index_dev.qy`
        <sp-color-area style="width: 72px; height: 72px"></sp-color-area>
    `,canvas=()=>index_dev.qy`
        <sp-color-area>
            <canvas slot="gradient"></canvas>
        </sp-color-area>
    `;class CanvasWriter extends HTMLElement{constructor(){super(),this.writeStatePromise=Promise.resolve(!1),this.writeStatePromise=new Promise(res=>{requestAnimationFrame(()=>{this.writeToCanvas(),res(!0)})})}writeToCanvas(){const{previousElementSibling:previousElementSibling}=this;if(previousElementSibling){const canvas2=previousElementSibling.querySelector('canvas[slot="gradient"]');if(canvas2){canvas2.width=canvas2.offsetWidth,canvas2.height=canvas2.offsetHeight;const context=canvas2.getContext("2d");if(context){context.rect(0,0,canvas2.width,canvas2.height);const gradB=context.createLinearGradient(0,0,0,canvas2.height);gradB.addColorStop(0,"white"),gradB.addColorStop(1,"black");const gradC=context.createLinearGradient(0,0,canvas2.width,0);gradC.addColorStop(0,"hsla(0,100%,50%,0)"),gradC.addColorStop(1,"hsla(0,100%,50%,1)"),context.fillStyle=gradB,context.fillRect(0,0,canvas2.width,canvas2.height),context.fillStyle=gradC,context.globalCompositeOperation="multiply",context.fillRect(0,0,canvas2.width,canvas2.height),context.globalCompositeOperation="source-over"}}}}get updateComplete(){return this.writeStatePromise}}customElements.define("area-canvas-writer",CanvasWriter),canvas.decorators=[story=>index_dev.qy`
            ${story()}
            <area-canvas-writer></area-canvas-writer>
        `];const __namedExportsOrder=["Default","appliedValues","joint","disabled","sized","canvas"];Default.parameters={...Default.parameters,docs:{...Default.parameters?.docs,source:{originalSource:'({\n  onChange,\n  onInput\n}) => {\n  return html`\n        <sp-color-area\n            color="#ff0000"\n            @input=${({\n    target\n  }) => {\n    const next = target.nextElementSibling;\n    next.textContent = target.color;\n    next.style.color = target.color;\n    onInput(target.value);\n  }}\n            @change=${({\n    target\n  }) => {\n    onChange(target.value);\n  }}\n        ></sp-color-area>\n        <div style="color: #ff0000" aria-live="off">#ff0000</div>\n    `;\n}',...Default.parameters?.docs?.source}}},appliedValues.parameters={...appliedValues.parameters,docs:{...appliedValues.parameters?.docs,source:{originalSource:'() => {\n  return html`\n        <sp-color-area\n            .color=${{\n    space: "hsv",\n    coords: [250, 90, 80]\n  }}\n        ></sp-color-area>\n        <sp-color-area color="hsv(250, 90%, 80%)"></sp-color-area>\n        <sp-color-area hue="250" x="0.1" y="0.1"></sp-color-area>\n    `;\n}',...appliedValues.parameters?.docs?.source}}},joint.parameters={...joint.parameters,docs:{...joint.parameters?.docs,source:{originalSource:'() => {\n  return html`\n        <div>\n            <sp-color-area\n                color="hsv (0 100% 100%)"\n                @input=${({\n    target\n  }) => {\n    const next = target.nextElementSibling;\n    const display = next.nextElementSibling;\n    display.textContent = target.color;\n    display.style.color = target.color;\n    next.color = target.color;\n  }}\n            ></sp-color-area>\n            <sp-color-slider\n                color="hsv(0 100% 100%)"\n                @input=${({\n    target: {\n      color,\n      previousElementSibling,\n      nextElementSibling\n    }\n  }) => {\n    previousElementSibling.color = color;\n    nextElementSibling.textContent = color;\n    nextElementSibling.style.color = color;\n  }}\n            ></sp-color-slider>\n            <div style="color: hsv(0, 100%, 100%)">hsv(0, 100%, 100%)</div>\n        </div>\n    `;\n}',...joint.parameters?.docs?.source}}},disabled.parameters={...disabled.parameters,docs:{...disabled.parameters?.docs,source:{originalSource:"() => {\n  return html`\n        <sp-color-area disabled></sp-color-area>\n    `;\n}",...disabled.parameters?.docs?.source}}},sized.parameters={...sized.parameters,docs:{...sized.parameters?.docs,source:{originalSource:'() => {\n  return html`\n        <sp-color-area style="width: 72px; height: 72px"></sp-color-area>\n    `;\n}',...sized.parameters?.docs?.source}}},canvas.parameters={...canvas.parameters,docs:{...canvas.parameters?.docs,source:{originalSource:'() => {\n  return html`\n        <sp-color-area>\n            <canvas slot="gradient"></canvas>\n        </sp-color-area>\n    `;\n}',...canvas.parameters?.docs?.source}}}}}]);
//# sourceMappingURL=color-area-stories-color-area-stories.a55783cc.iframe.bundle.js.map