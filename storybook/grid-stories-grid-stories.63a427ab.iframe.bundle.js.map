{"version":3,"file":"grid-stories-grid-stories.63a427ab.iframe.bundle.js","mappings":";;;AAiEA;;;AAGA;;;AAKA;;;;;;;;AAQA;;;;;;AASA;;ACxFA;AACA;;AAEA;;;AAGA;;;;;;ACRA;;ACEA;;AAEA;AACA;;;AAGA;;;;;;;;;ACuEA;;;;AC7CA;;;AAGA;AACA;AACA;;;AAGA;AACA;AACA;;;;;AAKA;;;;;;;;;;;;;;;;;;;;;;;AAyBA;;;;;;;;AA6BA;AACA;AACA;AACA;;;;AAIA;AACA;;;;;AAKA;;;;;;;;;;;;;;;;;;;;;;AAsBA;;;;AAoCA;AACA;AACA;AACA;AACA;AAIA;AACA;;;AAGA;;;;;;;;;;;;;;;;AAgBA;;AA0CA;;;;;;;;;;;AAgBA;;;AAMA;AACA;AACA;;;AAGA","sources":["webpack://@adobe/spectrum-web-components/./packages/action-bar/src/ActionBar.dev.js","webpack://@adobe/spectrum-web-components/./packages/icons-workflow/src/icons-s2/Edit.js","webpack://@adobe/spectrum-web-components/./packages/icons-workflow/src/elements/IconEdit.js","webpack://@adobe/spectrum-web-components/./packages/icons-workflow/src/icons/Edit.js","webpack://@adobe/spectrum-web-components/./tools/grid/src/Grid.dev.js","webpack://@adobe/spectrum-web-components/./tools/grid/stories/grid.stories.js"],"sourcesContent":["\"use strict\";\nvar __defProp = Object.defineProperty;\nvar __getOwnPropDesc = Object.getOwnPropertyDescriptor;\nvar __decorateClass = (decorators, target, key, kind) => {\n  var result = kind > 1 ? void 0 : kind ? __getOwnPropDesc(target, key) : target;\n  for (var i = decorators.length - 1, decorator; i >= 0; i--)\n    if (decorator = decorators[i])\n      result = (kind ? decorator(target, key, result) : decorator(result)) || result;\n  if (kind && result) __defProp(target, key, result);\n  return result;\n};\nimport {\n  html,\n  SpectrumElement\n} from \"@spectrum-web-components/base\";\nimport { property } from \"@spectrum-web-components/base/src/decorators.js\";\nimport \"@spectrum-web-components/popover/sp-popover.js\";\nimport \"@spectrum-web-components/action-group/sp-action-group.js\";\nimport \"@spectrum-web-components/button/sp-close-button.js\";\nimport \"@spectrum-web-components/field-label/sp-field-label.js\";\nimport actionBarStyles from \"./action-bar.css.js\";\nimport { ifDefined } from \"@spectrum-web-components/base/src/directives.js\";\nimport { FocusVisiblePolyfillMixin } from \"@spectrum-web-components/shared/src/focus-visible.js\";\nexport const actionBarVariants = [\"sticky\", \"fixed\"];\nexport class ActionBar extends FocusVisiblePolyfillMixin(SpectrumElement) {\n  constructor() {\n    super(...arguments);\n    this.emphasized = false;\n    this.flexible = false;\n    this.open = false;\n    this._variant = \"\";\n  }\n  static get styles() {\n    return [actionBarStyles];\n  }\n  set variant(variant) {\n    if (variant === this.variant) {\n      return;\n    }\n    if (actionBarVariants.includes(variant)) {\n      this.setAttribute(\"variant\", variant);\n      this._variant = variant;\n      return;\n    }\n    this.removeAttribute(\"variant\");\n    this._variant = \"\";\n  }\n  get variant() {\n    return this._variant;\n  }\n  handleClick() {\n    this.open = false;\n    const applyDefault = this.dispatchEvent(\n      new Event(\"close\", {\n        bubbles: true,\n        composed: true,\n        cancelable: true\n      })\n    );\n    if (!applyDefault) {\n      this.open = true;\n    }\n  }\n  render() {\n    return html`\n            <sp-popover ?open=${this.open} id=\"popover\">\n                <slot name=\"override\">\n                    <sp-close-button\n                        static-color=${ifDefined(\n      this.emphasized ? \"white\" : void 0\n    )}\n                        class=\"close-button\"\n                        label=\"Clear selection\"\n                        @click=${this.handleClick}\n                    ></sp-close-button>\n                    <sp-field-label class=\"field-label\">\n                        <slot></slot>\n                    </sp-field-label>\n                    <sp-action-group\n                        class=\"action-group\"\n                        quiet\n                        static-color=${ifDefined(\n      this.emphasized ? \"white\" : void 0\n    )}\n                    >\n                        <slot name=\"buttons\"></slot>\n                    </sp-action-group>\n                </slot>\n            </sp-popover>\n        `;\n  }\n}\n__decorateClass([\n  property({ type: Boolean, reflect: true })\n], ActionBar.prototype, \"emphasized\", 2);\n__decorateClass([\n  property({ type: Boolean, reflect: true })\n], ActionBar.prototype, \"flexible\", 2);\n__decorateClass([\n  property({ type: Boolean, reflect: true })\n], ActionBar.prototype, \"open\", 2);\n__decorateClass([\n  property({ type: String })\n], ActionBar.prototype, \"variant\", 1);\n//# sourceMappingURL=ActionBar.dev.js.map\n","\"use strict\";import{tag as a}from\"../custom-tag.js\";export{setCustomTemplateLiteralTag}from\"../custom-tag.js\";export const EditIcon=({width:t=24,height:l=24,hidden:e=!1,title:r=\"Edit\"}={})=>a`<svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    width=\"${t}\"\n    height=\"${l}\"\n    viewBox=\"0 0 20 20\"\n    aria-hidden=${e?\"true\":\"false\"}\n    role=\"img\"\n    fill=\"currentColor\"\n    aria-label=\"${r}\"\n  >\n    <path\n      d=\"m17.78076,1.75684c-1.27197-1.04102-3.22705-.89844-4.4502.32324L3.07764,12.33398c-.32031.31934-.55859.7168-.68896,1.15039l-1.38428,4.58398c-.08008.26465-.00781.55176.1875.74707.14258.14258.33447.21973.53027.21973.07227,0,.14551-.01074.2168-.03223l4.58252-1.38379c.43359-.12988.83154-.36816,1.15088-.68848,0,0,10.16846-10.16797,10.35547-10.35547.64795-.64746.99316-1.54492.94775-2.45996-.0459-.91504-.48145-1.77539-1.19482-2.3584ZM2.84473,17.16309l.97998-3.24609c.02716-.09033.06714-.17578.11377-.25732l2.40869,2.40918c-.08154.04639-.16718.08643-.25781.11377l-3.24463.98047Zm14.12158-11.64746c-.15472.15552-7.09985,7.1001-9.52545,9.52588l-2.47461-2.4751L14.39111,3.14062c.38623-.38672.896-.58594,1.38965-.58594.38086,0,.75244.11914,1.05029.3623.3916.32129.62109.77246.646,1.27246.0249.49316-.16113.97656-.51074,1.32617Z\"\n      fill=\"currentColor\"\n    />\n  </svg>`;\n//# sourceMappingURL=Edit.js.map\n","\"use strict\";import{html as e}from\"@spectrum-web-components/base\";import{IconBase as t}from\"@spectrum-web-components/icon\";import{setCustomTemplateLiteralTag as r}from\"../custom-tag.js\";import{EditIcon as l}from\"../icons-s2/Edit.js\";import{EditIcon as i}from\"../icons/Edit.js\";export class IconEdit extends t{render(){return r(e),this.spectrumVersion===2?l({hidden:!this.label,title:this.label}):i({hidden:!this.label,title:this.label})}}\n//# sourceMappingURL=IconEdit.js.map\n","\"use strict\";import{tag as r}from\"../custom-tag.js\";export{setCustomTemplateLiteralTag}from\"../custom-tag.js\";export const EditIcon=({width:t=24,height:e=24,hidden:a=!1,title:l=\"Edit\"}={})=>r`<svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    height=\"${e}\"\n    viewBox=\"0 0 36 36\"\n    width=\"${t}\"\n    aria-hidden=${a?\"true\":\"false\"}\n    role=\"img\"\n    fill=\"currentColor\"\n    aria-label=\"${l}\"\n  >\n    <path\n      d=\"M33.567 8.2 27.8 2.432a1.215 1.215 0 0 0-.866-.353H26.9a1.371 1.371 0 0 0-.927.406L5.084 23.372a.99.99 0 0 0-.251.422L2.055 33.1c-.114.377.459.851.783.851a.251.251 0 0 0 .062-.007c.276-.063 7.866-2.344 9.311-2.778a.972.972 0 0 0 .414-.249l20.888-20.889a1.372 1.372 0 0 0 .4-.883 1.221 1.221 0 0 0-.346-.945ZM11.4 29.316c-2.161.649-4.862 1.465-6.729 2.022l2.009-6.73Z\"\n    />\n  </svg>`;\n//# sourceMappingURL=Edit.js.map\n","\"use strict\";\nvar __defProp = Object.defineProperty;\nvar __getOwnPropDesc = Object.getOwnPropertyDescriptor;\nvar __decorateClass = (decorators, target, key, kind) => {\n  var result = kind > 1 ? void 0 : kind ? __getOwnPropDesc(target, key) : target;\n  for (var i = decorators.length - 1, decorator; i >= 0; i--)\n    if (decorator = decorators[i])\n      result = (kind ? decorator(target, key, result) : decorator(result)) || result;\n  if (kind && result) __defProp(target, key, result);\n  return result;\n};\nimport {\n  adoptStyles,\n  html,\n  render\n} from \"@spectrum-web-components/base\";\nimport { property } from \"@spectrum-web-components/base/src/decorators.js\";\nimport { LitVirtualizer } from \"@lit-labs/virtualizer/LitVirtualizer.js\";\nimport { grid } from \"@lit-labs/virtualizer/layouts/grid.js\";\nimport styles from \"./grid.css.js\";\nimport { GridController } from \"./GridController.dev.js\";\nexport class Grid extends LitVirtualizer {\n  constructor() {\n    super(...arguments);\n    this.__gridPart = void 0;\n    this.gap = \"0\";\n    this.items = [];\n    this.itemSize = {\n      width: 200,\n      height: 200\n    };\n    this.selected = [];\n    this.gridController = new GridController(this, {\n      elements: () => [],\n      itemSize: () => this.itemSize,\n      /* c8 ignore next 2 */\n      gap: () => this.gap,\n      padding: () => this.padding || this.gap\n    });\n  }\n  static get styles() {\n    return [styles];\n  }\n  handleChange(event) {\n    const target = event.target;\n    if (this.lastTargetForChange === target) {\n      return;\n    }\n    this.lastTargetForChange = target;\n    this.animationFrameId = requestAnimationFrame(() => {\n      this.lastTargetForChange = void 0;\n    });\n    const value = this.items[parseFloat(target.getAttribute(\"key\") || \"\")];\n    const selected = [...this.selected];\n    if (!selected.includes(value)) {\n      selected.push(value);\n    } else {\n      const index = selected.indexOf(value);\n      if (index > -1) {\n        selected.splice(index, 1);\n      }\n    }\n    this.selected = selected;\n  }\n  createRenderRoot() {\n    var _a;\n    const renderRoot = (_a = this.shadowRoot) != null ? _a : this.attachShadow(\n      this.constructor.shadowRootOptions\n    );\n    adoptStyles(\n      renderRoot,\n      this.constructor.elementStyles\n    );\n    return renderRoot;\n  }\n  render() {\n    return html`\n            <slot></slot>\n        `;\n  }\n  update(changes) {\n    if (changes.has(\"itemSize\") || changes.has(\"gap\") || changes.has(\"padding\") || changes.has(\"focusableSelector\")) {\n      this.updateComplete.then(() => {\n        this.gridController.update({\n          elements: () => [\n            ...this.querySelectorAll(\n              this.focusableSelector\n            )\n          ],\n          itemSize: () => this.itemSize,\n          gap: () => this.gap,\n          padding: () => this.padding || this.gap\n        });\n      });\n      this.layout = grid({\n        itemSize: {\n          width: `${this.itemSize.width}px`,\n          height: `${this.itemSize.height}px`\n        },\n        gap: this.gap,\n        padding: this.padding || this.gap\n      });\n    }\n    if (changes.has(\"renderItem\")) {\n      const fn = this.renderItem;\n      this.renderItem = (item, index) => {\n        const selected = this.selected.includes(\n          item\n        );\n        return fn(item, index, selected);\n      };\n    }\n    if (this.isConnected) {\n      this.__gridPart = render(super.render(), this);\n    }\n    super.update(changes);\n  }\n  connectedCallback() {\n    var _a;\n    super.connectedCallback();\n    (_a = this.__gridPart) == null ? void 0 : _a.setConnected(true);\n    this.addEventListener(\"change\", this.handleChange, { capture: true });\n  }\n  disconnectedCallback() {\n    var _a;\n    this.removeEventListener(\"change\", this.handleChange, {\n      capture: true\n    });\n    (_a = this.__gridPart) == null ? void 0 : _a.setConnected(false);\n    if (this.animationFrameId) {\n      cancelAnimationFrame(this.animationFrameId);\n      this.animationFrameId = void 0;\n      this.lastTargetForChange = void 0;\n    }\n    super.disconnectedCallback();\n  }\n}\n__decorateClass([\n  property({ type: String })\n], Grid.prototype, \"focusableSelector\", 2);\n__decorateClass([\n  property({ type: String })\n], Grid.prototype, \"gap\", 2);\n__decorateClass([\n  property({ type: String })\n], Grid.prototype, \"padding\", 2);\n__decorateClass([\n  property({ type: Array })\n], Grid.prototype, \"items\", 2);\n__decorateClass([\n  property({ type: Object })\n], Grid.prototype, \"itemSize\", 2);\n__decorateClass([\n  property({ type: Array })\n], Grid.prototype, \"selected\", 2);\n//# sourceMappingURL=Grid.dev.js.map\n","\"use strict\";\nimport {\n  css,\n  html,\n  SpectrumElement\n} from \"@spectrum-web-components/base\";\nimport \"@spectrum-web-components/grid/sp-grid.js\";\nimport \"@spectrum-web-components/action-bar/sp-action-bar.js\";\nimport \"@spectrum-web-components/card/sp-card.js\";\nimport \"@spectrum-web-components/action-menu/sp-action-menu.js\";\nimport \"@spectrum-web-components/menu/sp-menu-item.js\";\nimport \"@spectrum-web-components/tooltip/sp-tooltip.js\";\nimport \"@spectrum-web-components/checkbox/sp-checkbox.js\";\nimport \"@spectrum-web-components/action-button/sp-action-button.js\";\nimport \"@spectrum-web-components/action-group/sp-action-group.js\";\nimport \"@spectrum-web-components/icons-workflow/icons/sp-icon-edit.js\";\nimport \"@spectrum-web-components/icons-workflow/icons/sp-icon-more.js\";\nexport default {\n  title: \"Grid\",\n  component: \"sp-grid\"\n};\nfunction generateItems(count) {\n  const items = [];\n  while (count) {\n    count -= 1;\n    items.unshift({ id: count });\n  }\n  return items;\n}\nconst renderItem = (item, index, selected) => {\n  return html`\n        <sp-card\n            toggles\n            variant=\"quiet\"\n            heading=\"Card Heading ${item.id}\"\n            subheading=\"JPG Photo\"\n            style=\"contain: strict; padding: 1px;\"\n            value=\"card-${item.id}\"\n            .selected=${selected}\n            key=${index}\n            draggable=\"true\"\n            role=\"row\"\n            aria-selected=${selected}\n            aria-rowindex=${index + 1}\n            label=\"Card Heading ${item.id}\"\n        >\n            <img\n                alt=\"\"\n                slot=\"preview\"\n                src=\"https://picsum.photos/id/${item.id}/200/300\"\n                decoding=\"async\"\n            />\n            <div slot=\"description\">10/15/18</div>\n            <div slot=\"footer\">Footer</div>\n            <sp-action-menu\n                label=\"File actions\"\n                slot=\"actions\"\n                placement=\"bottom-end\"\n                quiet\n            >\n                <sp-tooltip slot=\"tooltip\" self-managed placement=\"top\">\n                    Do stuff\n                </sp-tooltip>\n                <sp-menu-item>Deselect</sp-menu-item>\n                <sp-menu-item>Select Inverse</sp-menu-item>\n                <sp-menu-item>Feather...</sp-menu-item>\n                <sp-menu-item>Select and Mask...</sp-menu-item>\n                <sp-menu-divider></sp-menu-divider>\n                <sp-menu-item>Save Selection</sp-menu-item>\n                <sp-menu-item disabled>Make Work Path</sp-menu-item>\n            </sp-action-menu>\n        </sp-card>\n    `;\n};\nconst handleChange = (event) => {\n  const actionbar = document.querySelector(\"sp-action-bar\");\n  const selected = document.querySelector(\".selected\");\n  const ids = document.querySelector(\".ids\");\n  actionbar.open = !!event.currentTarget.selected.length;\n  actionbar.style.setProperty(\n    \"display\",\n    !!event.currentTarget.selected.length ? \"flex\" : \"none\"\n  );\n  selected.textContent = \"\" + event.currentTarget.selected.length;\n  ids.textContent = `[${\"\" + event.currentTarget.selected.map((selection) => selection.id).join(\", \")}]`;\n};\nconst handleActionBarChange = (event) => {\n  event.preventDefault();\n  const grid = document.querySelector(\"sp-grid\");\n  const actionbar = document.querySelector(\"sp-action-bar\");\n  actionbar.open = false;\n  grid.selected = [];\n};\nexport const Default = () => {\n  const items = generateItems(40);\n  return html`\n        <h1>\n            <label for=\"first-input\">\n                Random before content that is focusable\n            </label>\n        </h1>\n        <input id=\"first-input\" />\n        <sp-grid\n            @change=${handleChange}\n            .items=${items}\n            .focusableSelector=${\"sp-card\"}\n            .renderItem=${renderItem}\n            role=\"grid\"\n            aria-label=\"Select images\"\n            aria-multiselectable=\"true\"\n            aria-rowcount=${items.length}\n            aria-colcount=${1}\n        ></sp-grid>\n        <sp-action-bar variant=\"fixed\">\n            <sp-checkbox\n                style=\"margin-block-start: calc(var(--spectrum-checkbox-top-to-control-small) * -1);\"\n                @click=${handleActionBarChange}\n                checked\n            >\n                <span class=\"selected\"></span>\n                Selected\n                <span class=\"ids\"></span>\n            </sp-checkbox>\n            <sp-action-group quiet slot=\"buttons\">\n                <sp-action-button>\n                    <sp-icon-edit slot=\"icon\" label=\"Edit\"></sp-icon-edit>\n                </sp-action-button>\n                <sp-action-button>\n                    <sp-icon-more slot=\"icon\" label=\"More\"></sp-icon-more>\n                </sp-action-button>\n            </sp-action-group>\n        </sp-action-bar>\n        <h2>\n            <label for=\"last-input\">\n                Random after content that is focusable\n            </label>\n        </h2>\n        <input id=\"last-input\" />\n    `;\n};\nDefault.swc_vrt = {\n  skip: true\n};\nDefault.parameters = {\n  // Disables Chromatic's snapshotting on a global level\n  chromatic: { disableSnapshot: true }\n};\nexport const sized = ({ gap, padding } = { gap: 10, padding: 10 }) => {\n  const items = generateItems(1e3);\n  function handleMediaChange() {\n    let width = document.body.offsetWidth * 0.4;\n    const height = 300;\n    if (matchMedium.matches) {\n      width = 300;\n    } else if (matchLarge.matches) {\n      width = 400;\n    }\n    document.querySelector(\"sp-grid\").itemSize = {\n      width,\n      height\n    };\n  }\n  const matchSmall = window.matchMedia(\"(max-width: 600px)\");\n  const matchMedium = window.matchMedia(\n    \"(min-width: 601px) and (max-width: 1200px)\"\n  );\n  const matchLarge = window.matchMedia(\"(min-width: 1201px)\");\n  matchSmall.addEventListener(\"change\", handleMediaChange);\n  matchMedium.addEventListener(\"change\", handleMediaChange);\n  matchLarge.addEventListener(\"change\", handleMediaChange);\n  return html`\n        <h1>Random before content that is focusable</h1>\n        <input id=\"first-input\" />\n        <sp-grid\n            @change=${handleChange}\n            .items=${items}\n            .focusableSelector=${\"sp-card\"}\n            .renderItem=${renderItem}\n            .itemSize=${{\n    width: 200,\n    height: 300\n  }}\n            .gap=${`${gap}px`}\n            .padding=${`${padding}px`}\n        ></sp-grid>\n        <sp-action-bar variant=\"fixed\" style=\"display: none\">\n            <sp-checkbox @click=${handleActionBarChange} checked>\n                <span class=\"selected\"></span>\n                Selected\n                <span class=\"ids\"></span>\n            </sp-checkbox>\n            <sp-action-group quiet>\n                <sp-action-button>\n                    <sp-icon-edit slot=\"icon\" label=\"Edit\"></sp-icon-edit>\n                </sp-action-button>\n                <sp-action-button>\n                    <sp-icon-more slot=\"icon\" label=\"More\"></sp-icon-more>\n                </sp-action-button>\n            </sp-action-group>\n        </sp-action-bar>\n        <h2>Random after content that is focusable</h2>\n        <input id=\"last-input\" />\n    `;\n};\nsized.args = {\n  gap: 10,\n  padding: 10\n};\nsized.argTypes = {\n  gap: {\n    name: \"gap\",\n    type: { name: \"number\", required: false },\n    description: \"Spacing between items.\",\n    table: {\n      type: { summary: \"number\" }\n    },\n    control: {\n      type: \"number\"\n    }\n  },\n  padding: {\n    name: \"padding\",\n    type: { name: \"number\", required: false },\n    description: \"Spacing around all items.\",\n    table: {\n      type: { summary: \"number\" }\n    },\n    control: {\n      type: \"number\"\n    }\n  }\n};\nsized.swc_vrt = {\n  skip: true\n};\nsized.parameters = {\n  // Disables Chromatic's snapshotting on a global level\n  chromatic: { disableSnapshot: true }\n};\nclass MyParent extends SpectrumElement {\n  render() {\n    return html`\n            <div class=\"child\"><slot></slot></div>\n        `;\n  }\n}\nMyParent.styles = [\n  css`\n            :host {\n                display: block;\n                height: 100vh;\n                overflow: hidden;\n            }\n\n            .child {\n                height: 100%;\n                overflow: scroll;\n            }\n        `\n];\ncustomElements.define(\"my-parent\", MyParent);\nexport const scrollParentInAssignedSlot = () => {\n  const items = generateItems(1e3);\n  return html`\n        <my-parent>\n            <sp-grid\n                .items=${items}\n                .focusableSelector=${\"sp-card\"}\n                .renderItem=${renderItem}\n            ></sp-grid>\n        </my-parent>\n    `;\n};\nscrollParentInAssignedSlot.swc_vrt = {\n  skip: true\n};\nscrollParentInAssignedSlot.parameters = {\n  // Disables Chromatic's snapshotting on a global level\n  chromatic: { disableSnapshot: true }\n};\n//# sourceMappingURL=grid.stories.js.map\n;export const __namedExportsOrder = [\"Default\",\"sized\",\"scrollParentInAssignedSlot\"];"],"names":[],"sourceRoot":""}