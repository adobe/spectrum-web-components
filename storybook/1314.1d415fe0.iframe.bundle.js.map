{"version":3,"file":"1314.1d415fe0.iframe.bundle.js","mappings":";;AACA;AA6CA;AAEA;;AAEA;;AAKA;AAmCA;AACA;AAOA;AAGA;AAEA;;;;ACnFA;AACA;AAdA;AAIA;AAaA;;AAIA;;AC3BA;AA8CA;;;AAFA;AAOA;;AAEA;AACA;;;;;;;AASA","sources":["webpack://@adobe/spectrum-web-components/./packages/button/src/ButtonBase.dev.js","webpack://@adobe/spectrum-web-components/./packages/combobox/stories/index.js","webpack://@adobe/spectrum-web-components/./packages/progress-circle/src/ProgressCircle.dev.js"],"sourcesContent":["\"use strict\";\nvar __defProp = Object.defineProperty;\nvar __getOwnPropDesc = Object.getOwnPropertyDescriptor;\nvar __decorateClass = (decorators, target, key, kind) => {\n  var result = kind > 1 ? void 0 : kind ? __getOwnPropDesc(target, key) : target;\n  for (var i = decorators.length - 1, decorator; i >= 0; i--)\n    if (decorator = decorators[i])\n      result = (kind ? decorator(target, key, result) : decorator(result)) || result;\n  if (kind && result) __defProp(target, key, result);\n  return result;\n};\nimport {\n  html\n} from \"@spectrum-web-components/base\";\nimport {\n  property,\n  query\n} from \"@spectrum-web-components/base/src/decorators.js\";\nimport { LikeAnchor } from \"@spectrum-web-components/shared/src/like-anchor.js\";\nimport { Focusable } from \"@spectrum-web-components/shared/src/focusable.js\";\nimport { ObserveSlotText } from \"@spectrum-web-components/shared/src/observe-slot-text.js\";\nimport buttonStyles from \"./button-base.css.js\";\nexport class ButtonBase extends ObserveSlotText(LikeAnchor(Focusable), \"\", [\n  \"sp-overlay,sp-tooltip\"\n]) {\n  constructor() {\n    super();\n    this.active = false;\n    this.type = \"button\";\n    this.proxyFocus = this.proxyFocus.bind(this);\n    this.addEventListener(\"click\", this.handleClickCapture, {\n      capture: true\n    });\n  }\n  static get styles() {\n    return [buttonStyles];\n  }\n  get focusElement() {\n    return this;\n  }\n  get hasLabel() {\n    return this.slotHasContent;\n  }\n  get buttonContent() {\n    const content = [\n      html`\n                <slot name=\"icon\" ?icon-only=${!this.hasLabel}></slot>\n            `,\n      html`\n                <span id=\"label\">\n                    <slot @slotchange=${this.manageTextObservedSlot}></slot>\n                </span>\n            `\n    ];\n    return content;\n  }\n  handleClickCapture(event) {\n    if (this.disabled) {\n      event.preventDefault();\n      event.stopImmediatePropagation();\n      event.stopPropagation();\n      return false;\n    }\n    if (this.shouldProxyClick(event)) {\n      return;\n    }\n  }\n  proxyFocus() {\n    this.focus();\n  }\n  shouldProxyClick(event) {\n    let handled = false;\n    if (event && (event.metaKey || event.ctrlKey || event.shiftKey || event.altKey)) {\n      return false;\n    }\n    if (this.anchorElement) {\n      this.anchorElement.click();\n      handled = true;\n    } else if (this.type !== \"button\") {\n      const proxy = document.createElement(\"button\");\n      proxy.type = this.type;\n      this.insertAdjacentElement(\"afterend\", proxy);\n      proxy.click();\n      proxy.remove();\n      handled = true;\n    }\n    return handled;\n  }\n  renderAnchor() {\n    return html`\n            ${this.buttonContent}\n            ${super.renderAnchor({\n      id: \"button\",\n      ariaHidden: true,\n      className: \"button anchor\",\n      tabindex: -1\n    })}\n        `;\n  }\n  renderButton() {\n    return html`\n            ${this.buttonContent}\n        `;\n  }\n  render() {\n    return this.href && this.href.length > 0 ? this.renderAnchor() : this.renderButton();\n  }\n  handleKeydown(event) {\n    const { code } = event;\n    switch (code) {\n      case \"Space\":\n        event.preventDefault();\n        if (typeof this.href === \"undefined\") {\n          this.addEventListener(\"keyup\", this.handleKeyup);\n          this.active = true;\n        }\n        break;\n      default:\n        break;\n    }\n  }\n  handleKeypress(event) {\n    const { code } = event;\n    switch (code) {\n      case \"Enter\":\n      case \"NumpadEnter\":\n        this.click();\n        break;\n      default:\n        break;\n    }\n  }\n  handleKeyup(event) {\n    const { code } = event;\n    switch (code) {\n      case \"Space\":\n        this.removeEventListener(\"keyup\", this.handleKeyup);\n        this.active = false;\n        this.click();\n        break;\n      default:\n        break;\n    }\n  }\n  manageAnchor() {\n    if (this.href && this.href.length > 0) {\n      if (!this.hasAttribute(\"role\") || this.getAttribute(\"role\") === \"button\") {\n        this.setAttribute(\"role\", \"link\");\n      }\n    } else {\n      if (!this.hasAttribute(\"role\") || this.getAttribute(\"role\") === \"link\") {\n        this.setAttribute(\"role\", \"button\");\n      }\n    }\n  }\n  firstUpdated(changed) {\n    super.firstUpdated(changed);\n    if (!this.hasAttribute(\"tabindex\")) {\n      this.setAttribute(\"tabindex\", \"0\");\n    }\n    this.manageAnchor();\n    this.addEventListener(\"keydown\", this.handleKeydown);\n    this.addEventListener(\"keypress\", this.handleKeypress);\n  }\n  updated(changed) {\n    super.updated(changed);\n    if (changed.has(\"href\")) {\n      this.manageAnchor();\n    }\n    if (changed.has(\"label\")) {\n      if (this.label) {\n        this.setAttribute(\"aria-label\", this.label);\n      } else {\n        this.removeAttribute(\"aria-label\");\n      }\n    }\n    if (this.anchorElement) {\n      this.anchorElement.tabIndex = -1;\n      if (!this.anchorElement.hasAttribute(\"aria-hidden\")) {\n        this.anchorElement.setAttribute(\"aria-hidden\", \"true\");\n      }\n      this.anchorElement.addEventListener(\"focus\", this.proxyFocus);\n    }\n  }\n}\n__decorateClass([\n  property({ type: Boolean, reflect: true })\n], ButtonBase.prototype, \"active\", 2);\n__decorateClass([\n  property({ type: String })\n], ButtonBase.prototype, \"type\", 2);\n__decorateClass([\n  query(\".anchor\")\n], ButtonBase.prototype, \"anchorElement\", 2);\n//# sourceMappingURL=ButtonBase.dev.js.map\n","\"use strict\";\nimport {\n  html\n} from \"@spectrum-web-components/base\";\nimport \"@spectrum-web-components/combobox/sp-combobox.js\";\nimport \"@spectrum-web-components/field-label/sp-field-label.js\";\nimport { spreadProps } from \"../../../test/lit-helpers\";\nconst handleChange = ({ onChange }) => (event) => {\n  const picker = event.target;\n  if (onChange) onChange(picker.value);\n};\nconst handleInput = ({ onInput }) => (event) => {\n  const picker = event.target;\n  if (onInput) onInput(picker.value);\n};\nexport const ComboboxMarkup = (args) => {\n  return html`\n        <sp-field-label for=\"combobox\">Where do you live?</sp-field-label>\n        <sp-combobox\n            id=\"combobox\"\n            .options=${countries}\n            .value=${args.value || \"\"}\n            @change=${handleChange(args)}\n            @input=${handleInput(args)}\n            ${spreadProps(args)}\n        ></sp-combobox>\n    `;\n};\nexport const countries = [\n  { value: \"af\", itemText: \"Afghanistan\" },\n  { value: \"ax\", itemText: \"Aland Islands\" },\n  { value: \"al\", itemText: \"Albania\" },\n  { value: \"dz\", itemText: \"Algeria\" },\n  { value: \"as\", itemText: \"American Samoa\" },\n  { value: \"ad\", itemText: \"Andorra\" },\n  { value: \"ao\", itemText: \"Angola\" },\n  { value: \"ai\", itemText: \"Anguilla\" },\n  { value: \"aq\", itemText: \"Antarctica\" },\n  { value: \"ag\", itemText: \"Antigua and Barbuda\" },\n  { value: \"ar\", itemText: \"Argentina\" },\n  { value: \"ar\", itemText: \"Armenia\" },\n  { value: \"aw\", itemText: \"Aruba\" },\n  { value: \"au\", itemText: \"Australia\" },\n  { value: \"at\", itemText: \"Austria\" },\n  { value: \"az\", itemText: \"Azerbaijan\" },\n  { value: \"bs\", itemText: \"Bahamas\" },\n  { value: \"bh\", itemText: \"Bahrain\" },\n  { value: \"bd\", itemText: \"Bangladesh\" },\n  { value: \"bb\", itemText: \"Barbados\" },\n  { value: \"by\", itemText: \"Belarus\" },\n  { value: \"be\", itemText: \"Belgium\" },\n  { value: \"bz\", itemText: \"Belize\" },\n  { value: \"bj\", itemText: \"Benin\" },\n  { value: \"bm\", itemText: \"Bermuda\" },\n  { value: \"bt\", itemText: \"Bhutan\" },\n  { value: \"bo\", itemText: \"Bolivia\" },\n  { value: \"ba\", itemText: \"Bosnia and Herzegovina\" },\n  { value: \"bw\", itemText: \"Botswana\" },\n  { value: \"bv\", itemText: \"Bouvet Island\" },\n  { value: \"br\", itemText: \"Brazil\" },\n  { value: \"io\", itemText: \"British Indian Ocean Territory\" },\n  { value: \"bn\", itemText: \"Brunei Darussalam\" },\n  { value: \"bg\", itemText: \"Bulgaria\" },\n  { value: \"bf\", itemText: \"Burkina Faso\" },\n  { value: \"bi\", itemText: \"Burundi\" },\n  { value: \"kh\", itemText: \"Cambodia\" },\n  { value: \"cm\", itemText: \"Cameroon\" },\n  { value: \"ca\", itemText: \"Canada\" },\n  { value: \"cv\", itemText: \"Cape Verde\" },\n  { value: \"ky\", itemText: \"Cayman Islands\" },\n  { value: \"cf\", itemText: \"Central African Republic\" },\n  { value: \"td\", itemText: \"Chad\" },\n  { value: \"cl\", itemText: \"Chile\" },\n  { value: \"cn\", itemText: \"China\" },\n  { value: \"cx\", itemText: \"Christmas Island\" },\n  { value: \"cc\", itemText: \"Cocos (Keeling) Islands\" },\n  { value: \"co\", itemText: \"Colombia\" },\n  { value: \"km\", itemText: \"Comoros\" },\n  { value: \"cg\", itemText: \"Congo\" },\n  { value: \"cd\", itemText: \"Congo, The Democratic Republic of the\" },\n  { value: \"ck\", itemText: \"Cook Islands\" },\n  { value: \"cr\", itemText: \"Costa Rica\" },\n  { value: \"ci\", itemText: \"Cote D'Ivoire\" },\n  { value: \"hr\", itemText: \"Croatia\" },\n  { value: \"cu\", itemText: \"Cuba\" },\n  { value: \"cy\", itemText: \"Cyprus\" },\n  { value: \"cz\", itemText: \"Czech Republic\" },\n  { value: \"dk\", itemText: \"Denmark\" },\n  { value: \"dj\", itemText: \"Djibouti\" },\n  { value: \"dm\", itemText: \"Dominica\" },\n  { value: \"do\", itemText: \"Dominican Republic\" },\n  { value: \"ec\", itemText: \"Ecuador\" },\n  { value: \"eg\", itemText: \"Egypt\" },\n  { value: \"sv\", itemText: \"El Salvador\" },\n  { value: \"gq\", itemText: \"Equatorial Guinea\" },\n  { value: \"er\", itemText: \"Eritrea\" },\n  { value: \"ee\", itemText: \"Estonia\" },\n  { value: \"et\", itemText: \"Ethiopia\" },\n  { value: \"fk\", itemText: \"Falkland Islands (Malvinas)\" },\n  { value: \"fo\", itemText: \"Faroe Islands\" },\n  { value: \"fj\", itemText: \"Fiji\" },\n  { value: \"fi\", itemText: \"Finland\" },\n  { value: \"fr\", itemText: \"France\" },\n  { value: \"gf\", itemText: \"French Guiana\" },\n  { value: \"pf\", itemText: \"French Polynesia\" },\n  { value: \"tf\", itemText: \"French Southern Territories\" },\n  { value: \"ga\", itemText: \"Gabon\" },\n  { value: \"gm\", itemText: \"Gambia\" },\n  { value: \"ge\", itemText: \"Georgia\" },\n  { value: \"de\", itemText: \"Germany\" },\n  { value: \"gh\", itemText: \"Ghana\" },\n  { value: \"gi\", itemText: \"Gibraltar\" },\n  { value: \"gr\", itemText: \"Greece\" },\n  { value: \"gl\", itemText: \"Greenland\" },\n  { value: \"gd\", itemText: \"Grenada\" },\n  { value: \"gp\", itemText: \"Guadeloupe\" },\n  { value: \"gu\", itemText: \"Guam\" },\n  { value: \"gt\", itemText: \"Guatemala\" },\n  { value: \"gg\", itemText: \"Guernsey\" },\n  { value: \"gn\", itemText: \"Guinea\" },\n  { value: \"gw\", itemText: \"Guinea-Bissau\" },\n  { value: \"gy\", itemText: \"Guyana\" },\n  { value: \"ht\", itemText: \"Haiti\" },\n  { value: \"hm\", itemText: \"Heard Island and Mcdonald Islands\" },\n  { value: \"va\", itemText: \"Holy See (Vatican City State)\" },\n  { value: \"hn\", itemText: \"Honduras\" },\n  { value: \"hk\", itemText: \"Hong Kong\" },\n  { value: \"hu\", itemText: \"Hungary\" },\n  { value: \"is\", itemText: \"Iceland\" },\n  { value: \"in\", itemText: \"India\" },\n  { value: \"id\", itemText: \"Indonesia\" },\n  { value: \"ir\", itemText: \"Iran, Islamic Republic Of\" },\n  { value: \"iq\", itemText: \"Iraq\" },\n  { value: \"ie\", itemText: \"Ireland\" },\n  { value: \"im\", itemText: \"Isle of Man\" },\n  { value: \"il\", itemText: \"Israel\" },\n  { value: \"it\", itemText: \"Italy\" },\n  { value: \"jm\", itemText: \"Jamaica\" },\n  { value: \"jp\", itemText: \"Japan\" },\n  { value: \"je\", itemText: \"Jersey\" },\n  { value: \"jo\", itemText: \"Jordan\" },\n  { value: \"kz\", itemText: \"Kazakhstan\" },\n  { value: \"ke\", itemText: \"Kenya\" },\n  { value: \"ki\", itemText: \"Kiribati\" },\n  { value: \"kp\", itemText: \"Korea, Democratic People's Republic of\" },\n  { value: \"kr\", itemText: \"Korea, Republic of\" },\n  { value: \"kw\", itemText: \"Kuwait\" },\n  { value: \"kg\", itemText: \"Kyrgyzstan\" },\n  { value: \"la\", itemText: \"Laos\" },\n  { value: \"lv\", itemText: \"Latvia\" },\n  { value: \"lb\", itemText: \"Lebanon\" },\n  { value: \"ls\", itemText: \"Lesotho\" },\n  { value: \"lr\", itemText: \"Liberia\" },\n  { value: \"ly\", itemText: \"Libyan Arab Jamahiriya\" },\n  { value: \"li\", itemText: \"Liechtenstein\" },\n  { value: \"lt\", itemText: \"Lithuania\" },\n  { value: \"lu\", itemText: \"Luxembourg\" },\n  { value: \"mo\", itemText: \"Macao\" },\n  { value: \"mk\", itemText: \"Macedonia, The Former Yugoslav Republic of\" },\n  { value: \"mg\", itemText: \"Madagascar\" },\n  { value: \"mw\", itemText: \"Malawi\" },\n  { value: \"my\", itemText: \"Malaysia\" },\n  { value: \"mv\", itemText: \"Maldives\" },\n  { value: \"ml\", itemText: \"Mali\" },\n  { value: \"mt\", itemText: \"Malta\" },\n  { value: \"mh\", itemText: \"Marshall Islands\" },\n  { value: \"mq\", itemText: \"Martinique\" },\n  { value: \"mr\", itemText: \"Mauritania\" },\n  { value: \"mu\", itemText: \"Mauritius\" },\n  { value: \"yt\", itemText: \"Mayotte\" },\n  { value: \"mx\", itemText: \"Mexico\" },\n  { value: \"fm\", itemText: \"Micronesia, Federated States of\" },\n  { value: \"md\", itemText: \"Moldova, Republic of\" },\n  { value: \"mc\", itemText: \"Monaco\" },\n  { value: \"mn\", itemText: \"Mongolia\" },\n  { value: \"me\", itemText: \"Montenegro\" },\n  { value: \"ms\", itemText: \"Montserrat\" },\n  { value: \"ma\", itemText: \"Morocco\" },\n  { value: \"mz\", itemText: \"Mozambique\" },\n  { value: \"mm\", itemText: \"Myanmar\" },\n  { value: \"na\", itemText: \"Namibia\" },\n  { value: \"nr\", itemText: \"Nauru\" },\n  { value: \"np\", itemText: \"Nepal\" },\n  { value: \"nl\", itemText: \"Netherlands\" },\n  { value: \"an\", itemText: \"Netherlands Antilles\" },\n  { value: \"nc\", itemText: \"New Caledonia\" },\n  { value: \"nz\", itemText: \"New Zealand\" },\n  { value: \"ni\", itemText: \"Nicaragua\" },\n  { value: \"ne\", itemText: \"Niger\" },\n  { value: \"ng\", itemText: \"Nigeria\" },\n  { value: \"nu\", itemText: \"Niue\" },\n  { value: \"nf\", itemText: \"Norfolk Island\" },\n  { value: \"mp\", itemText: \"Northern Mariana Islands\" },\n  { value: \"no\", itemText: \"Norway\" },\n  { value: \"om\", itemText: \"Oman\" },\n  { value: \"pk\", itemText: \"Pakistan\" },\n  { value: \"pw\", itemText: \"Palau\" },\n  { value: \"ps\", itemText: \"Palestinian Territory, Occupied\" },\n  { value: \"pa\", itemText: \"Panama\" },\n  { value: \"pg\", itemText: \"Papua New Guinea\" },\n  { value: \"py\", itemText: \"Paraguay\" },\n  { value: \"pe\", itemText: \"Peru\" },\n  { value: \"ph\", itemText: \"Philippines\" },\n  { value: \"pn\", itemText: \"Pitcairn\" },\n  { value: \"pl\", itemText: \"Poland\" },\n  { value: \"pt\", itemText: \"Portugal\" },\n  { value: \"pr\", itemText: \"Puerto Rico\" },\n  { value: \"qa\", itemText: \"Qatar\" },\n  { value: \"re\", itemText: \"Reunion\" },\n  { value: \"ro\", itemText: \"Romania\" },\n  { value: \"ru\", itemText: \"Russian Federation\" },\n  { value: \"rw\", itemText: \"RWANDA\" },\n  { value: \"sh\", itemText: \"Saint Helena\" },\n  { value: \"kn\", itemText: \"Saint Kitts and Nevis\" },\n  { value: \"lc\", itemText: \"Saint Lucia\" },\n  { value: \"pm\", itemText: \"Saint Pierre and Miquelon\" },\n  { value: \"vc\", itemText: \"Saint Vincent and the Grenadines\" },\n  { value: \"ws\", itemText: \"Samoa\" },\n  { value: \"sm\", itemText: \"San Marino\" },\n  { value: \"st\", itemText: \"Sao Tome and Principe\" },\n  { value: \"sa\", itemText: \"Saudi Arabia\" },\n  { value: \"sn\", itemText: \"Senegal\" },\n  { value: \"rs\", itemText: \"Serbia\" },\n  { value: \"sc\", itemText: \"Seychelles\" },\n  { value: \"sl\", itemText: \"Sierra Leone\" },\n  { value: \"sg\", itemText: \"Singapore\" },\n  { value: \"sk\", itemText: \"Slovakia\" },\n  { value: \"si\", itemText: \"Slovenia\" },\n  { value: \"sb\", itemText: \"Solomon Islands\" },\n  { value: \"so\", itemText: \"Somalia\" },\n  { value: \"za\", itemText: \"South Africa\" },\n  { value: \"gs\", itemText: \"South Georgia and the South Sandwich Islands\" },\n  { value: \"es\", itemText: \"Spain\" },\n  { value: \"lk\", itemText: \"Sri Lanka\" },\n  { value: \"sd\", itemText: \"Sudan\" },\n  { value: \"sr\", itemText: \"Suriname\" },\n  { value: \"sj\", itemText: \"Svalbard and Jan Mayen\" },\n  { value: \"sz\", itemText: \"Swaziland\" },\n  { value: \"se\", itemText: \"Sweden\" },\n  { value: \"ch\", itemText: \"Switzerland\" },\n  { value: \"sy\", itemText: \"Syrian Arab Republic\" },\n  { value: \"tw\", itemText: \"Taiwan\" },\n  { value: \"tj\", itemText: \"Tajikistan\" },\n  { value: \"tz\", itemText: \"Tanzania, United Republic of\" },\n  { value: \"th\", itemText: \"Thailand\" },\n  { value: \"tl\", itemText: \"Timor-Leste\" },\n  { value: \"tg\", itemText: \"Togo\" },\n  { value: \"tk\", itemText: \"Tokelau\" },\n  { value: \"to\", itemText: \"Tonga\" },\n  { value: \"tt\", itemText: \"Trinidad and Tobago\" },\n  { value: \"tn\", itemText: \"Tunisia\" },\n  { value: \"tr\", itemText: \"Turkey\" },\n  { value: \"tm\", itemText: \"Turkmenistan\" },\n  { value: \"tc\", itemText: \"Turks and Caicos Islands\" },\n  { value: \"tv\", itemText: \"Tuvalu\" },\n  { value: \"ug\", itemText: \"Uganda\" },\n  { value: \"ua\", itemText: \"Ukraine\" },\n  { value: \"ae\", itemText: \"United Arab Emirates\" },\n  { value: \"gb\", itemText: \"United Kingdom\" },\n  { value: \"us\", itemText: \"United States\" },\n  { value: \"um\", itemText: \"United States Minor Outlying Islands\" },\n  { value: \"uy\", itemText: \"Uruguay\" },\n  { value: \"uz\", itemText: \"Uzbekistan\" },\n  { value: \"vu\", itemText: \"Vanuatu\" },\n  { value: \"ve\", itemText: \"Venezuela\" },\n  { value: \"vn\", itemText: \"Vietnam\" },\n  { value: \"vg\", itemText: \"Virgin Islands, British\" },\n  { value: \"vi\", itemText: \"Virgin Islands, U.S.\" },\n  { value: \"wf\", itemText: \"Wallis and Futuna\" },\n  { value: \"eh\", itemText: \"Western Sahara\" },\n  { value: \"ye\", itemText: \"Yemen\" },\n  { value: \"zm\", itemText: \"Zambia\" },\n  { value: \"zw\", itemText: \"Zimbabwe\" }\n];\nexport const fruits = [\n  { value: \"apple\", itemText: \"Apple\" },\n  { value: \"banana\", itemText: \"Banana\" },\n  { value: \"cherry\", itemText: \"Cherry\" },\n  { value: \"coconut\", itemText: \"Coconut\" },\n  { value: \"durian\", itemText: \"Durian\" },\n  { value: \"lemon\", itemText: \"Lemon\" },\n  { value: \"lychee\", itemText: \"Lychee\" },\n  { value: \"mango\", itemText: \"Mango\" },\n  { value: \"orange\", itemText: \"Orange\" },\n  { value: \"peach\", itemText: \"Peach\" },\n  { value: \"pear\", itemText: \"Pear\" },\n  { value: \"persimmon\", itemText: \"Persimmon\" }\n];\n//# sourceMappingURL=index.js.map\n","\"use strict\";\nvar __defProp = Object.defineProperty;\nvar __getOwnPropDesc = Object.getOwnPropertyDescriptor;\nvar __decorateClass = (decorators, target, key, kind) => {\n  var result = kind > 1 ? void 0 : kind ? __getOwnPropDesc(target, key) : target;\n  for (var i = decorators.length - 1, decorator; i >= 0; i--)\n    if (decorator = decorators[i])\n      result = (kind ? decorator(target, key, result) : decorator(result)) || result;\n  if (kind && result) __defProp(target, key, result);\n  return result;\n};\nimport {\n  html,\n  SizedMixin,\n  SpectrumElement\n} from \"@spectrum-web-components/base\";\nimport {\n  property,\n  query\n} from \"@spectrum-web-components/base/src/decorators.js\";\nimport { ifDefined } from \"@spectrum-web-components/base/src/directives.js\";\nimport { getLabelFromSlot } from \"@spectrum-web-components/shared/src/get-label-from-slot.js\";\nimport progressCircleStyles from \"./progress-circle.css.js\";\nexport class ProgressCircle extends SizedMixin(SpectrumElement, {\n  validSizes: [\"s\", \"m\", \"l\"]\n}) {\n  constructor() {\n    super(...arguments);\n    this.indeterminate = false;\n    this.label = \"\";\n    this.progress = 0;\n  }\n  static get styles() {\n    return [progressCircleStyles];\n  }\n  makeRotation(rotation) {\n    return this.indeterminate ? void 0 : `transform: rotate(${rotation}deg);`;\n  }\n  render() {\n    const styles = [\n      this.makeRotation(-180 + 180 / 50 * Math.min(this.progress, 50)),\n      this.makeRotation(\n        -180 + 180 / 50 * Math.max(this.progress - 50, 0)\n      )\n    ];\n    const masks = [\"Mask1\", \"Mask2\"];\n    return html`\n            <slot @slotchange=${this.handleSlotchange}></slot>\n            <div class=\"track\"></div>\n            <div class=\"fills\">\n                ${masks.map(\n      (mask, index) => html`\n                        <div class=\"fill${mask}\">\n                            <div\n                                class=\"fillSub${mask}\"\n                                style=${ifDefined(styles[index])}\n                            >\n                                <div class=\"fill\"></div>\n                            </div>\n                        </div>\n                    `\n    )}\n            </div>\n        `;\n  }\n  handleSlotchange() {\n    const labelFromSlot = getLabelFromSlot(this.label, this.slotEl);\n    if (labelFromSlot) {\n      this.label = labelFromSlot;\n    }\n  }\n  firstUpdated(changes) {\n    super.firstUpdated(changes);\n    if (!this.hasAttribute(\"role\")) {\n      this.setAttribute(\"role\", \"progressbar\");\n    }\n  }\n  updated(changes) {\n    super.updated(changes);\n    if (!this.indeterminate && changes.has(\"progress\")) {\n      this.setAttribute(\"aria-valuenow\", \"\" + this.progress);\n    } else if (this.hasAttribute(\"aria-valuenow\")) {\n      this.removeAttribute(\"aria-valuenow\");\n    }\n    if (changes.has(\"label\")) {\n      if (this.label.length) {\n        this.setAttribute(\"aria-label\", this.label);\n      } else if (changes.get(\"label\") === this.getAttribute(\"aria-label\")) {\n        this.removeAttribute(\"aria-label\");\n      }\n    }\n    const hasAccessibleName = () => {\n      return Boolean(\n        this.label || this.getAttribute(\"aria-label\") || this.getAttribute(\"aria-labelledby\") || this.slotEl.assignedNodes().length\n      );\n    };\n    if (true) {\n      if (!hasAccessibleName() && this.getAttribute(\"role\") === \"progressbar\") {\n        window.__swc.warn(\n          this,\n          \"<sp-progress-circle> elements need one of the following to be accessible:\",\n          \"https://opensource.adobe.com/spectrum-web-components/components/progress-circle/#accessibility\",\n          {\n            type: \"accessibility\",\n            issues: [\n              'value supplied to the \"label\" attribute, which will be displayed visually as part of the element, or',\n              \"text content supplied directly to the <sp-progress-circle> element, or\",\n              'value supplied to the \"aria-label\" attribute, which will only be provided to screen readers, or',\n              'an element ID reference supplied to the \"aria-labelledby\" attribute, which will be provided by screen readers and will need to be managed manually by the parent application.'\n            ]\n          }\n        );\n      }\n    }\n  }\n}\n__decorateClass([\n  property({ type: Boolean, reflect: true })\n], ProgressCircle.prototype, \"indeterminate\", 2);\n__decorateClass([\n  property({ type: String })\n], ProgressCircle.prototype, \"label\", 2);\n__decorateClass([\n  property({ reflect: true, attribute: \"static-color\" })\n], ProgressCircle.prototype, \"staticColor\", 2);\n__decorateClass([\n  property({ type: Number })\n], ProgressCircle.prototype, \"progress\", 2);\n__decorateClass([\n  query(\"slot\")\n], ProgressCircle.prototype, \"slotEl\", 2);\n//# sourceMappingURL=ProgressCircle.dev.js.map\n"],"names":[],"sourceRoot":""}