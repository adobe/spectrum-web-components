{"version":3,"file":"alert-dialog-stories-alert-dialog-stories.ccc64c02.iframe.bundle.js","mappings":";;;;;;;;;;;;;;;;;;;;;;;;AAmCA;;;;;;;;;;;;;;;;;;;;;;;;AA2BA;;;;;;;;;;;;;;;;;;;;;;;;AA2BA;;;;;;;;;;;;;;;AAkBA;;;;;;;;;;;;;;;;;;;;;;;AA0BA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAoCA","sources":["webpack://@adobe/spectrum-web-components/./packages/alert-dialog/stories/alert-dialog.stories.js"],"sourcesContent":["\"use strict\";\nimport { html } from \"@spectrum-web-components/base\";\nimport \"@spectrum-web-components/button/sp-button.js\";\nimport \"@spectrum-web-components/alert-dialog/sp-alert-dialog.js\";\nexport default {\n  title: \"Alert Dialog\",\n  component: \"sp-alert-dialog\"\n};\nexport const confirmation = () => {\n  return html`\n        <sp-alert-dialog variant=\"confirmation\">\n            <h2 slot=\"heading\">Disclaimer</h2>\n            Smart filters are nondestructive and will preserve your original\n            images.\n            <sp-button\n                slot=\"button\"\n                id=\"cancelButton\"\n                variant=\"secondary\"\n                treatment=\"outline\"\n                onclick=\"this.dispatchEvent(new Event('close', { bubbles: true, composed: true }));\"\n            >\n                Cancel\n            </sp-button>\n            <sp-button\n                slot=\"button\"\n                id=\"confirmButton\"\n                variant=\"accent\"\n                treatment=\"fill\"\n                onclick=\"this.dispatchEvent(new Event('close', { bubbles: true, composed: true }));\"\n            >\n                Enable\n            </sp-button>\n        </sp-alert-dialog>\n    `;\n};\nexport const information = () => {\n  return html`\n        <sp-alert-dialog variant=\"information\">\n            <h2 slot=\"heading\">Connect to wifi</h2>\n            Please connect to wifi to sync your projects or go to Settings to\n            change your preferences.\n            <sp-button\n                slot=\"button\"\n                id=\"cancelButton\"\n                variant=\"secondary\"\n                treatment=\"outline\"\n                onclick=\"this.dispatchEvent(new Event('close', { bubbles: true, composed: true }));\"\n            >\n                Cancel\n            </sp-button>\n            <sp-button\n                slot=\"button\"\n                id=\"confirmButton\"\n                variant=\"primary\"\n                treatment=\"outline\"\n                onclick=\"this.dispatchEvent(new Event('close', { bubbles: true, composed: true }));\"\n            >\n                Continue\n            </sp-button>\n        </sp-alert-dialog>\n    `;\n};\nexport const warning = () => {\n  return html`\n        <sp-alert-dialog variant=\"warning\">\n            <h2 slot=\"heading\">Unverified format</h2>\n            This format has not been verified and may not be viewable for some\n            users. Do you want to continue publishing?\n            <sp-button\n                slot=\"button\"\n                id=\"cancelButton\"\n                variant=\"secondary\"\n                treatment=\"outline\"\n                onclick=\"this.dispatchEvent(new Event('close', { bubbles: true, composed: true }));\"\n            >\n                Cancel\n            </sp-button>\n            <sp-button\n                slot=\"button\"\n                id=\"confirmButton\"\n                variant=\"primary\"\n                treatment=\"outline\"\n                onclick=\"this.dispatchEvent(new Event('close', { bubbles: true, composed: true }));\"\n            >\n                Continue\n            </sp-button>\n        </sp-alert-dialog>\n    `;\n};\nexport const error = () => {\n  return html`\n        <sp-alert-dialog variant=\"error\">\n            <h2 slot=\"heading\">Unable to share</h2>\n            An error occured while sharing your project. Please verify the email\n            address and try again.\n            <sp-button\n                slot=\"button\"\n                id=\"confirmButton\"\n                variant=\"primary\"\n                treatment=\"outline\"\n                onclick=\"this.dispatchEvent(new Event('close', { bubbles: true, composed: true }));\"\n            >\n                Continue\n            </sp-button>\n        </sp-alert-dialog>\n    `;\n};\nexport const destructive = () => {\n  return html`\n        <sp-alert-dialog variant=\"destructive\">\n            <h2 slot=\"heading\">Delete 3 documents?</h2>\n            Are you sure you want to delete the 3 selected documents?\n            <sp-button\n                slot=\"button\"\n                id=\"cancelButton\"\n                variant=\"secondary\"\n                treatment=\"outline\"\n                onclick=\"this.dispatchEvent(new Event('close', { bubbles: true, composed: true }));\"\n            >\n                Cancel\n            </sp-button>\n            <sp-button\n                slot=\"button\"\n                id=\"confirmButton\"\n                variant=\"negative\"\n                treatment=\"fill\"\n                onclick=\"this.dispatchEvent(new Event('close', { bubbles: true, composed: true }));\"\n            >\n                Delete\n            </sp-button>\n        </sp-alert-dialog>\n    `;\n};\nexport const secondary = () => {\n  return html`\n        <sp-alert-dialog variant=\"secondary\">\n            <h2 slot=\"heading\">Rate this app</h2>\n            If you enjoy our app, would you mind taking a moment to rate it?\n            <sp-button\n                slot=\"button\"\n                id=\"secondaryButton\"\n                variant=\"secondary\"\n                treatment=\"outline\"\n                onclick=\"this.dispatchEvent(new Event('close', { bubbles: true, composed: true }));\"\n            >\n                No, thanks\n            </sp-button>\n            <sp-button\n                slot=\"button\"\n                id=\"cancelButton\"\n                variant=\"secondary\"\n                treatment=\"outline\"\n                onclick=\"this.dispatchEvent(new Event('close', { bubbles: true, composed: true }));\"\n            >\n                Remind me later\n            </sp-button>\n            <sp-button\n                slot=\"button\"\n                id=\"confirmButton\"\n                variant=\"primary\"\n                treatment=\"outline\"\n                onclick=\"this.dispatchEvent(new Event('close', { bubbles: true, composed: true }));\"\n            >\n                Rate now\n            </sp-button>\n        </sp-alert-dialog>\n    `;\n};\n//# sourceMappingURL=alert-dialog.stories.js.map\n;export const __namedExportsOrder = [\"confirmation\",\"information\",\"warning\",\"error\",\"destructive\",\"secondary\"];"],"names":[],"sourceRoot":""}