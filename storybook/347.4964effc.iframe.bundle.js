"use strict";(self.webpackChunk_adobe_spectrum_web_components=self.webpackChunk_adobe_spectrum_web_components||[]).push([[347],{"./node_modules/colorjs.io/dist/color.js":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){function multiplyMatrices(A,B){let m=A.length;Array.isArray(A[0])||(A=[A]),Array.isArray(B[0])||(B=B.map(x=>[x]));let p=B[0].length,B_cols=B[0].map((_,i)=>B.map(x=>x[i])),product=A.map(row=>B_cols.map(col=>{let ret=0;if(!Array.isArray(row)){for(let c of col)ret+=row*c;return ret}for(let i=0;i<row.length;i++)ret+=row[i]*(col[i]||0);return ret}));return 1===m&&(product=product[0]),1===p?product.map(x=>x[0]):product}function isString(str){return"string"===type(str)}function type(o){return(Object.prototype.toString.call(o).match(/^\[object\s+(.*?)\]$/)[1]||"").toLowerCase()}function serializeNumber(n,{precision:precision,unit:unit}){return isNone(n)?"none":toPrecision(n,precision)+(unit??"")}function isNone(n){return Number.isNaN(n)||n instanceof Number&&n?.none}function skipNone(n){return isNone(n)?0:n}function toPrecision(n,precision){if(0===n)return 0;let integer=~~n,digits=0;integer&&precision&&(digits=1+~~Math.log10(Math.abs(integer)));const multiplier=10**(precision-digits);return Math.floor(n*multiplier+.5)/multiplier}__webpack_require__.d(__webpack_exports__,{A:function(){return Color}});const angleFactor={deg:1,grad:.9,rad:180/Math.PI,turn:360};function parseFunction(str){if(!str)return;str=str.trim();const isNumberRegex=/^-?[\d.]+$/,unitValueRegex=/%|deg|g?rad|turn$/,singleArgument=/\/?\s*(none|[-\w.]+(?:%|deg|g?rad|turn)?)/g;let parts=str.match(/^([a-z]+)\((.+?)\)$/i);if(parts){let args=[];return parts[2].replace(singleArgument,($0,rawArg)=>{let match=rawArg.match(unitValueRegex),arg=rawArg;if(match){let unit=match[0],unitlessArg=arg.slice(0,-unit.length);"%"===unit?(arg=new Number(unitlessArg/100),arg.type="<percentage>"):(arg=new Number(unitlessArg*angleFactor[unit]),arg.type="<angle>",arg.unit=unit)}else isNumberRegex.test(arg)?(arg=new Number(arg),arg.type="<number>"):"none"===arg&&(arg=new Number(NaN),arg.none=!0);$0.startsWith("/")&&(arg=arg instanceof Number?arg:new Number(arg),arg.alpha=!0),"object"==typeof arg&&arg instanceof Number&&(arg.raw=rawArg),args.push(arg)}),{name:parts[1].toLowerCase(),rawName:parts[1],rawArgs:parts[2],args:args}}}function last(arr){return arr[arr.length-1]}function interpolate(start,end,p){return isNaN(start)?end:isNaN(end)?start:start+(end-start)*p}function interpolateInv(start,end,value){return(value-start)/(end-start)}function mapRange(from,to,value){return interpolate(to[0],to[1],interpolateInv(from[0],from[1],value))}function parseCoordGrammar(coordGrammars){return coordGrammars.map(coordGrammar=>coordGrammar.split("|").map(type=>{let range=(type=type.trim()).match(/^(<[a-z]+>)\[(-?[.\d]+),\s*(-?[.\d]+)\]?$/);if(range){let ret=new String(range[1]);return ret.range=[+range[2],+range[3]],ret}return type}))}function clamp(min,val,max){return Math.max(Math.min(max,val),min)}function copySign(to,from){return Math.sign(to)===Math.sign(from)?to:-to}function spow(base,exp){return copySign(Math.abs(base)**exp,base)}function zdiv(n,d){return 0===d?0:n/d}function bisectLeft(arr,value,lo=0,hi=arr.length){for(;lo<hi;){const mid=lo+hi>>1;arr[mid]<value?lo=mid+1:hi=mid}return lo}var util=Object.freeze({__proto__:null,bisectLeft:bisectLeft,clamp:clamp,copySign:copySign,interpolate:interpolate,interpolateInv:interpolateInv,isNone:isNone,isString:isString,last:last,mapRange:mapRange,multiplyMatrices:multiplyMatrices,parseCoordGrammar:parseCoordGrammar,parseFunction:parseFunction,serializeNumber:serializeNumber,skipNone:skipNone,spow:spow,toPrecision:toPrecision,type:type,zdiv:zdiv});const hooks=new class Hooks{add(name,callback,first){if("string"==typeof arguments[0])(Array.isArray(name)?name:[name]).forEach(function(name){this[name]=this[name]||[],callback&&this[name][first?"unshift":"push"](callback)},this);else for(var name in arguments[0])this.add(name,arguments[0][name],arguments[1])}run(name,env){this[name]=this[name]||[],this[name].forEach(function(callback){callback.call(env&&env.context?env.context:env,env)})}};var defaults={gamut_mapping:"css",precision:5,deltaE:"76",verbose:"test"!==globalThis?.process?.env?.NODE_ENV?.toLowerCase(),warn:function warn(msg){this.verbose&&globalThis?.console?.warn?.(msg)}};const WHITES={D50:[.3457/.3585,1,.2958/.3585],D65:[.3127/.329,1,.3583/.329]};function getWhite(name){return Array.isArray(name)?name:WHITES[name]}function adapt$2(W1,W2,XYZ,options={}){if(W1=getWhite(W1),W2=getWhite(W2),!W1||!W2)throw new TypeError(`Missing white point to convert ${W1?"":"from"}${W1||W2?"":"/"}${W2?"":"to"}`);if(W1===W2)return XYZ;let env={W1:W1,W2:W2,XYZ:XYZ,options:options};if(hooks.run("chromatic-adaptation-start",env),env.M||(env.W1===WHITES.D65&&env.W2===WHITES.D50?env.M=[[1.0479297925449969,.022946870601609652,-.05019226628920524],[.02962780877005599,.9904344267538799,-.017073799063418826],[-.009243040646204504,.015055191490298152,.7518742814281371]]:env.W1===WHITES.D50&&env.W2===WHITES.D65&&(env.M=[[.955473421488075,-.02309845494876471,.06325924320057072],[-.0283697093338637,1.0099953980813041,.021041441191917323],[.012314014864481998,-.020507649298898964,1.330365926242124]])),hooks.run("chromatic-adaptation-end",env),env.M)return multiplyMatrices(env.M,env.XYZ);throw new TypeError("Only Bradford CAT with white points D50 and D65 supported for now.")}const noneTypes=new Set(["<number>","<percentage>","<angle>"]);function coerceCoords(space,format,name,coords){let types=Object.entries(space.coords).map(([id,coordMeta],i)=>{let type,coordGrammar=format.coordGrammar[i],arg=coords[i],providedType=arg?.type;if(type=arg.none?coordGrammar.find(c=>noneTypes.has(c)):coordGrammar.find(c=>c==providedType),!type){let coordName=coordMeta.name||id;throw new TypeError(`${providedType??arg.raw} not allowed for ${coordName} in ${name}()`)}let fromRange=type.range;"<percentage>"===providedType&&(fromRange||=[0,1]);let toRange=coordMeta.range||coordMeta.refRange;return fromRange&&toRange&&(coords[i]=mapRange(fromRange,toRange,coords[i])),type});return types}function parse(str,{meta:meta}={}){let env={str:String(str)?.trim()};if(hooks.run("parse-start",env),env.color)return env.color;if(env.parsed=parseFunction(env.str),env.parsed){let name=env.parsed.name;if("color"===name){let id=env.parsed.args.shift(),alternateId=id.startsWith("--")?id.substring(2):`--${id}`,ids=[id,alternateId],alpha=env.parsed.rawArgs.indexOf("/")>0?env.parsed.args.pop():1;for(let space of ColorSpace.all){let colorSpec=space.getFormat("color");if(colorSpec&&(ids.includes(colorSpec.id)||colorSpec.ids?.filter(specId=>ids.includes(specId)).length)){const coords=Object.keys(space.coords).map((_,i)=>env.parsed.args[i]||0);let types;return colorSpec.coordGrammar&&(types=coerceCoords(space,colorSpec,"color",coords)),meta&&Object.assign(meta,{formatId:"color",types:types}),colorSpec.id.startsWith("--")&&!id.startsWith("--")&&defaults.warn(`${space.name} is a non-standard space and not currently supported in the CSS spec. Use prefixed color(${colorSpec.id}) instead of color(${id}).`),id.startsWith("--")&&!colorSpec.id.startsWith("--")&&defaults.warn(`${space.name} is a standard space and supported in the CSS spec. Use color(${colorSpec.id}) instead of prefixed color(${id}).`),{spaceId:space.id,coords:coords,alpha:alpha}}}let didYouMean="",registryId=id in ColorSpace.registry?id:alternateId;if(registryId in ColorSpace.registry){let cssId=ColorSpace.registry[registryId].formats?.color?.id;cssId&&(didYouMean=`Did you mean color(${cssId})?`)}throw new TypeError(`Cannot parse color(${id}). `+(didYouMean||"Missing a plugin?"))}for(let space of ColorSpace.all){let format=space.getFormat(name);if(format&&"function"===format.type){let alpha=1;(format.lastAlpha||last(env.parsed.args).alpha)&&(alpha=env.parsed.args.pop());let types,coords=env.parsed.args;return format.coordGrammar&&(types=coerceCoords(space,format,name,coords)),meta&&Object.assign(meta,{formatId:format.name,types:types}),{spaceId:space.id,coords:coords,alpha:alpha}}}}else for(let space of ColorSpace.all)for(let formatId in space.formats){let format=space.formats[formatId];if("custom"!==format.type)continue;if(format.test&&!format.test(env.str))continue;let color=format.parse(env.str);if(color)return color.alpha??=1,meta&&(meta.formatId=formatId),color}throw new TypeError(`Could not parse ${str} as a color. Missing a plugin?`)}function getColor(color){if(Array.isArray(color))return color.map(getColor);if(!color)throw new TypeError("Empty color reference");isString(color)&&(color=parse(color));let space=color.space||color.spaceId;return space instanceof ColorSpace||(color.space=ColorSpace.get(space)),void 0===color.alpha&&(color.alpha=1),color}class ColorSpace{constructor(options){this.id=options.id,this.name=options.name,this.base=options.base?ColorSpace.get(options.base):null,this.aliases=options.aliases,this.base&&(this.fromBase=options.fromBase,this.toBase=options.toBase);let coords=options.coords??this.base.coords;for(let name in coords)"name"in coords[name]||(coords[name].name=name);this.coords=coords;let white=options.white??this.base.white??"D65";this.white=getWhite(white),this.formats=options.formats??{};for(let name in this.formats){let format=this.formats[name];format.type||="function",format.name||=name}this.formats.color?.id||(this.formats.color={...this.formats.color??{},id:options.cssId||this.id}),options.gamutSpace?this.gamutSpace="self"===options.gamutSpace?this:ColorSpace.get(options.gamutSpace):this.isPolar?this.gamutSpace=this.base:this.gamutSpace=this,this.gamutSpace.isUnbounded&&(this.inGamut=(coords,options)=>!0),this.referred=options.referred,Object.defineProperty(this,"path",{value:getPath(this).reverse(),writable:!1,enumerable:!0,configurable:!0}),hooks.run("colorspace-init-end",this)}inGamut(coords,{epsilon:epsilon=75e-6}={}){if(!this.equals(this.gamutSpace))return coords=this.to(this.gamutSpace,coords),this.gamutSpace.inGamut(coords,{epsilon:epsilon});let coordMeta=Object.values(this.coords);return coords.every((c,i)=>{let meta=coordMeta[i];if("angle"!==meta.type&&meta.range){if(Number.isNaN(c))return!0;let[min,max]=meta.range;return(void 0===min||c>=min-epsilon)&&(void 0===max||c<=max+epsilon)}return!0})}get isUnbounded(){return Object.values(this.coords).every(coord=>!("range"in coord))}get cssId(){return this.formats?.color?.id||this.id}get isPolar(){for(let id in this.coords)if("angle"===this.coords[id].type)return!0;return!1}getFormat(format){if("object"==typeof format)return format=processFormat(format,this);let ret;return ret="default"===format?Object.values(this.formats)[0]:this.formats[format],ret?(ret=processFormat(ret,this),ret):null}equals(space){return!!space&&(this===space||this.id===space||this.id===space.id)}to(space,coords){if(1===arguments.length){const color=getColor(space);[space,coords]=[color.space,color.coords]}if(space=ColorSpace.get(space),this.equals(space))return coords;coords=coords.map(c=>Number.isNaN(c)?0:c);let connectionSpace,connectionSpaceIndex,myPath=this.path,otherPath=space.path;for(let i=0;i<myPath.length&&myPath[i].equals(otherPath[i]);i++)connectionSpace=myPath[i],connectionSpaceIndex=i;if(!connectionSpace)throw new Error(`Cannot convert between color spaces ${this} and ${space}: no connection space was found`);for(let i=myPath.length-1;i>connectionSpaceIndex;i--)coords=myPath[i].toBase(coords);for(let i=connectionSpaceIndex+1;i<otherPath.length;i++)coords=otherPath[i].fromBase(coords);return coords}from(space,coords){if(1===arguments.length){const color=getColor(space);[space,coords]=[color.space,color.coords]}return(space=ColorSpace.get(space)).to(this,coords)}toString(){return`${this.name} (${this.id})`}getMinCoords(){let ret=[];for(let id in this.coords){let meta=this.coords[id],range=meta.range||meta.refRange;ret.push(range?.min??0)}return ret}static registry={};static get all(){return[...new Set(Object.values(ColorSpace.registry))]}static register(id,space){if(1===arguments.length&&(id=(space=arguments[0]).id),space=this.get(space),this.registry[id]&&this.registry[id]!==space)throw new Error(`Duplicate color space registration: '${id}'`);if(this.registry[id]=space,1===arguments.length&&space.aliases)for(let alias of space.aliases)this.register(alias,space);return space}static get(space,...alternatives){if(!space||space instanceof ColorSpace)return space;if("string"===type(space)){let ret=ColorSpace.registry[space.toLowerCase()];if(!ret)throw new TypeError(`No color space found with id = "${space}"`);return ret}if(alternatives.length)return ColorSpace.get(...alternatives);throw new TypeError(`${space} is not a valid color space`)}static resolveCoord(ref,workingSpace){let space,coord,coordType=type(ref);if("string"===coordType?ref.includes(".")?[space,coord]=ref.split("."):[space,coord]=[,ref]:Array.isArray(ref)?[space,coord]=ref:(space=ref.space,coord=ref.coordId),space=ColorSpace.get(space),space||(space=workingSpace),!space)throw new TypeError(`Cannot resolve coordinate reference ${ref}: No color space specified and relative references are not allowed here`);if(coordType=type(coord),"number"===coordType||"string"===coordType&&coord>=0){let meta=Object.entries(space.coords)[coord];if(meta)return{space:space,id:meta[0],index:coord,...meta[1]}}space=ColorSpace.get(space);let normalizedCoord=coord.toLowerCase(),i=0;for(let id in space.coords){let meta=space.coords[id];if(id.toLowerCase()===normalizedCoord||meta.name?.toLowerCase()===normalizedCoord)return{space:space,id:id,index:i,...meta};i++}throw new TypeError(`No "${coord}" coordinate found in ${space.name}. Its coordinates are: ${Object.keys(space.coords).join(", ")}`)}static DEFAULT_FORMAT={type:"functions",name:"color"}}function getPath(space){let ret=[space];for(let s=space;s=s.base;)ret.push(s);return ret}function processFormat(format,{coords:coords}={}){if(format.coords&&!format.coordGrammar){format.type||="function",format.name||="color",format.coordGrammar=parseCoordGrammar(format.coords);let coordFormats=Object.entries(coords).map(([id,coordMeta],i)=>{let outputType=format.coordGrammar[i][0],fromRange=coordMeta.range||coordMeta.refRange,toRange=outputType.range,suffix="";return"<percentage>"==outputType?(toRange=[0,100],suffix="%"):"<angle>"==outputType&&(suffix="deg"),{fromRange:fromRange,toRange:toRange,suffix:suffix}});format.serializeCoords=(coords,precision)=>coords.map((c,i)=>{let{fromRange:fromRange,toRange:toRange,suffix:suffix}=coordFormats[i];return fromRange&&toRange&&(c=mapRange(fromRange,toRange,c)),c=serializeNumber(c,{precision:precision,unit:suffix})})}return format}var xyz_d65=new ColorSpace({id:"xyz-d65",name:"XYZ D65",coords:{x:{name:"X"},y:{name:"Y"},z:{name:"Z"}},white:"D65",formats:{color:{ids:["xyz-d65","xyz"]}},aliases:["xyz"]});class RGBColorSpace extends ColorSpace{constructor(options){options.coords||(options.coords={r:{range:[0,1],name:"Red"},g:{range:[0,1],name:"Green"},b:{range:[0,1],name:"Blue"}}),options.base||(options.base=xyz_d65),options.toXYZ_M&&options.fromXYZ_M&&(options.toBase??=rgb=>{let xyz=multiplyMatrices(options.toXYZ_M,rgb);return this.white!==this.base.white&&(xyz=adapt$2(this.white,this.base.white,xyz)),xyz},options.fromBase??=xyz=>(xyz=adapt$2(this.base.white,this.white,xyz),multiplyMatrices(options.fromXYZ_M,xyz))),options.referred??="display",super(options)}}function getAll(color,space){return color=getColor(color),!space||color.space.equals(space)?color.coords.slice():(space=ColorSpace.get(space)).from(color)}function get(color,prop){color=getColor(color);let{space:space,index:index}=ColorSpace.resolveCoord(prop,color.space);return getAll(color,space)[index]}function setAll(color,space,coords){return color=getColor(color),space=ColorSpace.get(space),color.coords=space.to(color.space,coords),color}function set(color,prop,value){if(color=getColor(color),2===arguments.length&&"object"===type(arguments[1])){let object=arguments[1];for(let p in object)set(color,p,object[p])}else{"function"==typeof value&&(value=value(get(color,prop)));let{space:space,index:index}=ColorSpace.resolveCoord(prop,color.space),coords=getAll(color,space);coords[index]=value,setAll(color,space,coords)}return color}setAll.returns="color",set.returns="color";var XYZ_D50=new ColorSpace({id:"xyz-d50",name:"XYZ D50",white:"D50",base:xyz_d65,fromBase:coords=>adapt$2(xyz_d65.white,"D50",coords),toBase:coords=>adapt$2("D50",xyz_d65.white,coords)});const ε$6=216/24389,ε3$1=24/116,κ$4=24389/27;let white$4=WHITES.D50;var lab=new ColorSpace({id:"lab",name:"Lab",coords:{l:{refRange:[0,100],name:"Lightness"},a:{refRange:[-125,125]},b:{refRange:[-125,125]}},white:white$4,base:XYZ_D50,fromBase(XYZ){let f=XYZ.map((value,i)=>value/white$4[i]).map(value=>value>ε$6?Math.cbrt(value):(κ$4*value+16)/116);return[116*f[1]-16,500*(f[0]-f[1]),200*(f[1]-f[2])]},toBase(Lab){let f=[];return f[1]=(Lab[0]+16)/116,f[0]=Lab[1]/500+f[1],f[2]=f[1]-Lab[2]/200,[f[0]>ε3$1?Math.pow(f[0],3):(116*f[0]-16)/κ$4,Lab[0]>8?Math.pow((Lab[0]+16)/116,3):Lab[0]/κ$4,f[2]>ε3$1?Math.pow(f[2],3):(116*f[2]-16)/κ$4].map((value,i)=>value*white$4[i])},formats:{lab:{coords:["<number> | <percentage>","<number> | <percentage>[-1,1]","<number> | <percentage>[-1,1]"]}}});function constrain(angle){return(angle%360+360)%360}var lch=new ColorSpace({id:"lch",name:"LCH",coords:{l:{refRange:[0,100],name:"Lightness"},c:{refRange:[0,150],name:"Chroma"},h:{refRange:[0,360],type:"angle",name:"Hue"}},base:lab,fromBase(Lab){let hue,[L,a,b]=Lab;return hue=Math.abs(a)<.02&&Math.abs(b)<.02?NaN:180*Math.atan2(b,a)/Math.PI,[L,Math.sqrt(a**2+b**2),constrain(hue)]},toBase(LCH){let[Lightness,Chroma,Hue]=LCH;return Chroma<0&&(Chroma=0),isNaN(Hue)&&(Hue=0),[Lightness,Chroma*Math.cos(Hue*Math.PI/180),Chroma*Math.sin(Hue*Math.PI/180)]},formats:{lch:{coords:["<number> | <percentage>","<number> | <percentage>","<number> | <angle>"]}}});const π$1=Math.PI,r2d=180/π$1,d2r$1=π$1/180;function pow7(x){const x2=x*x;return x2*x2*x2*x}function deltaE2000(color,sample,{kL:kL=1,kC:kC=1,kH:kH=1}={}){[color,sample]=getColor([color,sample]);let[L1,a1,b1]=lab.from(color),C1=lch.from(lab,[L1,a1,b1])[1],[L2,a2,b2]=lab.from(sample),C2=lch.from(lab,[L2,a2,b2])[1];C1<0&&(C1=0),C2<0&&(C2=0);let C7=pow7((C1+C2)/2),G=.5*(1-Math.sqrt(C7/(C7+6103515625))),adash1=(1+G)*a1,adash2=(1+G)*a2,Cdash1=Math.sqrt(adash1**2+b1**2),Cdash2=Math.sqrt(adash2**2+b2**2),h1=0===adash1&&0===b1?0:Math.atan2(b1,adash1),h2=0===adash2&&0===b2?0:Math.atan2(b2,adash2);h1<0&&(h1+=2*π$1),h2<0&&(h2+=2*π$1),h1*=r2d,h2*=r2d;let Δh,ΔL=L2-L1,ΔC=Cdash2-Cdash1,hdiff=h2-h1,hsum=h1+h2,habs=Math.abs(hdiff);Cdash1*Cdash2===0?Δh=0:habs<=180?Δh=hdiff:hdiff>180?Δh=hdiff-360:hdiff<-180?Δh=hdiff+360:defaults.warn("the unthinkable has happened");let hdash,ΔH=2*Math.sqrt(Cdash2*Cdash1)*Math.sin(Δh*d2r$1/2),Ldash=(L1+L2)/2,Cdash=(Cdash1+Cdash2)/2,Cdash7=pow7(Cdash);hdash=Cdash1*Cdash2===0?hsum:habs<=180?hsum/2:hsum<360?(hsum+360)/2:(hsum-360)/2;let lsq=(Ldash-50)**2,SL=1+.015*lsq/Math.sqrt(20+lsq),SC=1+.045*Cdash,T=1;T-=.17*Math.cos((hdash-30)*d2r$1),T+=.24*Math.cos(2*hdash*d2r$1),T+=.32*Math.cos((3*hdash+6)*d2r$1),T-=.2*Math.cos((4*hdash-63)*d2r$1);let SH=1+.015*Cdash*T,Δθ=30*Math.exp(-1*((hdash-275)/25)**2),RC=2*Math.sqrt(Cdash7/(Cdash7+6103515625)),dE=(ΔL/(kL*SL))**2;return dE+=(ΔC/(kC*SC))**2,dE+=(ΔH/(kH*SH))**2,dE+=-1*Math.sin(2*Δθ*d2r$1)*RC*(ΔC/(kC*SC))*(ΔH/(kH*SH)),Math.sqrt(dE)}const XYZtoLMS_M$1=[[.819022437996703,.3619062600528904,-.1288737815209879],[.0329836539323885,.9292868615863434,.0361446663506424],[.0481771893596242,.2642395317527308,.6335478284694309]],LMStoXYZ_M$1=[[1.2268798758459243,-.5578149944602171,.2813910456659647],[-.0405757452148008,1.112286803280317,-.0717110580655164],[-.0763729366746601,-.4214933324022432,1.5869240198367816]],LMStoLab_M=[[.210454268309314,.7936177747023054,-.0040720430116193],[1.9779985324311684,-2.42859224204858,.450593709617411],[.0259040424655478,.7827717124575296,-.8086757549230774]],LabtoLMS_M=[[1,.3963377773761749,.2158037573099136],[1,-.1055613458156586,-.0638541728258133],[1,-.0894841775298119,-1.2914855480194092]];var OKLab=new ColorSpace({id:"oklab",name:"Oklab",coords:{l:{refRange:[0,1],name:"Lightness"},a:{refRange:[-.4,.4]},b:{refRange:[-.4,.4]}},white:"D65",base:xyz_d65,fromBase(XYZ){let LMSg=multiplyMatrices(XYZtoLMS_M$1,XYZ).map(val=>Math.cbrt(val));return multiplyMatrices(LMStoLab_M,LMSg)},toBase(OKLab){let LMS=multiplyMatrices(LabtoLMS_M,OKLab).map(val=>val**3);return multiplyMatrices(LMStoXYZ_M$1,LMS)},formats:{oklab:{coords:["<percentage> | <number>","<number> | <percentage>[-1,1]","<number> | <percentage>[-1,1]"]}}});function deltaEOK(color,sample){[color,sample]=getColor([color,sample]);let[L1,a1,b1]=OKLab.from(color),[L2,a2,b2]=OKLab.from(sample),ΔL=L1-L2,Δa=a1-a2,Δb=b1-b2;return Math.sqrt(ΔL**2+Δa**2+Δb**2)}function inGamut(color,space,{epsilon:epsilon=75e-6}={}){color=getColor(color),space||(space=color.space),space=ColorSpace.get(space);let coords=color.coords;return space!==color.space&&(coords=space.from(color)),space.inGamut(coords,{epsilon:epsilon})}function clone(color){return{space:color.space,coords:color.coords.slice(),alpha:color.alpha}}function distance(color1,color2,space="lab"){let coords1=(space=ColorSpace.get(space)).from(color1),coords2=space.from(color2);return Math.sqrt(coords1.reduce((acc,c1,i)=>{let c2=coords2[i];return isNaN(c1)||isNaN(c2)?acc:acc+(c2-c1)**2},0))}const d2r=Math.PI/180;var XYZ_Abs_D65=new ColorSpace({id:"xyz-abs-d65",cssId:"--xyz-abs-d65",name:"Absolute XYZ D65",coords:{x:{refRange:[0,9504.7],name:"Xa"},y:{refRange:[0,1e4],name:"Ya"},z:{refRange:[0,10888.3],name:"Za"}},base:xyz_d65,fromBase(XYZ){return XYZ.map(v=>Math.max(203*v,0))},toBase(AbsXYZ){return AbsXYZ.map(v=>Math.max(v/203,0))}});const g=.66,n$1=2610/16384,p=1.7*2523/32,pinv=32/(1.7*2523),d=-.56,d0=16295499532821565e-27,XYZtoCone_M=[[.41478972,.579999,.014648],[-.20151,1.120649,.0531008],[-.0166008,.2648,.6684799]],ConetoXYZ_M=[[1.9242264357876067,-1.0047923125953657,.037651404030618],[.35031676209499907,.7264811939316552,-.06538442294808501],[-.09098281098284752,-.3127282905230739,1.5227665613052603]],ConetoIab_M=[[.5,.5,0],[3.524,-4.066708,.542708],[.199076,1.096799,-1.295875]],IabtoCone_M=[[1,.1386050432715393,.05804731615611886],[.9999999999999999,-.1386050432715393,-.05804731615611886],[.9999999999999998,-.09601924202631895,-.8118918960560388]];var Jzazbz=new ColorSpace({id:"jzazbz",name:"Jzazbz",coords:{jz:{refRange:[0,1],name:"Jz"},az:{refRange:[-.5,.5]},bz:{refRange:[-.5,.5]}},base:XYZ_Abs_D65,fromBase(XYZ){let[Xa,Ya,Za]=XYZ,PQLMS=multiplyMatrices(XYZtoCone_M,[1.15*Xa-(1.15-1)*Za,g*Ya-(g-1)*Xa,Za]).map(function(val){return((.8359375+18.8515625*(val/1e4)**n$1)/(1+18.6875*(val/1e4)**n$1))**p}),[Iz,az,bz]=multiplyMatrices(ConetoIab_M,PQLMS);return[(1+d)*Iz/(1+d*Iz)-d0,az,bz]},toBase(Jzazbz){let[Jz,az,bz]=Jzazbz,LMS=multiplyMatrices(IabtoCone_M,[(Jz+d0)/(1+d-d*(Jz+d0)),az,bz]).map(function(val){return 1e4*((.8359375-val**pinv)/(18.6875*val**pinv-18.8515625))**6.277394636015326}),[Xm,Ym,Za]=multiplyMatrices(ConetoXYZ_M,LMS),Xa=(Xm+(1.15-1)*Za)/1.15;return[Xa,(Ym+(g-1)*Xa)/g,Za]},formats:{color:{coords:["<number> | <percentage>","<number> | <percentage>[-1,1]","<number> | <percentage>[-1,1]"]}}}),jzczhz=new ColorSpace({id:"jzczhz",name:"JzCzHz",coords:{jz:{refRange:[0,1],name:"Jz"},cz:{refRange:[0,1],name:"Chroma"},hz:{refRange:[0,360],type:"angle",name:"Hue"}},base:Jzazbz,fromBase(jzazbz){let hue,[Jz,az,bz]=jzazbz;const ε=2e-4;return hue=Math.abs(az)<ε&&Math.abs(bz)<ε?NaN:180*Math.atan2(bz,az)/Math.PI,[Jz,Math.sqrt(az**2+bz**2),constrain(hue)]},toBase(jzczhz){return[jzczhz[0],jzczhz[1]*Math.cos(jzczhz[2]*Math.PI/180),jzczhz[1]*Math.sin(jzczhz[2]*Math.PI/180)]}});const c1$1=.8359375,c2$1=2413/128,m1$1=2610/16384,m2=2523/32,im1=16384/2610,im2=32/2523,XYZtoLMS_M=[[.3592832590121217,.6976051147779502,-.035891593232029],[-.1920808463704993,1.100476797037432,.0753748658519118],[.0070797844607479,.0748396662186362,.8433265453898765]],LMStoIPT_M=[[.5,.5,0],[6610/4096,-13613/4096,7003/4096],[17933/4096,-17390/4096,-543/4096]],IPTtoLMS_M=[[.9999999999999998,.0086090370379328,.111029625003026],[.9999999999999998,-.0086090370379328,-.1110296250030259],[.9999999999999998,.5600313357106791,-.3206271749873188]],LMStoXYZ_M=[[2.0701522183894223,-1.3263473389671563,.2066510476294053],[.3647385209748072,.6805660249472273,-.0453045459220347],[-.0497472075358123,-.0492609666966131,1.1880659249923042]];var ictcp=new ColorSpace({id:"ictcp",name:"ICTCP",coords:{i:{refRange:[0,1],name:"I"},ct:{refRange:[-.5,.5],name:"CT"},cp:{refRange:[-.5,.5],name:"CP"}},base:XYZ_Abs_D65,fromBase(XYZ){return function LMStoICtCp(LMS){let PQLMS=LMS.map(function(val){return((.8359375+c2$1*(val/1e4)**m1$1)/(1+18.6875*(val/1e4)**m1$1))**m2});return multiplyMatrices(LMStoIPT_M,PQLMS)}(multiplyMatrices(XYZtoLMS_M,XYZ))},toBase(ICtCp){let LMS=function ICtCptoLMS(ICtCp){let PQLMS=multiplyMatrices(IPTtoLMS_M,ICtCp),LMS=PQLMS.map(function(val){return 1e4*(Math.max(val**im2-c1$1,0)/(c2$1-18.6875*val**im2))**im1});return LMS}(ICtCp);return multiplyMatrices(LMStoXYZ_M,LMS)}});const white$3=WHITES.D65,tau=2*Math.PI,cat16=[[.401288,.650173,-.051461],[-.250268,1.204414,.045854],[-.002079,.048952,.953127]],cat16Inv=[[1.8620678550872327,-1.0112546305316843,.14918677544445175],[.38752654323613717,.6214474419314753,-.008973985167612518],[-.015841498849333856,-.03412293802851557,1.0499644368778496]],m1=[[460,451,288],[460,-891,-261],[460,-220,-6300]],surroundMap={dark:[.8,.525,.8],dim:[.9,.59,.9],average:[1,.69,1]},hueQuadMap={h:[20.14,90,164.25,237.53,380.14],e:[.8,.7,1,1.2,.8],H:[0,100,200,300,400]},rad2deg=180/Math.PI,deg2rad$1=Math.PI/180;function adapt$1(coords,fl){const temp=coords.map(c=>{const x=spow(fl*Math.abs(c)*.01,.42);return 400*copySign(x,c)/(x+27.13)});return temp}function environment(refWhite,adaptingLuminance,backgroundLuminance,surround,discounting){const env={};env.discounting=discounting,env.refWhite=refWhite,env.surround=surround;const xyzW=refWhite.map(c=>100*c);env.la=adaptingLuminance,env.yb=backgroundLuminance;const yw=xyzW[1],rgbW=multiplyMatrices(cat16,xyzW),f=(surround=surroundMap[env.surround])[0];env.c=surround[1],env.nc=surround[2];const k4=(1/(5*env.la+1))**4;env.fl=k4*env.la+.1*(1-k4)*(1-k4)*Math.cbrt(5*env.la),env.flRoot=env.fl**.25,env.n=env.yb/yw,env.z=1.48+Math.sqrt(env.n),env.nbb=.725*env.n**-.2,env.ncb=env.nbb;const d=discounting?1:Math.max(Math.min(f*(1-1/3.6*Math.exp((-env.la-42)/92)),1),0);env.dRgb=rgbW.map(c=>interpolate(1,yw/c,d)),env.dRgbInv=env.dRgb.map(c=>1/c);const rgbCW=rgbW.map((c,i)=>c*env.dRgb[i]),rgbAW=adapt$1(rgbCW,env.fl);return env.aW=env.nbb*(2*rgbAW[0]+rgbAW[1]+.05*rgbAW[2]),env}const viewingConditions$1=environment(white$3,64/Math.PI*.2,20,"average",!1);function fromCam16(cam16,env){if(!(void 0!==cam16.J^void 0!==cam16.Q))throw new Error("Conversion requires one and only one: 'J' or 'Q'");if(!(void 0!==cam16.C^void 0!==cam16.M^void 0!==cam16.s))throw new Error("Conversion requires one and only one: 'C', 'M' or 's'");if(!(void 0!==cam16.h^void 0!==cam16.H))throw new Error("Conversion requires one and only one: 'h' or 'H'");if(0===cam16.J||0===cam16.Q)return[0,0,0];let hRad=0;hRad=void 0!==cam16.h?constrain(cam16.h)*deg2rad$1:function invHueQuadrature(H){let Hp=(H%400+400)%400;const i=Math.floor(.01*Hp);Hp%=100;const[hi,hii]=hueQuadMap.h.slice(i,i+2),[ei,eii]=hueQuadMap.e.slice(i,i+2);return constrain((Hp*(eii*hi-ei*hii)-100*hi*eii)/(Hp*(eii-ei)-100*eii))}(cam16.H)*deg2rad$1;const cosh=Math.cos(hRad),sinh=Math.sin(hRad);let Jroot=0;void 0!==cam16.J?Jroot=.1*spow(cam16.J,.5):void 0!==cam16.Q&&(Jroot=.25*env.c*cam16.Q/((env.aW+4)*env.flRoot));let alpha=0;void 0!==cam16.C?alpha=cam16.C/Jroot:void 0!==cam16.M?alpha=cam16.M/env.flRoot/Jroot:void 0!==cam16.s&&(alpha=4e-4*cam16.s**2*(env.aW+4)/env.c);const t=spow(alpha*Math.pow(1.64-Math.pow(.29,env.n),-.73),10/9),et=.25*(Math.cos(hRad+2)+3.8),A=env.aW*spow(Jroot,2/env.c/env.z),p1=5e4/13*env.nc*env.ncb*et,p2=A/env.nbb,r=23*(p2+.305)*zdiv(t,23*p1+t*(11*cosh+108*sinh)),rgb_c=function unadapt(adapted,fl){const constant=100/fl*2588.068098016295;return adapted.map(c=>{const cabs=Math.abs(c);return copySign(constant*spow(cabs/(400-cabs),2.380952380952381),c)})}(multiplyMatrices(m1,[p2,r*cosh,r*sinh]).map(c=>1*c/1403),env.fl);return multiplyMatrices(cat16Inv,rgb_c.map((c,i)=>c*env.dRgbInv[i])).map(c=>c/100)}function toCam16(xyzd65,env){const xyz100=xyzd65.map(c=>100*c),rgbA=adapt$1(multiplyMatrices(cat16,xyz100).map((c,i)=>c*env.dRgb[i]),env.fl),a=rgbA[0]+(-12*rgbA[1]+rgbA[2])/11,b=(rgbA[0]+rgbA[1]-2*rgbA[2])/9,hRad=(Math.atan2(b,a)%tau+tau)%tau,et=.25*(Math.cos(hRad+2)+3.8),alpha=spow(5e4/13*env.nc*env.ncb*zdiv(et*Math.sqrt(a**2+b**2),rgbA[0]+rgbA[1]+1.05*rgbA[2]+.305),.9)*Math.pow(1.64-Math.pow(.29,env.n),.73),Jroot=spow(env.nbb*(2*rgbA[0]+rgbA[1]+.05*rgbA[2])/env.aW,.5*env.c*env.z),J=100*spow(Jroot,2),Q=4/env.c*Jroot*(env.aW+4)*env.flRoot,C=alpha*Jroot,M=C*env.flRoot,h=constrain(hRad*rad2deg),H=function hueQuadrature(h){let hp=constrain(h);hp<=hueQuadMap.h[0]&&(hp+=360);const i=bisectLeft(hueQuadMap.h,hp)-1,[hi,hii]=hueQuadMap.h.slice(i,i+2),[ei,eii]=hueQuadMap.e.slice(i,i+2),t=(hp-hi)/ei;return hueQuadMap.H[i]+100*t/(t+(hii-hp)/eii)}(h);return{J:J,C:C,h:h,s:50*spow(env.c*alpha/(env.aW+4),.5),Q:Q,M:M,H:H}}var cam16=new ColorSpace({id:"cam16-jmh",cssId:"--cam16-jmh",name:"CAM16-JMh",coords:{j:{refRange:[0,100],name:"J"},m:{refRange:[0,105],name:"Colorfulness"},h:{refRange:[0,360],type:"angle",name:"Hue"}},base:xyz_d65,fromBase(xyz){const cam16=toCam16(xyz,viewingConditions$1);return[cam16.J,cam16.M,cam16.h]},toBase(cam16){return fromCam16({J:cam16[0],M:cam16[1],h:cam16[2]},viewingConditions$1)}});const white$2=WHITES.D65,ε$4=216/24389,κ$3=24389/27;function fromLstar(lstar){return lstar>8?Math.pow((lstar+16)/116,3):lstar/κ$3}function toHct(xyz,env){const t=function toLstar(y){return 116*(y>ε$4?Math.cbrt(y):(κ$3*y+16)/116)-16}(xyz[1]);if(0===t)return[0,0,0];const cam16=toCam16(xyz,viewingConditions);return[constrain(cam16.h),cam16.C,t]}const viewingConditions=environment(white$2,200/Math.PI*fromLstar(50),100*fromLstar(50),"average",!1);var hct=new ColorSpace({id:"hct",name:"HCT",coords:{h:{refRange:[0,360],type:"angle",name:"Hue"},c:{refRange:[0,145],name:"Colorfulness"},t:{refRange:[0,100],name:"Tone"}},base:xyz_d65,fromBase(xyz){return toHct(xyz)},toBase(hct){return function fromHct(coords,env){let[h,c,t]=coords,xyz=[],j=0;if(0===t)return[0,0,0];let y=fromLstar(t);j=t>0?.00379058511492914*t**2+.608983189401032*t+.9155088574762233:9514440756550361e-21*t**2+.08693057439788597*t-21.928975842194614;let attempt=0,last=1/0;for(;attempt<=15;){xyz=fromCam16({J:j,C:c,h:h},env);const delta=Math.abs(xyz[1]-y);if(delta<last){if(delta<=2e-12)return xyz;last=delta}j-=(xyz[1]-y)*j/(2*xyz[1]),attempt+=1}return fromCam16({J:j,C:c,h:h},env)}(hct,viewingConditions)},formats:{color:{id:"--hct",coords:["<number> | <angle>","<percentage> | <number>","<percentage> | <number>"]}}});const deg2rad=Math.PI/180,ucsCoeff=[1,.007,.0228];function convertUcsAb(coords){coords[1]<0&&(coords=hct.fromBase(hct.toBase(coords)));const M=Math.log(Math.max(1+ucsCoeff[2]*coords[1]*viewingConditions.flRoot,1))/ucsCoeff[2],hrad=coords[0]*deg2rad,a=M*Math.cos(hrad),b=M*Math.sin(hrad);return[coords[2],a,b]}var deltaEMethods={deltaE76:function deltaE76(color,sample){return distance(color,sample,"lab")},deltaECMC:function deltaECMC(color,sample,{l:l=2,c:c=1}={}){[color,sample]=getColor([color,sample]);let[L1,a1,b1]=lab.from(color),[,C1,H1]=lch.from(lab,[L1,a1,b1]),[L2,a2,b2]=lab.from(sample),C2=lch.from(lab,[L2,a2,b2])[1];C1<0&&(C1=0),C2<0&&(C2=0);let ΔL=L1-L2,ΔC=C1-C2,H2=(a1-a2)**2+(b1-b2)**2-ΔC**2,SL=.511;L1>=16&&(SL=.040975*L1/(1+.01765*L1));let T,SC=.0638*C1/(1+.0131*C1)+.638;Number.isNaN(H1)&&(H1=0),T=H1>=164&&H1<=345?.56+Math.abs(.2*Math.cos((H1+168)*d2r)):.36+Math.abs(.4*Math.cos((H1+35)*d2r));let C4=Math.pow(C1,4),F=Math.sqrt(C4/(C4+1900)),dE=(ΔL/(l*SL))**2;return dE+=(ΔC/(c*SC))**2,dE+=H2/(SC*(F*T+1-F))**2,Math.sqrt(dE)},deltaE2000:deltaE2000,deltaEJz:function deltaEJz(color,sample){[color,sample]=getColor([color,sample]);let[Jz1,Cz1,Hz1]=jzczhz.from(color),[Jz2,Cz2,Hz2]=jzczhz.from(sample),ΔJ=Jz1-Jz2,ΔC=Cz1-Cz2;Number.isNaN(Hz1)&&Number.isNaN(Hz2)?(Hz1=0,Hz2=0):Number.isNaN(Hz1)?Hz1=Hz2:Number.isNaN(Hz2)&&(Hz2=Hz1);let Δh=Hz1-Hz2,ΔH=2*Math.sqrt(Cz1*Cz2)*Math.sin(Δh/2*(Math.PI/180));return Math.sqrt(ΔJ**2+ΔC**2+ΔH**2)},deltaEITP:function deltaEITP(color,sample){[color,sample]=getColor([color,sample]);let[I1,T1,P1]=ictcp.from(color),[I2,T2,P2]=ictcp.from(sample);return 720*Math.sqrt((I1-I2)**2+.25*(T1-T2)**2+(P1-P2)**2)},deltaEOK:deltaEOK,deltaEHCT:function deltaEHCT(color,sample){[color,sample]=getColor([color,sample]);let[t1,a1,b1]=convertUcsAb(hct.from(color)),[t2,a2,b2]=convertUcsAb(hct.from(sample));return Math.sqrt((t1-t2)**2+(a1-a2)**2+(b1-b2)**2)}};const GMAPPRESET={hct:{method:"hct.c",jnd:2,deltaEMethod:"hct",blackWhiteClamp:{}},"hct-tonal":{method:"hct.c",jnd:0,deltaEMethod:"hct",blackWhiteClamp:{channel:"hct.t",min:0,max:100}}};function toGamut(color,{method:method=defaults.gamut_mapping,space:space,deltaEMethod:deltaEMethod="",jnd:jnd=2,blackWhiteClamp:blackWhiteClamp={}}={}){if(color=getColor(color),isString(arguments[1])?space=arguments[1]:space||(space=color.space),inGamut(color,space=ColorSpace.get(space),{epsilon:0}))return color;let spaceColor;if("css"===method)spaceColor=function toGamutCSS(origin,{space:space}={}){const JND=.02,ε=1e-4;origin=getColor(origin),space||(space=origin.space);space=ColorSpace.get(space);const oklchSpace=ColorSpace.get("oklch");if(space.isUnbounded)return to(origin,space);const origin_OKLCH=to(origin,oklchSpace);let L=origin_OKLCH.coords[0];if(L>=1){const white=to(COLORS.WHITE,space);return white.alpha=origin.alpha,to(white,space)}if(L<=0){const black=to(COLORS.BLACK,space);return black.alpha=origin.alpha,to(black,space)}if(inGamut(origin_OKLCH,space,{epsilon:0}))return to(origin_OKLCH,space);function clip(_color){const destColor=to(_color,space),spaceCoords=Object.values(space.coords);return destColor.coords=destColor.coords.map((coord,index)=>{if("range"in spaceCoords[index]){const[min,max]=spaceCoords[index].range;return clamp(min,coord,max)}return coord}),destColor}let min=0,max=origin_OKLCH.coords[1],min_inGamut=!0,current=clone(origin_OKLCH),clipped=clip(current),E=deltaEOK(clipped,current);if(E<JND)return clipped;for(;max-min>ε;){const chroma=(min+max)/2;if(current.coords[1]=chroma,min_inGamut&&inGamut(current,space,{epsilon:0}))min=chroma;else if(clipped=clip(current),E=deltaEOK(clipped,current),E<JND){if(JND-E<ε)break;min_inGamut=!1,min=chroma}else max=chroma}return clipped}(color,{space:space});else{if("clip"===method||inGamut(color,space))spaceColor=to(color,space);else{Object.prototype.hasOwnProperty.call(GMAPPRESET,method)&&({method:method,jnd:jnd,deltaEMethod:deltaEMethod,blackWhiteClamp:blackWhiteClamp}=GMAPPRESET[method]);let de=deltaE2000;if(""!==deltaEMethod)for(let m in deltaEMethods)if("deltae"+deltaEMethod.toLowerCase()===m.toLowerCase()){de=deltaEMethods[m];break}let clipped=toGamut(to(color,space),{method:"clip",space:space});if(de(color,clipped)>jnd){if(3===Object.keys(blackWhiteClamp).length){let channelMeta=ColorSpace.resolveCoord(blackWhiteClamp.channel),channel=get(to(color,channelMeta.space),channelMeta.id);if(isNone(channel)&&(channel=0),channel>=blackWhiteClamp.max)return to({space:"xyz-d65",coords:WHITES.D65},color.space);if(channel<=blackWhiteClamp.min)return to({space:"xyz-d65",coords:[0,0,0]},color.space)}let coordMeta=ColorSpace.resolveCoord(method),mapSpace=coordMeta.space,coordId=coordMeta.id,mappedColor=to(color,mapSpace);mappedColor.coords.forEach((c,i)=>{isNone(c)&&(mappedColor.coords[i]=0)});let min=(coordMeta.range||coordMeta.refRange)[0],ε=function calcEpsilon(jnd){const order=jnd?Math.floor(Math.log10(Math.abs(jnd))):0;return Math.max(parseFloat("1e"+(order-2)),1e-6)}(jnd),low=min,high=get(mappedColor,coordId);for(;high-low>ε;){let clipped=clone(mappedColor);clipped=toGamut(clipped,{space:space,method:"clip"}),de(mappedColor,clipped)-jnd<ε?low=get(mappedColor,coordId):high=get(mappedColor,coordId),set(mappedColor,coordId,(low+high)/2)}spaceColor=to(mappedColor,space)}else spaceColor=clipped}if("clip"===method||!inGamut(spaceColor,space,{epsilon:0})){let bounds=Object.values(space.coords).map(c=>c.range||[]);spaceColor.coords=spaceColor.coords.map((c,i)=>{let[min,max]=bounds[i];return void 0!==min&&(c=Math.max(min,c)),void 0!==max&&(c=Math.min(c,max)),c})}}return space!==color.space&&(spaceColor=to(spaceColor,color.space)),color.coords=spaceColor.coords,color}toGamut.returns="color";const COLORS={WHITE:{space:OKLab,coords:[1,0,0]},BLACK:{space:OKLab,coords:[0,0,0]}};function to(color,space,{inGamut:inGamut}={}){color=getColor(color);let coords=(space=ColorSpace.get(space)).from(color),ret={space:space,coords:coords,alpha:color.alpha};return inGamut&&(ret=toGamut(ret,!0===inGamut?void 0:inGamut)),ret}function serialize(color,{precision:precision=defaults.precision,format:format="default",inGamut:inGamut$1=!0,...customOptions}={}){let ret,formatId=format;format=(color=getColor(color)).space.getFormat(format)??color.space.getFormat("default")??ColorSpace.DEFAULT_FORMAT;let coords=color.coords.slice();if(inGamut$1||=format.toGamut,inGamut$1&&!inGamut(color)&&(coords=toGamut(clone(color),!0===inGamut$1?void 0:inGamut$1).coords),"custom"===format.type){if(customOptions.precision=precision,!format.serialize)throw new TypeError(`format ${formatId} can only be used to parse colors, not for serialization`);ret=format.serialize(coords,color.alpha,customOptions)}else{let name=format.name||"color";format.serializeCoords?coords=format.serializeCoords(coords,precision):null!==precision&&(coords=coords.map(c=>serializeNumber(c,{precision:precision})));let args=[...coords];if("color"===name){let cssId=format.id||format.ids?.[0]||color.space.id;args.unshift(cssId)}let alpha=color.alpha;null!==precision&&(alpha=serializeNumber(alpha,{precision:precision}));let strAlpha=color.alpha>=1||format.noAlpha?"":`${format.commas?",":" /"} ${alpha}`;ret=`${name}(${args.join(format.commas?", ":" ")}${strAlpha})`}return ret}to.returns="color";var REC2020Linear=new RGBColorSpace({id:"rec2020-linear",cssId:"--rec2020-linear",name:"Linear REC.2020",white:"D65",toXYZ_M:[[.6369580483012914,.14461690358620832,.1688809751641721],[.2627002120112671,.6779980715188708,.05930171646986196],[0,.028072693049087428,1.060985057710791]],fromXYZ_M:[[1.716651187971268,-.355670783776392,-.25336628137366],[-.666684351832489,1.616481236634939,.0157685458139111],[.017639857445311,-.042770613257809,.942103121235474]]});const α=1.09929682680944,β=.018053968510807;var REC2020=new RGBColorSpace({id:"rec2020",name:"REC.2020",base:REC2020Linear,toBase(RGB){return RGB.map(function(val){return val<4.5*β?val/4.5:Math.pow((val+α-1)/α,1/.45)})},fromBase(RGB){return RGB.map(function(val){return val>=β?α*Math.pow(val,.45)-(α-1):4.5*val})}});var P3Linear=new RGBColorSpace({id:"p3-linear",cssId:"--display-p3-linear",name:"Linear P3",white:"D65",toXYZ_M:[[.4865709486482162,.26566769316909306,.1982172852343625],[.2289745640697488,.6917385218365064,.079286914093745],[0,.04511338185890264,1.043944368900976]],fromXYZ_M:[[2.493496911941425,-.9313836179191239,-.40271078445071684],[-.8294889695615747,1.7626640603183463,.023624685841943577],[.03584583024378447,-.07617238926804182,.9568845240076872]]});const fromXYZ_M$3=[[3.2409699419045226,-1.537383177570094,-.4986107602930034],[-.9692436362808796,1.8759675015077202,.04155505740717559],[.05563007969699366,-.20397695888897652,1.0569715142428786]];var sRGBLinear=new RGBColorSpace({id:"srgb-linear",name:"Linear sRGB",white:"D65",toXYZ_M:[[.41239079926595934,.357584339383878,.1804807884018343],[.21263900587151027,.715168678767756,.07219231536073371],[.01933081871559182,.11919477979462598,.9505321522496607]],fromXYZ_M:fromXYZ_M$3}),KEYWORDS={aliceblue:[240/255,248/255,1],antiquewhite:[250/255,235/255,215/255],aqua:[0,1,1],aquamarine:[127/255,1,212/255],azure:[240/255,1,1],beige:[245/255,245/255,220/255],bisque:[1,228/255,196/255],black:[0,0,0],blanchedalmond:[1,235/255,205/255],blue:[0,0,1],blueviolet:[138/255,43/255,226/255],brown:[165/255,42/255,42/255],burlywood:[222/255,184/255,135/255],cadetblue:[95/255,158/255,160/255],chartreuse:[127/255,1,0],chocolate:[210/255,105/255,30/255],coral:[1,127/255,80/255],cornflowerblue:[100/255,149/255,237/255],cornsilk:[1,248/255,220/255],crimson:[220/255,20/255,60/255],cyan:[0,1,1],darkblue:[0,0,139/255],darkcyan:[0,139/255,139/255],darkgoldenrod:[184/255,134/255,11/255],darkgray:[169/255,169/255,169/255],darkgreen:[0,100/255,0],darkgrey:[169/255,169/255,169/255],darkkhaki:[189/255,183/255,107/255],darkmagenta:[139/255,0,139/255],darkolivegreen:[85/255,107/255,47/255],darkorange:[1,140/255,0],darkorchid:[.6,50/255,.8],darkred:[139/255,0,0],darksalmon:[233/255,150/255,122/255],darkseagreen:[143/255,188/255,143/255],darkslateblue:[72/255,61/255,139/255],darkslategray:[47/255,79/255,79/255],darkslategrey:[47/255,79/255,79/255],darkturquoise:[0,206/255,209/255],darkviolet:[148/255,0,211/255],deeppink:[1,20/255,147/255],deepskyblue:[0,191/255,1],dimgray:[105/255,105/255,105/255],dimgrey:[105/255,105/255,105/255],dodgerblue:[30/255,144/255,1],firebrick:[178/255,34/255,34/255],floralwhite:[1,250/255,240/255],forestgreen:[34/255,139/255,34/255],fuchsia:[1,0,1],gainsboro:[220/255,220/255,220/255],ghostwhite:[248/255,248/255,1],gold:[1,215/255,0],goldenrod:[218/255,165/255,32/255],gray:[128/255,128/255,128/255],green:[0,128/255,0],greenyellow:[173/255,1,47/255],grey:[128/255,128/255,128/255],honeydew:[240/255,1,240/255],hotpink:[1,105/255,180/255],indianred:[205/255,92/255,92/255],indigo:[75/255,0,130/255],ivory:[1,1,240/255],khaki:[240/255,230/255,140/255],lavender:[230/255,230/255,250/255],lavenderblush:[1,240/255,245/255],lawngreen:[124/255,252/255,0],lemonchiffon:[1,250/255,205/255],lightblue:[173/255,216/255,230/255],lightcoral:[240/255,128/255,128/255],lightcyan:[224/255,1,1],lightgoldenrodyellow:[250/255,250/255,210/255],lightgray:[211/255,211/255,211/255],lightgreen:[144/255,238/255,144/255],lightgrey:[211/255,211/255,211/255],lightpink:[1,182/255,193/255],lightsalmon:[1,160/255,122/255],lightseagreen:[32/255,178/255,170/255],lightskyblue:[135/255,206/255,250/255],lightslategray:[119/255,136/255,.6],lightslategrey:[119/255,136/255,.6],lightsteelblue:[176/255,196/255,222/255],lightyellow:[1,1,224/255],lime:[0,1,0],limegreen:[50/255,205/255,50/255],linen:[250/255,240/255,230/255],magenta:[1,0,1],maroon:[128/255,0,0],mediumaquamarine:[.4,205/255,170/255],mediumblue:[0,0,205/255],mediumorchid:[186/255,85/255,211/255],mediumpurple:[147/255,112/255,219/255],mediumseagreen:[60/255,179/255,113/255],mediumslateblue:[123/255,104/255,238/255],mediumspringgreen:[0,250/255,154/255],mediumturquoise:[72/255,209/255,.8],mediumvioletred:[199/255,21/255,133/255],midnightblue:[25/255,25/255,112/255],mintcream:[245/255,1,250/255],mistyrose:[1,228/255,225/255],moccasin:[1,228/255,181/255],navajowhite:[1,222/255,173/255],navy:[0,0,128/255],oldlace:[253/255,245/255,230/255],olive:[128/255,128/255,0],olivedrab:[107/255,142/255,35/255],orange:[1,165/255,0],orangered:[1,69/255,0],orchid:[218/255,112/255,214/255],palegoldenrod:[238/255,232/255,170/255],palegreen:[152/255,251/255,152/255],paleturquoise:[175/255,238/255,238/255],palevioletred:[219/255,112/255,147/255],papayawhip:[1,239/255,213/255],peachpuff:[1,218/255,185/255],peru:[205/255,133/255,63/255],pink:[1,192/255,203/255],plum:[221/255,160/255,221/255],powderblue:[176/255,224/255,230/255],purple:[128/255,0,128/255],rebeccapurple:[.4,.2,.6],red:[1,0,0],rosybrown:[188/255,143/255,143/255],royalblue:[65/255,105/255,225/255],saddlebrown:[139/255,69/255,19/255],salmon:[250/255,128/255,114/255],sandybrown:[244/255,164/255,96/255],seagreen:[46/255,139/255,87/255],seashell:[1,245/255,238/255],sienna:[160/255,82/255,45/255],silver:[192/255,192/255,192/255],skyblue:[135/255,206/255,235/255],slateblue:[106/255,90/255,205/255],slategray:[112/255,128/255,144/255],slategrey:[112/255,128/255,144/255],snow:[1,250/255,250/255],springgreen:[0,1,127/255],steelblue:[70/255,130/255,180/255],tan:[210/255,180/255,140/255],teal:[0,128/255,128/255],thistle:[216/255,191/255,216/255],tomato:[1,99/255,71/255],turquoise:[64/255,224/255,208/255],violet:[238/255,130/255,238/255],wheat:[245/255,222/255,179/255],white:[1,1,1],whitesmoke:[245/255,245/255,245/255],yellow:[1,1,0],yellowgreen:[154/255,205/255,50/255]};let coordGrammar=Array(3).fill("<percentage> | <number>[0, 255]"),coordGrammarNumber=Array(3).fill("<number>[0, 255]");var sRGB=new RGBColorSpace({id:"srgb",name:"sRGB",base:sRGBLinear,fromBase:rgb=>rgb.map(val=>{let sign=val<0?-1:1,abs=val*sign;return abs>.0031308?sign*(1.055*abs**(1/2.4)-.055):12.92*val}),toBase:rgb=>rgb.map(val=>{let sign=val<0?-1:1,abs=val*sign;return abs<=.04045?val/12.92:sign*((abs+.055)/1.055)**2.4}),formats:{rgb:{coords:coordGrammar},rgb_number:{name:"rgb",commas:!0,coords:coordGrammarNumber,noAlpha:!0},color:{},rgba:{coords:coordGrammar,commas:!0,lastAlpha:!0},rgba_number:{name:"rgba",commas:!0,coords:coordGrammarNumber},hex:{type:"custom",toGamut:!0,test:str=>/^#([a-f0-9]{3,4}){1,2}$/i.test(str),parse(str){str.length<=5&&(str=str.replace(/[a-f0-9]/gi,"$&$&"));let rgba=[];return str.replace(/[a-f0-9]{2}/gi,component=>{rgba.push(parseInt(component,16)/255)}),{spaceId:"srgb",coords:rgba.slice(0,3),alpha:rgba.slice(3)[0]}},serialize:(coords,alpha,{collapse:collapse=!0}={})=>{alpha<1&&coords.push(alpha),coords=coords.map(c=>Math.round(255*c));let collapsible=collapse&&coords.every(c=>c%17==0),hex=coords.map(c=>collapsible?(c/17).toString(16):c.toString(16).padStart(2,"0")).join("");return"#"+hex}},keyword:{type:"custom",test:str=>/^[a-z]+$/i.test(str),parse(str){let ret={spaceId:"srgb",coords:null,alpha:1};if("transparent"===(str=str.toLowerCase())?(ret.coords=KEYWORDS.black,ret.alpha=0):ret.coords=KEYWORDS[str],ret.coords)return ret}}}}),P3=new RGBColorSpace({id:"p3",cssId:"display-p3",name:"P3",base:P3Linear,fromBase:sRGB.fromBase,toBase:sRGB.toBase});let supportsNone;if(defaults.display_space=sRGB,"undefined"!=typeof CSS&&CSS.supports)for(let space of[lab,REC2020,P3]){let coords=space.getMinCoords(),str=serialize({space:space,coords:coords,alpha:1});if(CSS.supports("color",str)){defaults.display_space=space;break}}function getLuminance(color){return get(color,[xyz_d65,"y"])}function setLuminance(color,value){set(color,[xyz_d65,"y"],value)}var luminance=Object.freeze({__proto__:null,getLuminance:getLuminance,register:function register$2(Color){Object.defineProperty(Color.prototype,"luminance",{get(){return getLuminance(this)},set(value){setLuminance(this,value)}})},setLuminance:setLuminance});function fclamp(Y){return Y>=.022?Y:Y+(.022-Y)**1.414}function linearize(val){let sign=val<0?-1:1,abs=Math.abs(val);return sign*Math.pow(abs,2.4)}const ε$3=216/24389,ε3=24/116,κ$2=24389/27;let white$1=WHITES.D65;var lab_d65=new ColorSpace({id:"lab-d65",name:"Lab D65",coords:{l:{refRange:[0,100],name:"Lightness"},a:{refRange:[-125,125]},b:{refRange:[-125,125]}},white:white$1,base:xyz_d65,fromBase(XYZ){let f=XYZ.map((value,i)=>value/white$1[i]).map(value=>value>ε$3?Math.cbrt(value):(κ$2*value+16)/116);return[116*f[1]-16,500*(f[0]-f[1]),200*(f[1]-f[2])]},toBase(Lab){let f=[];return f[1]=(Lab[0]+16)/116,f[0]=Lab[1]/500+f[1],f[2]=f[1]-Lab[2]/200,[f[0]>ε3?Math.pow(f[0],3):(116*f[0]-16)/κ$2,Lab[0]>8?Math.pow((Lab[0]+16)/116,3):Lab[0]/κ$2,f[2]>ε3?Math.pow(f[2],3):(116*f[2]-16)/κ$2].map((value,i)=>value*white$1[i])},formats:{"lab-d65":{coords:["<number> | <percentage>","<number> | <percentage>[-1,1]","<number> | <percentage>[-1,1]"]}}});const phi=.5*Math.pow(5,.5)+.5;var contrastMethods=Object.freeze({__proto__:null,contrastAPCA:function contrastAPCA(background,foreground){let S,C,Sapc,R,G,B;foreground=getColor(foreground),background=getColor(background),foreground=to(foreground,"srgb"),[R,G,B]=foreground.coords;let lumTxt=.2126729*linearize(R)+.7151522*linearize(G)+.072175*linearize(B);background=to(background,"srgb"),[R,G,B]=background.coords;let lumBg=.2126729*linearize(R)+.7151522*linearize(G)+.072175*linearize(B),Ytxt=fclamp(lumTxt),Ybg=fclamp(lumBg),BoW=Ybg>Ytxt;return Math.abs(Ybg-Ytxt)<5e-4?C=0:BoW?(S=Ybg**.56-Ytxt**.57,C=1.14*S):(S=Ybg**.65-Ytxt**.62,C=1.14*S),Sapc=Math.abs(C)<.1?0:C>0?C-.027:C+.027,100*Sapc},contrastDeltaPhi:function contrastDeltaPhi(color1,color2){color1=getColor(color1),color2=getColor(color2);let Lstr1=get(color1,[lab_d65,"l"]),Lstr2=get(color2,[lab_d65,"l"]),deltaPhiStar=Math.abs(Math.pow(Lstr1,phi)-Math.pow(Lstr2,phi)),contrast=Math.pow(deltaPhiStar,1/phi)*Math.SQRT2-40;return contrast<7.5?0:contrast},contrastLstar:function contrastLstar(color1,color2){color1=getColor(color1),color2=getColor(color2);let L1=get(color1,[lab,"l"]),L2=get(color2,[lab,"l"]);return Math.abs(L1-L2)},contrastMichelson:function contrastMichelson(color1,color2){color1=getColor(color1),color2=getColor(color2);let Y1=Math.max(getLuminance(color1),0),Y2=Math.max(getLuminance(color2),0);Y2>Y1&&([Y1,Y2]=[Y2,Y1]);let denom=Y1+Y2;return 0===denom?0:(Y1-Y2)/denom},contrastWCAG21:function contrastWCAG21(color1,color2){color1=getColor(color1),color2=getColor(color2);let Y1=Math.max(getLuminance(color1),0),Y2=Math.max(getLuminance(color2),0);return Y2>Y1&&([Y1,Y2]=[Y2,Y1]),(Y1+.05)/(Y2+.05)},contrastWeber:function contrastWeber(color1,color2){color1=getColor(color1),color2=getColor(color2);let Y1=Math.max(getLuminance(color1),0),Y2=Math.max(getLuminance(color2),0);return Y2>Y1&&([Y1,Y2]=[Y2,Y1]),0===Y2?5e4:(Y1-Y2)/Y2}});function uv(color){let[X,Y,Z]=getAll(color,xyz_d65),denom=X+15*Y+3*Z;return[4*X/denom,9*Y/denom]}function xy(color){let[X,Y,Z]=getAll(color,xyz_d65),sum=X+Y+Z;return[X/sum,Y/sum]}var chromaticity=Object.freeze({__proto__:null,register:function register$1(Color){Object.defineProperty(Color.prototype,"uv",{get(){return uv(this)}}),Object.defineProperty(Color.prototype,"xy",{get(){return xy(this)}})},uv:uv,xy:xy});function deltaE(c1,c2,o={}){isString(o)&&(o={method:o});let{method:method=defaults.deltaE,...rest}=o;for(let m in deltaEMethods)if("deltae"+method.toLowerCase()===m.toLowerCase())return deltaEMethods[m](c1,c2,rest);throw new TypeError(`Unknown deltaE method: ${method}`)}var variations=Object.freeze({__proto__:null,darken:function darken(color,amount=.25){return set(color,[ColorSpace.get("oklch","lch"),"l"],l=>l*(1-amount))},lighten:function lighten(color,amount=.25){return set(color,[ColorSpace.get("oklch","lch"),"l"],l=>l*(1+amount))}});function mix(c1,c2,p=.5,o={}){return[c1,c2]=[getColor(c1),getColor(c2)],"object"===type(p)&&([p,o]=[.5,p]),range(c1,c2,o)(p)}function steps(c1,c2,options={}){let colorRange;isRange(c1)&&([colorRange,options]=[c1,c2],[c1,c2]=colorRange.rangeArgs.colors);let{maxDeltaE:maxDeltaE,deltaEMethod:deltaEMethod,steps:steps=2,maxSteps:maxSteps=1e3,...rangeOptions}=options;colorRange||([c1,c2]=[getColor(c1),getColor(c2)],colorRange=range(c1,c2,rangeOptions));let totalDelta=deltaE(c1,c2),actualSteps=maxDeltaE>0?Math.max(steps,Math.ceil(totalDelta/maxDeltaE)+1):steps,ret=[];if(void 0!==maxSteps&&(actualSteps=Math.min(actualSteps,maxSteps)),1===actualSteps)ret=[{p:.5,color:colorRange(.5)}];else{let step=1/(actualSteps-1);ret=Array.from({length:actualSteps},(_,i)=>{let p=i*step;return{p:p,color:colorRange(p)}})}if(maxDeltaE>0){let maxDelta=ret.reduce((acc,cur,i)=>{if(0===i)return 0;let ΔΕ=deltaE(cur.color,ret[i-1].color,deltaEMethod);return Math.max(acc,ΔΕ)},0);for(;maxDelta>maxDeltaE;){maxDelta=0;for(let i=1;i<ret.length&&ret.length<maxSteps;i++){let prev=ret[i-1],cur=ret[i],p=(cur.p+prev.p)/2,color=colorRange(p);maxDelta=Math.max(maxDelta,deltaE(color,prev.color),deltaE(color,cur.color)),ret.splice(i,0,{p:p,color:colorRange(p)}),i++}}}return ret=ret.map(a=>a.color),ret}function range(color1,color2,options={}){if(isRange(color1)){let[r,options]=[color1,color2];return range(...r.rangeArgs.colors,{...r.rangeArgs.options,...options})}let{space:space,outputSpace:outputSpace,progression:progression,premultiplied:premultiplied}=options;color1=getColor(color1),color2=getColor(color2),color1=clone(color1),color2=clone(color2);let rangeArgs={colors:[color1,color2],options:options};if(space=space?ColorSpace.get(space):ColorSpace.registry[defaults.interpolationSpace]||color1.space,outputSpace=outputSpace?ColorSpace.get(outputSpace):space,color1=to(color1,space),color2=to(color2,space),color1=toGamut(color1),color2=toGamut(color2),space.coords.h&&"angle"===space.coords.h.type){let arc=options.hue=options.hue||"shorter",hue=[space,"h"],[θ1,θ2]=[get(color1,hue),get(color2,hue)];isNaN(θ1)&&!isNaN(θ2)?θ1=θ2:isNaN(θ2)&&!isNaN(θ1)&&(θ2=θ1),[θ1,θ2]=function adjust(arc,angles){if("raw"===arc)return angles;let[a1,a2]=angles.map(constrain),angleDiff=a2-a1;return"increasing"===arc?angleDiff<0&&(a2+=360):"decreasing"===arc?angleDiff>0&&(a1+=360):"longer"===arc?-180<angleDiff&&angleDiff<180&&(angleDiff>0?a1+=360:a2+=360):"shorter"===arc&&(angleDiff>180?a1+=360:angleDiff<-180&&(a2+=360)),[a1,a2]}(arc,[θ1,θ2]),set(color1,hue,θ1),set(color2,hue,θ2)}return premultiplied&&(color1.coords=color1.coords.map(c=>c*color1.alpha),color2.coords=color2.coords.map(c=>c*color2.alpha)),Object.assign(p=>{p=progression?progression(p):p;let coords=color1.coords.map((start,i)=>interpolate(start,color2.coords[i],p)),alpha=interpolate(color1.alpha,color2.alpha,p),ret={space:space,coords:coords,alpha:alpha};return premultiplied&&(ret.coords=ret.coords.map(c=>c/alpha)),outputSpace!==space&&(ret=to(ret,outputSpace)),ret},{rangeArgs:rangeArgs})}function isRange(val){return"function"===type(val)&&!!val.rangeArgs}defaults.interpolationSpace="lab";var interpolation=Object.freeze({__proto__:null,isRange:isRange,mix:mix,range:range,register:function register(Color){Color.defineFunction("mix",mix,{returns:"color"}),Color.defineFunction("range",range,{returns:"function<color>"}),Color.defineFunction("steps",steps,{returns:"array<color>"})},steps:steps}),HSL=new ColorSpace({id:"hsl",name:"HSL",coords:{h:{refRange:[0,360],type:"angle",name:"Hue"},s:{range:[0,100],name:"Saturation"},l:{range:[0,100],name:"Lightness"}},base:sRGB,fromBase:rgb=>{let max=Math.max(...rgb),min=Math.min(...rgb),[r,g,b]=rgb,[h,s,l]=[NaN,0,(min+max)/2],d=max-min;if(0!==d){switch(s=0===l||1===l?0:(max-l)/Math.min(l,1-l),max){case r:h=(g-b)/d+(g<b?6:0);break;case g:h=(b-r)/d+2;break;case b:h=(r-g)/d+4}h*=60}return s<0&&(h+=180,s=Math.abs(s)),h>=360&&(h-=360),[h,100*s,100*l]},toBase:hsl=>{let[h,s,l]=hsl;function f(n){let k=(n+h/30)%12,a=s*Math.min(l,1-l);return l-a*Math.max(-1,Math.min(k-3,9-k,1))}return h%=360,h<0&&(h+=360),s/=100,l/=100,[f(0),f(8),f(4)]},formats:{hsl:{coords:["<number> | <angle>","<percentage>","<percentage>"]},hsla:{coords:["<number> | <angle>","<percentage>","<percentage>"],commas:!0,lastAlpha:!0}}}),HSV=new ColorSpace({id:"hsv",name:"HSV",coords:{h:{refRange:[0,360],type:"angle",name:"Hue"},s:{range:[0,100],name:"Saturation"},v:{range:[0,100],name:"Value"}},base:HSL,fromBase(hsl){let[h,s,l]=hsl;s/=100,l/=100;let v=l+s*Math.min(l,1-l);return[h,0===v?0:200*(1-l/v),100*v]},toBase(hsv){let[h,s,v]=hsv;s/=100,v/=100;let l=v*(1-s/2);return[h,0===l||1===l?0:(v-l)/Math.min(l,1-l)*100,100*l]},formats:{color:{id:"--hsv",coords:["<number> | <angle>","<percentage> | <number>","<percentage> | <number>"]}}}),hwb=new ColorSpace({id:"hwb",name:"HWB",coords:{h:{refRange:[0,360],type:"angle",name:"Hue"},w:{range:[0,100],name:"Whiteness"},b:{range:[0,100],name:"Blackness"}},base:HSV,fromBase(hsv){let[h,s,v]=hsv;return[h,v*(100-s)/100,100-v]},toBase(hwb){let[h,w,b]=hwb;w/=100,b/=100;let sum=w+b;if(sum>=1){return[h,0,100*(w/sum)]}let v=1-b;return[h,100*(0===v?0:1-w/v),100*v]},formats:{hwb:{coords:["<number> | <angle>","<percentage> | <number>","<percentage> | <number>"]}}});var A98Linear=new RGBColorSpace({id:"a98rgb-linear",cssId:"--a98-rgb-linear",name:"Linear Adobe® 98 RGB compatible",white:"D65",toXYZ_M:[[.5766690429101305,.1855582379065463,.1882286462349947],[.29734497525053605,.6273635662554661,.07529145849399788],[.02703136138641234,.07068885253582723,.9913375368376388]],fromXYZ_M:[[2.0415879038107465,-.5650069742788596,-.34473135077832956],[-.9692436362808795,1.8759675015077202,.04155505740717557],[.013444280632031142,-.11836239223101838,1.0151749943912054]]}),a98rgb=new RGBColorSpace({id:"a98rgb",cssId:"a98-rgb",name:"Adobe® 98 RGB compatible",base:A98Linear,toBase:RGB=>RGB.map(val=>Math.pow(Math.abs(val),563/256)*Math.sign(val)),fromBase:RGB=>RGB.map(val=>Math.pow(Math.abs(val),256/563)*Math.sign(val))});var ProPhotoLinear=new RGBColorSpace({id:"prophoto-linear",cssId:"--prophoto-rgb-linear",name:"Linear ProPhoto",white:"D50",base:XYZ_D50,toXYZ_M:[[.7977666449006423,.13518129740053308,.0313477341283922],[.2880748288194013,.711835234241873,8993693872564e-17],[0,0,.8251046025104602]],fromXYZ_M:[[1.3457868816471583,-.25557208737979464,-.05110186497554526],[-.5446307051249019,1.5082477428451468,.02052744743642139],[0,0,1.2119675456389452]]});var prophoto=new RGBColorSpace({id:"prophoto",cssId:"prophoto-rgb",name:"ProPhoto",base:ProPhotoLinear,toBase(RGB){return RGB.map(v=>v<.03125?v/16:v**1.8)},fromBase(RGB){return RGB.map(v=>v>=.001953125?v**(1/1.8):16*v)}}),oklch=new ColorSpace({id:"oklch",name:"Oklch",coords:{l:{refRange:[0,1],name:"Lightness"},c:{refRange:[0,.4],name:"Chroma"},h:{refRange:[0,360],type:"angle",name:"Hue"}},white:"D65",base:OKLab,fromBase(oklab){let h,[L,a,b]=oklab;const ε=2e-4;return h=Math.abs(a)<ε&&Math.abs(b)<ε?NaN:180*Math.atan2(b,a)/Math.PI,[L,Math.sqrt(a**2+b**2),constrain(h)]},toBase(oklch){let a,b,[L,C,h]=oklch;return isNaN(h)?(a=0,b=0):(a=C*Math.cos(h*Math.PI/180),b=C*Math.sin(h*Math.PI/180)),[L,a,b]},formats:{oklch:{coords:["<percentage> | <number>","<number> | <percentage>[0,1]","<number> | <angle>"]}}});let white=WHITES.D65;const ε$2=216/24389,κ$1=24389/27,[U_PRIME_WHITE,V_PRIME_WHITE]=uv({space:xyz_d65,coords:white});var Luv=new ColorSpace({id:"luv",name:"Luv",coords:{l:{refRange:[0,100],name:"Lightness"},u:{refRange:[-215,215]},v:{refRange:[-215,215]}},white:white,base:xyz_d65,fromBase(XYZ){let xyz=[skipNone(XYZ[0]),skipNone(XYZ[1]),skipNone(XYZ[2])],y=xyz[1],[up,vp]=uv({space:xyz_d65,coords:xyz});if(!Number.isFinite(up)||!Number.isFinite(vp))return[0,0,0];let L=y<=ε$2?κ$1*y:116*Math.cbrt(y)-16;return[L,13*L*(up-U_PRIME_WHITE),13*L*(vp-V_PRIME_WHITE)]},toBase(Luv){let[L,u,v]=Luv;if(0===L||isNone(L))return[0,0,0];u=skipNone(u),v=skipNone(v);let up=u/(13*L)+U_PRIME_WHITE,vp=v/(13*L)+V_PRIME_WHITE,y=L<=8?L/κ$1:Math.pow((L+16)/116,3);return[y*(9*up/(4*vp)),y,y*((12-3*up-20*vp)/(4*vp))]},formats:{color:{id:"--luv",coords:["<number> | <percentage>","<number> | <percentage>[-1,1]","<number> | <percentage>[-1,1]"]}}}),LCHuv=new ColorSpace({id:"lchuv",name:"LChuv",coords:{l:{refRange:[0,100],name:"Lightness"},c:{refRange:[0,220],name:"Chroma"},h:{refRange:[0,360],type:"angle",name:"Hue"}},base:Luv,fromBase(Luv){let hue,[L,u,v]=Luv;return hue=Math.abs(u)<.02&&Math.abs(v)<.02?NaN:180*Math.atan2(v,u)/Math.PI,[L,Math.sqrt(u**2+v**2),constrain(hue)]},toBase(LCH){let[Lightness,Chroma,Hue]=LCH;return Chroma<0&&(Chroma=0),isNaN(Hue)&&(Hue=0),[Lightness,Chroma*Math.cos(Hue*Math.PI/180),Chroma*Math.sin(Hue*Math.PI/180)]},formats:{color:{id:"--lchuv",coords:["<number> | <percentage>","<number> | <percentage>","<number> | <angle>"]}}});const ε$1=216/24389,κ=24389/27,m_r0=fromXYZ_M$3[0][0],m_r1=fromXYZ_M$3[0][1],m_r2=fromXYZ_M$3[0][2],m_g0=fromXYZ_M$3[1][0],m_g1=fromXYZ_M$3[1][1],m_g2=fromXYZ_M$3[1][2],m_b0=fromXYZ_M$3[2][0],m_b1=fromXYZ_M$3[2][1],m_b2=fromXYZ_M$3[2][2];function distanceFromOriginAngle(slope,intercept,angle){const d=intercept/(Math.sin(angle)-slope*Math.cos(angle));return d<0?1/0:d}function calculateBoundingLines(l){const sub1=Math.pow(l+16,3)/1560896,sub2=sub1>ε$1?sub1:l/κ,s1r=sub2*(284517*m_r0-94839*m_r2),s2r=sub2*(838422*m_r2+769860*m_r1+731718*m_r0),s3r=sub2*(632260*m_r2-126452*m_r1),s1g=sub2*(284517*m_g0-94839*m_g2),s2g=sub2*(838422*m_g2+769860*m_g1+731718*m_g0),s3g=sub2*(632260*m_g2-126452*m_g1),s1b=sub2*(284517*m_b0-94839*m_b2),s2b=sub2*(838422*m_b2+769860*m_b1+731718*m_b0),s3b=sub2*(632260*m_b2-126452*m_b1);return{r0s:s1r/s3r,r0i:s2r*l/s3r,r1s:s1r/(s3r+126452),r1i:(s2r-769860)*l/(s3r+126452),g0s:s1g/s3g,g0i:s2g*l/s3g,g1s:s1g/(s3g+126452),g1i:(s2g-769860)*l/(s3g+126452),b0s:s1b/s3b,b0i:s2b*l/s3b,b1s:s1b/(s3b+126452),b1i:(s2b-769860)*l/(s3b+126452)}}function calcMaxChromaHsluv(lines,h){const hueRad=h/360*Math.PI*2,r0=distanceFromOriginAngle(lines.r0s,lines.r0i,hueRad),r1=distanceFromOriginAngle(lines.r1s,lines.r1i,hueRad),g0=distanceFromOriginAngle(lines.g0s,lines.g0i,hueRad),g1=distanceFromOriginAngle(lines.g1s,lines.g1i,hueRad),b0=distanceFromOriginAngle(lines.b0s,lines.b0i,hueRad),b1=distanceFromOriginAngle(lines.b1s,lines.b1i,hueRad);return Math.min(r0,r1,g0,g1,b0,b1)}var hsluv=new ColorSpace({id:"hsluv",name:"HSLuv",coords:{h:{refRange:[0,360],type:"angle",name:"Hue"},s:{range:[0,100],name:"Saturation"},l:{range:[0,100],name:"Lightness"}},base:LCHuv,gamutSpace:sRGB,fromBase(lch){let s,[l,c,h]=[skipNone(lch[0]),skipNone(lch[1]),skipNone(lch[2])];if(l>99.9999999)s=0,l=100;else if(l<1e-8)s=0,l=0;else{s=c/calcMaxChromaHsluv(calculateBoundingLines(l),h)*100}return[h,s,l]},toBase(hsl){let c,[h,s,l]=[skipNone(hsl[0]),skipNone(hsl[1]),skipNone(hsl[2])];if(l>99.9999999)l=100,c=0;else if(l<1e-8)l=0,c=0;else{c=calcMaxChromaHsluv(calculateBoundingLines(l),h)/100*s}return[l,c,h]},formats:{color:{id:"--hsluv",coords:["<number> | <angle>","<percentage> | <number>","<percentage> | <number>"]}}});function distanceFromOrigin(slope,intercept){return Math.abs(intercept)/Math.sqrt(Math.pow(slope,2)+1)}function calcMaxChromaHpluv(lines){let r0=distanceFromOrigin(lines.r0s,lines.r0i),r1=distanceFromOrigin(lines.r1s,lines.r1i),g0=distanceFromOrigin(lines.g0s,lines.g0i),g1=distanceFromOrigin(lines.g1s,lines.g1i),b0=distanceFromOrigin(lines.b0s,lines.b0i),b1=distanceFromOrigin(lines.b1s,lines.b1i);return Math.min(r0,r1,g0,g1,b0,b1)}fromXYZ_M$3[0][0],fromXYZ_M$3[0][1],fromXYZ_M$3[0][2],fromXYZ_M$3[1][0],fromXYZ_M$3[1][1],fromXYZ_M$3[1][2],fromXYZ_M$3[2][0],fromXYZ_M$3[2][1],fromXYZ_M$3[2][2];var hpluv=new ColorSpace({id:"hpluv",name:"HPLuv",coords:{h:{refRange:[0,360],type:"angle",name:"Hue"},s:{range:[0,100],name:"Saturation"},l:{range:[0,100],name:"Lightness"}},base:LCHuv,gamutSpace:"self",fromBase(lch){let s,[l,c,h]=[skipNone(lch[0]),skipNone(lch[1]),skipNone(lch[2])];if(l>99.9999999)s=0,l=100;else if(l<1e-8)s=0,l=0;else{s=c/calcMaxChromaHpluv(calculateBoundingLines(l))*100}return[h,s,l]},toBase(hsl){let c,[h,s,l]=[skipNone(hsl[0]),skipNone(hsl[1]),skipNone(hsl[2])];if(l>99.9999999)l=100,c=0;else if(l<1e-8)l=0,c=0;else{c=calcMaxChromaHpluv(calculateBoundingLines(l))/100*s}return[l,c,h]},formats:{color:{id:"--hpluv",coords:["<number> | <angle>","<percentage> | <number>","<percentage> | <number>"]}}});const n=2610/16384,minv=32/2523,c1=.8359375,c2=2413/128;var rec2100Pq=new RGBColorSpace({id:"rec2100pq",cssId:"rec2100-pq",name:"REC.2100-PQ",base:REC2020Linear,toBase(RGB){return RGB.map(function(val){return 1e4*(Math.max(val**minv-c1,0)/(c2-18.6875*val**minv))**6.277394636015326/203})},fromBase(RGB){return RGB.map(function(val){let x=Math.max(203*val/1e4,0);return((c1+c2*x**n)/(1+18.6875*x**n))**78.84375})}});const a=.17883277,b=.28466892,c=.55991073;var rec2100Hlg=new RGBColorSpace({id:"rec2100hlg",cssId:"rec2100-hlg",name:"REC.2100-HLG",referred:"scene",base:REC2020Linear,toBase(RGB){return RGB.map(function(val){return val<=.5?val**2/3*3.7743:(Math.exp((val-c)/a)+b)/12*3.7743})},fromBase(RGB){return RGB.map(function(val){return(val/=3.7743)<=1/12?Math.sqrt(3*val):a*Math.log(12*val-b)+c})}});const CATs={};function defineCAT({id:id,toCone_M:toCone_M,fromCone_M:fromCone_M}){CATs[id]=arguments[0]}function adapt(W1,W2,id="Bradford"){let method=CATs[id],[ρs,γs,βs]=multiplyMatrices(method.toCone_M,W1),[ρd,γd,βd]=multiplyMatrices(method.toCone_M,W2),scaled_cone_M=multiplyMatrices([[ρd/ρs,0,0],[0,γd/γs,0],[0,0,βd/βs]],method.toCone_M);return multiplyMatrices(method.fromCone_M,scaled_cone_M)}hooks.add("chromatic-adaptation-start",env=>{env.options.method&&(env.M=adapt(env.W1,env.W2,env.options.method))}),hooks.add("chromatic-adaptation-end",env=>{env.M||(env.M=adapt(env.W1,env.W2,env.options.method))}),defineCAT({id:"von Kries",toCone_M:[[.40024,.7076,-.08081],[-.2263,1.16532,.0457],[0,0,.91822]],fromCone_M:[[1.8599363874558397,-1.1293816185800916,.21989740959619328],[.3611914362417676,.6388124632850422,-6370596838649899e-21],[0,0,1.0890636230968613]]}),defineCAT({id:"Bradford",toCone_M:[[.8951,.2664,-.1614],[-.7502,1.7135,.0367],[.0389,-.0685,1.0296]],fromCone_M:[[.9869929054667121,-.14705425642099013,.15996265166373122],[.4323052697233945,.5183602715367774,.049291228212855594],[-.00852866457517732,.04004282165408486,.96848669578755]]}),defineCAT({id:"CAT02",toCone_M:[[.7328,.4296,-.1624],[-.7036,1.6975,.0061],[.003,.0136,.9834]],fromCone_M:[[1.0961238208355142,-.27886900021828726,.18274517938277307],[.4543690419753592,.4735331543074117,.07209780371722911],[-.009627608738429355,-.00569803121611342,1.0153256399545427]]}),defineCAT({id:"CAT16",toCone_M:[[.401288,.650173,-.051461],[-.250268,1.204414,.045854],[-.002079,.048952,.953127]],fromCone_M:[[1.862067855087233,-1.0112546305316845,.14918677544445172],[.3875265432361372,.6214474419314753,-.008973985167612521],[-.01584149884933386,-.03412293802851557,1.0499644368778496]]}),Object.assign(WHITES,{A:[1.0985,1,.35585],C:[.98074,1,1.18232],D55:[.95682,1,.92149],D75:[.94972,1,1.22638],E:[1,1,1],F2:[.99186,1,.67393],F7:[.95041,1,1.08747],F11:[1.00962,1,.6435]}),WHITES.ACES=[.32168/.33767,1,.34065/.33767];var ACEScg=new RGBColorSpace({id:"acescg",cssId:"--acescg",name:"ACEScg",coords:{r:{range:[0,65504],name:"Red"},g:{range:[0,65504],name:"Green"},b:{range:[0,65504],name:"Blue"}},referred:"scene",white:WHITES.ACES,toXYZ_M:[[.6624541811085053,.13400420645643313,.1561876870049078],[.27222871678091454,.6740817658111484,.05368951740793705],[-.005574649490394108,.004060733528982826,1.0103391003129971]],fromXYZ_M:[[1.6410233796943257,-.32480329418479,-.23642469523761225],[-.6636628587229829,1.6153315916573379,.016756347685530137],[.011721894328375376,-.008284441996237409,.9883948585390215]]});const ε=2**-16,ACES_cc_max=(Math.log2(65504)+9.72)/17.52;var acescc=new RGBColorSpace({id:"acescc",cssId:"--acescc",name:"ACEScc",coords:{r:{range:[-.35828683,ACES_cc_max],name:"Red"},g:{range:[-.35828683,ACES_cc_max],name:"Green"},b:{range:[-.35828683,ACES_cc_max],name:"Blue"}},referred:"scene",base:ACEScg,toBase(RGB){return RGB.map(function(val){return val<=-.3013698630136986?2*(2**(17.52*val-9.72)-ε):val<ACES_cc_max?2**(17.52*val-9.72):65504})},fromBase(RGB){return RGB.map(function(val){return val<=0?(Math.log2(ε)+9.72)/17.52:val<ε?(Math.log2(ε+.5*val)+9.72)/17.52:(Math.log2(val)+9.72)/17.52})}}),spaces=Object.freeze({__proto__:null,A98RGB:a98rgb,A98RGB_Linear:A98Linear,ACEScc:acescc,ACEScg:ACEScg,CAM16_JMh:cam16,HCT:hct,HPLuv:hpluv,HSL:HSL,HSLuv:hsluv,HSV:HSV,HWB:hwb,ICTCP:ictcp,JzCzHz:jzczhz,Jzazbz:Jzazbz,LCH:lch,LCHuv:LCHuv,Lab:lab,Lab_D65:lab_d65,Luv:Luv,OKLCH:oklch,OKLab:OKLab,P3:P3,P3_Linear:P3Linear,ProPhoto:prophoto,ProPhoto_Linear:ProPhotoLinear,REC_2020:REC2020,REC_2020_Linear:REC2020Linear,REC_2100_HLG:rec2100Hlg,REC_2100_PQ:rec2100Pq,XYZ_ABS_D65:XYZ_Abs_D65,XYZ_D50:XYZ_D50,XYZ_D65:xyz_d65,sRGB:sRGB,sRGB_Linear:sRGBLinear});class Color{constructor(...args){let color,space,coords,alpha;1===args.length&&(color=getColor(args[0])),color?(space=color.space||color.spaceId,coords=color.coords,alpha=color.alpha):[space,coords,alpha]=args,Object.defineProperty(this,"space",{value:ColorSpace.get(space),writable:!1,enumerable:!0,configurable:!0}),this.coords=coords?coords.slice():[0,0,0],this.alpha=alpha>1||void 0===alpha?1:alpha<0?0:alpha;for(let i=0;i<this.coords.length;i++)"NaN"===this.coords[i]&&(this.coords[i]=NaN);for(let id in this.space.coords)Object.defineProperty(this,id,{get:()=>this.get(id),set:value=>this.set(id,value)})}get spaceId(){return this.space.id}clone(){return new Color(this.space,this.coords,this.alpha)}toJSON(){return{spaceId:this.spaceId,coords:this.coords,alpha:this.alpha}}display(...args){let ret=function display(color,{space:space=defaults.display_space,...options}={}){let ret=serialize(color,options);if("undefined"==typeof CSS||CSS.supports("color",ret)||!defaults.display_space)ret=new String(ret),ret.color=color;else{let fallbackColor=color;if((color.coords.some(isNone)||isNone(color.alpha))&&!(supportsNone??=CSS.supports("color","hsl(none 50% 50%)"))&&(fallbackColor=clone(color),fallbackColor.coords=fallbackColor.coords.map(skipNone),fallbackColor.alpha=skipNone(fallbackColor.alpha),ret=serialize(fallbackColor,options),CSS.supports("color",ret)))return ret=new String(ret),ret.color=fallbackColor,ret;fallbackColor=to(fallbackColor,space),ret=new String(serialize(fallbackColor,options)),ret.color=fallbackColor}return ret}(this,...args);return ret.color=new Color(ret.color),ret}static get(color,...args){return color instanceof Color?color:new Color(color,...args)}static defineFunction(name,code,o=code){let{instance:instance=!0,returns:returns}=o,func=function(...args){let ret=code(...args);if("color"===returns)ret=Color.get(ret);else if("function<color>"===returns){let f=ret;ret=function(...args){let ret=f(...args);return Color.get(ret)},Object.assign(ret,f)}else"array<color>"===returns&&(ret=ret.map(c=>Color.get(c)));return ret};name in Color||(Color[name]=func),instance&&(Color.prototype[name]=function(...args){return func(this,...args)})}static defineFunctions(o){for(let name in o)Color.defineFunction(name,o[name],o[name])}static extend(exports){if(exports.register)exports.register(Color);else for(let name in exports)Color.defineFunction(name,exports[name])}}Color.defineFunctions({get:get,getAll:getAll,set:set,setAll:setAll,to:to,equals:function equals(color1,color2){return color1=getColor(color1),color2=getColor(color2),color1.space===color2.space&&color1.alpha===color2.alpha&&color1.coords.every((c,i)=>c===color2.coords[i])},inGamut:inGamut,toGamut:toGamut,distance:distance,toString:serialize}),Object.assign(Color,{util:util,hooks:hooks,WHITES:WHITES,Space:ColorSpace,spaces:ColorSpace.registry,parse:parse,defaults:defaults});for(let key of Object.keys(spaces))ColorSpace.register(spaces[key]);for(let id in ColorSpace.registry)addSpaceAccessors(id,ColorSpace.registry[id]);function addSpaceAccessors(id,space){let propId=id.replace(/-/g,"_");Object.defineProperty(Color.prototype,propId,{get(){let ret=this.getAll(id);return"undefined"==typeof Proxy?ret:new Proxy(ret,{has:(obj,property)=>{try{return ColorSpace.resolveCoord([space,property]),!0}catch(e){}return Reflect.has(obj,property)},get:(obj,property,receiver)=>{if(property&&"symbol"!=typeof property&&!(property in obj)){let{index:index}=ColorSpace.resolveCoord([space,property]);if(index>=0)return obj[index]}return Reflect.get(obj,property,receiver)},set:(obj,property,value,receiver)=>{if(property&&"symbol"!=typeof property&&!(property in obj)||property>=0){let{index:index}=ColorSpace.resolveCoord([space,property]);if(index>=0)return obj[index]=value,this.setAll(id,obj),!0}return Reflect.set(obj,property,value,receiver)}})},set(coords){this.setAll(id,coords)},configurable:!0,enumerable:!0})}hooks.add("colorspace-init-end",space=>{addSpaceAccessors(space.id,space),space.aliases?.forEach(alias=>{addSpaceAccessors(alias,space)})}),Color.extend(deltaEMethods),Color.extend({deltaE:deltaE}),Object.assign(Color,{deltaEMethods:deltaEMethods}),Color.extend(variations),Color.extend({contrast:function contrast(background,foreground,o={}){isString(o)&&(o={algorithm:o});let{algorithm:algorithm,...rest}=o;if(!algorithm){let algorithms=Object.keys(contrastMethods).map(a=>a.replace(/^contrast/,"")).join(", ");throw new TypeError(`contrast() function needs a contrast algorithm. Please specify one of: ${algorithms}`)}background=getColor(background),foreground=getColor(foreground);for(let a in contrastMethods)if("contrast"+algorithm.toLowerCase()===a.toLowerCase())return contrastMethods[a](background,foreground,rest);throw new TypeError(`Unknown contrast algorithm: ${algorithm}`)}}),Color.extend(chromaticity),Color.extend(luminance),Color.extend(interpolation),Color.extend(contrastMethods)}}]);