{"version":3,"file":"overlay-stories-overlay-element-stories.b37a1c1c.iframe.bundle.js","mappings":";;;AAiDA;;;;AAIA;AACA;;;;AAIA;;;;AAIA;;AAIA;;AAOA;AACA;AACA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AAIA;;AAEA;;;;AAIA;;AAEA;AAEA;;;ACjEA;;ACtBA;;;AAOA;;AAQA;;AAGA;;;AAKA;AAOA;AAiBA;;;;;;;;;;;;;;;;AAwBA;ADzDA;;AAYA;;;ACiDA;;;;;;;;;;;;;;;AAsBA;;;AAIA;;;;;;;;;;;;AAkBA;;;;;;;;;;;;;;;;;;;;;;;AAwBA;;;AAIA;;;;;;;;;;;;;;;;;;;;;;AA6BA;;;AA4BA;;;AAvBA;;;;;;;;;;;;;AAuBA;;;;AASA;;AChOA;AACA;;AAEA;;;AAGA;;;;;;;;;;;ACRA;;;;;;ACMA;AACA;AACA;AACA;;;;;;;;;;ACPA;AACA;;AAEA;;;AAGA;;;;;;;;;;;;ACNA;AACA;;AAEA;;;AAGA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACNA;;AAEA;AACA;;;AAGA;;;;;;;ACNA;AACA;;AAEA;;;AAGA;;;;;;;ACNA;;AAEA;AACA;;;AAGA;;;;;;;ACNA;;AAEA;AACA;;;AAGA;;;;;;;ACPA;;ACAA;AAgEA;AACA;;AAEA;AAEA;ACKA;;;;;;AAMA;;;;;;;;;;AAUA;AACA;AACA;AACA;;;AAGA;;;;AAIA;;;;;;;;AAQA;;;;;;AAOA;;;AAeA;AACA;AACA;AACA;;AAEA;;AAGA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAyEA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAkGA;;;;;;;;;;;;;;;;;;AAgCA;;;;;;;;;AA2BA;AACA;AACA;AACA;;;;;;AAOA;;;;;AAsBA;AACA;AACA;AACA;AACA;;;;;;;;AASA;;;;;;;;;;;;AAkBA;AAEA;;;;;;;;;;;;;;AAmBA;AAEA;;;;;;;;;AAcA;;;;;;;;AASA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA0EA;;;;;;;AAOA;;;;;;;;;;;;;;;;;;;;AAoBA;;;;;;;AAOA;;;;;;;;;;;;;;;;;;;;;AAqBA;;;;;;;;;;;AAWA;;;;;;;;;;;;;;;;;;;;AAoBA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA8CA;;;;;;;AAOA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA8BA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAyCA;;;;;;;AAOA;;;;;;;;;;;;;;;;;;;;;;;;AAwBA;;;;;;;;;;;;;;;;;;;;AAoBA;;AAKA;;;;;;AAQA;;;;;;;;;;;;;;;;;;;;;AAuBA;;AAYA;;;;;;;;;AAgBA;;;;;;;;;;;;;;AAcA;;;;;;;;;;;;;;;;AAiBA","sources":["webpack://@adobe/spectrum-web-components/./packages/action-menu/src/ActionMenu.dev.js","webpack://@adobe/spectrum-web-components/./packages/dialog/stories/index.js","webpack://@adobe/spectrum-web-components/./packages/dialog/stories/dialog-base.stories.js","webpack://@adobe/spectrum-web-components/./packages/icons-workflow/src/icons-s2/More.js","webpack://@adobe/spectrum-web-components/./packages/icons-workflow/src/elements/IconMore.js","webpack://@adobe/spectrum-web-components/./packages/icons-workflow/src/DefaultIcon.js","webpack://@adobe/spectrum-web-components/./packages/icons-workflow/src/icons-s2/DirectSelect.js","webpack://@adobe/spectrum-web-components/./packages/icons-workflow/src/icons-s2/SelectRectangle.js","webpack://@adobe/spectrum-web-components/./packages/icons-workflow/src/icons/AnchorSelect.js","webpack://@adobe/spectrum-web-components/./packages/icons-workflow/src/icons/More.js","webpack://@adobe/spectrum-web-components/./packages/icons-workflow/src/icons/PolygonSelect.js","webpack://@adobe/spectrum-web-components/./packages/icons-workflow/src/icons/RectSelect.js","webpack://@adobe/spectrum-web-components/./packages/link/src/Link.dev.js","webpack://@adobe/spectrum-web-components/./packages/menu/src/MenuGroup.dev.js","webpack://@adobe/spectrum-web-components/./packages/overlay/stories/overlay-element.stories.js"],"sourcesContent":["\"use strict\";\nvar __defProp = Object.defineProperty;\nvar __getOwnPropDesc = Object.getOwnPropertyDescriptor;\nvar __decorateClass = (decorators, target, key, kind) => {\n  var result = kind > 1 ? void 0 : kind ? __getOwnPropDesc(target, key) : target;\n  for (var i = decorators.length - 1, decorator; i >= 0; i--)\n    if (decorator = decorators[i])\n      result = (kind ? decorator(target, key, result) : decorator(result)) || result;\n  if (kind && result) __defProp(target, key, result);\n  return result;\n};\nimport {\n  html\n} from \"@spectrum-web-components/base\";\nimport { state } from \"@spectrum-web-components/base/src/decorators.js\";\nimport { ifDefined } from \"@spectrum-web-components/base/src/directives.js\";\nimport { property } from \"@spectrum-web-components/base/src/decorators.js\";\nimport { DESCRIPTION_ID, PickerBase } from \"@spectrum-web-components/picker\";\nimport \"@spectrum-web-components/action-button/sp-action-button.js\";\nimport { ObserveSlotPresence } from \"@spectrum-web-components/shared/src/observe-slot-presence.js\";\nimport { ObserveSlotText } from \"@spectrum-web-components/shared/src/observe-slot-text.js\";\nimport \"@spectrum-web-components/icons-workflow/icons/sp-icon-more.js\";\nimport actionMenuStyles from \"./action-menu.css.js\";\nimport { SlottableRequestEvent } from \"@spectrum-web-components/overlay/src/slottable-request-event.js\";\nexport class ActionMenu extends ObserveSlotPresence(\n  ObserveSlotText(PickerBase, \"label\"),\n  '[slot=\"label-only\"]'\n) {\n  constructor() {\n    super(...arguments);\n    this.selects = void 0;\n    this.listRole = \"menu\";\n    this.itemRole = \"menuitem\";\n    this.handleSlottableRequest = (event) => {\n      this.dispatchEvent(new SlottableRequestEvent(event.name, event.data));\n    };\n  }\n  static get styles() {\n    return [actionMenuStyles];\n  }\n  get hasLabel() {\n    return this.slotHasContent;\n  }\n  get labelOnly() {\n    return this.slotContentIsPresent;\n  }\n  get buttonContent() {\n    return [\n      html`\n                ${this.labelOnly ? html`` : html`\n                          <slot\n                              name=\"icon\"\n                              slot=\"icon\"\n                              ?icon-only=${!this.hasLabel}\n                              ?hidden=${this.labelOnly}\n                          >\n                              <sp-icon-more\n                                  class=\"icon\"\n                                  size=${this.size}\n                              ></sp-icon-more>\n                          </slot>\n                      `}\n                <slot name=\"label\" ?hidden=${!this.hasLabel}></slot>\n                <slot name=\"label-only\"></slot>\n            `\n    ];\n  }\n  render() {\n    if (this.tooltipEl) {\n      this.tooltipEl.disabled = this.open;\n    }\n    return html`\n            <sp-action-button\n                aria-describedby=${DESCRIPTION_ID}\n                ?quiet=${this.quiet}\n                ?selected=${this.open}\n                static-color=${ifDefined(this.staticColor)}\n                aria-haspopup=\"true\"\n                aria-controls=${ifDefined(this.open ? \"menu\" : void 0)}\n                aria-expanded=${this.open ? \"true\" : \"false\"}\n                aria-label=${ifDefined(this.label || void 0)}\n                id=\"button\"\n                class=\"button\"\n                size=${this.size}\n                @blur=${this.handleButtonBlur}\n                @focus=${this.handleButtonFocus}\n                @keydown=${{\n      handleEvent: this.handleEnterKeydown,\n      capture: true\n    }}\n                ?disabled=${this.disabled}\n            >\n                ${this.buttonContent}\n            </sp-action-button>\n            <slot\n                name=\"tooltip\"\n                @slotchange=${this.handleTooltipSlotchange}\n            ></slot>\n            ${this.renderMenu} ${this.renderDescriptionSlot}\n        `;\n  }\n  update(changedProperties) {\n    if (changedProperties.has(\"invalid\")) {\n      this.invalid = false;\n    }\n    super.update(changedProperties);\n  }\n  hasAccessibleLabel() {\n    return !!this.label || !!this.getAttribute(\"aria-label\") || !!this.getAttribute(\"aria-labelledby\") || !!this.appliedLabel || this.hasLabel || this.labelOnly;\n  }\n  warnNoLabel() {\n    window.__swc.warn(\n      this,\n      `<${this.localName}> needs one of the following to be accessible:`,\n      \"https://opensource.adobe.com/spectrum-web-components/components/action-menu/#accessibility\",\n      {\n        type: \"accessibility\",\n        issues: [\n          `an <sp-field-label> element with a \\`for\\` attribute referencing the \\`id\\` of the \\`<${this.localName}>\\`, or`,\n          'value supplied to the \"label\" attribute, which will be displayed visually as placeholder text',\n          'text content supplied in a <span> with slot=\"label\", or, text content supplied in a <span> with slot=\"label-only\"',\n          \"which will also be displayed visually as placeholder text.\"\n        ]\n      }\n    );\n  }\n}\n__decorateClass([\n  property({ type: String })\n], ActionMenu.prototype, \"selects\", 2);\n__decorateClass([\n  property({ reflect: true, attribute: \"static-color\" })\n], ActionMenu.prototype, \"staticColor\", 2);\n__decorateClass([\n  state()\n], ActionMenu.prototype, \"labelOnly\", 1);\n//# sourceMappingURL=ActionMenu.dev.js.map\n","\"use strict\";\nimport { html } from \"@spectrum-web-components/base\";\nimport \"@spectrum-web-components/button/sp-button.js\";\nimport \"@spectrum-web-components/overlay/sp-overlay.js\";\nclass CountdownWatcher extends HTMLElement {\n  constructor() {\n    super(...arguments);\n    this.readyPromise = Promise.resolve(false);\n  }\n  connectedCallback() {\n    this.previousElementSibling.addEventListener(\n      \"countdown-complete\",\n      () => {\n        this.ready(true);\n      }\n    );\n    this.readyPromise = new Promise((res) => {\n      this.ready = res;\n    });\n  }\n  get updateComplete() {\n    return this.readyPromise;\n  }\n}\ncustomElements.define(\"countdown-complete-watcher\", CountdownWatcher);\nexport const disabledButtonDecorator = (story) => {\n  return html`\n        ${story()}\n        <countdown-complete-watcher></countdown-complete-watcher>\n    `;\n};\nexport const withOverlayDecorator = (story) => {\n  return html`\n        <sp-button variant=\"primary\" id=\"trigger\">Toggle Dialog</sp-button>\n        <sp-overlay type=\"modal\" trigger=\"trigger@click\" open>\n            ${story()}\n        </sp-overlay>\n    `;\n};\nexport const disabledButtonWithOverlayDecorator = (story) => withOverlayDecorator(() => disabledButtonDecorator(story));\n//# sourceMappingURL=index.js.map\n","\"use strict\";\nimport { html } from \"@spectrum-web-components/base\";\nimport \"@spectrum-web-components/button/sp-button.js\";\nimport \"@spectrum-web-components/checkbox/sp-checkbox.js\";\nimport \"@spectrum-web-components/dialog/sp-dialog-base.js\";\nimport \"@spectrum-web-components/dialog/sp-dialog.js\";\nimport { trigger } from \"@spectrum-web-components/overlay\";\nimport { alertDestructive } from \"./dialog.stories.js\";\nimport { portrait } from \"./images.js\";\nimport {\n  disabledButtonWithOverlayDecorator,\n  withOverlayDecorator\n} from \"./index.js\";\nexport default {\n  title: \"Dialog Base\",\n  component: \"sp-dialog-base\"\n};\nexport const slotted = () => html`\n    <sp-dialog-base\n        underlay\n        @click=${(event) => {\n  if (event.target.localName === \"sp-button\") {\n    event.target.dispatchEvent(\n      new Event(\"close\", { bubbles: true, composed: true })\n    );\n  }\n}}\n    >\n        ${alertDestructive()}\n    </sp-dialog-base>\n`;\nslotted.decorators = [withOverlayDecorator];\nexport const disabledButton = () => {\n  return html`\n        <sp-dialog-base\n            underlay\n            @click=${(event) => {\n    if (event.target.localName === \"sp-button\") {\n      event.target.dispatchEvent(\n        new Event(\"close\", { bubbles: true, composed: true })\n      );\n    }\n  }}\n            @sp-opened=${({ target }) => {\n    let count = 5;\n    const timer = setInterval(() => {\n      count -= 1;\n      if (!count) {\n        document.querySelector(\n          \"#changing-header\"\n        ).textContent = \"The button in this dialog is now enabled\";\n        document.querySelector(\n          \"#changing-button\"\n        ).disabled = false;\n        clearInterval(timer);\n        target.dispatchEvent(new Event(\"countdown-complete\"));\n      }\n      document.querySelector(\".time\").textContent = count.toString();\n    }, 1e3);\n  }}\n            @close=${() => {\n    document.querySelector(\"#changing-header\").textContent = \"The button in this dialog is disabled\";\n    document.querySelector(\n      \"#changing-button\"\n    ).disabled = true;\n    document.querySelector(\".time\").textContent = \"5\";\n  }}\n        >\n            <sp-dialog size=\"s\">\n                <h2 slot=\"heading\" id=\"changing-header\">\n                    The button in this dialog is disabled\n                </h2>\n                <p>\n                    After about\n                    <span class=\"time\">5</span>\n                    seconds the button with be enabled.\n                </p>\n                <sp-button disabled slot=\"button\" id=\"changing-button\">\n                    Ok\n                </sp-button>\n            </sp-dialog>\n        </sp-dialog-base>\n    `;\n};\ndisabledButton.decorators = [disabledButtonWithOverlayDecorator];\nexport const notAgain = () => html`\n    <sp-dialog-base\n        underlay\n        @click=${(event) => {\n  if (event.target.localName === \"sp-button\") {\n    event.target.dispatchEvent(\n      new Event(\"close\", { bubbles: true, composed: true })\n    );\n  }\n}}\n    >\n        <sp-dialog size=\"s\">\n            <h2 slot=\"heading\">A thing is about to happen</h2>\n            <p>Something that might happen a lot is about to happen.</p>\n            <p>\n                The click events for the \"OK\" button are bound to the story not\n                to the components in specific.\n            </p>\n            <sp-button variant=\"secondary\" treatment=\"fill\" slot=\"button\">\n                Ok\n            </sp-button>\n            <sp-checkbox slot=\"footer\">Don't show me this again</sp-checkbox>\n        </sp-dialog>\n    </sp-dialog-base>\n`;\nnotAgain.decorators = [withOverlayDecorator];\nexport const moreCustom = () => html`\n    <sp-dialog-base\n        underlay\n        @click=${(event) => {\n  if (event.target.localName === \"sp-button\") {\n    event.target.dispatchEvent(\n      new Event(\"close\", { bubbles: true, composed: true })\n    );\n  }\n}}\n    >\n        <div style=\"display: flex;\">\n            <div\n                style=\"\n                display: grid;\n                place-content: center;\n                grid-template-columns: calc(100% - 40px);\n                grid-template-rows: calc(100% - 40px);\n            \"\n            >\n                <img\n                    src=${portrait}\n                    alt=\"\"\n                    style=\"\n                        width: 100%;\n                        height: 100%;\n                        object-fit: contain;\n                        object-placement: center;\n                    \"\n                />\n            </div>\n            <sp-dialog size=\"s\">\n                <h2 slot=\"heading\">Look at that image</h2>\n                <p>\n                    Its position has been customized beyond the language of\n                    Spectrum. Be careful with all this power. There's no\n                    \"mobile\" default for delivering content like this.\n                </p>\n                <sp-button variant=\"accent\" treatment=\"outline\" slot=\"button\">\n                    Ok\n                </sp-button>\n            </sp-dialog>\n        </div>\n    </sp-dialog-base>\n`;\nmoreCustom.decorators = [withOverlayDecorator];\nexport const fullyCustom = () => html`\n    <sp-dialog-base\n        underlay\n        @click=${(event) => {\n  if (event.target.localName === \"button\") {\n    event.target.dispatchEvent(\n      new Event(\"close\", { bubbles: true, composed: true })\n    );\n  }\n}}\n    >\n        <div id=\"fully-custom-dialog\">\n            <style>\n                #fully-custom-dialog {\n                    margin: 1em;\n                }\n            </style>\n            <h2>Custom headline</h2>\n            <p>\n                The click events for the \"Done\" button are bound to the story\n                not to the components in specific.\n            </p>\n            <p>\n                This is a demonstration of what is possible with\n                &lt;sp-dialog-base&gt;, only, and should not be seen as an\n                endorsement for fully custom dialog UIs.\n            </p>\n            <p>Fully open content area, for whatever DOM you would like.</p>\n            <button>Done</button>\n        </div>\n    </sp-dialog-base>\n`;\nfullyCustom.decorators = [withOverlayDecorator];\nexport const lazyLoaded = () => {\n  const template = () => html`\n        <sp-dialog-base\n            underlay\n            @click=${(event) => {\n    if (event.target.localName === \"sp-button\") {\n      event.target.dispatchEvent(\n        new Event(\"close\", { bubbles: true, composed: true })\n      );\n    }\n  }}\n        >\n            <sp-dialog size=\"m\">\n                <h2 slot=\"heading\">This is a heading</h2>\n                <p>\n                    The click on the \"OK\" button should close the overlay with\n                    the correct animation (duration).\n                </p>\n                <sp-button variant=\"secondary\" treatment=\"fill\" slot=\"button\">\n                    Ok\n                </sp-button>\n            </sp-dialog>\n        </sp-dialog-base>\n    `;\n  return html`\n        <sp-button\n            variant=\"primary\"\n            ${trigger(template, {\n    open: false,\n    triggerInteraction: \"click\"\n  })}\n        >\n            Open dialog\n        </sp-button>\n    `;\n};\nlazyLoaded.swc_vrt = {\n  skip: true\n};\n//# sourceMappingURL=dialog-base.stories.js.map\n;export const __namedExportsOrder = [\"slotted\",\"disabledButton\",\"notAgain\",\"moreCustom\",\"fullyCustom\",\"lazyLoaded\"];","\"use strict\";import{tag as t}from\"../custom-tag.js\";export{setCustomTemplateLiteralTag}from\"../custom-tag.js\";export const MoreIcon=({width:r=24,height:l=24,hidden:e=!1,title:c=\"More\"}={})=>t`<svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    width=\"${r}\"\n    height=\"${l}\"\n    viewBox=\"0 0 20 20\"\n    aria-hidden=${e?\"true\":\"false\"}\n    role=\"img\"\n    fill=\"currentColor\"\n    aria-label=\"${c}\"\n  >\n    <circle cx=\"10\" cy=\"10.02114\" r=\"1.5\" fill=\"currentColor\" />\n    <path\n      d=\"m10,8.5c-.82843,0-1.5.67157-1.5,1.5s.67157,1.5,1.5,1.5,1.5-.67157,1.5-1.5-.67157-1.5-1.5-1.5Z\"\n      fill=\"currentColor\"\n    />\n    <circle cx=\"4\" cy=\"10.02114\" r=\"1.5\" fill=\"currentColor\" />\n    <circle cx=\"4\" cy=\"10\" r=\"1.5\" fill=\"currentColor\" />\n    <circle cx=\"16\" cy=\"10.02114\" r=\"1.5\" fill=\"currentColor\" />\n    <circle cx=\"16\" cy=\"10\" r=\"1.5\" fill=\"currentColor\" />\n  </svg>`;\n//# sourceMappingURL=More.js.map\n","\"use strict\";import{html as e}from\"@spectrum-web-components/base\";import{IconBase as t}from\"@spectrum-web-components/icon\";import{setCustomTemplateLiteralTag as r}from\"../custom-tag.js\";import{MoreIcon as o}from\"../icons-s2/More.js\";import{MoreIcon as l}from\"../icons/More.js\";export class IconMore extends t{render(){return r(e),this.spectrumVersion===2?o({hidden:!this.label,title:this.label}):l({hidden:!this.label,title:this.label})}}\n//# sourceMappingURL=IconMore.js.map\n","\"use strict\";import{tag as a}from\"./custom-tag.js\";export{setCustomTemplateLiteralTag}from\"./custom-tag.js\";export const DefaultIcon=({width:e=24,height:l=24,hidden:t=!1,title:r=\"Default\"}={})=>a`\n        <svg\n            xmlns=\"http://www.w3.org/2000/svg\"\n            viewBox=\"0 0 20 20\"\n            role=\"img\"\n            fill=\"currentColor\"\n            width=${e}\n            height=${l}\n            aria-hidden=${t?\"true\":\"false\"}\n            aria-label=${t?void 0:r}\n        >\n            <path\n                d=\"m10,18.75c-4.82471,0-8.75-3.9248-8.75-8.75S5.17529,1.25,10,1.25s8.75,3.9248,8.75,8.75-3.92529,8.75-8.75,8.75Zm0-16c-3.99756,0-7.25,3.25195-7.25,7.25s3.25244,7.25,7.25,7.25,7.25-3.25195,7.25-7.25-3.25244-7.25-7.25-7.25Z\"\n                fill=\"currentColor\"\n                stroke-width=\"0\"\n            ></path>\n        </svg>\n    `;\n//# sourceMappingURL=DefaultIcon.js.map\n","\"use strict\";import{tag as c}from\"../custom-tag.js\";export{setCustomTemplateLiteralTag}from\"../custom-tag.js\";export const DirectSelectIcon=({width:l=24,height:e=24,hidden:t=!1,title:r=\"Direct Select\"}={})=>c`<svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    width=\"${l}\"\n    height=\"${e}\"\n    viewBox=\"0 0 20 20\"\n    aria-hidden=${t?\"true\":\"false\"}\n    role=\"img\"\n    fill=\"currentColor\"\n    aria-label=\"${r}\"\n  >\n    <path\n      d=\"m8.75,9.48926c0-1.31616.89508-2.41663,2.10577-2.75696-.01202-.38879-.09631-.76794-.25568-1.11511l3.03748-2.56873c.0141.005.02606.01318.04041.01794.78754.25708,1.63434-.1731,1.89142-.96057s-.17297-1.6344-.96051-1.89148c-.15629-.05099-.3149-.07493-.47079-.07439-.62962.00219-1.21457.40376-1.42063,1.03496-.07922.2428-.0863.48962-.04462.72461l-3.03973,2.57068c-.22217-.15405-.46094-.28906-.73108-.3772-1.49628-.48828-3.10516.32861-3.59357,1.82495-.23456.71851-.16168,1.46021.13654,2.09399l-3.23639,2.73706c-.00464-.00159-.00848-.00427-.01312-.00586-.78754-.25708-1.63434.1731-1.89142.96057-.05551.17003-.07898.34282-.07374.51185.01903.61385.41675,1.17805,1.03425,1.37962.78754.25696,1.63434-.1731,1.89142-.96057.0827-.2533.08759-.51111.03906-.75513l3.22845-2.73022c.21661.14709.44836.27673.70978.36194.54419.17773,1.10211.17847,1.6167.04077v-.06274Z\"\n      fill=\"currentColor\"\n    />\n    <path\n      d=\"m11.62598,18.95518c-.2085,0-.41895-.04004-.62012-.12305-.61084-.25146-1.00586-.84131-1.00586-1.50195v-7.68018c0-.65869.39307-1.24756,1.00146-1.5.6084-.25293,1.30176-.11572,1.76953.34961l5.25,5.23486c.4668.46582.60596,1.16064.354,1.77051s-.84082,1.00391-1.50098,1.00391h-2.09766l-1.99854,1.96436c-.31201.31494-.72754.48193-1.15186.48193Zm.00342-9.43164c-.01514,0-.03271.00342-.05273.01172-.07666.03174-.07666.09229-.07666.11475v7.68018c0,.02295,0,.08301.07666.11475.07861.03271.12061-.01123.13574-.02734l1.91016-1.92773c.30273-.30566.72363-.48985,1.15381-.48985h2.09766c.02295,0,.08301.00889.11475-.06777s-.01074-.11914-.02686-.13525l-5.25049-5.23486c-.01172-.01221-.03809-.03857-.08203-.03857Z\"\n      fill=\"currentColor\"\n    />\n  </svg>`;\n//# sourceMappingURL=DirectSelect.js.map\n","\"use strict\";import{tag as e}from\"../custom-tag.js\";export{setCustomTemplateLiteralTag}from\"../custom-tag.js\";export const SelectRectangleIcon=({width:l=24,height:r=24,hidden:t=!1,title:c=\"Select Rectangle\"}={})=>e`<svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    width=\"${l}\"\n    height=\"${r}\"\n    viewBox=\"0 0 20 20\"\n    aria-hidden=${t?\"true\":\"false\"}\n    role=\"img\"\n    fill=\"currentColor\"\n    aria-label=\"${c}\"\n  >\n    <path\n      d=\"m4.25,2c-1.24072,0-2.25,1.00928-2.25,2.25,0,.41406.33594.75.75.75s.75-.33594.75-.75c0-.41357.33643-.75.75-.75.41406,0,.75-.33594.75-.75s-.33594-.75-.75-.75Z\"\n      fill=\"currentColor\"\n    />\n    <path\n      d=\"m8.5,16.5h-1.25c-.41406,0-.75.33594-.75.75s.33594.75.75.75h1.25c.41406,0,.75-.33594.75-.75s-.33594-.75-.75-.75Z\"\n      fill=\"currentColor\"\n    />\n    <path\n      d=\"m15.75,3.5c.41357,0,.75.33643.75.75,0,.41406.33594.75.75.75s.75-.33594.75-.75c0-1.24072-1.00928-2.25-2.25-2.25-.41406,0-.75.33594-.75.75s.33594.75.75.75Z\"\n      fill=\"currentColor\"\n    />\n    <path\n      d=\"m2.75,13.5c.41406,0,.75-.33594.75-.75v-1.25c0-.41406-.33594-.75-.75-.75s-.75.33594-.75.75v1.25c0,.41406.33594.75.75.75Z\"\n      fill=\"currentColor\"\n    />\n    <path\n      d=\"m2.75,9.25c.41406,0,.75-.33594.75-.75v-1.25c0-.41406-.33594-.75-.75-.75s-.75.33594-.75.75v1.25c0,.41406.33594.75.75.75Z\"\n      fill=\"currentColor\"\n    />\n    <path\n      d=\"m4.25,16.5c-.41357,0-.75-.33643-.75-.75,0-.41406-.33594-.75-.75-.75s-.75.33594-.75.75c0,1.24072,1.00928,2.25,2.25,2.25.41406,0,.75-.33594.75-.75s-.33594-.75-.75-.75Z\"\n      fill=\"currentColor\"\n    />\n    <path\n      d=\"m8.5,2h-1.25c-.41406,0-.75.33594-.75.75s.33594.75.75.75h1.25c.41406,0,.75-.33594.75-.75s-.33594-.75-.75-.75Z\"\n      fill=\"currentColor\"\n    />\n    <path\n      d=\"m17.25,15c-.41406,0-.75.33594-.75.75,0,.41357-.33643.75-.75.75-.41406,0-.75.33594-.75.75s.33594.75.75.75c1.24072,0,2.25-1.00928,2.25-2.25,0-.41406-.33594-.75-.75-.75Z\"\n      fill=\"currentColor\"\n    />\n    <path\n      d=\"m17.25,6.5c-.41406,0-.75.33594-.75.75v1.25c0,.41406.33594.75.75.75s.75-.33594.75-.75v-1.25c0-.41406-.33594-.75-.75-.75Z\"\n      fill=\"currentColor\"\n    />\n    <path\n      d=\"m17.25,10.75c-.41406,0-.75.33594-.75.75v1.25c0,.41406.33594.75.75.75s.75-.33594.75-.75v-1.25c0-.41406-.33594-.75-.75-.75Z\"\n      fill=\"currentColor\"\n    />\n    <path\n      d=\"m12.75,2h-1.25c-.41406,0-.75.33594-.75.75s.33594.75.75.75h1.25c.41406,0,.75-.33594.75-.75s-.33594-.75-.75-.75Z\"\n      fill=\"currentColor\"\n    />\n    <path\n      d=\"m12.75,16.5h-1.25c-.41406,0-.75.33594-.75.75s.33594.75.75.75h1.25c.41406,0,.75-.33594.75-.75s-.33594-.75-.75-.75Z\"\n      fill=\"currentColor\"\n    />\n  </svg>`;\n//# sourceMappingURL=SelectRectangle.js.map\n","\"use strict\";import{tag as r}from\"../custom-tag.js\";export{setCustomTemplateLiteralTag}from\"../custom-tag.js\";export const AnchorSelectIcon=({width:e=24,height:t=24,hidden:a=!1,title:l=\"Anchor Select\"}={})=>r`<svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    height=\"${t}\"\n    viewBox=\"0 0 36 36\"\n    width=\"${e}\"\n    aria-hidden=${a?\"true\":\"false\"}\n    role=\"img\"\n    fill=\"currentColor\"\n    aria-label=\"${l}\"\n  >\n    <path\n      d=\"m10 6 18 18H18l-8 8ZM8.5 2.054a.5.5 0 0 0-.5.5v32.78a.5.5 0 0 0 .5.5.49.49 0 0 0 .35-.147L18.524 26h13a.5.5 0 0 0 .354-.854L8.854 2.2a.49.49 0 0 0-.354-.146Z\"\n    />\n  </svg>`;\n//# sourceMappingURL=AnchorSelect.js.map\n","\"use strict\";import{tag as c}from\"../custom-tag.js\";export{setCustomTemplateLiteralTag}from\"../custom-tag.js\";export const MoreIcon=({width:e=24,height:r=24,hidden:t=!1,title:l=\"More\"}={})=>c`<svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    width=\"${e}\"\n    height=\"${r}\"\n    viewBox=\"0 0 36 36\"\n    aria-hidden=${t?\"true\":\"false\"}\n    role=\"img\"\n    fill=\"currentColor\"\n    aria-label=\"${l}\"\n  >\n    <circle cx=\"17.8\" cy=\"18.2\" r=\"3.4\" />\n    <circle cx=\"29.5\" cy=\"18.2\" r=\"3.4\" />\n    <circle cx=\"6.1\" cy=\"18.2\" r=\"3.4\" />\n  </svg>`;\n//# sourceMappingURL=More.js.map\n","\"use strict\";import{tag as o}from\"../custom-tag.js\";export{setCustomTemplateLiteralTag}from\"../custom-tag.js\";export const PolygonSelectIcon=({width:a=24,height:e=24,hidden:l=!1,title:t=\"Polygon Select\"}={})=>o`<svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    height=\"${e}\"\n    viewBox=\"0 0 36 36\"\n    width=\"${a}\"\n    aria-hidden=${l?\"true\":\"false\"}\n    role=\"img\"\n    fill=\"currentColor\"\n    aria-label=\"${t}\"\n  >\n    <path\n      d=\"m30.455 1.829-10.174 6.62L2.665 5.513a1 1 0 0 0-1.073 1.405l6.683 14.507a5.406 5.406 0 0 0-.475 1.944c0 2.737 2.731 4.956 6.1 4.956a7.238 7.238 0 0 0 .915-.075A6.578 6.578 0 0 1 16.1 30.1a2.427 2.427 0 0 1-.237 2.115 5.312 5.312 0 0 1-3.224 1.666.5.5 0 0 0-.413.541l.1 1a.5.5 0 0 0 .579.445c1.055-.186 3.409-.782 4.6-2.505a4.367 4.367 0 0 0 .527-3.779 5.812 5.812 0 0 0-1.117-1.928c.85-.372 3.021-2.093 3.021-3.7l11.319-2.987A1 1 0 0 0 32 20V2.667a1 1 0 0 0-1.545-.838ZM9.8 23.369a2.953 2.953 0 0 1 1.972-2.5 6.41 6.41 0 0 0-.142 3.063 6.544 6.544 0 0 0 1.444 2.331c-1.842-.286-3.274-1.495-3.274-2.894Zm5.751 2.691-.007-.008a10.672 10.672 0 0 1-1.975-2.608 5.8 5.8 0 0 1 .449-3.024c2.17.048 3.984 1.374 3.984 2.949a3.146 3.146 0 0 1-2.451 2.691ZM30 19.229l-10.259 2.708a6.079 6.079 0 0 0-5.84-3.525 6.8 6.8 0 0 0-4.178 1.377L4.2 7.8l16.137 2.69a1 1 0 0 0 .71-.149L30 4.511Z\"\n    />\n  </svg>`;\n//# sourceMappingURL=PolygonSelect.js.map\n","\"use strict\";import{tag as a}from\"../custom-tag.js\";export{setCustomTemplateLiteralTag}from\"../custom-tag.js\";export const RectSelectIcon=({width:e=24,height:h=24,hidden:t=!1,title:v=\"Rect Select\"}={})=>a`<svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    height=\"${h}\"\n    viewBox=\"0 0 36 36\"\n    width=\"${e}\"\n    aria-hidden=${t?\"true\":\"false\"}\n    role=\"img\"\n    fill=\"currentColor\"\n    aria-label=\"${v}\"\n  >\n    <path\n      d=\"M10 4h6v2h-6zM20 4h6v2h-6zM3 4a1 1 0 0 0-1 1v3h2V6h2V4ZM2 12h2v4H2zM2 20h2v4H2zM4 30v-2H2v3a1 1 0 0 0 1 1h3v-2ZM10 30h6v2h-6zM20 30h6v2h-6zM30 4v2h2v2h2V5a1 1 0 0 0-1-1ZM32 12h2v4h-2zM32 20h2v4h-2zM32 28v2h-2v2h3a1 1 0 0 0 1-1v-3Z\"\n    />\n  </svg>`;\n//# sourceMappingURL=RectSelect.js.map\n","\"use strict\";\nvar __defProp = Object.defineProperty;\nvar __getOwnPropDesc = Object.getOwnPropertyDescriptor;\nvar __decorateClass = (decorators, target, key, kind) => {\n  var result = kind > 1 ? void 0 : kind ? __getOwnPropDesc(target, key) : target;\n  for (var i = decorators.length - 1, decorator; i >= 0; i--)\n    if (decorator = decorators[i])\n      result = (kind ? decorator(target, key, result) : decorator(result)) || result;\n  if (kind && result) __defProp(target, key, result);\n  return result;\n};\nimport {\n  property,\n  query\n} from \"@spectrum-web-components/base/src/decorators.js\";\nimport { LikeAnchor } from \"@spectrum-web-components/shared/src/like-anchor.js\";\nimport { Focusable } from \"@spectrum-web-components/shared/src/focusable.js\";\nimport linkStyles from \"./link.css.js\";\nexport class Link extends LikeAnchor(Focusable) {\n  constructor() {\n    super(...arguments);\n    this.quiet = false;\n  }\n  static get styles() {\n    return [linkStyles];\n  }\n  get focusElement() {\n    return this.anchorElement;\n  }\n  render() {\n    return this.renderAnchor({ id: \"anchor\" });\n  }\n}\n__decorateClass([\n  query(\"#anchor\")\n], Link.prototype, \"anchorElement\", 2);\n__decorateClass([\n  property({ type: String, reflect: true })\n], Link.prototype, \"variant\", 2);\n__decorateClass([\n  property({ reflect: true, attribute: \"static-color\" })\n], Link.prototype, \"staticColor\", 2);\n__decorateClass([\n  property({ type: Boolean, reflect: true, attribute: \"quiet\" })\n], Link.prototype, \"quiet\", 2);\n//# sourceMappingURL=Link.dev.js.map\n","\"use strict\";\nvar __defProp = Object.defineProperty;\nvar __getOwnPropDesc = Object.getOwnPropertyDescriptor;\nvar __decorateClass = (decorators, target, key, kind) => {\n  var result = kind > 1 ? void 0 : kind ? __getOwnPropDesc(target, key) : target;\n  for (var i = decorators.length - 1, decorator; i >= 0; i--)\n    if (decorator = decorators[i])\n      result = (kind ? decorator(target, key, result) : decorator(result)) || result;\n  if (kind && result) __defProp(target, key, result);\n  return result;\n};\nimport {\n  html\n} from \"@spectrum-web-components/base\";\nimport {\n  queryAssignedNodes,\n  state\n} from \"@spectrum-web-components/base/src/decorators.js\";\nimport { randomID } from \"@spectrum-web-components/shared/src/random-id.js\";\nimport { Menu } from \"./Menu.dev.js\";\nimport \"@spectrum-web-components/menu/sp-menu.js\";\nimport menuGroupStyles from \"./menu-group.css.js\";\nexport class MenuGroup extends Menu {\n  constructor() {\n    super(...arguments);\n    this.headerId = \"\";\n  }\n  static get styles() {\n    return [...super.styles, menuGroupStyles];\n  }\n  /**\n   * a menu group must have the role `group`\n   * and should never function as a menu\n   */\n  get ownRole() {\n    return \"group\";\n  }\n  /**\n   * only a menu controls roving tabindex;\n   * groups should defer navigation to parent menu\n   */\n  get controlsRovingTabindex() {\n    return false;\n  }\n  updateLabel() {\n    const headerElement = this.headerElements.length ? this.headerElements[0] : void 0;\n    if (headerElement !== this.headerElement) {\n      if (this.headerElement && this.headerElement.id === this.headerId) {\n        this.headerElement.removeAttribute(\"id\");\n      }\n      if (headerElement) {\n        this.headerId = this.headerId || `sp-menu-group-label-${randomID()}`;\n        const headerId = headerElement.id || this.headerId;\n        if (!headerElement.id) {\n          headerElement.id = headerId;\n        }\n        this.setAttribute(\"aria-labelledby\", headerId);\n      } else {\n        this.removeAttribute(\"aria-labelledby\");\n      }\n    }\n    this.headerElement = headerElement;\n  }\n  render() {\n    return html`\n            <span class=\"header\" ?hidden=${!this.headerElement}>\n                <slot name=\"header\" @slotchange=${this.updateLabel}></slot>\n            </span>\n            ${this.renderMenuItemSlot()}\n        `;\n  }\n}\n__decorateClass([\n  queryAssignedNodes({\n    slot: \"header\",\n    flatten: true\n  })\n], MenuGroup.prototype, \"headerElements\", 2);\n__decorateClass([\n  state()\n], MenuGroup.prototype, \"headerElement\", 2);\n//# sourceMappingURL=MenuGroup.dev.js.map\n","\"use strict\";\nimport { html, render } from \"@spectrum-web-components/base\";\nimport { ifDefined } from \"@spectrum-web-components/base/src/directives.js\";\nimport \"@spectrum-web-components/dialog/sp-dialog.js\";\nimport \"@spectrum-web-components/dialog/sp-dialog-wrapper.js\";\nimport \"@spectrum-web-components/overlay/sp-overlay.js\";\nimport \"@spectrum-web-components/action-button/sp-action-button.js\";\nimport \"@spectrum-web-components/action-menu/sp-action-menu.js\";\nimport \"@spectrum-web-components/action-group/sp-action-group.js\";\nimport \"@spectrum-web-components/popover/sp-popover.js\";\nimport \"@spectrum-web-components/menu/sp-menu-group.js\";\nimport \"@spectrum-web-components/menu/sp-menu-item.js\";\nimport \"@spectrum-web-components/menu/sp-menu-divider.js\";\nimport \"@spectrum-web-components/link/sp-link.js\";\nimport \"@spectrum-web-components/tooltip/sp-tooltip.js\";\nimport \"@spectrum-web-components/slider/sp-slider.js\";\nimport \"@spectrum-web-components/icons-workflow/icons/sp-icon-anchor-select.js\";\nimport \"@spectrum-web-components/icons-workflow/icons/sp-icon-polygon-select.js\";\nimport \"@spectrum-web-components/textfield/sp-textfield.js\";\nimport \"@spectrum-web-components/field-label/sp-field-label.js\";\nimport \"@spectrum-web-components/table/sp-table.js\";\nimport \"@spectrum-web-components/table/sp-table-checkbox-cell.js\";\nimport \"@spectrum-web-components/table/sp-table-head.js\";\nimport \"@spectrum-web-components/table/sp-table-head-cell.js\";\nimport \"@spectrum-web-components/table/sp-table-body.js\";\nimport \"@spectrum-web-components/table/sp-table-row.js\";\nimport \"@spectrum-web-components/table/sp-table-cell.js\";\nimport \"@spectrum-web-components/icons-workflow/icons/sp-icon-rect-select.js\";\nimport { notAgain } from \"../../dialog/stories/dialog-base.stories.js\";\nimport \"./overlay-story-components.js\";\nimport {\n  removeSlottableRequest\n} from \"../src/slottable-request-event.js\";\nexport default {\n  title: \"Overlay Element\",\n  component: \"sp-overlay\",\n  args: {\n    open: true,\n    delayed: false\n  },\n  argTypes: {\n    open: {\n      name: \"open\",\n      type: { name: \"boolean\", required: false },\n      description: \"Whether the second accordion item is open.\",\n      table: {\n        type: { summary: \"boolean\" },\n        defaultValue: { summary: false }\n      },\n      control: {\n        type: \"boolean\"\n      }\n    },\n    delayed: {\n      name: \"delayed\",\n      type: { name: \"boolean\", required: false },\n      description: \"Whether the tooltips are delayed.\",\n      table: {\n        type: { summary: \"boolean\" },\n        defaultValue: { summary: false }\n      },\n      control: {\n        type: \"boolean\"\n      }\n    }\n  }\n};\nconst Template = ({\n  interaction,\n  open,\n  placement,\n  type,\n  delayed,\n  style\n}) => html`\n    ${style === \"will-change\" ? html`\n              <style>\n                  .wrapper {\n                      will-change: transform;\n                  }\n              </style>\n          ` : html`\n              <style>\n                  .wrapper {\n                      container-type: size;\n                  }\n              </style>\n          `}\n    <div class=\"wrapper\">\n        <sp-action-button id=\"trigger\">Open the overlay</sp-action-button>\n        <sp-overlay\n            ?open=${open}\n            trigger=\"trigger@${interaction}\"\n            type=${ifDefined(type)}\n            placement=${ifDefined(placement)}\n            offset=\"-10\"\n        >\n            <sp-popover ?delayed=${delayed}>\n                <sp-dialog size=\"s\" no-divider>\n                    <p>\n                        Content goes here.\n                        ${type === \"modal\" || type === \"page\" ? html`\n                                  Or, a link,\n                                  <sp-link\n                                      href=\"https://opensource.adobe.com/spectrum-web-components\"\n                                  >\n                                      Spectrum Web Components\n                                  </sp-link>\n                                  .\n                              ` : \"\"}\n                    </p>\n                </sp-dialog>\n            </sp-popover>\n        </sp-overlay>\n    </div>\n`;\nexport const modal = (args) => Template(args);\nmodal.args = {\n  interaction: \"click\",\n  placement: \"right\",\n  style: \"will-change\",\n  type: \"modal\"\n};\nexport const page = ({\n  interaction,\n  open,\n  placement,\n  type\n}) => html`\n    <sp-action-button id=\"trigger\">Open the overlay</sp-action-button>\n    <sp-overlay\n        ?open=${open}\n        trigger=\"trigger@${interaction}\"\n        type=${ifDefined(type)}\n        placement=${ifDefined(placement)}\n    >\n        ${notAgain()}\n    </sp-overlay>\n`;\npage.args = {\n  interaction: \"click\",\n  placement: \"right\",\n  type: \"page\"\n};\nexport const complexSlowPage = () => html`\n    <div style=\"padding: 20px;\">\n\n            <p>\n                This is a complex slow page. It has a lot of content. Even with a lot of content on the page,\n                the overlay should still be able to open and close without extreme delay.\n            </p>\n\n            <div\n                style=\"display: flex; flex-direction: column; align-items: center; justify-content: center;\"\n            >\n                <sp-button style=\"margin: 20px;\" id=\"trigger\">\n                    open modal\n                </sp-button>\n                <sp-overlay trigger=\"trigger@click\" type=\"modal\">\n                    <sp-dialog-wrapper headline=\"Signin form\" dismissable underlay>\n                        <p>I am a modal type overlay.</p>\n                        <sp-field-label>Enter your email</sp-field-label>\n                        <sp-textfield placeholder=\"test@gmail.com\"></sp-textfield>\n                        <sp-action-button\n                            onClick=\"\n                                this.dispatchEvent(\n                                    new Event('close', {\n                                        bubbles: true,\n                                        composed: true,\n                                    })\n                                );\n                            \"\n                        >\n                            Sign in\n                        </sp-action-button>\n                    </sp-dialog-wrapper>  \n                </sp-overlay>\n\n                <sp-button id=\"pageTrigger\" style=\"margin: 20px;\">open page</sp-button>\n                <sp-overlay trigger=\"pageTrigger@click\" type=\"page\">\n                    <sp-dialog-wrapper\n                        headline=\"Full screen menu\"\n                        mode=\"fullscreenTakeover\"\n                        cancel-label=\"Close\"\n                    >\n                        <p>I am a page type overlay.</p>\n                    </sp-dialog-wrapper>\n                </sp-overlay>\n                <style>\n                    .chat-container {\n                        position: fixed;\n                        bottom: 1em;\n                        left: 1em;\n                    }\n                </style>\n\n                <sp-button id=\"manualTrigger\" style=\"margin: 20px;\">open manual</sp-button>\n                <sp-overlay trigger=\"manualTrigger@click\" type=\"manual\">\n                    <sp-popover class=\"chat-container\">\n                        <sp-dialog dismissable>\n                            <span slot=\"heading\">Chat Window</span>\n                            <sp-textfield\n                                placeholder=\"Enter your message\"\n                            ></sp-textfield>\n                            <sp-action-button>Send</sp-action-button>\n                        </sp-dialog>\n                    </sp-popover>\n                </sp-overlay>\n\n            </div>\n        </span>\n\n        ${Array(30).fill(0).map(\n  () => html`\n                    <div style=\"margin-bottom: 20px;\">\n                        <sp-table>\n                            <sp-table-head>\n                                <sp-table-head-cell>\n                                    Column Title\n                                </sp-table-head-cell>\n                                <sp-table-head-cell>\n                                    Column Title\n                                </sp-table-head-cell>\n                                <sp-table-head-cell>\n                                    Column Title\n                                </sp-table-head-cell>\n                            </sp-table-head>\n                            <sp-table-body style=\"height: 200px\">\n                                <sp-table-row value=\"row1\" class=\"row1\">\n                                    <sp-table-cell>\n                                        Row Item Alpha\n                                    </sp-table-cell>\n                                    <sp-table-cell>\n                                        Row Item Alpha\n                                    </sp-table-cell>\n                                    <sp-table-cell>\n                                        Row Item Alpha\n                                    </sp-table-cell>\n                                </sp-table-row>\n                                <sp-table-row value=\"row2\" class=\"row2\">\n                                    <sp-table-cell>\n                                        Row Item Bravo\n                                    </sp-table-cell>\n                                    <sp-table-cell>\n                                        Row Item Bravo\n                                    </sp-table-cell>\n                                    <sp-table-cell>\n                                        Row Item Bravo\n                                    </sp-table-cell>\n                                </sp-table-row>\n                                <sp-table-row value=\"row3\" class=\"row3\">\n                                    <sp-table-cell>\n                                        Row Item Charlie\n                                    </sp-table-cell>\n                                    <sp-table-cell>\n                                        Row Item Charlie\n                                    </sp-table-cell>\n                                    <sp-table-cell>\n                                        Row Item Charlie\n                                    </sp-table-cell>\n                                </sp-table-row>\n                                <sp-table-row value=\"row4\" class=\"row4\">\n                                    <sp-table-cell>\n                                        Row Item Delta\n                                    </sp-table-cell>\n                                    <sp-table-cell>\n                                        Row Item Delta\n                                    </sp-table-cell>\n                                    <sp-table-cell>\n                                        Row Item Delta\n                                    </sp-table-cell>\n                                </sp-table-row>\n                                <sp-table-row value=\"row5\" class=\"row5\">\n                                    <sp-table-cell>Row Item Echo</sp-table-cell>\n                                    <sp-table-cell>Row Item Echo</sp-table-cell>\n                                    <sp-table-cell>Row Item Echo</sp-table-cell>\n                                </sp-table-row>\n                            </sp-table-body>\n                        </sp-table>\n                        <sp-action-group>\n                            <sp-action-button>\n                                <sp-icon-anchor-select\n                                    slot=\"icon\"\n                                ></sp-icon-anchor-select>\n                            </sp-action-button>\n                            <sp-action-button>\n                                <sp-icon-polygon-select\n                                    slot=\"icon\"\n                                ></sp-icon-polygon-select>\n                            </sp-action-button>\n                            <sp-slider\n                                value=\"5\"\n                                step=\"0.5\"\n                                min=\"0\"\n                                max=\"20\"\n                                label=\"Control\"\n                            ></sp-slider>\n                        </sp-action-group>\n                        <sp-menu-group>\n                            <span slot=\"header\">Menu Group</span>\n                            <sp-menu-item>Option 1</sp-menu-item>\n                            <sp-menu-item>Option 2</sp-menu-item>\n                            <sp-menu-divider></sp-menu-divider>\n                            <sp-menu-item>Option 3</sp-menu-item>\n                        </sp-menu-group>\n                    </div>\n                `\n)}\n    </div>\n`;\ncomplexSlowPage.swc_vrt = {\n  skip: true\n};\ncomplexSlowPage.parameters = {\n  chromatic: { disableSnapshot: true }\n};\nexport const click = (args) => Template(args);\nclick.args = {\n  interaction: \"click\",\n  placement: \"right\",\n  style: \"container-type\",\n  type: \"auto\"\n};\nexport const withSlider = () => html`\n    <sp-button id=\"triggerEl\" variant=\"primary\">Button popover</sp-button>\n    <sp-overlay trigger=\"triggerEl@click\" placement=\"bottom\">\n        <sp-popover tip>\n            <sp-dialog no-divider class=\"options-popover-content\">\n                <p>Try clicking the slider after popover opens</p>\n                <p>It shouldn't close the popover</p>\n                <sp-slider\n                    value=\"5\"\n                    step=\"0.5\"\n                    min=\"0\"\n                    max=\"20\"\n                    label=\"Awesomeness\"\n                ></sp-slider>\n                <sp-button>Press me</sp-button>\n            </sp-dialog>\n        </sp-popover>\n    </sp-overlay>\n`;\nwithSlider.swc_vrt = {\n  skip: true\n};\nwithSlider.parameters = {\n  // Disables Chromatic's snapshotting on a global level\n  chromatic: { disableSnapshot: true }\n};\nexport const hover = (args) => Template(args);\nhover.args = {\n  interaction: \"hover\",\n  placement: \"right\",\n  style: \"will-change\"\n};\nexport const hoverTooltip = ({\n  interaction,\n  open,\n  placement,\n  type\n}) => html`\n    <style>\n        .wrapper {\n            will-change: transform;\n        }\n    </style>\n    <div class=\"wrapper\">\n        <sp-action-button id=\"trigger\">Open the overlay</sp-action-button>\n        <sp-overlay\n            ?open=${open}\n            trigger=\"trigger@${interaction}\"\n            type=${ifDefined(type)}\n            placement=${ifDefined(placement)}\n            offset=\"-10\"\n        >\n            <sp-tooltip>Tooltip goes here.</sp-tooltip>\n        </sp-overlay>\n    </div>\n`;\nhoverTooltip.args = {\n  interaction: \"hover\",\n  placement: \"right\"\n};\nexport const longpress = (args) => Template(args);\nlongpress.args = {\n  interaction: \"longpress\",\n  placement: \"right\",\n  style: \"container-type\",\n  type: \"auto\"\n};\nexport const receivesFocus = ({\n  interaction,\n  open,\n  placement,\n  receivesFocus: receivesFocus2,\n  type\n}) => html`\n    <sp-action-button id=\"trigger\">\n        Open the overlay (with focus)\n    </sp-action-button>\n    <sp-overlay\n        ?open=${open}\n        trigger=\"trigger@${interaction}\"\n        type=${ifDefined(type)}\n        placement=${ifDefined(placement)}\n        .receivesFocus=${receivesFocus2}\n    >\n        <sp-popover>\n            <sp-dialog size=\"s\" no-divider>\n                <a href=\"https://example.com\">Click Content</a>\n            </sp-dialog>\n        </sp-popover>\n    </sp-overlay>\n`;\nreceivesFocus.args = {\n  interaction: \"click\",\n  placement: \"bottom-start\",\n  type: \"auto\",\n  receivesFocus: \"true\"\n};\nexport const transformed = (args) => html`\n    <style>\n        .transformed {\n            transform: translateX(-50%);\n            position: absolute;\n            inset: auto;\n            inset-inline-start: 200px;\n            inset-block-start: 200px;\n            inline-size: 100px;\n            block-size: 50px;\n        }\n    </style>\n    <div class=\"transformed\">${Template(args)}</div>\n`;\ntransformed.args = {\n  interaction: \"click\",\n  placement: \"right\",\n  type: \"auto\"\n};\nexport const contained = (args) => html`\n    <style>\n        .contained {\n            contain: strict;\n            position: absolute;\n            inset: auto;\n            inset-inline-start: 200px;\n            inset-block-start: 200px;\n            inline-size: 200px;\n            block-size: 50px;\n            padding-block: 75px;\n            padding-inline-start: 300px;\n        }\n    </style>\n    <div class=\"contained\">${Template(args)}</div>\n`;\ncontained.args = {\n  interaction: \"click\",\n  placement: \"right\",\n  type: \"auto\"\n};\nexport const all = ({ delayed }) => html`\n    <sp-action-button id=\"trigger\" hold-affordance>\n        Open the overlay\n    </sp-action-button>\n    <sp-overlay trigger=\"trigger@click\" type=\"auto\" placement=\"right\">\n        <sp-popover>\n            <sp-dialog size=\"s\" no-divider>Click content</sp-dialog>\n        </sp-popover>\n    </sp-overlay>\n    <sp-overlay ?delayed=${delayed} trigger=\"trigger@hover\" type=\"hint\">\n        <sp-tooltip>Hover content</sp-tooltip>\n    </sp-overlay>\n    <sp-overlay trigger=\"trigger@longpress\" type=\"auto\" placement=\"right\">\n        <sp-popover>\n            <sp-dialog size=\"s\" no-divider>Longpress content</sp-dialog>\n        </sp-popover>\n    </sp-overlay>\n`;\nexport const actionGroup = ({ delayed }) => {\n  const popoverOffset = [6, -13];\n  return html`\n        <style>\n            sp-popover sp-action-group {\n                padding: calc(\n                        var(--spectrum-actiongroup-vertical-spacing-regular) *\n                            0.75\n                    )\n                    calc(\n                        var(--spectrum-actiongroup-vertical-spacing-regular) / 2\n                    );\n            }\n            .root {\n                inset-inline-end: 0em;\n                inset-block-start: 3em;\n                padding-block-end: 3em;\n            }\n            .root > sp-action-group > sp-action-button,\n            .root > sp-action-group > sp-action-menu {\n                top: 3em;\n                position: relative;\n            }\n        </style>\n        <sp-popover open class=\"root\">\n            <sp-action-group vertical quiet emphasized selects=\"single\">\n                <sp-action-button id=\"trigger-1\" hold-affordance>\n                    <sp-icon-anchor-select slot=\"icon\"></sp-icon-anchor-select>\n                </sp-action-button>\n                <sp-action-button id=\"trigger-2\" hold-affordance>\n                    <sp-icon-polygon-select\n                        slot=\"icon\"\n                    ></sp-icon-polygon-select>\n                </sp-action-button>\n                <sp-action-button id=\"trigger-3\" hold-affordance>\n                    <sp-icon-rect-select slot=\"icon\"></sp-icon-rect-select>\n                </sp-action-button>\n                <sp-action-menu label=\"More Actions\" placement=\"left\">\n                    <sp-menu-group id=\"cms\">\n                        <span slot=\"header\">cms</span>\n                        <sp-menu-item value=\"updateAllSiteContent\">\n                            Update All Content\n                        </sp-menu-item>\n                        <sp-menu-item value=\"refreshAllXDs\">\n                            Refresh All XDs\n                        </sp-menu-item>\n                    </sp-menu-group>\n                    <sp-menu-group id=\"ssg\">\n                        <span slot=\"header\">ssg</span>\n                        <sp-menu-item value=\"clearCache\">\n                            Clear Cache\n                        </sp-menu-item>\n                    </sp-menu-group>\n                    <sp-menu-group id=\"vrt\">\n                        <span slot=\"header\">vrt</span>\n                        <sp-menu-item value=\"vrt-contributions\">\n                            Contributions\n                        </sp-menu-item>\n                        <sp-menu-item value=\"vrt-internal\">\n                            Internal\n                        </sp-menu-item>\n                        <sp-menu-item value=\"vrt-public\">Public</sp-menu-item>\n                        <sp-menu-item value=\"vrt-patterns\">\n                            Patterns\n                        </sp-menu-item>\n                        <sp-menu-item value=\"vrt\">All</sp-menu-item>\n                    </sp-menu-group>\n                    <sp-menu-divider></sp-menu-divider>\n                    <sp-menu-group id=\"misc\">\n                        <sp-menu-item value=\"logout\">Logout</sp-menu-item>\n                    </sp-menu-group>\n                </sp-action-menu>\n            </sp-action-group>\n        </sp-popover>\n        <sp-overlay ?delayed=${delayed} trigger=\"trigger-1@hover\" type=\"hint\">\n            <sp-tooltip>Hover</sp-tooltip>\n        </sp-overlay>\n        <sp-overlay\n            trigger=\"trigger-1@longpress\"\n            type=\"auto\"\n            placement=\"right-start\"\n            .offset=${popoverOffset}\n        >\n            <sp-popover tip>\n                <sp-action-group vertical quiet>\n                    <sp-action-button>\n                        <sp-icon-anchor-select\n                            slot=\"icon\"\n                        ></sp-icon-anchor-select>\n                    </sp-action-button>\n                    <sp-action-button>\n                        <sp-icon-polygon-select\n                            slot=\"icon\"\n                        ></sp-icon-polygon-select>\n                    </sp-action-button>\n                    <sp-action-button>\n                        <sp-icon-rect-select slot=\"icon\"></sp-icon-rect-select>\n                    </sp-action-button>\n                </sp-action-group>\n            </sp-popover>\n        </sp-overlay>\n        <sp-overlay ?delayed=${delayed} trigger=\"trigger-2@hover\" type=\"hint\">\n            <sp-tooltip>Hover</sp-tooltip>\n        </sp-overlay>\n        <sp-overlay\n            trigger=\"trigger-2@longpress\"\n            type=\"auto\"\n            placement=\"right-start\"\n            .offset=${popoverOffset}\n        >\n            <sp-popover tip>\n                <sp-action-group vertical quiet>\n                    <sp-action-button>\n                        <sp-icon-anchor-select\n                            slot=\"icon\"\n                        ></sp-icon-anchor-select>\n                    </sp-action-button>\n                    <sp-action-button>\n                        <sp-icon-polygon-select\n                            slot=\"icon\"\n                        ></sp-icon-polygon-select>\n                    </sp-action-button>\n                    <sp-action-button>\n                        <sp-icon-rect-select slot=\"icon\"></sp-icon-rect-select>\n                    </sp-action-button>\n                </sp-action-group>\n            </sp-popover>\n        </sp-overlay>\n        <sp-overlay\n            ?delayed=${delayed}\n            trigger=\"trigger-3@hover\"\n            type=\"hint\"\n            open\n        >\n            <sp-tooltip>Hover</sp-tooltip>\n        </sp-overlay>\n        <sp-overlay\n            trigger=\"trigger-3@longpress\"\n            type=\"auto\"\n            placement=\"right-start\"\n            .offset=${popoverOffset}\n        >\n            <sp-popover tip>\n                <sp-action-group vertical quiet>\n                    <sp-action-button>\n                        <sp-icon-anchor-select\n                            slot=\"icon\"\n                        ></sp-icon-anchor-select>\n                    </sp-action-button>\n                    <sp-action-button>\n                        <sp-icon-polygon-select\n                            slot=\"icon\"\n                        ></sp-icon-polygon-select>\n                    </sp-action-button>\n                    <sp-action-button>\n                        <sp-icon-rect-select slot=\"icon\"></sp-icon-rect-select>\n                    </sp-action-button>\n                </sp-action-group>\n            </sp-popover>\n        </sp-overlay>\n    `;\n};\nexport const actionGroupWithFilters = ({\n  delayed\n}) => {\n  const popoverOffset = [6, -13];\n  return html`\n        <style>\n            sp-popover sp-action-group {\n                padding: calc(\n                        var(--spectrum-actiongroup-vertical-spacing-regular) *\n                            0.75\n                    )\n                    calc(\n                        var(--spectrum-actiongroup-vertical-spacing-regular) / 2\n                    );\n            }\n            .root {\n                inset-inline-end: 0em;\n                inset-block-start: 3em;\n                padding-block-end: 3em;\n                overflow: hidden;\n            }\n            .root > sp-action-group > sp-action-button,\n            .root > sp-action-group > sp-action-menu {\n                top: 3em;\n                position: relative;\n            }\n            sp-action-button,\n            sp-action-menu {\n                background-image: linear-gradient(\n                    rgba(125, 125, 125, 0.2),\n                    rgba(125, 125, 125, 0.2)\n                );\n                background-blend-mode: multiply;\n                filter: brightness(1) saturate(1);\n            }\n        </style>\n        <p>\n            This story outlines some CSS usage that is not yet covered by the\n            placement calculations within the Overlay API.\n        </p>\n        <sp-popover open class=\"root\">\n            <sp-action-group vertical quiet emphasized selects=\"single\">\n                <sp-action-button id=\"trigger-1\" hold-affordance>\n                    <sp-icon-anchor-select slot=\"icon\"></sp-icon-anchor-select>\n                    <sp-tooltip ?delayed=${delayed} self-managed>\n                        Hover\n                    </sp-tooltip>\n                    <sp-overlay\n                        trigger=\"trigger-1@longpress\"\n                        type=\"auto\"\n                        placement=\"right-start\"\n                        .offset=${popoverOffset}\n                    >\n                        <sp-popover tip>\n                            <sp-action-group vertical quiet>\n                                <sp-action-button>\n                                    <sp-icon-anchor-select\n                                        slot=\"icon\"\n                                    ></sp-icon-anchor-select>\n                                </sp-action-button>\n                                <sp-action-button>\n                                    <sp-icon-polygon-select\n                                        slot=\"icon\"\n                                    ></sp-icon-polygon-select>\n                                </sp-action-button>\n                                <sp-action-button>\n                                    <sp-icon-rect-select\n                                        slot=\"icon\"\n                                    ></sp-icon-rect-select>\n                                </sp-action-button>\n                            </sp-action-group>\n                        </sp-popover>\n                    </sp-overlay>\n                </sp-action-button>\n                <sp-action-button id=\"trigger-2\" hold-affordance>\n                    <sp-icon-polygon-select\n                        slot=\"icon\"\n                    ></sp-icon-polygon-select>\n                </sp-action-button>\n                <sp-action-button id=\"trigger-3\" hold-affordance>\n                    <sp-icon-rect-select slot=\"icon\"></sp-icon-rect-select>\n                    <sp-tooltip ?delayed=${delayed} self-managed>\n                        Hover\n                    </sp-tooltip>\n                </sp-action-button>\n                <sp-action-menu label=\"More Actions\">\n                    <sp-menu-group id=\"cms\">\n                        <span slot=\"header\">cms</span>\n                        <sp-menu-item value=\"updateAllSiteContent\">\n                            Update All Content\n                        </sp-menu-item>\n                        <sp-menu-item value=\"refreshAllXDs\">\n                            Refresh All XDs\n                        </sp-menu-item>\n                    </sp-menu-group>\n                    <sp-menu-group id=\"ssg\">\n                        <span slot=\"header\">ssg</span>\n                        <sp-menu-item value=\"clearCache\">\n                            Clear Cache\n                        </sp-menu-item>\n                    </sp-menu-group>\n                    <sp-menu-group id=\"vrt\">\n                        <span slot=\"header\">vrt</span>\n                        <sp-menu-item value=\"vrt-contributions\">\n                            Contributions\n                        </sp-menu-item>\n                        <sp-menu-item value=\"vrt-internal\">\n                            Internal\n                        </sp-menu-item>\n                        <sp-menu-item value=\"vrt-public\">Public</sp-menu-item>\n                        <sp-menu-item value=\"vrt-patterns\">\n                            Patterns\n                        </sp-menu-item>\n                        <sp-menu-item value=\"vrt\">All</sp-menu-item>\n                    </sp-menu-group>\n                    <sp-menu-divider></sp-menu-divider>\n                    <sp-menu-group id=\"misc\">\n                        <sp-menu-item value=\"logout\">Logout</sp-menu-item>\n                    </sp-menu-group>\n                </sp-action-menu>\n            </sp-action-group>\n        </sp-popover>\n        <sp-overlay ?delayed=${delayed} trigger=\"trigger-2@hover\" type=\"hint\">\n            <sp-tooltip>Hover</sp-tooltip>\n        </sp-overlay>\n        <sp-overlay\n            trigger=\"trigger-2@longpress\"\n            type=\"auto\"\n            placement=\"right-start\"\n            .offset=${popoverOffset}\n        >\n            <sp-popover tip>\n                <sp-action-group vertical quiet>\n                    <sp-action-button>\n                        <sp-icon-anchor-select\n                            slot=\"icon\"\n                        ></sp-icon-anchor-select>\n                    </sp-action-button>\n                    <sp-action-button>\n                        <sp-icon-polygon-select\n                            slot=\"icon\"\n                        ></sp-icon-polygon-select>\n                    </sp-action-button>\n                    <sp-action-button>\n                        <sp-icon-rect-select slot=\"icon\"></sp-icon-rect-select>\n                    </sp-action-button>\n                </sp-action-group>\n            </sp-popover>\n        </sp-overlay>\n        <sp-overlay\n            trigger=\"trigger-3@longpress\"\n            type=\"auto\"\n            placement=\"right-start\"\n            .offset=${popoverOffset}\n        >\n            <sp-popover tip>\n                <sp-action-group vertical quiet>\n                    <sp-action-button>\n                        <sp-icon-anchor-select\n                            slot=\"icon\"\n                        ></sp-icon-anchor-select>\n                    </sp-action-button>\n                    <sp-action-button>\n                        <sp-icon-polygon-select\n                            slot=\"icon\"\n                        ></sp-icon-polygon-select>\n                    </sp-action-button>\n                    <sp-action-button>\n                        <sp-icon-rect-select slot=\"icon\"></sp-icon-rect-select>\n                    </sp-action-button>\n                </sp-action-group>\n            </sp-popover>\n        </sp-overlay>\n    `;\n};\nexport const transientHover = () => html`\n    <transient-hover></transient-hover>\n`;\ntransientHover.swc_vrt = {\n  skip: true\n};\ntransientHover.parameters = {\n  // Disables Chromatic's snapshotting on a global level\n  chromatic: { disableSnapshot: true }\n};\nexport const lazyElements = () => {\n  const handleSlottableRequest = (event) => {\n    const template = event.data === removeSlottableRequest ? void 0 : html`\n                      <sp-popover>\n                          <sp-dialog no-divider>\n                              <sp-slider\n                                  value=\"5\"\n                                  step=\"0.5\"\n                                  min=\"0\"\n                                  max=\"20\"\n                                  label=\"Awesomeness\"\n                              ></sp-slider>\n                              <div id=\"styled-div\">\n                                  The background of this div should be blue\n                              </div>\n                              <sp-button>\n                                  Press Me\n                                  <sp-tooltip self-managed delayed>\n                                      Click to open another popover.\n                                  </sp-tooltip>\n                              </sp-button>\n                          </sp-dialog>\n                      </sp-popover>\n                  `;\n    render(template, event.target);\n  };\n  return html`\n        <sp-button id=\"button\">Trigger</sp-button>\n        <sp-overlay\n            placement=\"bottom\"\n            type=\"auto\"\n            trigger=\"button@click\"\n            @slottable-request=${handleSlottableRequest}\n        ></sp-overlay>\n    `;\n};\nlazyElements.swc_vrt = {\n  skip: true\n};\nlazyElements.parameters = {\n  // Disables Chromatic's snapshotting on a global level\n  chromatic: { disableSnapshot: true }\n};\nexport const nestedModalOverlays = () => html`\n    <div style=\"padding: 20px;\">\n        <sp-button id=\"outerTrigger\" variant=\"primary\">\n            Open Outer Modal\n        </sp-button>\n\n        <sp-overlay\n            id=\"outerOverlay\"\n            type=\"auto\"\n            .triggerInteraction=${\"click\"}\n            trigger=\"outerTrigger@click\"\n        >\n            <sp-popover>\n                <sp-dialog>\n                    <p>\n                        This is the outer modal content. Press ESC to close it.\n                    </p>\n                    <sp-button id=\"innerTrigger\" variant=\"primary\">\n                        Open Inner Modal\n                    </sp-button>\n                    <sp-overlay\n                        id=\"innerOverlay\"\n                        type=\"auto\"\n                        .triggerInteraction=${\"click\"}\n                        trigger=\"innerTrigger@click\"\n                    >\n                        <sp-popover>\n                            <sp-dialog>\n                                <p>\n                                    This is the inner modal content. Press ESC\n                                    to close this first, then the outer modal.\n                                </p>\n                            </sp-dialog>\n                        </sp-popover>\n                    </sp-overlay>\n                </sp-dialog>\n            </sp-popover>\n        </sp-overlay>\n    </div>\n`;\nnestedModalOverlays.swc_vrt = {\n  skip: true\n};\nnestedModalOverlays.parameters = {\n  chromatic: { disableSnapshot: true }\n};\n//# sourceMappingURL=overlay-element.stories.js.map\n;export const __namedExportsOrder = [\"modal\",\"page\",\"complexSlowPage\",\"click\",\"withSlider\",\"hover\",\"hoverTooltip\",\"longpress\",\"receivesFocus\",\"transformed\",\"contained\",\"all\",\"actionGroup\",\"actionGroupWithFilters\",\"transientHover\",\"lazyElements\",\"nestedModalOverlays\"];"],"names":[],"sourceRoot":""}