{"version":3,"file":"combobox-stories-combobox-stories.5561c7ff.iframe.bundle.js","mappings":";;;;;;;;AA8EA;;AAKA;AACA;AACA;;AAEA;;;;;;;;;AAWA;AACA;;AAIA;;;;;;AAwBA;;;;;;;;AAQA;;;AAKA;;;;;;;;AASA;AAEA;AACA;;;;;;;;;;;AAYA;AAEA;AACA;;;;AAOA;;;;;;AAOA;AAEA;AACA;;;;;;;AAUA;;AAGA;AAGA;;;;AAKA;;AAIA;AAEA;;;;;AAOA;;;;;;AAeA;AACA;AACA;;AAGA;;AAyBA;;ACtQA;AAgCA;;AAEA;;AAGA","sources":["webpack://@adobe/spectrum-web-components/./packages/combobox/stories/combobox.stories.js","webpack://@adobe/spectrum-web-components/./packages/help-text/src/HelpText.dev.js"],"sourcesContent":["\"use strict\";\nvar __defProp = Object.defineProperty;\nvar __getOwnPropDesc = Object.getOwnPropertyDescriptor;\nvar __decorateClass = (decorators, target, key, kind) => {\n  var result = kind > 1 ? void 0 : kind ? __getOwnPropDesc(target, key) : target;\n  for (var i = decorators.length - 1, decorator; i >= 0; i--)\n    if (decorator = decorators[i])\n      result = (kind ? decorator(target, key, result) : decorator(result)) || result;\n  if (kind && result) __defProp(target, key, result);\n  return result;\n};\nimport {\n  html,\n  LitElement\n} from \"@spectrum-web-components/base\";\nimport \"@spectrum-web-components/combobox/sp-combobox.js\";\nimport \"@spectrum-web-components/field-label/sp-field-label.js\";\nimport \"@spectrum-web-components/help-text/sp-help-text.js\";\nimport \"@spectrum-web-components/tooltip/sp-tooltip.js\";\nimport \"@spectrum-web-components/menu/sp-menu-item.js\";\nimport { defineElement } from \"@spectrum-web-components/base/src/define-element.js\";\nimport { query, state } from \"@spectrum-web-components/base/src/decorators.js\";\nimport { live } from \"@spectrum-web-components/base/src/directives.js\";\nimport { countries, fruits } from \"./index.js\";\nimport { Template } from \"./template.js\";\nimport { argTypes } from \"./args.js\";\nexport default {\n  title: \"Combobox\",\n  component: \"sp-combobox\",\n  args: {\n    open: false,\n    disabled: false,\n    invalid: false,\n    pending: false,\n    readonly: false,\n    quiet: false\n  },\n  argTypes\n};\nexport const Default = (args) => Template(args);\nexport const disabled = (args) => Template(args);\ndisabled.args = {\n  disabled: true,\n  value: \"Azerbaijan\"\n};\nexport const invalid = (args) => Template(args);\ninvalid.args = {\n  invalid: true\n};\nexport const pending = (args) => Template(args);\npending.args = {\n  pending: true\n};\nexport const quiet = (args) => Template(args);\nquiet.args = {\n  quiet: true\n};\nexport const readonly = (args) => Template(args);\nreadonly.args = {\n  readonly: true,\n  value: \"Solomon Islands\"\n};\nexport const hasDisabledItems = (args) => {\n  const countriesWithDisabledItems = countries.map((country) => {\n    var _a;\n    return {\n      ...country,\n      disabled: (_a = args.disabledItems) == null ? void 0 : _a.includes(country.itemText)\n    };\n  });\n  return html`\n        <sp-field-label side-aligned=\"start\" for=\"combobox-disabled-items\">\n            Some fruits are disabled (light DOM)\n        </sp-field-label>\n        <sp-combobox\n            id=\"combobox-disabled-items\"\n            style=\"min-width: 80px;--spectrum-textfield-m-min-width:0; width:160px;\"\n        >\n            ${fruits.map(\n    (fruit) => {\n      var _a;\n      return html`\n                    <sp-menu-item\n                        id=${fruit.value}\n                        value=${fruit.value}\n                        ?disabled=${(_a = args.disabledItems) == null ? void 0 : _a.includes(fruit.value)}\n                    >\n                        ${fruit.itemText}\n                    </sp-menu-item>\n                `;\n    }\n  )}\n        </sp-combobox>\n        <sp-field-label side-aligned=\"start\" for=\"combobox-disabled-countries\">\n            Some countries are disabled (shadow DOM)\n        </sp-field-label>\n        <sp-combobox\n            id=\"combobox-disabled-countries\"\n            .options=${countriesWithDisabledItems}\n            .value=${args.value || \"\"}\n        ></sp-combobox>\n    `;\n};\nhasDisabledItems.args = {\n  disabledItems: [\n    \"banana\",\n    \"lemon\",\n    \"pear\",\n    \"Albania\",\n    \"Azerbaijan\",\n    \"Solomon Islands\"\n  ]\n};\nhasDisabledItems.swc_vrt = {\n  skip: true\n};\nexport const listAutocomplete = (args) => Template(args);\nlistAutocomplete.args = {\n  autocomplete: \"list\"\n};\nexport const noAutocomplete = () => {\n  return html`\n        <sp-field-label side-aligned=\"start\" for=\"combobox-3\">\n            Fruit\n        </sp-field-label>\n        <sp-combobox\n            id=\"combobox-3\"\n            .options=${fruits}\n            style=\"min-width: 80px;--spectrum-textfield-m-min-width:0;width:100px;\"\n        ></sp-combobox>\n        <sp-field-label side-aligned=\"start\" for=\"combobox-4\">\n            Countries\n        </sp-field-label>\n        <sp-combobox\n            id=\"combobox-4\"\n            .options=${countries}\n            style=\"min-width: 80px;--spectrum-textfield-m-min-width:0;width:100px;\"\n        ></sp-combobox>\n    `;\n};\nexport const lightDOM = () => {\n  return html`\n        <sp-field-label side-aligned=\"start\" for=\"combobox-5\">\n            Fruit\n        </sp-field-label>\n        <sp-combobox\n            id=\"combobox-5\"\n            style=\"min-width: 80px;--spectrum-textfield-m-min-width:0;width:100px;\"\n        >\n            ${fruits.map(\n    (fruit) => html`\n                    <sp-menu-item id=${fruit.value} value=${fruit.value}>\n                        ${fruit.itemText}\n                    </sp-menu-item>\n                `\n  )}\n        </sp-combobox>\n        <sp-field-label side-aligned=\"start\" for=\"combobox-6\">\n            Countries\n        </sp-field-label>\n        <sp-combobox\n            id=\"combobox-6\"\n            style=\"min-width: 80px;--spectrum-textfield-m-min-width:0;width:100px;\"\n        >\n            ${countries.map(\n    (country) => html`\n                    <sp-menu-item id=${country.value} value=${country.value}>\n                        ${country.itemText}\n                    </sp-menu-item>\n                `\n  )}\n        </sp-combobox>\n    `;\n};\nexport const withTooltip = () => {\n  return html`\n        <sp-combobox\n            id=\"combobox-6\"\n            label=\"Combobox with tooltip\"\n            style=\"min-width: 80px;--spectrum-textfield-m-min-width:0;width:100px;\"\n        >\n            ${countries.map(\n    (option) => html`\n                    <sp-menu-item id=${option.value} value=${option.value}>\n                        ${option.itemText}\n                    </sp-menu-item>\n                `\n  )}\n            <sp-tooltip slot=\"tooltip\" self-managed placement=\"right\" open>\n                This combobox has a tooltip.\n            </sp-tooltip>\n        </sp-combobox>\n    `;\n};\nexport const withFieldLabel = () => {\n  return html`\n        <sp-field-label for=\"combobox-7\">Pick something</sp-field-label>\n        <sp-combobox id=\"combobox-7\" .options=${fruits}></sp-combobox>\n    `;\n};\nexport const withLabelAttribute = () => {\n  return html`\n        <sp-combobox\n            id=\"combobox-7\"\n            label=\"Pick something\"\n            .options=${fruits}\n        ></sp-combobox>\n    `;\n};\nexport const withHelpText = () => {\n  return html`\n        <sp-combobox id=\"combobox-7\" label=\"Pick something\" .options=${fruits}>\n            <sp-help-text slot=\"help-text\">\n                These are fruits found in the game \"Animal Crossing: New Leaf\".\n            </sp-help-text>\n        </sp-combobox>\n    `;\n};\nconst _ControlledCombo = class _ControlledCombo extends LitElement {\n  constructor() {\n    super(...arguments);\n    this.value = {\n      raw: \"\",\n      validated: `${_ControlledCombo.ages[0].itemText}`\n    };\n  }\n  render() {\n    return html`\n            <sp-field-label for=\"age\">\n                Retirement age (try entering a non-number)\n            </sp-field-label>\n            <sp-combobox\n                id=\"age\"\n                .options=${_ControlledCombo.ages}\n                .value=${live(this.value.validated)}\n                @change=${this.onChange}\n            ></sp-combobox>\n        `;\n  }\n  onChange() {\n    this.value = {\n      raw: this.combobox.value,\n      validated: this.combobox.value.replace(/\\D/g, \"\") || \"55\"\n    };\n  }\n};\n_ControlledCombo.ages = Array.from({ length: 76 - 55 }, (_, n) => {\n  const age = `${n + 55}`;\n  return { value: age, itemText: age };\n});\n__decorateClass([\n  state()\n], _ControlledCombo.prototype, \"value\", 2);\n__decorateClass([\n  query(\"#age\")\n], _ControlledCombo.prototype, \"combobox\", 2);\nlet ControlledCombo = _ControlledCombo;\ndefineElement(\"controlled-combo\", ControlledCombo);\nexport const controlled = () => {\n  return html`\n        <controlled-combo></controlled-combo>\n    `;\n};\ncontrolled.swc_vrt = {\n  skip: true\n};\ncontrolled.parameters = {\n  // Disables Chromatic's snapshotting on a global level\n  chromatic: { disableSnapshot: true }\n};\n//# sourceMappingURL=combobox.stories.js.map\n;export const __namedExportsOrder = [\"Default\",\"disabled\",\"invalid\",\"pending\",\"quiet\",\"readonly\",\"hasDisabledItems\",\"listAutocomplete\",\"noAutocomplete\",\"lightDOM\",\"withTooltip\",\"withFieldLabel\",\"withLabelAttribute\",\"withHelpText\",\"controlled\"];","\"use strict\";\nvar __defProp = Object.defineProperty;\nvar __getOwnPropDesc = Object.getOwnPropertyDescriptor;\nvar __decorateClass = (decorators, target, key, kind) => {\n  var result = kind > 1 ? void 0 : kind ? __getOwnPropDesc(target, key) : target;\n  for (var i = decorators.length - 1, decorator; i >= 0; i--)\n    if (decorator = decorators[i])\n      result = (kind ? decorator(target, key, result) : decorator(result)) || result;\n  if (kind && result) __defProp(target, key, result);\n  return result;\n};\nimport {\n  html,\n  nothing,\n  SizedMixin,\n  SpectrumElement\n} from \"@spectrum-web-components/base\";\nimport { property } from \"@spectrum-web-components/base/src/decorators.js\";\nimport \"@spectrum-web-components/icons-workflow/icons/sp-icon-alert.js\";\nimport styles from \"./help-text.css.js\";\nexport class HelpText extends SizedMixin(SpectrumElement, {\n  noDefaultSize: true\n}) {\n  constructor() {\n    super(...arguments);\n    this.icon = false;\n    this.variant = \"neutral\";\n  }\n  static get styles() {\n    return [styles];\n  }\n  render() {\n    return html`\n            ${this.variant === \"negative\" && this.icon ? html`\n                      <sp-icon-alert class=\"icon\"></sp-icon-alert>\n                  ` : nothing}\n            <div class=\"text\"><slot></slot></div>\n        `;\n  }\n}\n__decorateClass([\n  property({ type: Boolean, reflect: true })\n], HelpText.prototype, \"icon\", 2);\n__decorateClass([\n  property({ reflect: true })\n], HelpText.prototype, \"variant\", 2);\n//# sourceMappingURL=HelpText.dev.js.map\n"],"names":[],"sourceRoot":""}