{"version":3,"file":"badge-stories-badge-stories.323a1045.iframe.bundle.js","mappings":";;AACA;AA4FA;;;AAGA;;AAEA;;;;AAKA;;AC1FA;;;;;;;;;;;AAcA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAqCA;;;;;;;AAUA;;;;;;;;;;;;;;;AAkBA;;;;;;;;;AAYA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAkCA;;ACxIA;AACA;;AAEA;;;AAGA;;;;;;;;;;ACRA;;ACEA;AACA;;AAEA;;;AAGA","sources":["webpack://@adobe/spectrum-web-components/./packages/badge/src/Badge.dev.js","webpack://@adobe/spectrum-web-components/./packages/badge/stories/badge.stories.js","webpack://@adobe/spectrum-web-components/./packages/icons-workflow/src/icons-s2/CheckmarkCircle.js","webpack://@adobe/spectrum-web-components/./packages/icons-workflow/src/elements/IconCheckmarkCircle.js","webpack://@adobe/spectrum-web-components/./packages/icons-workflow/src/icons/CheckmarkCircle.js"],"sourcesContent":["\"use strict\";\nvar __defProp = Object.defineProperty;\nvar __getOwnPropDesc = Object.getOwnPropertyDescriptor;\nvar __decorateClass = (decorators, target, key, kind) => {\n  var result = kind > 1 ? void 0 : kind ? __getOwnPropDesc(target, key) : target;\n  for (var i = decorators.length - 1, decorator; i >= 0; i--)\n    if (decorator = decorators[i])\n      result = (kind ? decorator(target, key, result) : decorator(result)) || result;\n  if (kind && result) __defProp(target, key, result);\n  return result;\n};\nimport {\n  html,\n  nothing,\n  SizedMixin,\n  SpectrumElement\n} from \"@spectrum-web-components/base\";\nimport { property } from \"@spectrum-web-components/base/src/decorators.js\";\nimport { ObserveSlotText } from \"@spectrum-web-components/shared/src/observe-slot-text.js\";\nimport { ObserveSlotPresence } from \"@spectrum-web-components/shared/src/observe-slot-presence.js\";\nimport styles from \"./badge.css.js\";\nexport const BADGE_VARIANTS = [\n  \"accent\",\n  \"neutral\",\n  \"informative\",\n  \"positive\",\n  \"negative\",\n  \"notice\",\n  \"fuchsia\",\n  \"indigo\",\n  \"magenta\",\n  \"purple\",\n  \"seafoam\",\n  \"yellow\",\n  \"gray\",\n  \"red\",\n  \"orange\",\n  \"chartreuse\",\n  \"celery\",\n  \"green\",\n  \"cyan\",\n  \"blue\"\n];\nexport const FIXED_VALUES = [\n  \"inline-start\",\n  \"inline-end\",\n  \"block-start\",\n  \"block-end\"\n];\nexport class Badge extends SizedMixin(\n  ObserveSlotText(ObserveSlotPresence(SpectrumElement, '[slot=\"icon\"]'), \"\"),\n  {\n    noDefaultSize: true\n  }\n) {\n  constructor() {\n    super(...arguments);\n    this.variant = \"informative\";\n  }\n  static get styles() {\n    return [styles];\n  }\n  get fixed() {\n    return this._fixed;\n  }\n  set fixed(fixed) {\n    if (fixed === this.fixed) return;\n    const oldValue = this.fixed;\n    this._fixed = fixed;\n    if (fixed) {\n      this.setAttribute(\"fixed\", fixed);\n    } else {\n      this.removeAttribute(\"fixed\");\n    }\n    this.requestUpdate(\"fixed\", oldValue);\n  }\n  get hasIcon() {\n    return this.slotContentIsPresent;\n  }\n  render() {\n    if (true) {\n      if (!BADGE_VARIANTS.includes(this.variant)) {\n        window.__swc.warn(\n          this,\n          `<${this.localName}> element expect the \"variant\" attribute to be one of the following:`,\n          \"https://opensource.adobe.com/spectrum-web-components/components/badge/#variants\",\n          {\n            issues: [...BADGE_VARIANTS]\n          }\n        );\n      }\n    }\n    return html`\n            ${this.hasIcon ? html`\n                      <slot\n                          name=\"icon\"\n                          ?icon-only=${!this.slotHasContent}\n                      ></slot>\n                  ` : nothing}\n            <div class=\"label\">\n                <slot></slot>\n            </div>\n        `;\n  }\n}\n__decorateClass([\n  property({ reflect: true })\n], Badge.prototype, \"fixed\", 1);\n__decorateClass([\n  property({ type: String, reflect: true })\n], Badge.prototype, \"variant\", 2);\n//# sourceMappingURL=Badge.dev.js.map\n","\"use strict\";\nimport \"@spectrum-web-components/badge/sp-badge.js\";\nimport { html } from \"@spectrum-web-components/base\";\nimport \"@spectrum-web-components/icons-workflow/icons/sp-icon-checkmark-circle.js\";\nexport default {\n  title: \"Badge\",\n  component: \"sp-badge\"\n};\nexport const Default = () => {\n  return html`\n        <sp-badge>Badge</sp-badge>\n    `;\n};\nexport const Icons = () => {\n  return html`\n        <sp-badge>No icon</sp-badge>\n\n        <sp-badge>\n            <sp-icon-checkmark-circle slot=\"icon\"></sp-icon-checkmark-circle>\n            Icon and label\n        </sp-badge>\n\n        <sp-badge>\n            <sp-icon-checkmark-circle slot=\"icon\"></sp-icon-checkmark-circle>\n        </sp-badge>\n    `;\n};\nexport const Sizes = () => {\n  return html`\n        <div style=\"display: flex; align-items: center; gap: 8px;\">\n            <sp-badge size=\"s\">\n                <sp-icon-checkmark-circle\n                    slot=\"icon\"\n                ></sp-icon-checkmark-circle>\n                Small\n            </sp-badge>\n            <sp-badge size=\"m\">\n                <sp-icon-checkmark-circle\n                    slot=\"icon\"\n                ></sp-icon-checkmark-circle>\n                Medium\n            </sp-badge>\n            <sp-badge size=\"l\">\n                <sp-icon-checkmark-circle\n                    slot=\"icon\"\n                ></sp-icon-checkmark-circle>\n                Large\n            </sp-badge>\n            <sp-badge size=\"xl\">\n                <sp-icon-checkmark-circle\n                    slot=\"icon\"\n                ></sp-icon-checkmark-circle>\n                Extra-large\n            </sp-badge>\n            <sp-badge style=\"max-width: 180px\">\n                <sp-icon-checkmark-circle\n                    slot=\"icon\"\n                ></sp-icon-checkmark-circle>\n                This long content automatically wraps, but shows no more than\n                two lines\n            </sp-badge>\n        </div>\n    `;\n};\nexport const Semantic = () => {\n  return html`\n        <sp-badge variant=\"accent\">Accent</sp-badge>\n        <sp-badge variant=\"positive\">Positive</sp-badge>\n        <sp-badge variant=\"informative\">Informative</sp-badge>\n        <sp-badge variant=\"negative\">Negative</sp-badge>\n        <sp-badge variant=\"neutral\">Neutral</sp-badge>\n        <sp-badge variant=\"notice\">Notice</sp-badge>\n    `;\n};\nexport const NonSemantic = () => {\n  return html`\n        <sp-badge variant=\"seafoam\">Seafoam</sp-badge>\n        <sp-badge variant=\"indigo\">Indigo</sp-badge>\n        <sp-badge variant=\"purple\">Purple</sp-badge>\n        <sp-badge variant=\"fuchsia\">Fuchsia</sp-badge>\n        <sp-badge variant=\"magenta\">Magenta</sp-badge>\n        <sp-badge variant=\"yellow\">Yellow</sp-badge>\n        <sp-badge variant=\"gray\">Gray</sp-badge>\n        <sp-badge variant=\"red\">Red</sp-badge>\n        <sp-badge variant=\"orange\">Orange</sp-badge>\n        <sp-badge variant=\"chartreuse\">Chartreuse</sp-badge>\n        <sp-badge variant=\"celery\">Celery</sp-badge>\n        <sp-badge variant=\"green\">Green</sp-badge>\n        <sp-badge variant=\"cyan\">Cyan</sp-badge>\n        <sp-badge variant=\"blue\">Blue</sp-badge>\n    `;\n};\nexport const Inline = () => {\n  return html`\n        Badge is a simple\n        <sp-badge variant=\"positive\" size=\"s\">inline</sp-badge>\n        element that should\n        <sp-badge variant=\"neutral\" size=\"s\">flow</sp-badge>\n        with the rest of the page:\n        <sp-badge variant=\"negative\">Missing</sp-badge>\n        <sp-badge variant=\"positive\">Successful</sp-badge>\n        <sp-badge variant=\"accent\">Accent</sp-badge>\n    `;\n};\nexport const Fixed = () => {\n  return html`\n        <div\n            style=\"position: relative; width: 400px; height: 200px; background: #eee\"\n        >\n            <sp-badge>None</sp-badge>\n            <sp-badge\n                fixed=\"block-start\"\n                style=\"position: absolute; top: 0; left: 200px;\"\n            >\n                block-start\n            </sp-badge>\n            <sp-badge\n                fixed=\"inline-end\"\n                style=\"position: absolute; right: 0; top: 100px;\"\n            >\n                inline-end\n            </sp-badge>\n            <sp-badge\n                fixed=\"block-end\"\n                style=\"position: absolute; bottom: 0; left: 200px;\"\n            >\n                block-end\n            </sp-badge>\n            <sp-badge\n                fixed=\"inline-start\"\n                style=\"position: absolute; left: 0; top: 100px;\"\n            >\n                inline-start\n            </sp-badge>\n        </div>\n    `;\n};\n//# sourceMappingURL=badge.stories.js.map\n;export const __namedExportsOrder = [\"Default\",\"Icons\",\"Sizes\",\"Semantic\",\"NonSemantic\",\"Inline\",\"Fixed\"];","\"use strict\";import{tag as a}from\"../custom-tag.js\";export{setCustomTemplateLiteralTag}from\"../custom-tag.js\";export const CheckmarkCircleIcon=({width:e=24,height:l=24,hidden:r=!1,title:t=\"Checkmark Circle\"}={})=>a`<svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    width=\"${e}\"\n    height=\"${l}\"\n    viewBox=\"0 0 20 20\"\n    aria-hidden=${r?\"true\":\"false\"}\n    role=\"img\"\n    fill=\"currentColor\"\n    aria-label=\"${t}\"\n  >\n    <path\n      d=\"M10,18.75c-4.8252,0-8.75-3.9248-8.75-8.75S5.1748,1.25,10,1.25s8.75,3.9248,8.75,8.75-3.9248,8.75-8.75,8.75ZM10,2.75c-3.99805,0-7.25,3.25195-7.25,7.25s3.25195,7.25,7.25,7.25,7.25-3.25195,7.25-7.25-3.25195-7.25-7.25-7.25Z\"\n      fill=\"currentColor\"\n    />\n    <path\n      d=\"M9.22266,13.5c-.21191,0-.41504-.08984-.55762-.24805l-2.51074-2.79199c-.27734-.30859-.25195-.78223.05566-1.05957s.78125-.25195,1.05957.05566l1.89355,2.10645,3.4873-4.75586c.24316-.33398.71094-.40918,1.04785-.16113.33398.24414.40625.71387.16113,1.04785l-4.03223,5.5c-.13281.18262-.3418.29492-.56738.30566-.01172.00098-.02441.00098-.03711.00098Z\"\n      fill=\"currentColor\"\n    />\n  </svg>`;\n//# sourceMappingURL=CheckmarkCircle.js.map\n","\"use strict\";import{html as e}from\"@spectrum-web-components/base\";import{IconBase as t}from\"@spectrum-web-components/icon\";import{setCustomTemplateLiteralTag as r}from\"../custom-tag.js\";import{CheckmarkCircleIcon as l}from\"../icons-s2/CheckmarkCircle.js\";import{CheckmarkCircleIcon as a}from\"../icons/CheckmarkCircle.js\";export class IconCheckmarkCircle extends t{render(){return r(e),this.spectrumVersion===2?l({hidden:!this.label,title:this.label}):a({hidden:!this.label,title:this.label})}}\n//# sourceMappingURL=IconCheckmarkCircle.js.map\n","\"use strict\";import{tag as r}from\"../custom-tag.js\";export{setCustomTemplateLiteralTag}from\"../custom-tag.js\";export const CheckmarkCircleIcon=({width:e=24,height:a=24,hidden:t=!1,title:l=\"Checkmark Circle\"}={})=>r`<svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    width=\"${e}\"\n    height=\"${a}\"\n    viewBox=\"0 0 36 36\"\n    aria-hidden=${t?\"true\":\"false\"}\n    role=\"img\"\n    fill=\"currentColor\"\n    aria-label=\"${l}\"\n  >\n    <path\n      d=\"M18 2a16 16 0 1 0 16 16A16 16 0 0 0 18 2Zm10.666 9.08L16.018 27.341a1.208 1.208 0 0 1-.875.461c-.024.002-.05.002-.073.002a1.2 1.2 0 0 1-.85-.351l-7.784-7.795a1.2 1.2 0 0 1 0-1.698l1.326-1.325a1.201 1.201 0 0 1 1.695 0l5.346 5.347L25.314 8.473A1.203 1.203 0 0 1 27 8.263l1.455 1.133a1.205 1.205 0 0 1 .211 1.684Z\"\n    />\n  </svg>`;\n//# sourceMappingURL=CheckmarkCircle.js.map\n"],"names":[],"sourceRoot":""}